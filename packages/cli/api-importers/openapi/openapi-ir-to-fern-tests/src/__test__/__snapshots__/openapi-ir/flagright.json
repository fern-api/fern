{
  "title": "Flagright API",
  "description": "",
  "servers": [
    {
      "url": "https://sandbox.api.flagright.com"
    }
  ],
  "tags": {
    "tagsById": {},
    "orderedTagIds": []
  },
  "hasEndpointsMarkedInternal": false,
  "endpoints": [
    {
      "summary": "Verify a Transaction",
      "audiences": [],
      "operationId": "post-consumer-transaction",
      "tags": [],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Boolean string whether Flagright should validate if provided originUserId exist. True by default",
          "name": "validateOriginUserId",
          "schema": {
            "generatedName": "PostConsumerTransactionRequestValidateOriginUserId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "PostConsumerTransactionRequestValidateOriginUserId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Boolean string whether Flagright should validate if provided destinationUserId exist. True by default",
          "name": "validateDestinationUserId",
          "schema": {
            "generatedName": "PostConsumerTransactionRequestValidateDestinationUserId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "PostConsumerTransactionRequestValidateDestinationUserId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "PostConsumerTransactionRequest",
      "request": {
        "schema": {
          "generatedName": "PostConsumerTransactionRequestBody",
          "schema": "Transaction",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [
          {
            "name": "example-1",
            "value": {
              "transactionId": "7b80a539eea6e78acbd6d458e5971482",
              "originUserId": "8650a2611d0771cba03310f74bf6",
              "destinationUserId": "9350a2611e0771cba03310f74bf6",
              "originAmountDetails": {
                "country": "DE",
                "transactionAmount": 800,
                "transactionCurrency": "EUR"
              },
              "destinationAmountDetails": {
                "country": "IN",
                "transactionAmount": 68351.34,
                "transactionCurrency": "INR"
              },
              "promotionCodeUsed": true,
              "timestamp": 1641654664000,
              "originPaymentDetails": {
                "method": "CARD",
                "cardFingerprint": "20ac00fed8ef913aefb17cfae1097cce",
                "cardIssuedCountry": "US",
                "transactionReferenceField": "Deposit",
                "3dsDone": true
              },
              "destinationPaymentDetails": {
                "method": "CARD",
                "cardFingerprint": "20ac00fed8ef913aefb17cfae1097cce",
                "cardIssuedCountry": "IN",
                "transactionReferenceField": "Deposit",
                "3dsDone": true
              },
              "reference": "loan repayment",
              "deviceData": {
                "batteryLevel": 95,
                "deviceLatitude": 13.0033,
                "deviceLongitude": 76.1004,
                "ipAddress": "10.23.191.2",
                "deviceIdentifier": "3c49f915d04485e34caba",
                "vpnUsed": false,
                "operatingSystem": "Android 11.2",
                "deviceMaker": "ASUS",
                "deviceModel": "Zenphone M2 Pro Max",
                "deviceYear": "2018",
                "appVersion": "1.1.0"
              },
              "tags": [
                {
                  "key": "customKey",
                  "value": "customValue"
                }
              ]
            }
          }
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Created",
        "schema": {
          "allOf": [
            {
              "generatedName": "TransactionMonitoringResult",
              "schema": "TransactionMonitoringResult",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            }
          ],
          "properties": [
            {
              "conflict": {},
              "generatedName": "postConsumerTransactionResponseMessage",
              "key": "message",
              "schema": {
                "generatedName": "postConsumerTransactionResponseMessage",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PostConsumerTransactionResponseMessage",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "PostConsumerTransactionResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [
          {
            "name": "example-1",
            "value": {
              "transactionId": "7b80a539eea6e78acbd6d458e5971482",
              "executedRules": [
                {
                  "ruleId": "R-1a",
                  "ruleName": "Proof of funds for high value transactions",
                  "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                  "ruleAction": "BLOCK",
                  "ruleHit": true
                }
              ],
              "hitRules": [
                {
                  "ruleId": "R-1a",
                  "ruleName": "Proof of funds for high value transactions",
                  "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                  "ruleAction": "BLOCK"
                }
              ]
            }
          }
        ],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "type": "unknown"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "type": "unknown"
          },
          "description": "Unauthorized",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "type": "unknown"
          },
          "description": "Too Many Requests",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "## POST Transactions\n\n`/transactions` endpoint allows you to operate on the [Transaction entity.](https://docs.flagright.com/docs/flagright-api/8c06ae6a3231a-entities-and-relationships#transaction)\n\nIn order to pass the payload of a transaction to Flagright and verify the transaciton, you will need to call this endpoint with the transaction payload. Not all fields are mandatory, you will only need to pass in the fields that you have and are relevant for your compliance setup. \n\n\n### Payload\n\nHere are some of the most used payload fields explained (you can find the full payload [schema below](https://docs.flagright.com/docs/flagright-api/87742ed31b30e-verify-a-transaction#request-body) with 1 line descriptions):\n\n* `type`: Type of transaction (Ex: `WITHDRAWAL`, `DEPOSIT`, `TRANSFER` etc). \n* `transactionId` - Unique Identifier for the transaction. Flagright API will generate a `transactionId` if this field is left empty\n* `timestamp` - UNIX timestamp in *milliseconds* of when the transaction took place\n* `transactionState` - The state of the transaction, set to `CREATED` by default. [More details here](https://docs.flagright.com/docs/flagright-api/8c06ae6a3231a-entities-and-relationships-in-the-api#transaction-lifecycle-through-transaction-events)\n* `originUserId` - Unique identifier (if any) of the user who is sending the money. This user must be created within the Flagright system before using the [create a consumer user](https://docs.flagright.com/docs/flagright-api/18132cd454603-create-a-consumer-user) or [create a business user](https://docs.flagright.com/docs/flagright-api/f651463db29d8-create-a-business-user) endpoint\n* `destinationUserId` - Unique identifier (if any) of the user who is receiving the money. This user must be created within the Flagright system before using the [create a consumer user](https://docs.flagright.com/docs/flagright-api/18132cd454603-create-a-consumer-user) or [create a business user](https://docs.flagright.com/docs/flagright-api/f651463db29d8-create-a-business-user) endpoint\n* `originAmountDetails` - Details of the amount being sent from the origin\n* `destinationAmountDetails` - Details of the amount being received at the destination\n* `originPaymentDetails` - Payment details (if any) used at the origin (ex: `CARD`, `IBAN`, `WALLET` etc). You can click on the dropdown next to the field in the schema below to view all supported payment types.\n* `destinationPaymentDetails` - Payment details (if any) used at the destination (ex: `CARD`, `IBAN`, `WALLET` etc). You can click on the dropdown next to the field in the schema below to view all supported payment types.",
      "authed": true,
      "method": "POST",
      "path": "/transactions",
      "examples": [
        {
          "name": "example-1",
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "originAmountDetails": {
                "properties": {
                  "transactionAmount": {
                    "value": {
                      "value": 800,
                      "type": "double"
                    },
                    "type": "primitive"
                  },
                  "transactionCurrency": {
                    "value": "EUR",
                    "type": "enum"
                  },
                  "country": {
                    "value": "DE",
                    "type": "enum"
                  }
                },
                "type": "object"
              },
              "destinationAmountDetails": {
                "properties": {
                  "transactionAmount": {
                    "value": {
                      "value": 68351.34,
                      "type": "double"
                    },
                    "type": "primitive"
                  },
                  "transactionCurrency": {
                    "value": "INR",
                    "type": "enum"
                  },
                  "country": {
                    "value": "IN",
                    "type": "enum"
                  }
                },
                "type": "object"
              },
              "originPaymentDetails": {
                "value": {
                  "value": {
                    "method": {
                      "value": {
                        "value": "CHECK",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "shippingAddress": {
                      "properties": {
                        "addressLines": {
                          "value": [
                            {
                              "value": {
                                "value": {
                                  "value": "Klara-Franke Str 20",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "type": "unknown"
                            }
                          ],
                          "type": "array"
                        },
                        "postcode": {
                          "value": {
                            "value": "10557",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "city": {
                          "value": {
                            "value": "Berlin",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "state": {
                          "value": {
                            "value": "Berlin",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "country": {
                          "value": {
                            "value": "Germany",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tags": {
                          "value": [
                            {
                              "properties": {
                                "key": {
                                  "value": {
                                    "value": "customKey",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "value": {
                                  "value": {
                                    "value": "customValue",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "discriminated"
                },
                "type": "oneOf"
              },
              "destinationPaymentDetails": {
                "value": {
                  "value": {
                    "method": {
                      "value": {
                        "value": "CHECK",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "shippingAddress": {
                      "properties": {
                        "addressLines": {
                          "value": [
                            {
                              "value": {
                                "value": {
                                  "value": "Klara-Franke Str 20",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "type": "unknown"
                            }
                          ],
                          "type": "array"
                        },
                        "postcode": {
                          "value": {
                            "value": "10557",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "city": {
                          "value": {
                            "value": "Berlin",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "state": {
                          "value": {
                            "value": "Berlin",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "country": {
                          "value": {
                            "value": "Germany",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tags": {
                          "value": [
                            {
                              "properties": {
                                "key": {
                                  "value": {
                                    "value": "customKey",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "value": {
                                  "value": {
                                    "value": "customValue",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "discriminated"
                },
                "type": "oneOf"
              },
              "promotionCodeUsed": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "reference": {
                "value": {
                  "value": "loan repayment",
                  "type": "string"
                },
                "type": "primitive"
              },
              "deviceData": {
                "properties": {
                  "batteryLevel": {
                    "value": {
                      "value": 95,
                      "type": "double"
                    },
                    "type": "primitive"
                  },
                  "deviceLatitude": {
                    "value": {
                      "value": 13.0033,
                      "type": "double"
                    },
                    "type": "primitive"
                  },
                  "deviceLongitude": {
                    "value": {
                      "value": 76.1004,
                      "type": "double"
                    },
                    "type": "primitive"
                  },
                  "ipAddress": {
                    "value": {
                      "value": "10.23.191.2",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "deviceIdentifier": {
                    "value": {
                      "value": "3c49f915d04485e34caba",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "vpnUsed": {
                    "value": {
                      "value": false,
                      "type": "boolean"
                    },
                    "type": "primitive"
                  },
                  "operatingSystem": {
                    "value": {
                      "value": "Android 11.2",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "deviceMaker": {
                    "value": {
                      "value": "ASUS",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "deviceModel": {
                    "value": {
                      "value": "Zenphone M2 Pro Max",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "deviceYear": {
                    "value": {
                      "value": "2018",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "appVersion": {
                    "value": {
                      "value": "1.1.0",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              },
              "tags": {
                "value": [
                  {
                    "properties": {
                      "key": {
                        "value": {
                          "value": "customKey",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "value": {
                        "value": {
                          "value": "customValue",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "object"
                  }
                ],
                "type": "array"
              },
              "transactionId": {
                "value": {
                  "value": "7b80a539eea6e78acbd6d458e5971482",
                  "type": "string"
                },
                "type": "primitive"
              },
              "timestamp": {
                "value": {
                  "value": 1641654664000,
                  "type": "double"
                },
                "type": "primitive"
              },
              "originUserId": {
                "value": {
                  "value": "8650a2611d0771cba03310f74bf6",
                  "type": "string"
                },
                "type": "primitive"
              },
              "destinationUserId": {
                "value": {
                  "value": "9350a2611e0771cba03310f74bf6",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "executedRules": {
                  "value": [
                    {
                      "properties": {
                        "ruleId": {
                          "value": {
                            "value": "R-1a",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleInstanceId": {
                          "value": {
                            "value": "ruleInstanceId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleName": {
                          "value": {
                            "value": "Proof of funds for high value transactions",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleDescription": {
                          "value": {
                            "value": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleAction": {
                          "value": "BLOCK",
                          "type": "enum"
                        },
                        "ruleHit": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "labels": {
                          "value": [
                            {
                              "value": "UNEXPECTED_BEHAVIOR",
                              "type": "enum"
                            }
                          ],
                          "type": "array"
                        },
                        "nature": {
                          "value": "AML",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "hitRules": {
                  "value": [
                    {
                      "properties": {
                        "ruleId": {
                          "value": {
                            "value": "R-1a",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleInstanceId": {
                          "value": {
                            "value": "ruleInstanceId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleName": {
                          "value": {
                            "value": "Proof of funds for high value transactions",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleDescription": {
                          "value": {
                            "value": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleAction": {
                          "value": "BLOCK",
                          "type": "enum"
                        },
                        "labels": {
                          "value": [
                            {
                              "value": "UNEXPECTED_BEHAVIOR",
                              "type": "enum"
                            }
                          ],
                          "type": "array"
                        },
                        "nature": {
                          "value": "AML",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "transactionId": {
                  "value": {
                    "value": "7b80a539eea6e78acbd6d458e5971482",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "message": {
                  "value": {
                    "value": "message",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Retrieve a Transaction",
      "audiences": [],
      "operationId": "get-consumer-transaction",
      "tags": [],
      "pathParameters": [
        {
          "description": "Unique Transaction Identifier",
          "name": "transactionId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetConsumerTransactionRequestTransactionId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetConsumerTransactionRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetConsumerTransactionResponse",
          "schema": "TransactionWithRulesResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [
          {
            "name": "example-1",
            "value": {
              "transactionId": "7b80a539eea6e78acbd6d458e5971482",
              "originUserId": "8650a2611d0771cba03310f74bf6",
              "destinationUserId": "9350a2611e0771cba03310f74bf6",
              "originAmountDetails": {
                "country": "DE",
                "transactionAmount": 800,
                "transactionCurrency": "EUR"
              },
              "destinationAmountDetails": {
                "country": "IN",
                "transactionAmount": 68351.34,
                "transactionCurrency": "INR"
              },
              "promotionCodeUsed": true,
              "timestamp": 1641654664000,
              "originPaymentDetails": {
                "method": "CARD",
                "cardFingerprint": "20ac00fed8ef913aefb17cfae1097cce",
                "cardIssuedCountry": "US",
                "transactionReferenceField": "Deposit",
                "3dsDone": true
              },
              "destinationPaymentDetails": {
                "method": "CARD",
                "cardFingerprint": "20ac00fed8ef913aefb17cfae1097cce",
                "cardIssuedCountry": "IN",
                "transactionReferenceField": "Deposit",
                "3dsDone": true
              },
              "reference": "loan repayment",
              "deviceData": {
                "batteryLevel": 95,
                "deviceLatitude": 13.0033,
                "deviceLongitude": 76.1004,
                "ipAddress": "10.23.191.2",
                "deviceIdentifier": "3c49f915d04485e34caba",
                "vpnUsed": false,
                "operatingSystem": "Android 11.2",
                "deviceMaker": "ASUS",
                "deviceModel": "Zenphone M2 Pro Max",
                "deviceYear": "2018",
                "appVersion": "1.1.0"
              },
              "tags": [
                {
                  "key": "customKey",
                  "value": "customValue"
                }
              ],
              "executedRules": [
                {
                  "ruleId": "R-1a",
                  "ruleName": "Proof of funds for high value transactions",
                  "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                  "ruleAction": "BLOCK",
                  "ruleHit": true
                }
              ],
              "hitRules": [
                {
                  "ruleId": "R-1a",
                  "ruleName": "Proof of funds for high value transactions",
                  "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                  "ruleAction": "BLOCK"
                }
              ]
            }
          }
        ],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "type": "unknown"
          },
          "description": "Unauthorized",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "type": "unknown"
          },
          "description": "Too Many Requests",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "### GET Transactions\n\n`/transactions` endpoint allows you to operate on the [Transaction entity](https://docs.flagright.com/docs/flagright-api/8c06ae6a3231a-entities-and-relationships#transaction).\n\nCalling `GET /transactions/{transactionId}` will return the entire transaction payload and rule execution results for the transaction with the corresponding `transactionId`",
      "authed": true,
      "method": "GET",
      "path": "/transactions/{transactionId}",
      "examples": [
        {
          "name": "example-1",
          "pathParameters": [
            {
              "name": "transactionId",
              "value": {
                "value": {
                  "value": "transactionId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "transactionState": {
                  "value": "CREATED",
                  "type": "enum"
                },
                "originAmountDetails": {
                  "properties": {
                    "transactionAmount": {
                      "value": {
                        "value": 800,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "transactionCurrency": {
                      "value": "EUR",
                      "type": "enum"
                    },
                    "country": {
                      "value": "DE",
                      "type": "enum"
                    }
                  },
                  "type": "object"
                },
                "destinationAmountDetails": {
                  "properties": {
                    "transactionAmount": {
                      "value": {
                        "value": 68351.34,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "transactionCurrency": {
                      "value": "INR",
                      "type": "enum"
                    },
                    "country": {
                      "value": "IN",
                      "type": "enum"
                    }
                  },
                  "type": "object"
                },
                "originPaymentDetails": {
                  "value": {
                    "value": {
                      "method": {
                        "value": {
                          "value": "CHECK",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "checkNumber": {
                        "value": {
                          "value": "originPaymentDetails",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "checkIdentifier": {
                        "value": {
                          "value": "originPaymentDetails",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "name": {
                        "value": {
                          "value": "originPaymentDetails",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "deliveryStatus": {
                        "value": "COMPLETED",
                        "type": "enum"
                      },
                      "etaTimestamp": {
                        "value": {
                          "value": 1.1,
                          "type": "double"
                        },
                        "type": "primitive"
                      },
                      "shippingAddress": {
                        "properties": {
                          "addressLines": {
                            "value": [
                              {
                                "value": {
                                  "value": {
                                    "value": "Klara-Franke Str 20",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            ],
                            "type": "array"
                          },
                          "postcode": {
                            "value": {
                              "value": "10557",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "city": {
                            "value": {
                              "value": "Berlin",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "state": {
                            "value": {
                              "value": "Berlin",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "country": {
                            "value": {
                              "value": "Germany",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "tags": {
                            "value": [
                              {
                                "properties": {
                                  "key": {
                                    "value": {
                                      "value": "customKey",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "value": {
                                    "value": {
                                      "value": "customValue",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            ],
                            "type": "array"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "discriminated"
                  },
                  "type": "oneOf"
                },
                "destinationPaymentDetails": {
                  "value": {
                    "value": {
                      "method": {
                        "value": {
                          "value": "CHECK",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "checkNumber": {
                        "value": {
                          "value": "destinationPaymentDetails",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "checkIdentifier": {
                        "value": {
                          "value": "destinationPaymentDetails",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "name": {
                        "value": {
                          "value": "destinationPaymentDetails",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "deliveryStatus": {
                        "value": "COMPLETED",
                        "type": "enum"
                      },
                      "etaTimestamp": {
                        "value": {
                          "value": 1.1,
                          "type": "double"
                        },
                        "type": "primitive"
                      },
                      "shippingAddress": {
                        "properties": {
                          "addressLines": {
                            "value": [
                              {
                                "value": {
                                  "value": {
                                    "value": "Klara-Franke Str 20",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            ],
                            "type": "array"
                          },
                          "postcode": {
                            "value": {
                              "value": "10557",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "city": {
                            "value": {
                              "value": "Berlin",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "state": {
                            "value": {
                              "value": "Berlin",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "country": {
                            "value": {
                              "value": "Germany",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "tags": {
                            "value": [
                              {
                                "properties": {
                                  "key": {
                                    "value": {
                                      "value": "customKey",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "value": {
                                    "value": {
                                      "value": "customValue",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            ],
                            "type": "array"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "discriminated"
                  },
                  "type": "oneOf"
                },
                "relatedTransactionIds": {
                  "value": [
                    {
                      "value": {
                        "value": "relatedTransactionIds",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "productType": {
                  "value": {
                    "value": "productType",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "promotionCodeUsed": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "reference": {
                  "value": {
                    "value": "loan repayment",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "deviceData": {
                  "properties": {
                    "batteryLevel": {
                      "value": {
                        "value": 95,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "deviceLatitude": {
                      "value": {
                        "value": 13.0033,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "deviceLongitude": {
                      "value": {
                        "value": 76.1004,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "ipAddress": {
                      "value": {
                        "value": "10.23.191.2",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "deviceIdentifier": {
                      "value": {
                        "value": "3c49f915d04485e34caba",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "vpnUsed": {
                      "value": {
                        "value": false,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "operatingSystem": {
                      "value": {
                        "value": "Android 11.2",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "deviceMaker": {
                      "value": {
                        "value": "ASUS",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "deviceModel": {
                      "value": {
                        "value": "Zenphone M2 Pro Max",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "deviceYear": {
                      "value": {
                        "value": "2018",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "appVersion": {
                      "value": {
                        "value": "1.1.0",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "tags": {
                  "value": [
                    {
                      "properties": {
                        "key": {
                          "value": {
                            "value": "customKey",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "value": {
                          "value": {
                            "value": "customValue",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "type": {
                  "value": "DEPOSIT",
                  "type": "enum"
                },
                "transactionId": {
                  "value": {
                    "value": "7b80a539eea6e78acbd6d458e5971482",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "timestamp": {
                  "value": {
                    "value": 1641654664000,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "originUserId": {
                  "value": {
                    "value": "8650a2611d0771cba03310f74bf6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "destinationUserId": {
                  "value": {
                    "value": "9350a2611e0771cba03310f74bf6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "executedRules": {
                  "value": [
                    {
                      "properties": {
                        "ruleId": {
                          "value": {
                            "value": "R-1a",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleInstanceId": {
                          "value": {
                            "value": "ruleInstanceId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleName": {
                          "value": {
                            "value": "Proof of funds for high value transactions",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleDescription": {
                          "value": {
                            "value": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleAction": {
                          "value": "BLOCK",
                          "type": "enum"
                        },
                        "ruleHit": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "labels": {
                          "value": [
                            {
                              "value": "UNEXPECTED_BEHAVIOR",
                              "type": "enum"
                            }
                          ],
                          "type": "array"
                        },
                        "nature": {
                          "value": "AML",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "hitRules": {
                  "value": [
                    {
                      "properties": {
                        "ruleId": {
                          "value": {
                            "value": "R-1a",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleInstanceId": {
                          "value": {
                            "value": "ruleInstanceId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleName": {
                          "value": {
                            "value": "Proof of funds for high value transactions",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleDescription": {
                          "value": {
                            "value": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleAction": {
                          "value": "BLOCK",
                          "type": "enum"
                        },
                        "labels": {
                          "value": [
                            {
                              "value": "UNEXPECTED_BEHAVIOR",
                              "type": "enum"
                            }
                          ],
                          "type": "array"
                        },
                        "nature": {
                          "value": "AML",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Create a Transaction Event",
      "internal": false,
      "audiences": [],
      "operationId": "post-transaction-event",
      "tags": [],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "PostTransactionEventRequest",
      "request": {
        "schema": {
          "generatedName": "PostTransactionEventRequest",
          "schema": "TransactionEvent",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [
          {
            "name": "example-2",
            "value": {
              "timestamp": 1431231244001,
              "transactionId": "443dea26147a406b957d9ee3a1247b11",
              "transactionState": "SUCCESSFUL",
              "eventId": "aaeeb166147a406b957dd9147a406b957",
              "eventDescription": "Transaction created",
              "metaData": {
                "batteryLevel": 76.3,
                "deviceLatitude": 13.009711,
                "deviceLongitude": 76.102898,
                "ipAddress": "79.144.2.20",
                "vpnUsed": true
              }
            }
          }
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Created",
        "schema": {
          "generatedName": "PostTransactionEventResponse",
          "schema": "TransactionEventMonitoringResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [
          {
            "name": "example-1",
            "value": {
              "eventId": "7b80a539eea6e78acbd6d458e5971482",
              "transaction": {
                "transactionId": "7b80a539eea6e78acbd6d458e5971482",
                "originUserId": "8650a2611d0771cba03310f74bf6",
                "destinationUserId": "9350a2611e0771cba03310f74bf6",
                "originAmountDetails": {
                  "country": "DE",
                  "transactionAmount": 800,
                  "transactionCurrency": "EUR"
                },
                "destinationAmountDetails": {
                  "country": "IN",
                  "transactionAmount": 68351.34,
                  "transactionCurrency": "INR"
                },
                "promotionCodeUsed": true,
                "timestamp": 1641654664000,
                "originPaymentDetails": {
                  "method": "CARD",
                  "cardFingerprint": "20ac00fed8ef913aefb17cfae1097cce",
                  "cardIssuedCountry": "US",
                  "transactionReferenceField": "Deposit",
                  "3dsDone": true
                },
                "destinationPaymentDetails": {
                  "method": "CARD",
                  "cardFingerprint": "20ac00fed8ef913aefb17cfae1097cce",
                  "cardIssuedCountry": "IN",
                  "transactionReferenceField": "Deposit",
                  "3dsDone": true
                },
                "reference": "loan repayment",
                "deviceData": {
                  "batteryLevel": 95,
                  "deviceLatitude": 13.0033,
                  "deviceLongitude": 76.1004,
                  "ipAddress": "10.23.191.2",
                  "deviceIdentifier": "3c49f915d04485e34caba",
                  "vpnUsed": false,
                  "operatingSystem": "Android 11.2",
                  "deviceMaker": "ASUS",
                  "deviceModel": "Zenphone M2 Pro Max",
                  "deviceYear": "2018",
                  "appVersion": "1.1.0"
                },
                "tags": [
                  {
                    "key": "customKey",
                    "value": "customValue"
                  }
                ]
              },
              "executedRules": [
                {
                  "ruleId": "R-1a",
                  "ruleName": "Proof of funds for high value transactions",
                  "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                  "ruleAction": "BLOCK",
                  "ruleHit": true
                }
              ],
              "hitRules": [
                {
                  "ruleId": "R-1a",
                  "ruleName": "Proof of funds for high value transactions",
                  "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                  "ruleAction": "BLOCK"
                }
              ]
            }
          }
        ],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "type": "unknown"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "type": "unknown"
          },
          "description": "Unauthorized",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "type": "unknown"
          },
          "description": "Too Many Requests",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "## POST Transaction Events\n\n`/events/transaction` endpoint allows you to operate on the [Transaction Events entity.](https://docs.flagright.com/docs/flagright-api/8c06ae6a3231a-entities-and-relationships#transaction-event)\n\nTransaction events are created after the initial `POST /transactions` call (which creates a transaction) and are used to:\n\n* Update the STATE of the transaction, using the `transactionState` field and manage the [Transaction Lifecycle](https://docs.flagright.com/docs/flagright-api/8c06ae6a3231a-entities-and-relationships#transaction-lifecycle-through-transaction-events)\n* Update the transaction details, using the `updatedTransactionAttributes` field.\n\n> If you have neither of the above two use cases, you do not need to use transaction events. \n\n### Payload\n\nEach transaction event needs three mandatory fields:\n\n* `transactionState` - STATE of the transaction -> value is set to `CREATED` after `POST /transactions` call\n* `timestamp`- the timestamp of when the event was created or occured in your system\n* `transactionId` - The ID of the transaction for which this event is generated. \n\nIn order to make individual events retrievable, you also need to pass in a unique `eventId` to the request body.\n",
      "authed": true,
      "method": "POST",
      "path": "/events/transaction",
      "examples": [
        {
          "name": "example-1",
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "transactionState": {
                "value": "SUCCESSFUL",
                "type": "enum"
              },
              "timestamp": {
                "value": {
                  "value": 1431231244001,
                  "type": "double"
                },
                "type": "primitive"
              },
              "transactionId": {
                "value": {
                  "value": "443dea26147a406b957d9ee3a1247b11",
                  "type": "string"
                },
                "type": "primitive"
              },
              "eventId": {
                "value": {
                  "value": "aaeeb166147a406b957dd9147a406b957",
                  "type": "string"
                },
                "type": "primitive"
              },
              "eventDescription": {
                "value": {
                  "value": "Transaction created",
                  "type": "string"
                },
                "type": "primitive"
              },
              "metaData": {
                "properties": {
                  "batteryLevel": {
                    "value": {
                      "value": 76.3,
                      "type": "double"
                    },
                    "type": "primitive"
                  },
                  "deviceLatitude": {
                    "value": {
                      "value": 13.009711,
                      "type": "double"
                    },
                    "type": "primitive"
                  },
                  "deviceLongitude": {
                    "value": {
                      "value": 76.102898,
                      "type": "double"
                    },
                    "type": "primitive"
                  },
                  "ipAddress": {
                    "value": {
                      "value": "79.144.2.20",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "vpnUsed": {
                    "value": {
                      "value": true,
                      "type": "boolean"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "executedRules": {
                  "value": [
                    {
                      "properties": {
                        "ruleId": {
                          "value": {
                            "value": "R-1a",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleInstanceId": {
                          "value": {
                            "value": "ruleInstanceId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleName": {
                          "value": {
                            "value": "Proof of funds for high value transactions",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleDescription": {
                          "value": {
                            "value": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleAction": {
                          "value": "BLOCK",
                          "type": "enum"
                        },
                        "ruleHit": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "labels": {
                          "value": [
                            {
                              "value": "UNEXPECTED_BEHAVIOR",
                              "type": "enum"
                            }
                          ],
                          "type": "array"
                        },
                        "nature": {
                          "value": "AML",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "hitRules": {
                  "value": [
                    {
                      "properties": {
                        "ruleId": {
                          "value": {
                            "value": "R-1a",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleInstanceId": {
                          "value": {
                            "value": "ruleInstanceId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleName": {
                          "value": {
                            "value": "Proof of funds for high value transactions",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleDescription": {
                          "value": {
                            "value": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleAction": {
                          "value": "BLOCK",
                          "type": "enum"
                        },
                        "labels": {
                          "value": [
                            {
                              "value": "UNEXPECTED_BEHAVIOR",
                              "type": "enum"
                            }
                          ],
                          "type": "array"
                        },
                        "nature": {
                          "value": "AML",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "eventId": {
                  "value": {
                    "value": "7b80a539eea6e78acbd6d458e5971482",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "transaction": {
                  "properties": {
                    "transactionState": {
                      "value": "CREATED",
                      "type": "enum"
                    },
                    "originAmountDetails": {
                      "properties": {
                        "transactionAmount": {
                          "value": {
                            "value": 800,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "transactionCurrency": {
                          "value": "EUR",
                          "type": "enum"
                        },
                        "country": {
                          "value": "DE",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    "destinationAmountDetails": {
                      "properties": {
                        "transactionAmount": {
                          "value": {
                            "value": 68351.34,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "transactionCurrency": {
                          "value": "INR",
                          "type": "enum"
                        },
                        "country": {
                          "value": "IN",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    "originPaymentDetails": {
                      "value": {
                        "value": {
                          "method": {
                            "value": {
                              "value": "CHECK",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "checkNumber": {
                            "value": {
                              "value": "originPaymentDetails",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "checkIdentifier": {
                            "value": {
                              "value": "originPaymentDetails",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "name": {
                            "value": {
                              "value": "originPaymentDetails",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "deliveryStatus": {
                            "value": "COMPLETED",
                            "type": "enum"
                          },
                          "etaTimestamp": {
                            "value": {
                              "value": 1.1,
                              "type": "double"
                            },
                            "type": "primitive"
                          },
                          "shippingAddress": {
                            "properties": {
                              "addressLines": {
                                "value": [
                                  {
                                    "value": {
                                      "value": {
                                        "value": "Klara-Franke Str 20",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "type": "unknown"
                                  }
                                ],
                                "type": "array"
                              },
                              "postcode": {
                                "value": {
                                  "value": "10557",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "city": {
                                "value": {
                                  "value": "Berlin",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "state": {
                                "value": {
                                  "value": "Berlin",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "country": {
                                "value": {
                                  "value": "Germany",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "tags": {
                                "value": [
                                  {
                                    "properties": {
                                      "key": {
                                        "value": {
                                          "value": "customKey",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "customValue",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "object"
                                  }
                                ],
                                "type": "array"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    },
                    "destinationPaymentDetails": {
                      "value": {
                        "value": {
                          "method": {
                            "value": {
                              "value": "CHECK",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "checkNumber": {
                            "value": {
                              "value": "destinationPaymentDetails",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "checkIdentifier": {
                            "value": {
                              "value": "destinationPaymentDetails",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "name": {
                            "value": {
                              "value": "destinationPaymentDetails",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "deliveryStatus": {
                            "value": "COMPLETED",
                            "type": "enum"
                          },
                          "etaTimestamp": {
                            "value": {
                              "value": 1.1,
                              "type": "double"
                            },
                            "type": "primitive"
                          },
                          "shippingAddress": {
                            "properties": {
                              "addressLines": {
                                "value": [
                                  {
                                    "value": {
                                      "value": {
                                        "value": "Klara-Franke Str 20",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "type": "unknown"
                                  }
                                ],
                                "type": "array"
                              },
                              "postcode": {
                                "value": {
                                  "value": "10557",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "city": {
                                "value": {
                                  "value": "Berlin",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "state": {
                                "value": {
                                  "value": "Berlin",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "country": {
                                "value": {
                                  "value": "Germany",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "tags": {
                                "value": [
                                  {
                                    "properties": {
                                      "key": {
                                        "value": {
                                          "value": "customKey",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "customValue",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "object"
                                  }
                                ],
                                "type": "array"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    },
                    "relatedTransactionIds": {
                      "value": [
                        {
                          "value": {
                            "value": "relatedTransactionIds",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "productType": {
                      "value": {
                        "value": "productType",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "promotionCodeUsed": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "reference": {
                      "value": {
                        "value": "loan repayment",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "deviceData": {
                      "properties": {
                        "batteryLevel": {
                          "value": {
                            "value": 95,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "deviceLatitude": {
                          "value": {
                            "value": 13.0033,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "deviceLongitude": {
                          "value": {
                            "value": 76.1004,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "ipAddress": {
                          "value": {
                            "value": "10.23.191.2",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "deviceIdentifier": {
                          "value": {
                            "value": "3c49f915d04485e34caba",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "vpnUsed": {
                          "value": {
                            "value": false,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "operatingSystem": {
                          "value": {
                            "value": "Android 11.2",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "deviceMaker": {
                          "value": {
                            "value": "ASUS",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "deviceModel": {
                          "value": {
                            "value": "Zenphone M2 Pro Max",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "deviceYear": {
                          "value": {
                            "value": "2018",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "appVersion": {
                          "value": {
                            "value": "1.1.0",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "tags": {
                      "value": [
                        {
                          "properties": {
                            "key": {
                              "value": {
                                "value": "customKey",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "value": {
                              "value": {
                                "value": "customValue",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "type": {
                      "value": "DEPOSIT",
                      "type": "enum"
                    },
                    "transactionId": {
                      "value": {
                        "value": "7b80a539eea6e78acbd6d458e5971482",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "timestamp": {
                      "value": {
                        "value": 1641654664000,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "originUserId": {
                      "value": {
                        "value": "8650a2611d0771cba03310f74bf6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "destinationUserId": {
                      "value": {
                        "value": "9350a2611e0771cba03310f74bf6",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Create a Consumer User",
      "audiences": [],
      "operationId": "post-consumer-user",
      "tags": [],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "PostConsumerUserRequest",
      "request": {
        "schema": {
          "generatedName": "PostConsumerUserRequest",
          "schema": "User",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [
          {
            "name": "example-1",
            "value": {
              "createdTimestamp": 1641654664000,
              "userId": "96647cfd9e8fe66ee0f3362e011e34e8",
              "userDetails": {
                "name": {
                  "firstName": "Baran",
                  "middleName": "Realblood",
                  "lastName": "Ozkan"
                },
                "dateOfBirth": "1991-01-01",
                "countryOfResidence": "US",
                "countryOfNationality": "DE"
              },
              "legalDocuments": [
                {
                  "documentType": "passport",
                  "documentNumber": "Z9431P",
                  "documentIssuedDate": 1639939034000,
                  "documentExpirationDate": 1839939034000,
                  "documentIssuedCountry": "DE",
                  "tags": [
                    {
                      "key": "customerType",
                      "value": "wallet"
                    }
                  ]
                }
              ],
              "contactDetails": {
                "emailIds": [
                  "baran@flagright.com"
                ],
                "contactNumbers": [
                  "+37112345432"
                ],
                "websites": [
                  "flagright.com"
                ],
                "addresses": [
                  {
                    "addressLines": [
                      "Klara-Franke Str 20"
                    ],
                    "postcode": "10557",
                    "city": "Berlin",
                    "state": "Berlin",
                    "country": "Germany",
                    "tags": [
                      {
                        "key": "customKey",
                        "value": "customValue"
                      }
                    ]
                  }
                ]
              },
              "tags": [
                {
                  "key": "customKey",
                  "value": "customValue"
                }
              ]
            }
          }
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Created",
        "schema": {
          "allOf": [
            {
              "generatedName": "ConsumerUsersResponse",
              "schema": "ConsumerUsersResponse",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            {
              "generatedName": "UserMonitoringResult",
              "schema": "UserMonitoringResult",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            }
          ],
          "properties": [
            {
              "conflict": {},
              "generatedName": "postConsumerUserResponseMessage",
              "key": "message",
              "schema": {
                "generatedName": "postConsumerUserResponseMessage",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PostConsumerUserResponseMessage",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [
            {
              "propertyKey": "userId",
              "allOfSchemaIds": [
                "ConsumerUsersResponse",
                "UserMonitoringResult"
              ],
              "conflictingTypeSignatures": false
            }
          ],
          "generatedName": "PostConsumerUserResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [
          {
            "name": "example-1",
            "value": {
              "userId": "96647cfd9e8fe66ee0f3362e011e34e8"
            }
          }
        ],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "type": "unknown"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "type": "unknown"
          },
          "description": "Unauthorized",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "type": "unknown"
          },
          "description": "Too Many Requests",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "## POST Consumer User\n\n`/consumer/user` endpoint allows you to operate on the [Consumer user entity.](https://docs.flagright.com/docs/flagright-api/8c06ae6a3231a-entities-and-relationships#user)\n\nIn order to pass the payload of a User to Flagright and verify the User, you will need to call this endpoint with the User payload. Not all fields are mandatory, you will only need to pass in the fields that you have and are relevant for your compliance setup.\n\n### Payload\n\nEach consumer User entity needs three mandatory fields:\n\n* `userId` - Unique identifier for the user\n* `createdTimestamp` - UNIX timestamp in *milliseconds* for when the User is created in your system\n",
      "authed": true,
      "method": "POST",
      "path": "/consumer/users",
      "examples": [
        {
          "name": "example-1",
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "legalDocuments": {
                "value": [
                  {
                    "properties": {
                      "documentType": {
                        "value": {
                          "value": "passport",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "documentNumber": {
                        "value": {
                          "value": "Z9431P",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "documentIssuedDate": {
                        "value": {
                          "value": 1639939034000,
                          "type": "double"
                        },
                        "type": "primitive"
                      },
                      "documentExpirationDate": {
                        "value": {
                          "value": 1839939034000,
                          "type": "double"
                        },
                        "type": "primitive"
                      },
                      "documentIssuedCountry": {
                        "value": "DE",
                        "type": "enum"
                      },
                      "tags": {
                        "value": [
                          {
                            "properties": {
                              "key": {
                                "value": {
                                  "value": "customerType",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "value": {
                                "value": {
                                  "value": "wallet",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          }
                        ],
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                ],
                "type": "array"
              },
              "contactDetails": {
                "properties": {
                  "emailIds": {
                    "value": [
                      {
                        "value": {
                          "value": "baran@flagright.com",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    ],
                    "type": "array"
                  },
                  "contactNumbers": {
                    "value": [
                      {
                        "value": {
                          "value": "+37112345432",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    ],
                    "type": "array"
                  },
                  "websites": {
                    "value": [
                      {
                        "value": {
                          "value": "flagright.com",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    ],
                    "type": "array"
                  },
                  "addresses": {
                    "value": [
                      {
                        "properties": {
                          "addressLines": {
                            "value": [
                              {
                                "value": {
                                  "value": {
                                    "value": "Klara-Franke Str 20",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            ],
                            "type": "array"
                          },
                          "postcode": {
                            "value": {
                              "value": "10557",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "city": {
                            "value": {
                              "value": "Berlin",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "state": {
                            "value": {
                              "value": "Berlin",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "country": {
                            "value": {
                              "value": "Germany",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "tags": {
                            "value": [
                              {
                                "properties": {
                                  "key": {
                                    "value": {
                                      "value": "customKey",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "value": {
                                    "value": {
                                      "value": "customValue",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            ],
                            "type": "array"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "tags": {
                "value": [
                  {
                    "properties": {
                      "key": {
                        "value": {
                          "value": "customKey",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "value": {
                        "value": {
                          "value": "customValue",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "object"
                  }
                ],
                "type": "array"
              },
              "userId": {
                "value": {
                  "value": "96647cfd9e8fe66ee0f3362e011e34e8",
                  "type": "string"
                },
                "type": "primitive"
              },
              "userDetails": {
                "properties": {
                  "name": {
                    "properties": {
                      "firstName": {
                        "value": {
                          "value": "Baran",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "middleName": {
                        "value": {
                          "value": "Realblood",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "lastName": {
                        "value": {
                          "value": "Ozkan",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "object"
                  },
                  "dateOfBirth": {
                    "value": {
                      "value": "1991-01-01",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "countryOfResidence": {
                    "value": "US",
                    "type": "enum"
                  },
                  "countryOfNationality": {
                    "value": "DE",
                    "type": "enum"
                  }
                },
                "type": "object"
              },
              "createdTimestamp": {
                "value": {
                  "value": 1641654664000,
                  "type": "double"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "executedRules": {
                  "value": [
                    {
                      "properties": {
                        "ruleId": {
                          "value": {
                            "value": "R-1a",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleInstanceId": {
                          "value": {
                            "value": "ruleInstanceId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleName": {
                          "value": {
                            "value": "Proof of funds for high value transactions",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleDescription": {
                          "value": {
                            "value": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleAction": {
                          "value": "BLOCK",
                          "type": "enum"
                        },
                        "ruleHit": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "labels": {
                          "value": [
                            {
                              "value": "UNEXPECTED_BEHAVIOR",
                              "type": "enum"
                            }
                          ],
                          "type": "array"
                        },
                        "nature": {
                          "value": "AML",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "hitRules": {
                  "value": [
                    {
                      "properties": {
                        "ruleId": {
                          "value": {
                            "value": "R-1a",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleInstanceId": {
                          "value": {
                            "value": "ruleInstanceId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleName": {
                          "value": {
                            "value": "Proof of funds for high value transactions",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleDescription": {
                          "value": {
                            "value": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleAction": {
                          "value": "BLOCK",
                          "type": "enum"
                        },
                        "labels": {
                          "value": [
                            {
                              "value": "UNEXPECTED_BEHAVIOR",
                              "type": "enum"
                            }
                          ],
                          "type": "array"
                        },
                        "nature": {
                          "value": "FRAUD",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "userId": {
                  "value": {
                    "value": "96647cfd9e8fe66ee0f3362e011e34e8",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "message": {
                  "value": {
                    "value": "message",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Retrieve a Consumer User",
      "audiences": [],
      "operationId": "get-consumer-user",
      "tags": [],
      "pathParameters": [
        {
          "description": "",
          "name": "userId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetConsumerUserRequestUserId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetConsumerUserRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetConsumerUserResponse",
          "schema": "User",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [
          {
            "name": "example-1",
            "value": {
              "createdTimestamp": 1641654664000,
              "userId": "96647cfd9e8fe66ee0f3362e011e34e8",
              "userDetails": {
                "name": {
                  "firstName": "Baran",
                  "middleName": "Realblood",
                  "lastName": "Ozkan"
                },
                "dateOfBirth": "1991-01-01",
                "countryOfResidence": "US",
                "countryOfNationality": "DE"
              },
              "legalDocuments": [
                {
                  "documentType": "passport",
                  "documentNumber": "Z9431P",
                  "documentIssuedDate": 1639939034000,
                  "documentExpirationDate": 1839939034000,
                  "documentIssuedCountry": "DE",
                  "tags": [
                    {
                      "key": "customerType",
                      "value": "wallet"
                    }
                  ]
                }
              ],
              "contactDetails": {
                "emailIds": [
                  "baran@flagright.com"
                ],
                "contactNumbers": [
                  "+37112345432"
                ],
                "websites": [
                  "flagright.com"
                ],
                "addresses": [
                  {
                    "addressLines": [
                      "Klara-Franke Str 20"
                    ],
                    "postcode": "10557",
                    "city": "Berlin",
                    "state": "Berlin",
                    "country": "Germany",
                    "tags": [
                      {
                        "key": "customKey",
                        "value": "customValue"
                      }
                    ]
                  }
                ]
              },
              "tags": [
                {
                  "key": "customKey",
                  "value": "customValue"
                }
              ]
            }
          }
        ],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "type": "unknown"
          },
          "description": "Unauthorized",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "type": "unknown"
          },
          "description": "Too Many Requests",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "### GET Consumer User\n\n`/consumer/user` endpoint allows you to operate on the [Consumer User entity](https://docs.flagright.com/docs/flagright-api/8c06ae6a3231a-entities-and-relationships#user).\n\nCalling `GET /consumer/user/{userId}` will return the entire user payload and rule execution results for the user with the corresponding `userId`",
      "authed": true,
      "method": "GET",
      "path": "/consumer/users/{userId}",
      "examples": [
        {
          "name": "example-1",
          "pathParameters": [
            {
              "name": "userId",
              "value": {
                "value": {
                  "value": "userId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "userStateDetails": {
                  "properties": {
                    "userId": {
                      "value": {
                        "value": "userId",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "reason": {
                      "value": {
                        "value": "reason",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "state": {
                      "value": "UNACCEPTABLE",
                      "type": "enum"
                    }
                  },
                  "type": "object"
                },
                "kycStatusDetails": {
                  "properties": {
                    "reason": {
                      "value": {
                        "value": "reason",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "status": {
                      "value": "SUCCESSFUL",
                      "type": "enum"
                    }
                  },
                  "type": "object"
                },
                "legalDocuments": {
                  "value": [
                    {
                      "properties": {
                        "documentType": {
                          "value": {
                            "value": "passport",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "documentNumber": {
                          "value": {
                            "value": "Z9431P",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "documentIssuedDate": {
                          "value": {
                            "value": 1639939034000,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "documentExpirationDate": {
                          "value": {
                            "value": 1839939034000,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "documentIssuedCountry": {
                          "value": "DE",
                          "type": "enum"
                        },
                        "tags": {
                          "value": [
                            {
                              "properties": {
                                "key": {
                                  "value": {
                                    "value": "customerType",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "value": {
                                  "value": {
                                    "value": "wallet",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "nameOnDocument": {
                          "properties": {
                            "firstName": {
                              "value": {
                                "value": "Baran",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "middleName": {
                              "value": {
                                "value": "Realblood",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "lastName": {
                              "value": {
                                "value": "Ozkan",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "contactDetails": {
                  "properties": {
                    "emailIds": {
                      "value": [
                        {
                          "value": {
                            "value": "baran@flagright.com",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "contactNumbers": {
                      "value": [
                        {
                          "value": {
                            "value": "+37112345432",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "faxNumbers": {
                      "value": [
                        {
                          "value": {
                            "value": "faxNumbers",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "websites": {
                      "value": [
                        {
                          "value": {
                            "value": "flagright.com",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "addresses": {
                      "value": [
                        {
                          "properties": {
                            "addressLines": {
                              "value": [
                                {
                                  "value": {
                                    "value": {
                                      "value": "Klara-Franke Str 20",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "type": "unknown"
                                }
                              ],
                              "type": "array"
                            },
                            "postcode": {
                              "value": {
                                "value": "10557",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "city": {
                              "value": {
                                "value": "Berlin",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "state": {
                              "value": {
                                "value": "Berlin",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "country": {
                              "value": {
                                "value": "Germany",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "tags": {
                              "value": [
                                {
                                  "properties": {
                                    "key": {
                                      "value": {
                                        "value": "customKey",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "value": {
                                      "value": {
                                        "value": "customValue",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  },
                                  "type": "object"
                                }
                              ],
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "transactionLimits": {
                  "properties": {
                    "maximumDailyTransactionLimit": {
                      "properties": {
                        "amountValue": {
                          "value": {
                            "value": 800,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "amountCurrency": {
                          "value": "GBP",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    "maximumWeeklyTransactionLimit": {
                      "properties": {
                        "amountValue": {
                          "value": {
                            "value": 800,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "amountCurrency": {
                          "value": "GBP",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    "maximumMonthlyTransactionLimit": {
                      "properties": {
                        "amountValue": {
                          "value": {
                            "value": 800,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "amountCurrency": {
                          "value": "GBP",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    "maximumQuarterlyTransactionLimit": {
                      "properties": {
                        "amountValue": {
                          "value": {
                            "value": 800,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "amountCurrency": {
                          "value": "GBP",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    "maximumTransactionLimit": {
                      "properties": {
                        "amountValue": {
                          "value": {
                            "value": 800,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "amountCurrency": {
                          "value": "GBP",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    "maximumYearlyTransactionLimit": {
                      "properties": {
                        "amountValue": {
                          "value": {
                            "value": 800,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "amountCurrency": {
                          "value": "GBP",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "riskLevel": {
                  "value": "VERY_HIGH",
                  "type": "enum"
                },
                "acquisitionChannel": {
                  "value": "ORGANIC",
                  "type": "enum"
                },
                "reasonForAccountOpening": {
                  "value": [
                    {
                      "value": {
                        "value": "reasonForAccountOpening",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "userSegment": {
                  "value": "RETAIL",
                  "type": "enum"
                },
                "pepStatus": {
                  "value": [
                    {
                      "properties": {
                        "isPepHit": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "pepCountry": {
                          "value": {
                            "value": "pepCountry",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "tags": {
                  "value": [
                    {
                      "properties": {
                        "key": {
                          "value": {
                            "value": "customKey",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "value": {
                          "value": {
                            "value": "customValue",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "userId": {
                  "value": {
                    "value": "96647cfd9e8fe66ee0f3362e011e34e8",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "userDetails": {
                  "properties": {
                    "name": {
                      "properties": {
                        "firstName": {
                          "value": {
                            "value": "Baran",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "middleName": {
                          "value": {
                            "value": "Realblood",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "lastName": {
                          "value": {
                            "value": "Ozkan",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "dateOfBirth": {
                      "value": {
                        "value": "1991-01-01",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "countryOfResidence": {
                      "value": "US",
                      "type": "enum"
                    },
                    "countryOfNationality": {
                      "value": "DE",
                      "type": "enum"
                    },
                    "gender": {
                      "value": "M",
                      "type": "enum"
                    }
                  },
                  "type": "object"
                },
                "createdTimestamp": {
                  "value": {
                    "value": 1641654664000,
                    "type": "double"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Create a Business User",
      "audiences": [],
      "operationId": "post-business-user",
      "tags": [],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "PostBusinessUserRequest",
      "request": {
        "schema": {
          "generatedName": "PostBusinessUserRequest",
          "schema": "Business",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Created",
        "schema": {
          "allOf": [
            {
              "generatedName": "BusinessUsersResponse",
              "schema": "BusinessUsersResponse",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            {
              "generatedName": "UserMonitoringResult",
              "schema": "UserMonitoringResult",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            }
          ],
          "properties": [
            {
              "conflict": {},
              "generatedName": "postBusinessUserResponseMessage",
              "key": "message",
              "schema": {
                "generatedName": "postBusinessUserResponseMessage",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PostBusinessUserResponseMessage",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [
            {
              "propertyKey": "userId",
              "allOfSchemaIds": [
                "BusinessUsersResponse",
                "UserMonitoringResult"
              ],
              "conflictingTypeSignatures": false
            }
          ],
          "generatedName": "PostBusinessUserResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [
          {
            "name": "example-1",
            "value": {
              "userId": "96647cfd9e8fe66ee0f3362e011e34e8"
            }
          }
        ],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "type": "unknown"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "type": "unknown"
          },
          "description": "Unauthorized",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "type": "unknown"
          },
          "description": "Too Many Requests",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "## POST Business User\n\n`/business/user` endpoint allows you to operate on the [Business user entity.](https://docs.flagright.com/docs/flagright-api/8c06ae6a3231a-entities-and-relationships#user)\n\nIn order to pass the payload of a User to Flagright and verify the User, you will need to call this endpoint with the User payload. Not all fields are mandatory, you will only need to pass in the fields that you have and are relevant for your compliance setup.\n\n### Payload\n\n\nEach consumer Business entity needs three mandatory fields:\n\n* `userId` - Unique identifier for the user\n* `legalEntity` - Details of the business legal entity (CompanyGeneralDetails, FinancialDetails etc) - only `legalName`in `CompanyGeneralDetails` is mandatory\n* `createdTimestamp` - UNIX timestamp in *milliseconds* for when the User is created in your system",
      "authed": true,
      "method": "POST",
      "path": "/business/users",
      "examples": [
        {
          "name": "example-1",
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "userId": {
                "value": {
                  "value": "userId",
                  "type": "string"
                },
                "type": "primitive"
              },
              "createdTimestamp": {
                "value": {
                  "value": 1.1,
                  "type": "double"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "executedRules": {
                  "value": [
                    {
                      "properties": {
                        "ruleId": {
                          "value": {
                            "value": "R-1a",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleInstanceId": {
                          "value": {
                            "value": "ruleInstanceId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleName": {
                          "value": {
                            "value": "Proof of funds for high value transactions",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleDescription": {
                          "value": {
                            "value": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleAction": {
                          "value": "BLOCK",
                          "type": "enum"
                        },
                        "ruleHit": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "labels": {
                          "value": [
                            {
                              "value": "UNEXPECTED_BEHAVIOR",
                              "type": "enum"
                            }
                          ],
                          "type": "array"
                        },
                        "nature": {
                          "value": "AML",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "hitRules": {
                  "value": [
                    {
                      "properties": {
                        "ruleId": {
                          "value": {
                            "value": "R-1a",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleInstanceId": {
                          "value": {
                            "value": "ruleInstanceId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleName": {
                          "value": {
                            "value": "Proof of funds for high value transactions",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleDescription": {
                          "value": {
                            "value": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleAction": {
                          "value": "BLOCK",
                          "type": "enum"
                        },
                        "labels": {
                          "value": [
                            {
                              "value": "UNEXPECTED_BEHAVIOR",
                              "type": "enum"
                            }
                          ],
                          "type": "array"
                        },
                        "nature": {
                          "value": "FRAUD",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "userId": {
                  "value": {
                    "value": "96647cfd9e8fe66ee0f3362e011e34e8",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "message": {
                  "value": {
                    "value": "message",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Retrieve a Business User",
      "audiences": [],
      "operationId": "get-business-user-userId",
      "tags": [],
      "pathParameters": [
        {
          "description": "",
          "name": "userId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetBusinessUserUserIdRequestUserId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetBusinessUserUserIdRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetBusinessUserUserIdResponse",
          "schema": "Business",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [
          {
            "name": "example-2",
            "value": {
              "createdTimestamp": 1641654664000,
              "userId": "96647cfd9e8fe66ee0f3362e011e34e8",
              "legalEntity": {
                "companyGeneralDetails": {
                  "legalName": "Ozkan Hazelnut Export JSC",
                  "businessIndustry": [
                    "Farming"
                  ],
                  "mainProductsServicesSold": [
                    "Hazelnut"
                  ]
                },
                "companyFinancialDetails": {
                  "expectedTransactionAmountPerMonth": {
                    "amountValue": 800,
                    "amountCurrency": "GBP"
                  },
                  "expectedTurnoverPerMonth": {
                    "amountValue": 8000,
                    "amountCurrency": "USD"
                  }
                },
                "companyRegistrationDetails": {
                  "registrationIdentifier": "PSJ554342",
                  "registrationCountry": "DE"
                },
                "reasonForAccountOpening": [
                  "string"
                ],
                "contactDetails": {
                  "addresses": [
                    {
                      "addressLines": [
                        "Klara-Franke Str 20"
                      ],
                      "postcode": "10557",
                      "city": "Berlin",
                      "state": "Berlin",
                      "country": "Germany",
                      "tags": [
                        {
                          "key": "customKey",
                          "value": "customValue"
                        }
                      ]
                    }
                  ]
                }
              },
              "shareHolders": [
                {
                  "generalDetails": {
                    "name": {
                      "firstName": "Baran",
                      "middleName": "Realblood",
                      "lastName": "Ozkan"
                    },
                    "dateOfBirth": "1991-01-01",
                    "countryOfResidence": "US",
                    "countryOfNationality": "DE"
                  },
                  "legalDocuments": [
                    {
                      "documentType": "passport",
                      "documentNumber": "Z9431P",
                      "documentIssuedDate": 1639939034000,
                      "documentExpirationDate": 1839939034000,
                      "documentIssuedCountry": "DE",
                      "tags": [
                        {
                          "key": "customerType",
                          "value": "wallet"
                        }
                      ]
                    }
                  ],
                  "contactDetails": {
                    "emailIds": [
                      "baran@flagright.com"
                    ],
                    "contactNumbers": [
                      "+371 123132"
                    ],
                    "websites": [
                      "flagright.com"
                    ],
                    "addresses": [
                      {
                        "addressLines": [
                          "Klara-Franke Str 20"
                        ],
                        "postcode": "10557",
                        "city": "Berlin",
                        "state": "Berlin",
                        "country": "Germany",
                        "tags": [
                          {
                            "key": "customKey",
                            "value": "customValue"
                          }
                        ]
                      }
                    ]
                  },
                  "tags": [
                    {
                      "key": "customKey",
                      "value": "customValue"
                    }
                  ]
                }
              ],
              "directors": [
                {
                  "generalDetails": {
                    "name": {
                      "firstName": "Baran",
                      "middleName": "Realblood",
                      "lastName": "Ozkan"
                    },
                    "dateOfBirth": "1991-01-01",
                    "countryOfResidence": "US",
                    "countryOfNationality": "DE"
                  },
                  "legalDocuments": [
                    {
                      "documentType": "passport",
                      "documentNumber": "Z9431P",
                      "documentIssuedDate": 1639939034000,
                      "documentExpirationDate": 1839939034000,
                      "documentIssuedCountry": "DE",
                      "tags": [
                        {
                          "key": "customerType",
                          "value": "wallet"
                        }
                      ]
                    }
                  ],
                  "contactDetails": {
                    "emailIds": [
                      "baran@flagright.com"
                    ],
                    "contactNumbers": [
                      "+371 123132"
                    ],
                    "websites": [
                      "flagright.com"
                    ],
                    "addresses": [
                      {
                        "addressLines": [
                          "Klara-Franke Str 20"
                        ],
                        "postcode": "10557",
                        "city": "Berlin",
                        "state": "Berlin",
                        "country": "Germany",
                        "tags": [
                          {
                            "key": "customKey",
                            "value": "customValue"
                          }
                        ]
                      }
                    ]
                  },
                  "tags": [
                    {
                      "key": "customKey",
                      "value": "customValue"
                    }
                  ]
                }
              ],
              "tags": [
                {
                  "key": "customKey",
                  "value": "customValue"
                }
              ]
            }
          }
        ],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "type": "unknown"
          },
          "description": "Unauthorized",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "type": "unknown"
          },
          "description": "Too Many Requests",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "### GET Business User\n\n`/business/user` endpoint allows you to operate on the [Business User entity](https://docs.flagright.com/docs/flagright-api/8c06ae6a3231a-entities-and-relationships#user).\n\nCalling `GET /business/user/{userId}` will return the entire User payload and rule execution results for the User with the corresponding `userId`",
      "authed": true,
      "method": "GET",
      "path": "/business/users/{userId}",
      "examples": [
        {
          "name": "example-2",
          "pathParameters": [
            {
              "name": "userId",
              "value": {
                "value": {
                  "value": "userId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "userStateDetails": {
                  "properties": {
                    "userId": {
                      "value": {
                        "value": "userId",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "reason": {
                      "value": {
                        "value": "reason",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "state": {
                      "value": "UNACCEPTABLE",
                      "type": "enum"
                    }
                  },
                  "type": "object"
                },
                "kycStatusDetails": {
                  "properties": {
                    "reason": {
                      "value": {
                        "value": "reason",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "status": {
                      "value": "SUCCESSFUL",
                      "type": "enum"
                    }
                  },
                  "type": "object"
                },
                "legalEntity": {
                  "properties": {
                    "companyGeneralDetails": {
                      "properties": {
                        "legalName": {
                          "value": {
                            "value": "Ozkan Hazelnut Export JSC",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "businessIndustry": {
                          "value": [
                            {
                              "value": {
                                "value": "Farming",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "mainProductsServicesSold": {
                          "value": [
                            {
                              "value": {
                                "value": "Hazelnut",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "userSegment": {
                          "value": "SOLE_PROPRIETORSHIP",
                          "type": "enum"
                        },
                        "userRegistrationStatus": {
                          "value": "REGISTERED",
                          "type": "enum"
                        },
                        "tags": {
                          "value": [
                            {
                              "properties": {
                                "key": {
                                  "value": {
                                    "value": "customKey",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "value": {
                                  "value": {
                                    "value": "customValue",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "companyFinancialDetails": {
                      "properties": {
                        "expectedTransactionAmountPerMonth": {
                          "properties": {
                            "amountValue": {
                              "value": {
                                "value": 800,
                                "type": "double"
                              },
                              "type": "primitive"
                            },
                            "amountCurrency": {
                              "value": "GBP",
                              "type": "enum"
                            }
                          },
                          "type": "object"
                        },
                        "expectedTurnoverPerMonth": {
                          "properties": {
                            "amountValue": {
                              "value": {
                                "value": 8000,
                                "type": "double"
                              },
                              "type": "primitive"
                            },
                            "amountCurrency": {
                              "value": "USD",
                              "type": "enum"
                            }
                          },
                          "type": "object"
                        },
                        "tags": {
                          "value": [
                            {
                              "properties": {
                                "key": {
                                  "value": {
                                    "value": "customKey",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "value": {
                                  "value": {
                                    "value": "customValue",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "companyRegistrationDetails": {
                      "properties": {
                        "registrationIdentifier": {
                          "value": {
                            "value": "PSJ554342",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "registrationCountry": {
                          "value": "DE",
                          "type": "enum"
                        },
                        "taxIdentifier": {
                          "value": {
                            "value": "taxIdentifier",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "legalEntityType": {
                          "value": {
                            "value": "legalEntityType",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "dateOfRegistration": {
                          "value": {
                            "value": "dateOfRegistration",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tags": {
                          "value": [
                            {
                              "properties": {
                                "key": {
                                  "value": {
                                    "value": "customKey",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "value": {
                                  "value": {
                                    "value": "customValue",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "reasonForAccountOpening": {
                      "value": [
                        {
                          "value": {
                            "value": "string",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "contactDetails": {
                      "properties": {
                        "emailIds": {
                          "value": [
                            {
                              "value": {
                                "value": "emailIds",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "contactNumbers": {
                          "value": [
                            {
                              "value": {
                                "value": "contactNumbers",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "faxNumbers": {
                          "value": [
                            {
                              "value": {
                                "value": "faxNumbers",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "websites": {
                          "value": [
                            {
                              "value": {
                                "value": "websites",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "addresses": {
                          "value": [
                            {
                              "properties": {
                                "addressLines": {
                                  "value": [
                                    {
                                      "value": {
                                        "value": {
                                          "value": "Klara-Franke Str 20",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "type": "unknown"
                                    }
                                  ],
                                  "type": "array"
                                },
                                "postcode": {
                                  "value": {
                                    "value": "10557",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "city": {
                                  "value": {
                                    "value": "Berlin",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "state": {
                                  "value": {
                                    "value": "Berlin",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "country": {
                                  "value": {
                                    "value": "Germany",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "tags": {
                                  "value": [
                                    {
                                      "properties": {
                                        "key": {
                                          "value": {
                                            "value": "customKey",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        },
                                        "value": {
                                          "value": {
                                            "value": "customValue",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  ],
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "shareHolders": {
                  "value": [
                    {
                      "properties": {
                        "generalDetails": {
                          "properties": {
                            "name": {
                              "properties": {
                                "firstName": {
                                  "value": {
                                    "value": "Baran",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "middleName": {
                                  "value": {
                                    "value": "Realblood",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "lastName": {
                                  "value": {
                                    "value": "Ozkan",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            },
                            "dateOfBirth": {
                              "value": {
                                "value": "1991-01-01",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "countryOfResidence": {
                              "value": "US",
                              "type": "enum"
                            },
                            "countryOfNationality": {
                              "value": "DE",
                              "type": "enum"
                            }
                          },
                          "type": "object"
                        },
                        "legalDocuments": {
                          "value": [
                            {
                              "properties": {
                                "documentType": {
                                  "value": {
                                    "value": "passport",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "documentNumber": {
                                  "value": {
                                    "value": "Z9431P",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "documentIssuedDate": {
                                  "value": {
                                    "value": 1639939034000,
                                    "type": "double"
                                  },
                                  "type": "primitive"
                                },
                                "documentExpirationDate": {
                                  "value": {
                                    "value": 1839939034000,
                                    "type": "double"
                                  },
                                  "type": "primitive"
                                },
                                "documentIssuedCountry": {
                                  "value": "DE",
                                  "type": "enum"
                                },
                                "tags": {
                                  "value": [
                                    {
                                      "properties": {
                                        "key": {
                                          "value": {
                                            "value": "customerType",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        },
                                        "value": {
                                          "value": {
                                            "value": "wallet",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  ],
                                  "type": "array"
                                },
                                "nameOnDocument": {
                                  "properties": {
                                    "firstName": {
                                      "value": {
                                        "value": "Baran",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "middleName": {
                                      "value": {
                                        "value": "Realblood",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "lastName": {
                                      "value": {
                                        "value": "Ozkan",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "contactDetails": {
                          "properties": {
                            "emailIds": {
                              "value": [
                                {
                                  "value": {
                                    "value": "baran@flagright.com",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              ],
                              "type": "array"
                            },
                            "contactNumbers": {
                              "value": [
                                {
                                  "value": {
                                    "value": "+371 123132",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              ],
                              "type": "array"
                            },
                            "websites": {
                              "value": [
                                {
                                  "value": {
                                    "value": "flagright.com",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              ],
                              "type": "array"
                            },
                            "addresses": {
                              "value": [
                                {
                                  "properties": {
                                    "addressLines": {
                                      "value": [
                                        {
                                          "value": {
                                            "value": {
                                              "value": "Klara-Franke Str 20",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "type": "unknown"
                                        }
                                      ],
                                      "type": "array"
                                    },
                                    "postcode": {
                                      "value": {
                                        "value": "10557",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "city": {
                                      "value": {
                                        "value": "Berlin",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "state": {
                                      "value": {
                                        "value": "Berlin",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "country": {
                                      "value": {
                                        "value": "Germany",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "tags": {
                                      "value": [
                                        {
                                          "properties": {
                                            "key": {
                                              "value": {
                                                "value": "customKey",
                                                "type": "string"
                                              },
                                              "type": "primitive"
                                            },
                                            "value": {
                                              "value": {
                                                "value": "customValue",
                                                "type": "string"
                                              },
                                              "type": "primitive"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      ],
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                }
                              ],
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "pepStatus": {
                          "value": [
                            {
                              "properties": {
                                "isPepHit": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "tags": {
                          "value": [
                            {
                              "properties": {
                                "key": {
                                  "value": {
                                    "value": "customKey",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "value": {
                                  "value": {
                                    "value": "customValue",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "directors": {
                  "value": [
                    {
                      "properties": {
                        "generalDetails": {
                          "properties": {
                            "name": {
                              "properties": {
                                "firstName": {
                                  "value": {
                                    "value": "Baran",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "middleName": {
                                  "value": {
                                    "value": "Realblood",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "lastName": {
                                  "value": {
                                    "value": "Ozkan",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            },
                            "dateOfBirth": {
                              "value": {
                                "value": "1991-01-01",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "countryOfResidence": {
                              "value": "US",
                              "type": "enum"
                            },
                            "countryOfNationality": {
                              "value": "DE",
                              "type": "enum"
                            }
                          },
                          "type": "object"
                        },
                        "legalDocuments": {
                          "value": [
                            {
                              "properties": {
                                "documentType": {
                                  "value": {
                                    "value": "passport",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "documentNumber": {
                                  "value": {
                                    "value": "Z9431P",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "documentIssuedDate": {
                                  "value": {
                                    "value": 1639939034000,
                                    "type": "double"
                                  },
                                  "type": "primitive"
                                },
                                "documentExpirationDate": {
                                  "value": {
                                    "value": 1839939034000,
                                    "type": "double"
                                  },
                                  "type": "primitive"
                                },
                                "documentIssuedCountry": {
                                  "value": "DE",
                                  "type": "enum"
                                },
                                "tags": {
                                  "value": [
                                    {
                                      "properties": {
                                        "key": {
                                          "value": {
                                            "value": "customerType",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        },
                                        "value": {
                                          "value": {
                                            "value": "wallet",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  ],
                                  "type": "array"
                                },
                                "nameOnDocument": {
                                  "properties": {
                                    "firstName": {
                                      "value": {
                                        "value": "Baran",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "middleName": {
                                      "value": {
                                        "value": "Realblood",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "lastName": {
                                      "value": {
                                        "value": "Ozkan",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "contactDetails": {
                          "properties": {
                            "emailIds": {
                              "value": [
                                {
                                  "value": {
                                    "value": "baran@flagright.com",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              ],
                              "type": "array"
                            },
                            "contactNumbers": {
                              "value": [
                                {
                                  "value": {
                                    "value": "+371 123132",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              ],
                              "type": "array"
                            },
                            "websites": {
                              "value": [
                                {
                                  "value": {
                                    "value": "flagright.com",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              ],
                              "type": "array"
                            },
                            "addresses": {
                              "value": [
                                {
                                  "properties": {
                                    "addressLines": {
                                      "value": [
                                        {
                                          "value": {
                                            "value": {
                                              "value": "Klara-Franke Str 20",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "type": "unknown"
                                        }
                                      ],
                                      "type": "array"
                                    },
                                    "postcode": {
                                      "value": {
                                        "value": "10557",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "city": {
                                      "value": {
                                        "value": "Berlin",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "state": {
                                      "value": {
                                        "value": "Berlin",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "country": {
                                      "value": {
                                        "value": "Germany",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "tags": {
                                      "value": [
                                        {
                                          "properties": {
                                            "key": {
                                              "value": {
                                                "value": "customKey",
                                                "type": "string"
                                              },
                                              "type": "primitive"
                                            },
                                            "value": {
                                              "value": {
                                                "value": "customValue",
                                                "type": "string"
                                              },
                                              "type": "primitive"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      ],
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                }
                              ],
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "pepStatus": {
                          "value": [
                            {
                              "properties": {
                                "isPepHit": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "tags": {
                          "value": [
                            {
                              "properties": {
                                "key": {
                                  "value": {
                                    "value": "customKey",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "value": {
                                  "value": {
                                    "value": "customValue",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "transactionLimits": {
                  "properties": {
                    "maximumDailyTransactionLimit": {
                      "properties": {
                        "amountValue": {
                          "value": {
                            "value": 800,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "amountCurrency": {
                          "value": "GBP",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    "maximumWeeklyTransactionLimit": {
                      "properties": {
                        "amountValue": {
                          "value": {
                            "value": 800,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "amountCurrency": {
                          "value": "GBP",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    "maximumMonthlyTransactionLimit": {
                      "properties": {
                        "amountValue": {
                          "value": {
                            "value": 800,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "amountCurrency": {
                          "value": "GBP",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    "maximumQuarterlyTransactionLimit": {
                      "properties": {
                        "amountValue": {
                          "value": {
                            "value": 800,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "amountCurrency": {
                          "value": "GBP",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    "maximumTransactionLimit": {
                      "properties": {
                        "amountValue": {
                          "value": {
                            "value": 800,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "amountCurrency": {
                          "value": "GBP",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    "maximumYearlyTransactionLimit": {
                      "properties": {
                        "amountValue": {
                          "value": {
                            "value": 800,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "amountCurrency": {
                          "value": "GBP",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "riskLevel": {
                  "value": "VERY_HIGH",
                  "type": "enum"
                },
                "allowedPaymentMethods": {
                  "value": [
                    {
                      "value": "ACH",
                      "type": "enum"
                    }
                  ],
                  "type": "array"
                },
                "linkedEntities": {
                  "properties": {
                    "parentUserId": {
                      "value": {
                        "value": "parentUserId",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "childUserIds": {
                      "value": [
                        {
                          "value": {
                            "value": "childUserIds",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "acquisitionChannel": {
                  "value": "ORGANIC",
                  "type": "enum"
                },
                "savedPaymentDetails": {
                  "value": [
                    {
                      "value": {
                        "value": {
                          "method": {
                            "value": {
                              "value": "CHECK",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "checkNumber": {
                            "value": {
                              "value": "savedPaymentDetails",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "checkIdentifier": {
                            "value": {
                              "value": "savedPaymentDetails",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "name": {
                            "value": {
                              "value": "savedPaymentDetails",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "deliveryStatus": {
                            "value": "COMPLETED",
                            "type": "enum"
                          },
                          "etaTimestamp": {
                            "value": {
                              "value": 1.1,
                              "type": "double"
                            },
                            "type": "primitive"
                          },
                          "shippingAddress": {
                            "properties": {
                              "addressLines": {
                                "value": [
                                  {
                                    "value": {
                                      "value": {
                                        "value": "Klara-Franke Str 20",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "type": "unknown"
                                  }
                                ],
                                "type": "array"
                              },
                              "postcode": {
                                "value": {
                                  "value": "10557",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "city": {
                                "value": {
                                  "value": "Berlin",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "state": {
                                "value": {
                                  "value": "Berlin",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "country": {
                                "value": {
                                  "value": "Germany",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "tags": {
                                "value": [
                                  {
                                    "properties": {
                                      "key": {
                                        "value": {
                                          "value": "customKey",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "customValue",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "object"
                                  }
                                ],
                                "type": "array"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    }
                  ],
                  "type": "array"
                },
                "mccDetails": {
                  "properties": {
                    "code": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "description": {
                      "value": {
                        "value": "description",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "tags": {
                  "value": [
                    {
                      "properties": {
                        "key": {
                          "value": {
                            "value": "customKey",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "value": {
                          "value": {
                            "value": "customValue",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "userId": {
                  "value": {
                    "value": "96647cfd9e8fe66ee0f3362e011e34e8",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdTimestamp": {
                  "value": {
                    "value": 1641654664000,
                    "type": "double"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Create a Consumer User Event",
      "internal": false,
      "audiences": [],
      "operationId": "post-user-event",
      "tags": [],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "PostUserEventRequest",
      "request": {
        "schema": {
          "generatedName": "PostUserEventRequest",
          "schema": "ConsumerUserEvent",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Created",
        "schema": {
          "generatedName": "PostUserEventResponse",
          "schema": "UserWithRulesResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "type": "unknown"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "type": "unknown"
          },
          "description": "Unauthorized",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "type": "unknown"
          },
          "description": "Too Many Requests",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "## POST Consumer User Events\n\n`/events/consumer/user` endpoint allows you to operate on the Consumer User Events entity.\n\nUser events are created after the initial `POST /consumer/users` call (which creates a user) and are used to:\n\n* Update the STATE and KYC Status of the user, using the `userStateDetails` or `kycStatusDetails` field\n* Update the user details, using the `updatedConsumerUserAttributes` field.\n\n> If you have neither of the above two use cases, you do not need to use user events. \n\n### Payload\n\nEach user event needs three mandatory fields:\n\n* `timestamp`- the timestamp of when the event was created or occured in your system\n* `userId` - The ID of the transaction for which this event is generated. \n\nIn order to make individual events retrievable, you also need to pass in a unique `eventId` to the request body.\n",
      "authed": true,
      "method": "POST",
      "path": "/events/consumer/user",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "timestamp": {
                "value": {
                  "value": 1.1,
                  "type": "double"
                },
                "type": "primitive"
              },
              "userId": {
                "value": {
                  "value": "userId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "userStateDetails": {
                  "properties": {
                    "userId": {
                      "value": {
                        "value": "userId",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "reason": {
                      "value": {
                        "value": "reason",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "state": {
                      "value": "UNACCEPTABLE",
                      "type": "enum"
                    }
                  },
                  "type": "object"
                },
                "kycStatusDetails": {
                  "properties": {
                    "reason": {
                      "value": {
                        "value": "reason",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "status": {
                      "value": "SUCCESSFUL",
                      "type": "enum"
                    }
                  },
                  "type": "object"
                },
                "legalDocuments": {
                  "value": [
                    {
                      "properties": {
                        "documentType": {
                          "value": {
                            "value": "passport",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "documentNumber": {
                          "value": {
                            "value": "Z9431P",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "documentIssuedDate": {
                          "value": {
                            "value": 1639939034000,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "documentExpirationDate": {
                          "value": {
                            "value": 1839939034000,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "documentIssuedCountry": {
                          "value": "DE",
                          "type": "enum"
                        },
                        "tags": {
                          "value": [
                            {
                              "properties": {
                                "key": {
                                  "value": {
                                    "value": "customerType",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "value": {
                                  "value": {
                                    "value": "wallet",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "nameOnDocument": {
                          "properties": {
                            "firstName": {
                              "value": {
                                "value": "Baran",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "middleName": {
                              "value": {
                                "value": "Realblood",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "lastName": {
                              "value": {
                                "value": "Ozkan",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "contactDetails": {
                  "properties": {
                    "emailIds": {
                      "value": [
                        {
                          "value": {
                            "value": "emailIds",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "contactNumbers": {
                      "value": [
                        {
                          "value": {
                            "value": "contactNumbers",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "faxNumbers": {
                      "value": [
                        {
                          "value": {
                            "value": "faxNumbers",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "websites": {
                      "value": [
                        {
                          "value": {
                            "value": "websites",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "addresses": {
                      "value": [
                        {
                          "properties": {
                            "addressLines": {
                              "value": [
                                {
                                  "value": {
                                    "value": {
                                      "value": "Klara-Franke Str 20",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "type": "unknown"
                                }
                              ],
                              "type": "array"
                            },
                            "postcode": {
                              "value": {
                                "value": "10557",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "city": {
                              "value": {
                                "value": "Berlin",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "state": {
                              "value": {
                                "value": "Berlin",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "country": {
                              "value": {
                                "value": "Germany",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "tags": {
                              "value": [
                                {
                                  "properties": {
                                    "key": {
                                      "value": {
                                        "value": "customKey",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "value": {
                                      "value": {
                                        "value": "customValue",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  },
                                  "type": "object"
                                }
                              ],
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "transactionLimits": {
                  "properties": {
                    "maximumDailyTransactionLimit": {
                      "properties": {
                        "amountValue": {
                          "value": {
                            "value": 800,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "amountCurrency": {
                          "value": "GBP",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    "maximumWeeklyTransactionLimit": {
                      "properties": {
                        "amountValue": {
                          "value": {
                            "value": 800,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "amountCurrency": {
                          "value": "GBP",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    "maximumMonthlyTransactionLimit": {
                      "properties": {
                        "amountValue": {
                          "value": {
                            "value": 800,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "amountCurrency": {
                          "value": "GBP",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    "maximumQuarterlyTransactionLimit": {
                      "properties": {
                        "amountValue": {
                          "value": {
                            "value": 800,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "amountCurrency": {
                          "value": "GBP",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    "maximumTransactionLimit": {
                      "properties": {
                        "amountValue": {
                          "value": {
                            "value": 800,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "amountCurrency": {
                          "value": "GBP",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    "maximumYearlyTransactionLimit": {
                      "properties": {
                        "amountValue": {
                          "value": {
                            "value": 800,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "amountCurrency": {
                          "value": "GBP",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "riskLevel": {
                  "value": "VERY_HIGH",
                  "type": "enum"
                },
                "acquisitionChannel": {
                  "value": "ORGANIC",
                  "type": "enum"
                },
                "reasonForAccountOpening": {
                  "value": [
                    {
                      "value": {
                        "value": "reasonForAccountOpening",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "userSegment": {
                  "value": "RETAIL",
                  "type": "enum"
                },
                "pepStatus": {
                  "value": [
                    {
                      "properties": {
                        "isPepHit": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "pepCountry": {
                          "value": {
                            "value": "pepCountry",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "tags": {
                  "value": [
                    {
                      "properties": {
                        "key": {
                          "value": {
                            "value": "customKey",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "value": {
                          "value": {
                            "value": "customValue",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "userId": {
                  "value": {
                    "value": "userId",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "userDetails": {
                  "properties": {
                    "name": {
                      "properties": {
                        "firstName": {
                          "value": {
                            "value": "Baran",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "middleName": {
                          "value": {
                            "value": "Realblood",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "lastName": {
                          "value": {
                            "value": "Ozkan",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "dateOfBirth": {
                      "value": {
                        "value": "1991-01-01",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "countryOfResidence": {
                      "value": "US",
                      "type": "enum"
                    },
                    "countryOfNationality": {
                      "value": "DE",
                      "type": "enum"
                    },
                    "gender": {
                      "value": "M",
                      "type": "enum"
                    }
                  },
                  "type": "object"
                },
                "createdTimestamp": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "executedRules": {
                  "value": [
                    {
                      "properties": {
                        "ruleId": {
                          "value": {
                            "value": "R-1a",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleInstanceId": {
                          "value": {
                            "value": "ruleInstanceId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleName": {
                          "value": {
                            "value": "Proof of funds for high value transactions",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleDescription": {
                          "value": {
                            "value": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleAction": {
                          "value": "BLOCK",
                          "type": "enum"
                        },
                        "ruleHit": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "labels": {
                          "value": [
                            {
                              "value": "UNEXPECTED_BEHAVIOR",
                              "type": "enum"
                            }
                          ],
                          "type": "array"
                        },
                        "nature": {
                          "value": "AML",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "hitRules": {
                  "value": [
                    {
                      "properties": {
                        "ruleId": {
                          "value": {
                            "value": "R-1a",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleInstanceId": {
                          "value": {
                            "value": "ruleInstanceId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleName": {
                          "value": {
                            "value": "Proof of funds for high value transactions",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleDescription": {
                          "value": {
                            "value": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleAction": {
                          "value": "BLOCK",
                          "type": "enum"
                        },
                        "labels": {
                          "value": [
                            {
                              "value": "UNEXPECTED_BEHAVIOR",
                              "type": "enum"
                            }
                          ],
                          "type": "array"
                        },
                        "nature": {
                          "value": "FRAUD",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Create a Business User Event",
      "internal": false,
      "audiences": [],
      "operationId": "post-business-user-event",
      "tags": [],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "PostBusinessUserEventRequest",
      "request": {
        "schema": {
          "generatedName": "PostBusinessUserEventRequest",
          "schema": "BusinessUserEvent",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Created",
        "schema": {
          "generatedName": "PostBusinessUserEventResponse",
          "schema": "BusinessWithRulesResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "type": "unknown"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "type": "unknown"
          },
          "description": "Unauthorized",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "type": "unknown"
          },
          "description": "Too Many Requests",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "## POST Business User Events\n\n`/events/business/user` endpoint allows you to operate on the Business User Events entity.\n\nUser events are created after the initial `POST /business/users` call (which creates a user) and are used to:\n\n* Update the STATE and KYC Status of the user, using the `userStateDetails` or `kycStatusDetails` field\n* Update the user details, using the `updatedBusinessUserAttributes` field.\n\n> If you have neither of the above two use cases, you do not need to use user events. \n\n### Payload\n\nEach user event needs three mandatory fields:\n\n* `timestamp`- the timestamp of when the event was created or occured in your system\n* `userId` - The ID of the transaction for which this event is generated. \n\nIn order to make individual events retrievable, you also need to pass in a unique `eventId` to the request body.\n",
      "authed": true,
      "method": "POST",
      "path": "/events/business/user",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "timestamp": {
                "value": {
                  "value": 1.1,
                  "type": "double"
                },
                "type": "primitive"
              },
              "userId": {
                "value": {
                  "value": "userId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "userStateDetails": {
                  "properties": {
                    "userId": {
                      "value": {
                        "value": "userId",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "reason": {
                      "value": {
                        "value": "reason",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "state": {
                      "value": "UNACCEPTABLE",
                      "type": "enum"
                    }
                  },
                  "type": "object"
                },
                "kycStatusDetails": {
                  "properties": {
                    "reason": {
                      "value": {
                        "value": "reason",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "status": {
                      "value": "SUCCESSFUL",
                      "type": "enum"
                    }
                  },
                  "type": "object"
                },
                "legalEntity": {
                  "properties": {
                    "companyGeneralDetails": {
                      "properties": {
                        "legalName": {
                          "value": {
                            "value": "Ozkan Hazelnut Export JSC",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "businessIndustry": {
                          "value": [
                            {
                              "value": {
                                "value": "Farming",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "mainProductsServicesSold": {
                          "value": [
                            {
                              "value": {
                                "value": "Hazelnut",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "userSegment": {
                          "value": "SOLE_PROPRIETORSHIP",
                          "type": "enum"
                        },
                        "userRegistrationStatus": {
                          "value": "REGISTERED",
                          "type": "enum"
                        },
                        "tags": {
                          "value": [
                            {
                              "properties": {
                                "key": {
                                  "value": {
                                    "value": "customKey",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "value": {
                                  "value": {
                                    "value": "customValue",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "companyFinancialDetails": {
                      "properties": {
                        "expectedTransactionAmountPerMonth": {
                          "properties": {
                            "amountValue": {
                              "value": {
                                "value": 800,
                                "type": "double"
                              },
                              "type": "primitive"
                            },
                            "amountCurrency": {
                              "value": "GBP",
                              "type": "enum"
                            }
                          },
                          "type": "object"
                        },
                        "expectedTurnoverPerMonth": {
                          "properties": {
                            "amountValue": {
                              "value": {
                                "value": 8000,
                                "type": "double"
                              },
                              "type": "primitive"
                            },
                            "amountCurrency": {
                              "value": "USD",
                              "type": "enum"
                            }
                          },
                          "type": "object"
                        },
                        "tags": {
                          "value": [
                            {
                              "properties": {
                                "key": {
                                  "value": {
                                    "value": "customKey",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "value": {
                                  "value": {
                                    "value": "customValue",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "companyRegistrationDetails": {
                      "properties": {
                        "registrationIdentifier": {
                          "value": {
                            "value": "PSJ554342",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "registrationCountry": {
                          "value": "DE",
                          "type": "enum"
                        },
                        "taxIdentifier": {
                          "value": {
                            "value": "taxIdentifier",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "legalEntityType": {
                          "value": {
                            "value": "legalEntityType",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "dateOfRegistration": {
                          "value": {
                            "value": "dateOfRegistration",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tags": {
                          "value": [
                            {
                              "properties": {
                                "key": {
                                  "value": {
                                    "value": "customKey",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "value": {
                                  "value": {
                                    "value": "customValue",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "reasonForAccountOpening": {
                      "value": [
                        {
                          "value": {
                            "value": "reasonForAccountOpening",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "contactDetails": {
                      "properties": {
                        "emailIds": {
                          "value": [
                            {
                              "value": {
                                "value": "emailIds",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "contactNumbers": {
                          "value": [
                            {
                              "value": {
                                "value": "contactNumbers",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "faxNumbers": {
                          "value": [
                            {
                              "value": {
                                "value": "faxNumbers",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "websites": {
                          "value": [
                            {
                              "value": {
                                "value": "websites",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "addresses": {
                          "value": [
                            {
                              "properties": {
                                "addressLines": {
                                  "value": [
                                    {
                                      "value": {
                                        "value": {
                                          "value": "Klara-Franke Str 20",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "type": "unknown"
                                    }
                                  ],
                                  "type": "array"
                                },
                                "postcode": {
                                  "value": {
                                    "value": "10557",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "city": {
                                  "value": {
                                    "value": "Berlin",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "state": {
                                  "value": {
                                    "value": "Berlin",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "country": {
                                  "value": {
                                    "value": "Germany",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "tags": {
                                  "value": [
                                    {
                                      "properties": {
                                        "key": {
                                          "value": {
                                            "value": "customKey",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        },
                                        "value": {
                                          "value": {
                                            "value": "customValue",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  ],
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "shareHolders": {
                  "value": [
                    {
                      "properties": {
                        "generalDetails": {
                          "properties": {
                            "name": {
                              "properties": {
                                "firstName": {
                                  "value": {
                                    "value": "Baran",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "middleName": {
                                  "value": {
                                    "value": "Realblood",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "lastName": {
                                  "value": {
                                    "value": "Ozkan",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            },
                            "dateOfBirth": {
                              "value": {
                                "value": "1991-01-01",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "countryOfResidence": {
                              "value": "US",
                              "type": "enum"
                            },
                            "countryOfNationality": {
                              "value": "DE",
                              "type": "enum"
                            }
                          },
                          "type": "object"
                        },
                        "legalDocuments": {
                          "value": [
                            {
                              "properties": {
                                "documentType": {
                                  "value": {
                                    "value": "passport",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "documentNumber": {
                                  "value": {
                                    "value": "Z9431P",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "documentIssuedDate": {
                                  "value": {
                                    "value": 1639939034000,
                                    "type": "double"
                                  },
                                  "type": "primitive"
                                },
                                "documentExpirationDate": {
                                  "value": {
                                    "value": 1839939034000,
                                    "type": "double"
                                  },
                                  "type": "primitive"
                                },
                                "documentIssuedCountry": {
                                  "value": "DE",
                                  "type": "enum"
                                },
                                "tags": {
                                  "value": [
                                    {
                                      "properties": {
                                        "key": {
                                          "value": {
                                            "value": "customerType",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        },
                                        "value": {
                                          "value": {
                                            "value": "wallet",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  ],
                                  "type": "array"
                                },
                                "nameOnDocument": {
                                  "properties": {
                                    "firstName": {
                                      "value": {
                                        "value": "Baran",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "middleName": {
                                      "value": {
                                        "value": "Realblood",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "lastName": {
                                      "value": {
                                        "value": "Ozkan",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "contactDetails": {
                          "properties": {
                            "emailIds": {
                              "value": [
                                {
                                  "value": {
                                    "value": "baran@flagright.com",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              ],
                              "type": "array"
                            },
                            "contactNumbers": {
                              "value": [
                                {
                                  "value": {
                                    "value": "+371 123132",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              ],
                              "type": "array"
                            },
                            "websites": {
                              "value": [
                                {
                                  "value": {
                                    "value": "flagright.com",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              ],
                              "type": "array"
                            },
                            "addresses": {
                              "value": [
                                {
                                  "properties": {
                                    "addressLines": {
                                      "value": [
                                        {
                                          "value": {
                                            "value": {
                                              "value": "Klara-Franke Str 20",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "type": "unknown"
                                        }
                                      ],
                                      "type": "array"
                                    },
                                    "postcode": {
                                      "value": {
                                        "value": "10557",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "city": {
                                      "value": {
                                        "value": "Berlin",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "state": {
                                      "value": {
                                        "value": "Berlin",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "country": {
                                      "value": {
                                        "value": "Germany",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "tags": {
                                      "value": [
                                        {
                                          "properties": {
                                            "key": {
                                              "value": {
                                                "value": "customKey",
                                                "type": "string"
                                              },
                                              "type": "primitive"
                                            },
                                            "value": {
                                              "value": {
                                                "value": "customValue",
                                                "type": "string"
                                              },
                                              "type": "primitive"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      ],
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                }
                              ],
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "pepStatus": {
                          "value": [
                            {
                              "properties": {
                                "isPepHit": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "tags": {
                          "value": [
                            {
                              "properties": {
                                "key": {
                                  "value": {
                                    "value": "customKey",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "value": {
                                  "value": {
                                    "value": "customValue",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "directors": {
                  "value": [
                    {
                      "properties": {
                        "generalDetails": {
                          "properties": {
                            "name": {
                              "properties": {
                                "firstName": {
                                  "value": {
                                    "value": "Baran",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "middleName": {
                                  "value": {
                                    "value": "Realblood",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "lastName": {
                                  "value": {
                                    "value": "Ozkan",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            },
                            "dateOfBirth": {
                              "value": {
                                "value": "1991-01-01",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "countryOfResidence": {
                              "value": "US",
                              "type": "enum"
                            },
                            "countryOfNationality": {
                              "value": "DE",
                              "type": "enum"
                            }
                          },
                          "type": "object"
                        },
                        "legalDocuments": {
                          "value": [
                            {
                              "properties": {
                                "documentType": {
                                  "value": {
                                    "value": "passport",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "documentNumber": {
                                  "value": {
                                    "value": "Z9431P",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "documentIssuedDate": {
                                  "value": {
                                    "value": 1639939034000,
                                    "type": "double"
                                  },
                                  "type": "primitive"
                                },
                                "documentExpirationDate": {
                                  "value": {
                                    "value": 1839939034000,
                                    "type": "double"
                                  },
                                  "type": "primitive"
                                },
                                "documentIssuedCountry": {
                                  "value": "DE",
                                  "type": "enum"
                                },
                                "tags": {
                                  "value": [
                                    {
                                      "properties": {
                                        "key": {
                                          "value": {
                                            "value": "customerType",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        },
                                        "value": {
                                          "value": {
                                            "value": "wallet",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  ],
                                  "type": "array"
                                },
                                "nameOnDocument": {
                                  "properties": {
                                    "firstName": {
                                      "value": {
                                        "value": "Baran",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "middleName": {
                                      "value": {
                                        "value": "Realblood",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "lastName": {
                                      "value": {
                                        "value": "Ozkan",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "contactDetails": {
                          "properties": {
                            "emailIds": {
                              "value": [
                                {
                                  "value": {
                                    "value": "baran@flagright.com",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              ],
                              "type": "array"
                            },
                            "contactNumbers": {
                              "value": [
                                {
                                  "value": {
                                    "value": "+371 123132",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              ],
                              "type": "array"
                            },
                            "websites": {
                              "value": [
                                {
                                  "value": {
                                    "value": "flagright.com",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              ],
                              "type": "array"
                            },
                            "addresses": {
                              "value": [
                                {
                                  "properties": {
                                    "addressLines": {
                                      "value": [
                                        {
                                          "value": {
                                            "value": {
                                              "value": "Klara-Franke Str 20",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "type": "unknown"
                                        }
                                      ],
                                      "type": "array"
                                    },
                                    "postcode": {
                                      "value": {
                                        "value": "10557",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "city": {
                                      "value": {
                                        "value": "Berlin",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "state": {
                                      "value": {
                                        "value": "Berlin",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "country": {
                                      "value": {
                                        "value": "Germany",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "tags": {
                                      "value": [
                                        {
                                          "properties": {
                                            "key": {
                                              "value": {
                                                "value": "customKey",
                                                "type": "string"
                                              },
                                              "type": "primitive"
                                            },
                                            "value": {
                                              "value": {
                                                "value": "customValue",
                                                "type": "string"
                                              },
                                              "type": "primitive"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      ],
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                }
                              ],
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "pepStatus": {
                          "value": [
                            {
                              "properties": {
                                "isPepHit": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "tags": {
                          "value": [
                            {
                              "properties": {
                                "key": {
                                  "value": {
                                    "value": "customKey",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "value": {
                                  "value": {
                                    "value": "customValue",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "transactionLimits": {
                  "properties": {
                    "maximumDailyTransactionLimit": {
                      "properties": {
                        "amountValue": {
                          "value": {
                            "value": 800,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "amountCurrency": {
                          "value": "GBP",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    "maximumWeeklyTransactionLimit": {
                      "properties": {
                        "amountValue": {
                          "value": {
                            "value": 800,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "amountCurrency": {
                          "value": "GBP",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    "maximumMonthlyTransactionLimit": {
                      "properties": {
                        "amountValue": {
                          "value": {
                            "value": 800,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "amountCurrency": {
                          "value": "GBP",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    "maximumQuarterlyTransactionLimit": {
                      "properties": {
                        "amountValue": {
                          "value": {
                            "value": 800,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "amountCurrency": {
                          "value": "GBP",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    "maximumTransactionLimit": {
                      "properties": {
                        "amountValue": {
                          "value": {
                            "value": 800,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "amountCurrency": {
                          "value": "GBP",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    "maximumYearlyTransactionLimit": {
                      "properties": {
                        "amountValue": {
                          "value": {
                            "value": 800,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "amountCurrency": {
                          "value": "GBP",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "riskLevel": {
                  "value": "VERY_HIGH",
                  "type": "enum"
                },
                "allowedPaymentMethods": {
                  "value": [
                    {
                      "value": "ACH",
                      "type": "enum"
                    }
                  ],
                  "type": "array"
                },
                "linkedEntities": {
                  "properties": {
                    "parentUserId": {
                      "value": {
                        "value": "parentUserId",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "childUserIds": {
                      "value": [
                        {
                          "value": {
                            "value": "childUserIds",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "acquisitionChannel": {
                  "value": "ORGANIC",
                  "type": "enum"
                },
                "savedPaymentDetails": {
                  "value": [
                    {
                      "value": {
                        "value": {
                          "method": {
                            "value": {
                              "value": "CHECK",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "checkNumber": {
                            "value": {
                              "value": "savedPaymentDetails",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "checkIdentifier": {
                            "value": {
                              "value": "savedPaymentDetails",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "name": {
                            "value": {
                              "value": "savedPaymentDetails",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "deliveryStatus": {
                            "value": "COMPLETED",
                            "type": "enum"
                          },
                          "etaTimestamp": {
                            "value": {
                              "value": 1.1,
                              "type": "double"
                            },
                            "type": "primitive"
                          },
                          "shippingAddress": {
                            "properties": {
                              "addressLines": {
                                "value": [
                                  {
                                    "value": {
                                      "value": {
                                        "value": "Klara-Franke Str 20",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "type": "unknown"
                                  }
                                ],
                                "type": "array"
                              },
                              "postcode": {
                                "value": {
                                  "value": "10557",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "city": {
                                "value": {
                                  "value": "Berlin",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "state": {
                                "value": {
                                  "value": "Berlin",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "country": {
                                "value": {
                                  "value": "Germany",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "tags": {
                                "value": [
                                  {
                                    "properties": {
                                      "key": {
                                        "value": {
                                          "value": "customKey",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "customValue",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "object"
                                  }
                                ],
                                "type": "array"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    }
                  ],
                  "type": "array"
                },
                "mccDetails": {
                  "properties": {
                    "code": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "description": {
                      "value": {
                        "value": "description",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "tags": {
                  "value": [
                    {
                      "properties": {
                        "key": {
                          "value": {
                            "value": "customKey",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "value": {
                          "value": {
                            "value": "customValue",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "userId": {
                  "value": {
                    "value": "userId",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdTimestamp": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "executedRules": {
                  "value": [
                    {
                      "properties": {
                        "ruleId": {
                          "value": {
                            "value": "R-1a",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleInstanceId": {
                          "value": {
                            "value": "ruleInstanceId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleName": {
                          "value": {
                            "value": "Proof of funds for high value transactions",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleDescription": {
                          "value": {
                            "value": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleAction": {
                          "value": "BLOCK",
                          "type": "enum"
                        },
                        "ruleHit": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "labels": {
                          "value": [
                            {
                              "value": "UNEXPECTED_BEHAVIOR",
                              "type": "enum"
                            }
                          ],
                          "type": "array"
                        },
                        "nature": {
                          "value": "AML",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "hitRules": {
                  "value": [
                    {
                      "properties": {
                        "ruleId": {
                          "value": {
                            "value": "R-1a",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleInstanceId": {
                          "value": {
                            "value": "ruleInstanceId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleName": {
                          "value": {
                            "value": "Proof of funds for high value transactions",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleDescription": {
                          "value": {
                            "value": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ruleAction": {
                          "value": "BLOCK",
                          "type": "enum"
                        },
                        "labels": {
                          "value": [
                            {
                              "value": "UNEXPECTED_BEHAVIOR",
                              "type": "enum"
                            }
                          ],
                          "type": "array"
                        },
                        "nature": {
                          "value": "FRAUD",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    }
  ],
  "webhooks": [],
  "channel": [],
  "groupedSchemas": {
    "rootSchemas": {
      "Address": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "addressAddressLines",
            "key": "addressLines",
            "schema": {
              "description": "Address lines of the user's residence address",
              "value": {
                "generatedName": "AddressAddressLinesItem",
                "type": "unknown"
              },
              "generatedName": "AddressAddressLines",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "addressPostcode",
            "key": "postcode",
            "schema": {
              "description": "Post code of the user's residence address",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "AddressPostcode",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "addressCity",
            "key": "city",
            "schema": {
              "description": "City of the user's residence address",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "AddressCity",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "addressState",
            "key": "state",
            "schema": {
              "generatedName": "addressState",
              "nameOverride": "Address",
              "title": "Address",
              "value": {
                "description": "State of the user's residence address",
                "schema": {
                  "minLength": 1,
                  "type": "string"
                },
                "generatedName": "AddressState",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "addressCountry",
            "key": "country",
            "schema": {
              "description": "User's country of residence",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "AddressCountry",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "addressTags",
            "key": "tags",
            "schema": {
              "generatedName": "addressTags",
              "nameOverride": "Address",
              "title": "Address",
              "value": {
                "description": "Additional information that can be added via tags",
                "value": {
                  "generatedName": "AddressTagsItem",
                  "schema": "Tag",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AddressTags",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for standardized address",
        "generatedName": "Address",
        "nameOverride": "Address",
        "title": "Address",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "UserBase": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "userBaseUserId",
            "key": "userId",
            "schema": {
              "description": "Unique user ID",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "UserBaseUserId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userBaseUserDetails",
            "key": "userDetails",
            "schema": {
              "generatedName": "userBaseUserDetails",
              "nameOverride": "UserBase",
              "title": "UserBase",
              "value": {
                "generatedName": "UserBaseUserDetails",
                "schema": "UserDetails",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "userBaseCreatedTimestamp",
            "key": "createdTimestamp",
            "schema": {
              "description": "Timestamp when userId is created",
              "schema": {
                "minimum": 1262300400000,
                "maximum": 4133890801000,
                "type": "double"
              },
              "generatedName": "UserBaseCreatedTimestamp",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for User details",
        "generatedName": "UserBase",
        "nameOverride": "UserBase",
        "title": "UserBase",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "UserOptional": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "userOptionalUserStateDetails",
            "key": "userStateDetails",
            "schema": {
              "generatedName": "userOptionalUserStateDetails",
              "nameOverride": "UserOptional",
              "title": "UserOptional",
              "value": {
                "generatedName": "UserOptionalUserStateDetails",
                "schema": "UserStateDetails",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "userOptionalKycStatusDetails",
            "key": "kycStatusDetails",
            "schema": {
              "generatedName": "userOptionalKycStatusDetails",
              "nameOverride": "UserOptional",
              "title": "UserOptional",
              "value": {
                "generatedName": "UserOptionalKycStatusDetails",
                "schema": "KYCStatusDetails",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "userOptionalLegalDocuments",
            "key": "legalDocuments",
            "schema": {
              "generatedName": "userOptionalLegalDocuments",
              "nameOverride": "UserOptional",
              "title": "UserOptional",
              "value": {
                "description": "User's legal identity documents - See Document Model for details",
                "value": {
                  "generatedName": "UserOptionalLegalDocumentsItem",
                  "schema": "LegalDocument",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "UserOptionalLegalDocuments",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userOptionalContactDetails",
            "key": "contactDetails",
            "schema": {
              "generatedName": "userOptionalContactDetails",
              "nameOverride": "UserOptional",
              "title": "UserOptional",
              "value": {
                "generatedName": "UserOptionalContactDetails",
                "schema": "ContactDetails",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "userOptionalTransactionLimits",
            "key": "transactionLimits",
            "schema": {
              "generatedName": "userOptionalTransactionLimits",
              "nameOverride": "UserOptional",
              "title": "UserOptional",
              "value": {
                "generatedName": "UserOptionalTransactionLimits",
                "schema": "TransactionLimits",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "userOptionalRiskLevel",
            "key": "riskLevel",
            "schema": {
              "generatedName": "userOptionalRiskLevel",
              "nameOverride": "UserOptional",
              "title": "UserOptional",
              "value": {
                "generatedName": "UserOptionalRiskLevel",
                "schema": "RiskLevel",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "userOptionalAcquisitionChannel",
            "key": "acquisitionChannel",
            "schema": {
              "generatedName": "userOptionalAcquisitionChannel",
              "nameOverride": "UserOptional",
              "title": "UserOptional",
              "value": {
                "generatedName": "UserOptionalAcquisitionChannel",
                "schema": "AcquisitionChannel",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "userOptionalReasonForAccountOpening",
            "key": "reasonForAccountOpening",
            "schema": {
              "generatedName": "userOptionalReasonForAccountOpening",
              "nameOverride": "UserOptional",
              "title": "UserOptional",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "UserOptionalReasonForAccountOpeningItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "UserOptionalReasonForAccountOpening",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userOptionalUserSegment",
            "key": "userSegment",
            "schema": {
              "generatedName": "userOptionalUserSegment",
              "nameOverride": "UserOptional",
              "title": "UserOptional",
              "value": {
                "generatedName": "UserOptionalUserSegment",
                "values": [
                  {
                    "generatedName": "RETAIL",
                    "value": "RETAIL",
                    "casing": {}
                  },
                  {
                    "generatedName": "PROFESSIONAL",
                    "value": "PROFESSIONAL",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userOptionalPepStatus",
            "key": "pepStatus",
            "schema": {
              "generatedName": "userOptionalPepStatus",
              "nameOverride": "UserOptional",
              "title": "UserOptional",
              "value": {
                "value": {
                  "generatedName": "UserOptionalPepStatusItem",
                  "schema": "PEPStatus",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "UserOptionalPepStatus",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userOptionalTags",
            "key": "tags",
            "schema": {
              "generatedName": "userOptionalTags",
              "nameOverride": "UserOptional",
              "title": "UserOptional",
              "value": {
                "description": "Additional information that can be added via tags",
                "value": {
                  "generatedName": "UserOptionalTagsItem",
                  "schema": "Tag",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "UserOptionalTags",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for User details",
        "generatedName": "UserOptional",
        "nameOverride": "UserOptional",
        "title": "UserOptional",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "User": {
        "allOf": [
          {
            "generatedName": "UserBase",
            "schema": "UserBase",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          {
            "generatedName": "UserOptional",
            "schema": "UserOptional",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [],
        "allOfPropertyConflicts": [],
        "description": "Model for User details",
        "generatedName": "User",
        "nameOverride": "User",
        "title": "User",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Person": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "personGeneralDetails",
            "key": "generalDetails",
            "schema": {
              "generatedName": "PersonGeneralDetails",
              "schema": "UserDetails",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "personLegalDocuments",
            "key": "legalDocuments",
            "schema": {
              "generatedName": "personLegalDocuments",
              "nameOverride": "Person",
              "title": "Person",
              "value": {
                "description": "User's legal identity documents - See Document Model for details",
                "value": {
                  "generatedName": "PersonLegalDocumentsItem",
                  "schema": "LegalDocument",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "PersonLegalDocuments",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "personContactDetails",
            "key": "contactDetails",
            "schema": {
              "generatedName": "personContactDetails",
              "nameOverride": "Person",
              "title": "Person",
              "value": {
                "generatedName": "PersonContactDetails",
                "schema": "ContactDetails",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "personPepStatus",
            "key": "pepStatus",
            "schema": {
              "generatedName": "personPepStatus",
              "nameOverride": "Person",
              "title": "Person",
              "value": {
                "value": {
                  "generatedName": "PersonPepStatusItem",
                  "schema": "PEPStatus",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "PersonPepStatus",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "personTags",
            "key": "tags",
            "schema": {
              "generatedName": "personTags",
              "nameOverride": "Person",
              "title": "Person",
              "value": {
                "description": "Additional information that can be added via tags",
                "value": {
                  "generatedName": "PersonTagsItem",
                  "schema": "Tag",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "PersonTags",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for a generic individual - different from User model by not having userId field",
        "generatedName": "Person",
        "nameOverride": "Person",
        "title": "Person",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "LegalDocument": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "legalDocumentDocumentType",
            "key": "documentType",
            "schema": {
              "description": "User's identity document type such as passport, national ID etc.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "LegalDocumentDocumentType",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "legalDocumentDocumentNumber",
            "key": "documentNumber",
            "schema": {
              "description": "User's unique identity document number such as passport number",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "LegalDocumentDocumentNumber",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "legalDocumentDocumentIssuedDate",
            "key": "documentIssuedDate",
            "schema": {
              "generatedName": "legalDocumentDocumentIssuedDate",
              "nameOverride": "LegalDocument",
              "title": "LegalDocument",
              "value": {
                "description": "User's identity document issuance date (UNIX timestamp in milliseconds)",
                "schema": {
                  "type": "double"
                },
                "generatedName": "LegalDocumentDocumentIssuedDate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "legalDocumentDocumentExpirationDate",
            "key": "documentExpirationDate",
            "schema": {
              "generatedName": "legalDocumentDocumentExpirationDate",
              "nameOverride": "LegalDocument",
              "title": "LegalDocument",
              "value": {
                "description": "User's identity document expiration date (UNIX timestamp in milliseconds)",
                "schema": {
                  "type": "double"
                },
                "generatedName": "LegalDocumentDocumentExpirationDate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "legalDocumentDocumentIssuedCountry",
            "key": "documentIssuedCountry",
            "schema": {
              "generatedName": "LegalDocumentDocumentIssuedCountry",
              "schema": "CountryCode",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "legalDocumentTags",
            "key": "tags",
            "schema": {
              "generatedName": "legalDocumentTags",
              "nameOverride": "LegalDocument",
              "title": "LegalDocument",
              "value": {
                "description": "Additional information that can be added via tags",
                "value": {
                  "generatedName": "LegalDocumentTagsItem",
                  "schema": "Tag",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "LegalDocumentTags",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "legalDocumentNameOnDocument",
            "key": "nameOnDocument",
            "schema": {
              "generatedName": "legalDocumentNameOnDocument",
              "nameOverride": "LegalDocument",
              "title": "LegalDocument",
              "value": {
                "generatedName": "LegalDocumentNameOnDocument",
                "schema": "ConsumerName",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "LegalDocument model generalizes User's identity document type (ex: Passport)",
        "generatedName": "LegalDocument",
        "nameOverride": "LegalDocument",
        "title": "LegalDocument",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Tag": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "tagKey",
            "key": "key",
            "schema": {
              "description": "Key value when you are creating a custom variable",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "TagKey",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tagValue",
            "key": "value",
            "schema": {
              "description": "Value for a given key when you are creating a custom variable",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "TagValue",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Generic key-value pair model to append a custom variable being sent to Flagright API",
        "generatedName": "Tag",
        "nameOverride": "Tag",
        "title": "Tag",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Transaction": {
        "allOf": [
          {
            "generatedName": "TransactionBase",
            "schema": "TransactionBase",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          {
            "generatedName": "TransactionUpdatable",
            "schema": "TransactionUpdatable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [],
        "allOfPropertyConflicts": [],
        "generatedName": "Transaction",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TransactionUpdatable": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "transactionUpdatableTransactionState",
            "key": "transactionState",
            "schema": {
              "generatedName": "transactionUpdatableTransactionState",
              "nameOverride": "TransactionUpdatable",
              "title": "TransactionUpdatable",
              "value": {
                "generatedName": "TransactionUpdatableTransactionState",
                "schema": "TransactionState",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "transactionUpdatableOriginAmountDetails",
            "key": "originAmountDetails",
            "schema": {
              "generatedName": "transactionUpdatableOriginAmountDetails",
              "nameOverride": "TransactionUpdatable",
              "title": "TransactionUpdatable",
              "value": {
                "generatedName": "TransactionUpdatableOriginAmountDetails",
                "schema": "TransactionAmountDetails",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "transactionUpdatableDestinationAmountDetails",
            "key": "destinationAmountDetails",
            "schema": {
              "generatedName": "transactionUpdatableDestinationAmountDetails",
              "nameOverride": "TransactionUpdatable",
              "title": "TransactionUpdatable",
              "value": {
                "generatedName": "TransactionUpdatableDestinationAmountDetails",
                "schema": "TransactionAmountDetails",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "transactionUpdatableOriginPaymentDetails",
            "key": "originPaymentDetails",
            "schema": {
              "generatedName": "transactionUpdatableOriginPaymentDetails",
              "nameOverride": "TransactionUpdatable",
              "title": "TransactionUpdatable",
              "value": {
                "value": {
                  "commonProperties": [],
                  "description": "Payment details of the origin. It can be a bank account number, wallet ID, card fingerprint etc.",
                  "discriminantProperty": "method",
                  "generatedName": "TransactionUpdatableOriginPaymentDetails",
                  "schemas": {
                    "CARD": {
                      "generatedName": "ComponentsSchemasCardDetails",
                      "schema": "CardDetails",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "GENERIC_BANK_ACCOUNT": {
                      "generatedName": "ComponentsSchemasGenericBankAccountDetails",
                      "schema": "GenericBankAccountDetails",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "IBAN": {
                      "generatedName": "ComponentsSchemasIbanDetails",
                      "schema": "IBANDetails",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "ACH": {
                      "generatedName": "ComponentsSchemasAchDetails",
                      "schema": "ACHDetails",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "SWIFT": {
                      "generatedName": "ComponentsSchemasSwiftDetails",
                      "schema": "SWIFTDetails",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "MPESA": {
                      "generatedName": "ComponentsSchemasMpesaDetails",
                      "schema": "MpesaDetails",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "UPI": {
                      "generatedName": "ComponentsSchemasUpiDetails",
                      "schema": "UPIDetails",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "WALLET": {
                      "generatedName": "ComponentsSchemasWalletDetails",
                      "schema": "WalletDetails",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "CHECK": {
                      "generatedName": "ComponentsSchemasCheckDetails",
                      "schema": "CheckDetails",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    }
                  },
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "discriminated"
                },
                "type": "oneOf"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionUpdatableDestinationPaymentDetails",
            "key": "destinationPaymentDetails",
            "schema": {
              "generatedName": "transactionUpdatableDestinationPaymentDetails",
              "nameOverride": "TransactionUpdatable",
              "title": "TransactionUpdatable",
              "value": {
                "value": {
                  "commonProperties": [],
                  "description": "Payment details of the destination. It can be a bank account number, wallet ID, card fingerprint etc.",
                  "discriminantProperty": "method",
                  "generatedName": "TransactionUpdatableDestinationPaymentDetails",
                  "schemas": {
                    "CARD": {
                      "generatedName": "ComponentsSchemasCardDetails",
                      "schema": "CardDetails",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "GENERIC_BANK_ACCOUNT": {
                      "generatedName": "ComponentsSchemasGenericBankAccountDetails",
                      "schema": "GenericBankAccountDetails",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "IBAN": {
                      "generatedName": "ComponentsSchemasIbanDetails",
                      "schema": "IBANDetails",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "ACH": {
                      "generatedName": "ComponentsSchemasAchDetails",
                      "schema": "ACHDetails",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "UPI": {
                      "generatedName": "ComponentsSchemasUpiDetails",
                      "schema": "UPIDetails",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "WALLET": {
                      "generatedName": "ComponentsSchemasWalletDetails",
                      "schema": "WalletDetails",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "SWIFT": {
                      "generatedName": "ComponentsSchemasSwiftDetails",
                      "schema": "SWIFTDetails",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "MPESA": {
                      "generatedName": "ComponentsSchemasMpesaDetails",
                      "schema": "MpesaDetails",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "CHECK": {
                      "generatedName": "ComponentsSchemasCheckDetails",
                      "schema": "CheckDetails",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    }
                  },
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "discriminated"
                },
                "type": "oneOf"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionUpdatableRelatedTransactionIds",
            "key": "relatedTransactionIds",
            "schema": {
              "generatedName": "transactionUpdatableRelatedTransactionIds",
              "nameOverride": "TransactionUpdatable",
              "title": "TransactionUpdatable",
              "value": {
                "description": "IDs of transactions related to this transaction. Ex: refund, split bills",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "TransactionUpdatableRelatedTransactionIdsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "TransactionUpdatableRelatedTransactionIds",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionUpdatableProductType",
            "key": "productType",
            "schema": {
              "generatedName": "transactionUpdatableProductType",
              "nameOverride": "TransactionUpdatable",
              "title": "TransactionUpdatable",
              "value": {
                "description": "Type of produce being used by the consumer (ex wallets, payments etc)",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TransactionUpdatableProductType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionUpdatablePromotionCodeUsed",
            "key": "promotionCodeUsed",
            "schema": {
              "generatedName": "transactionUpdatablePromotionCodeUsed",
              "nameOverride": "TransactionUpdatable",
              "title": "TransactionUpdatable",
              "value": {
                "description": "Whether a promotion code was used or not the transaction",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "TransactionUpdatablePromotionCodeUsed",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionUpdatableReference",
            "key": "reference",
            "schema": {
              "generatedName": "transactionUpdatableReference",
              "nameOverride": "TransactionUpdatable",
              "title": "TransactionUpdatable",
              "value": {
                "description": "Reference field for the transaction indicating the purpose of the transaction etc.",
                "schema": {
                  "minLength": 1,
                  "type": "string"
                },
                "generatedName": "TransactionUpdatableReference",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionUpdatableDeviceData",
            "key": "deviceData",
            "schema": {
              "generatedName": "transactionUpdatableDeviceData",
              "nameOverride": "TransactionUpdatable",
              "title": "TransactionUpdatable",
              "value": {
                "generatedName": "TransactionUpdatableDeviceData",
                "schema": "DeviceData",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "transactionUpdatableTags",
            "key": "tags",
            "schema": {
              "generatedName": "transactionUpdatableTags",
              "nameOverride": "TransactionUpdatable",
              "title": "TransactionUpdatable",
              "value": {
                "description": "Additional information that can be added via tags",
                "value": {
                  "generatedName": "TransactionUpdatableTagsItem",
                  "schema": "Tag",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "TransactionUpdatableTags",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for transaction additional payload",
        "generatedName": "TransactionUpdatable",
        "nameOverride": "TransactionUpdatable",
        "title": "TransactionUpdatable",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TransactionBase": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "transactionBaseType",
            "key": "type",
            "schema": {
              "generatedName": "transactionBaseType",
              "nameOverride": "TransactionBase",
              "title": "TransactionBase",
              "value": {
                "generatedName": "TransactionBaseType",
                "schema": "TransactionType",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "transactionBaseTransactionId",
            "key": "transactionId",
            "schema": {
              "description": "Unique transaction identifier",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "TransactionBaseTransactionId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionBaseTimestamp",
            "key": "timestamp",
            "schema": {
              "description": "Timestamp of when transaction took place",
              "schema": {
                "minimum": 1262300400000,
                "maximum": 4133890801000,
                "type": "double"
              },
              "generatedName": "TransactionBaseTimestamp",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionBaseOriginUserId",
            "key": "originUserId",
            "schema": {
              "generatedName": "transactionBaseOriginUserId",
              "nameOverride": "TransactionBase",
              "title": "TransactionBase",
              "value": {
                "description": "UserId for where the transaction originates from",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TransactionBaseOriginUserId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionBaseDestinationUserId",
            "key": "destinationUserId",
            "schema": {
              "generatedName": "transactionBaseDestinationUserId",
              "nameOverride": "TransactionBase",
              "title": "TransactionBase",
              "value": {
                "description": "UserId for transaction's destination. In other words, where the value is being transferred to.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TransactionBaseDestinationUserId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for transaction base Payload",
        "generatedName": "TransactionBase",
        "nameOverride": "TransactionBase",
        "title": "TransactionBase",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TransactionWithRulesResult": {
        "allOf": [
          {
            "generatedName": "Transaction",
            "schema": "Transaction",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "transactionWithRulesResultExecutedRules",
            "key": "executedRules",
            "schema": {
              "value": {
                "generatedName": "TransactionWithRulesResultExecutedRulesItem",
                "schema": "ExecutedRulesResult",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "TransactionWithRulesResultExecutedRules",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionWithRulesResultHitRules",
            "key": "hitRules",
            "schema": {
              "value": {
                "generatedName": "TransactionWithRulesResultHitRulesItem",
                "schema": "HitRulesDetails",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "TransactionWithRulesResultHitRules",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for transaction payload with rules result",
        "generatedName": "TransactionWithRulesResult",
        "nameOverride": "TransactionWithRulesResult",
        "title": "TransactionWithRulesResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "DeviceData": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "deviceDataBatteryLevel",
            "key": "batteryLevel",
            "schema": {
              "generatedName": "deviceDataBatteryLevel",
              "nameOverride": "DeviceData",
              "title": "DeviceData",
              "value": {
                "description": "Battery level of the device used for a transaction or event at a given timestamp",
                "schema": {
                  "type": "double"
                },
                "generatedName": "DeviceDataBatteryLevel",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "deviceDataDeviceLatitude",
            "key": "deviceLatitude",
            "schema": {
              "generatedName": "deviceDataDeviceLatitude",
              "nameOverride": "DeviceData",
              "title": "DeviceData",
              "value": {
                "description": "Device latitude at a give timestamp for an event or transaction",
                "schema": {
                  "type": "double"
                },
                "generatedName": "DeviceDataDeviceLatitude",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "deviceDataDeviceLongitude",
            "key": "deviceLongitude",
            "schema": {
              "generatedName": "deviceDataDeviceLongitude",
              "nameOverride": "DeviceData",
              "title": "DeviceData",
              "value": {
                "description": "Device longitude at a give timestamp for an event or transaction",
                "schema": {
                  "type": "double"
                },
                "generatedName": "DeviceDataDeviceLongitude",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "deviceDataIpAddress",
            "key": "ipAddress",
            "schema": {
              "generatedName": "deviceDataIpAddress",
              "nameOverride": "DeviceData",
              "title": "DeviceData",
              "value": {
                "description": "IP address of the device at a given timestamp for an event or transaction",
                "schema": {
                  "minLength": 1,
                  "type": "string"
                },
                "generatedName": "DeviceDataIpAddress",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "deviceDataDeviceIdentifier",
            "key": "deviceIdentifier",
            "schema": {
              "generatedName": "deviceDataDeviceIdentifier",
              "nameOverride": "DeviceData",
              "title": "DeviceData",
              "value": {
                "description": "Device identifier number",
                "schema": {
                  "minLength": 1,
                  "type": "string"
                },
                "generatedName": "DeviceDataDeviceIdentifier",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "deviceDataVpnUsed",
            "key": "vpnUsed",
            "schema": {
              "generatedName": "deviceDataVpnUsed",
              "nameOverride": "DeviceData",
              "title": "DeviceData",
              "value": {
                "description": "Whether VPN was used at a given timestamp for an event or transaction",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "DeviceDataVpnUsed",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "deviceDataOperatingSystem",
            "key": "operatingSystem",
            "schema": {
              "generatedName": "deviceDataOperatingSystem",
              "nameOverride": "DeviceData",
              "title": "DeviceData",
              "value": {
                "description": "Operating system of the device at a given timestamp for an event or transaction",
                "schema": {
                  "minLength": 1,
                  "type": "string"
                },
                "generatedName": "DeviceDataOperatingSystem",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "deviceDataDeviceMaker",
            "key": "deviceMaker",
            "schema": {
              "generatedName": "deviceDataDeviceMaker",
              "nameOverride": "DeviceData",
              "title": "DeviceData",
              "value": {
                "description": "The maker of the device at a given timestamp for an event or transaction",
                "schema": {
                  "minLength": 1,
                  "type": "string"
                },
                "generatedName": "DeviceDataDeviceMaker",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "deviceDataDeviceModel",
            "key": "deviceModel",
            "schema": {
              "generatedName": "deviceDataDeviceModel",
              "nameOverride": "DeviceData",
              "title": "DeviceData",
              "value": {
                "description": "The model of the device at a given timestamp for an event or transaction",
                "schema": {
                  "minLength": 1,
                  "type": "string"
                },
                "generatedName": "DeviceDataDeviceModel",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "deviceDataDeviceYear",
            "key": "deviceYear",
            "schema": {
              "generatedName": "deviceDataDeviceYear",
              "nameOverride": "DeviceData",
              "title": "DeviceData",
              "value": {
                "description": "The year the device was manufactured at a given timestamp for an event or transaction",
                "schema": {
                  "minLength": 1,
                  "type": "string"
                },
                "generatedName": "DeviceDataDeviceYear",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "deviceDataAppVersion",
            "key": "appVersion",
            "schema": {
              "generatedName": "deviceDataAppVersion",
              "nameOverride": "DeviceData",
              "title": "DeviceData",
              "value": {
                "description": "The version of the app your user is using on their device at a given timestamp for an event or transaction",
                "schema": {
                  "minLength": 1,
                  "type": "string"
                },
                "generatedName": "DeviceDataAppVersion",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for device data",
        "generatedName": "DeviceData",
        "nameOverride": "DeviceData",
        "title": "DeviceData",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TransactionMonitoringResult": {
        "allOf": [
          {
            "generatedName": "RulesResults",
            "schema": "RulesResults",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "transactionMonitoringResultTransactionId",
            "key": "transactionId",
            "schema": {
              "description": "Transaction ID that the results pertain to",
              "schema": {
                "type": "string"
              },
              "generatedName": "TransactionMonitoringResultTransactionId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TransactionMonitoringResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TransactionEventMonitoringResult": {
        "allOf": [
          {
            "generatedName": "RulesResults",
            "schema": "RulesResults",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "transactionEventMonitoringResultEventId",
            "key": "eventId",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "TransactionEventMonitoringResultEventId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionEventMonitoringResultTransaction",
            "key": "transaction",
            "schema": {
              "generatedName": "TransactionEventMonitoringResultTransaction",
              "schema": "Transaction",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TransactionEventMonitoringResult",
        "title": "",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "UserMonitoringResult": {
        "allOf": [
          {
            "generatedName": "RulesResults",
            "schema": "RulesResults",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "userMonitoringResultUserId",
            "key": "userId",
            "schema": {
              "description": "User ID that the results pertain to",
              "schema": {
                "type": "string"
              },
              "generatedName": "UserMonitoringResultUserId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UserMonitoringResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "RulesResults": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "rulesResultsExecutedRules",
            "key": "executedRules",
            "schema": {
              "description": "Unique transaction identifier",
              "value": {
                "generatedName": "RulesResultsExecutedRulesItem",
                "schema": "ExecutedRulesResult",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "RulesResultsExecutedRules",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "rulesResultsHitRules",
            "key": "hitRules",
            "schema": {
              "description": "Unique transaction identifier",
              "value": {
                "generatedName": "RulesResultsHitRulesItem",
                "schema": "HitRulesDetails",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "RulesResultsHitRules",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RulesResults",
        "nameOverride": "RulesResults",
        "title": "RulesResults",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ExecutedRulesResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "executedRulesResultRuleId",
            "key": "ruleId",
            "schema": {
              "description": "Unique rule identifier",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "ExecutedRulesResultRuleId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "executedRulesResultRuleInstanceId",
            "key": "ruleInstanceId",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ExecutedRulesResultRuleInstanceId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "executedRulesResultRuleName",
            "key": "ruleName",
            "schema": {
              "description": "Name of the rule",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "ExecutedRulesResultRuleName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "executedRulesResultRuleDescription",
            "key": "ruleDescription",
            "schema": {
              "description": "Description of the rule",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "ExecutedRulesResultRuleDescription",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "executedRulesResultRuleAction",
            "key": "ruleAction",
            "schema": {
              "generatedName": "ExecutedRulesResultRuleAction",
              "schema": "RuleAction",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "executedRulesResultRuleHit",
            "key": "ruleHit",
            "schema": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "ExecutedRulesResultRuleHit",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "executedRulesResultRuleHitMeta",
            "key": "ruleHitMeta",
            "schema": {
              "generatedName": "executedRulesResultRuleHitMeta",
              "nameOverride": "ExecutedRulesResult",
              "title": "ExecutedRulesResult",
              "value": {
                "generatedName": "ExecutedRulesResultRuleHitMeta",
                "schema": "RuleHitMeta",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "executedRulesResultLabels",
            "key": "labels",
            "schema": {
              "generatedName": "executedRulesResultLabels",
              "nameOverride": "ExecutedRulesResult",
              "title": "ExecutedRulesResult",
              "value": {
                "value": {
                  "generatedName": "ExecutedRulesResultLabelsItem",
                  "schema": "RuleLabels",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ExecutedRulesResultLabels",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "executedRulesResultNature",
            "key": "nature",
            "schema": {
              "generatedName": "executedRulesResultNature",
              "nameOverride": "ExecutedRulesResult",
              "title": "ExecutedRulesResult",
              "value": {
                "generatedName": "ExecutedRulesResultNature",
                "schema": "RuleNature",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for list of executed rules",
        "generatedName": "ExecutedRulesResult",
        "nameOverride": "ExecutedRulesResult",
        "title": "ExecutedRulesResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "HitRulesDetails": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "hitRulesDetailsRuleId",
            "key": "ruleId",
            "schema": {
              "description": "Unique rule identifier",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "HitRulesDetailsRuleId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "hitRulesDetailsRuleInstanceId",
            "key": "ruleInstanceId",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "HitRulesDetailsRuleInstanceId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "hitRulesDetailsRuleName",
            "key": "ruleName",
            "schema": {
              "description": "Name of the rule",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "HitRulesDetailsRuleName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "hitRulesDetailsRuleDescription",
            "key": "ruleDescription",
            "schema": {
              "description": "Description of the rule",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "HitRulesDetailsRuleDescription",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "hitRulesDetailsRuleAction",
            "key": "ruleAction",
            "schema": {
              "generatedName": "HitRulesDetailsRuleAction",
              "schema": "RuleAction",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "hitRulesDetailsRuleHitMeta",
            "key": "ruleHitMeta",
            "schema": {
              "generatedName": "hitRulesDetailsRuleHitMeta",
              "nameOverride": "HitRulesDetails",
              "title": "HitRulesDetails",
              "value": {
                "generatedName": "HitRulesDetailsRuleHitMeta",
                "schema": "RuleHitMeta",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "hitRulesDetailsLabels",
            "key": "labels",
            "schema": {
              "generatedName": "hitRulesDetailsLabels",
              "nameOverride": "HitRulesDetails",
              "title": "HitRulesDetails",
              "value": {
                "value": {
                  "generatedName": "HitRulesDetailsLabelsItem",
                  "schema": "RuleLabels",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "HitRulesDetailsLabels",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "hitRulesDetailsNature",
            "key": "nature",
            "schema": {
              "generatedName": "hitRulesDetailsNature",
              "nameOverride": "HitRulesDetails",
              "title": "HitRulesDetails",
              "value": {
                "generatedName": "HitRulesDetailsNature",
                "schema": "RuleNature",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for list of hit rules",
        "generatedName": "HitRulesDetails",
        "nameOverride": "HitRulesDetails",
        "title": "HitRulesDetails",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "FailedRulesResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "failedRulesResultRuleId",
            "key": "ruleId",
            "schema": {
              "description": "Unique rule identifier",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "FailedRulesResultRuleId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "failedRulesResultRuleName",
            "key": "ruleName",
            "schema": {
              "description": "Name of the rule",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "FailedRulesResultRuleName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "failedRulesResultRuleDescription",
            "key": "ruleDescription",
            "schema": {
              "description": "Description of the rule",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "FailedRulesResultRuleDescription",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "failedRulesResultFailureException",
            "key": "failureException",
            "schema": {
              "generatedName": "FailedRulesResultFailureException",
              "schema": "RuleFailureException",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for list of rules failed execution. It means rules could not be run",
        "generatedName": "FailedRulesResult",
        "nameOverride": "FailedRulesResult",
        "title": "FailedRulesResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "RuleFailureException": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "ruleFailureExceptionExceptionName",
            "key": "exceptionName",
            "schema": {
              "description": "Unique rule identifier",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "RuleFailureExceptionExceptionName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ruleFailureExceptionExceptionDescription",
            "key": "exceptionDescription",
            "schema": {
              "description": "Name of the rule",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "RuleFailureExceptionExceptionDescription",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RuleFailureException",
        "nameOverride": "RuleFailureException",
        "title": "RuleFailureException",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "RiskScoringResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "riskScoringResultKycRiskScore",
            "key": "kycRiskScore",
            "schema": {
              "description": "Quantified KYC risk score",
              "schema": {
                "type": "double"
              },
              "generatedName": "RiskScoringResultKycRiskScore",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "riskScoringResultTransactionRiskScore",
            "key": "transactionRiskScore",
            "schema": {
              "description": "Quantified action risk score",
              "schema": {
                "type": "double"
              },
              "generatedName": "RiskScoringResultTransactionRiskScore",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "riskScoringResultCustomerRiskAssessment",
            "key": "customerRiskAssessment",
            "schema": {
              "generatedName": "riskScoringResultCustomerRiskAssessment",
              "nameOverride": "RiskScoringResult",
              "title": "RiskScoringResult",
              "value": {
                "description": "Quantified dynamic risk score",
                "schema": {
                  "type": "double"
                },
                "generatedName": "RiskScoringResultCustomerRiskAssessment",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for results from Risk Scoring",
        "generatedName": "RiskScoringResult",
        "nameOverride": "RiskScoringResult",
        "title": "RiskScoringResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ConsumerName": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "consumerNameFirstName",
            "key": "firstName",
            "schema": {
              "description": "First name of the user",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "ConsumerNameFirstName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "consumerNameMiddleName",
            "key": "middleName",
            "schema": {
              "generatedName": "consumerNameMiddleName",
              "nameOverride": "ConsumerName",
              "title": "ConsumerName",
              "value": {
                "description": "Middle name of the user",
                "schema": {
                  "minLength": 1,
                  "type": "string"
                },
                "generatedName": "ConsumerNameMiddleName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "consumerNameLastName",
            "key": "lastName",
            "schema": {
              "generatedName": "consumerNameLastName",
              "nameOverride": "ConsumerName",
              "title": "ConsumerName",
              "value": {
                "description": "Last name of the user",
                "schema": {
                  "minLength": 1,
                  "type": "string"
                },
                "generatedName": "ConsumerNameLastName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for a generic consumer name",
        "generatedName": "ConsumerName",
        "nameOverride": "ConsumerName",
        "title": "ConsumerName",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TransactionAmountDetails": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "transactionAmountDetailsTransactionAmount",
            "key": "transactionAmount",
            "schema": {
              "description": "Amount of the transaction",
              "schema": {
                "type": "double"
              },
              "generatedName": "TransactionAmountDetailsTransactionAmount",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionAmountDetailsTransactionCurrency",
            "key": "transactionCurrency",
            "schema": {
              "generatedName": "TransactionAmountDetailsTransactionCurrency",
              "schema": "CurrencyCode",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "transactionAmountDetailsCountry",
            "key": "country",
            "schema": {
              "generatedName": "transactionAmountDetailsCountry",
              "nameOverride": "TransactionAmountDetails",
              "title": "TransactionAmountDetails",
              "value": {
                "generatedName": "TransactionAmountDetailsCountry",
                "schema": "CountryCode",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for transaction amount details",
        "generatedName": "TransactionAmountDetails",
        "nameOverride": "TransactionAmountDetails",
        "title": "TransactionAmountDetails",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Amount": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "amountAmountValue",
            "key": "amountValue",
            "schema": {
              "description": "Numerical value of the transaction",
              "schema": {
                "type": "double"
              },
              "generatedName": "AmountAmountValue",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "amountAmountCurrency",
            "key": "amountCurrency",
            "schema": {
              "generatedName": "AmountAmountCurrency",
              "schema": "CurrencyCode",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for amount",
        "generatedName": "Amount",
        "nameOverride": "Amount",
        "title": "Amount",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "LegalEntity": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "legalEntityCompanyGeneralDetails",
            "key": "companyGeneralDetails",
            "schema": {
              "generatedName": "LegalEntityCompanyGeneralDetails",
              "schema": "CompanyGeneralDetails",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "legalEntityCompanyFinancialDetails",
            "key": "companyFinancialDetails",
            "schema": {
              "generatedName": "legalEntityCompanyFinancialDetails",
              "nameOverride": "LegalEntity",
              "title": "LegalEntity",
              "value": {
                "generatedName": "LegalEntityCompanyFinancialDetails",
                "schema": "CompanyFinancialDetails",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "legalEntityCompanyRegistrationDetails",
            "key": "companyRegistrationDetails",
            "schema": {
              "generatedName": "legalEntityCompanyRegistrationDetails",
              "nameOverride": "LegalEntity",
              "title": "LegalEntity",
              "value": {
                "generatedName": "LegalEntityCompanyRegistrationDetails",
                "schema": "CompanyRegistrationDetails",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "legalEntityReasonForAccountOpening",
            "key": "reasonForAccountOpening",
            "schema": {
              "generatedName": "legalEntityReasonForAccountOpening",
              "nameOverride": "LegalEntity",
              "title": "LegalEntity",
              "value": {
                "description": "Reason for opening the account at financial institution",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "LegalEntityReasonForAccountOpeningItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "LegalEntityReasonForAccountOpening",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "legalEntityContactDetails",
            "key": "contactDetails",
            "schema": {
              "generatedName": "legalEntityContactDetails",
              "nameOverride": "LegalEntity",
              "title": "LegalEntity",
              "value": {
                "generatedName": "LegalEntityContactDetails",
                "schema": "ContactDetails",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for business user legal entity details",
        "generatedName": "LegalEntity",
        "nameOverride": "LegalEntity",
        "title": "LegalEntity",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ContactDetails": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "contactDetailsEmailIds",
            "key": "emailIds",
            "schema": {
              "generatedName": "contactDetailsEmailIds",
              "nameOverride": "ContactDetails",
              "title": "ContactDetails",
              "value": {
                "description": "Email addresses of the contacts for a given business customer",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ContactDetailsEmailIdsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "ContactDetailsEmailIds",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactDetailsContactNumbers",
            "key": "contactNumbers",
            "schema": {
              "generatedName": "contactDetailsContactNumbers",
              "nameOverride": "ContactDetails",
              "title": "ContactDetails",
              "value": {
                "description": "Phone numbers to contact a given business customer",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ContactDetailsContactNumbersItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "ContactDetailsContactNumbers",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactDetailsFaxNumbers",
            "key": "faxNumbers",
            "schema": {
              "generatedName": "contactDetailsFaxNumbers",
              "nameOverride": "ContactDetails",
              "title": "ContactDetails",
              "value": {
                "description": "Fax numbers to contact a business customer",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ContactDetailsFaxNumbersItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "ContactDetailsFaxNumbers",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactDetailsWebsites",
            "key": "websites",
            "schema": {
              "generatedName": "contactDetailsWebsites",
              "nameOverride": "ContactDetails",
              "title": "ContactDetails",
              "value": {
                "description": "Website of the company",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ContactDetailsWebsitesItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "ContactDetailsWebsites",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactDetailsAddresses",
            "key": "addresses",
            "schema": {
              "generatedName": "contactDetailsAddresses",
              "nameOverride": "ContactDetails",
              "title": "ContactDetails",
              "value": {
                "description": "Address(es) of the company",
                "value": {
                  "generatedName": "ContactDetailsAddressesItem",
                  "schema": "Address",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ContactDetailsAddresses",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for business user contact information details",
        "generatedName": "ContactDetails",
        "nameOverride": "ContactDetails",
        "title": "ContactDetails",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CompanyFinancialDetails": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "companyFinancialDetailsExpectedTransactionAmountPerMonth",
            "key": "expectedTransactionAmountPerMonth",
            "schema": {
              "generatedName": "companyFinancialDetailsExpectedTransactionAmountPerMonth",
              "nameOverride": "CompanyFinancialDetails",
              "title": "CompanyFinancialDetails",
              "value": {
                "generatedName": "CompanyFinancialDetailsExpectedTransactionAmountPerMonth",
                "schema": "Amount",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "companyFinancialDetailsExpectedTurnoverPerMonth",
            "key": "expectedTurnoverPerMonth",
            "schema": {
              "generatedName": "companyFinancialDetailsExpectedTurnoverPerMonth",
              "nameOverride": "CompanyFinancialDetails",
              "title": "CompanyFinancialDetails",
              "value": {
                "generatedName": "CompanyFinancialDetailsExpectedTurnoverPerMonth",
                "schema": "Amount",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "companyFinancialDetailsTags",
            "key": "tags",
            "schema": {
              "generatedName": "companyFinancialDetailsTags",
              "nameOverride": "CompanyFinancialDetails",
              "title": "CompanyFinancialDetails",
              "value": {
                "description": "Additional information that can be added via tags",
                "value": {
                  "generatedName": "CompanyFinancialDetailsTagsItem",
                  "schema": "Tag",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "CompanyFinancialDetailsTags",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for business user company financial details",
        "generatedName": "CompanyFinancialDetails",
        "nameOverride": "CompanyFinancialDetails",
        "title": "CompanyFinancialDetails",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "UserDetails": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "userDetailsName",
            "key": "name",
            "schema": {
              "generatedName": "UserDetailsName",
              "schema": "ConsumerName",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "userDetailsDateOfBirth",
            "key": "dateOfBirth",
            "schema": {
              "generatedName": "userDetailsDateOfBirth",
              "nameOverride": "UserDetails",
              "title": "UserDetails",
              "value": {
                "description": "Date of birth of the user (YYYY-MM-DD)",
                "schema": {
                  "pattern": "^(\\d{4}-\\d{2}-\\d{2})*$",
                  "type": "string"
                },
                "generatedName": "UserDetailsDateOfBirth",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userDetailsCountryOfResidence",
            "key": "countryOfResidence",
            "schema": {
              "generatedName": "userDetailsCountryOfResidence",
              "nameOverride": "UserDetails",
              "title": "UserDetails",
              "value": {
                "generatedName": "UserDetailsCountryOfResidence",
                "schema": "CountryCode",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "userDetailsCountryOfNationality",
            "key": "countryOfNationality",
            "schema": {
              "generatedName": "userDetailsCountryOfNationality",
              "nameOverride": "UserDetails",
              "title": "UserDetails",
              "value": {
                "generatedName": "UserDetailsCountryOfNationality",
                "schema": "CountryCode",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "userDetailsGender",
            "key": "gender",
            "schema": {
              "generatedName": "userDetailsGender",
              "nameOverride": "UserDetails",
              "title": "UserDetails",
              "value": {
                "description": "Gender of the individual - Male, Female or Non-Binary",
                "generatedName": "UserDetailsGender",
                "values": [
                  {
                    "generatedName": "M",
                    "value": "M",
                    "casing": {}
                  },
                  {
                    "generatedName": "F",
                    "value": "F",
                    "casing": {}
                  },
                  {
                    "generatedName": "NB",
                    "value": "NB",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for consumer user personal details",
        "generatedName": "UserDetails",
        "nameOverride": "UserDetails",
        "title": "UserDetails",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "UserRegistrationStatus": {
        "generatedName": "UserRegistrationStatus",
        "nameOverride": "UserRegistrationStatus",
        "title": "UserRegistrationStatus",
        "values": [
          {
            "generatedName": "REGISTERED",
            "value": "REGISTERED",
            "casing": {}
          },
          {
            "generatedName": "UNREGISTERED",
            "value": "UNREGISTERED",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "CompanyGeneralDetails": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "companyGeneralDetailsLegalName",
            "key": "legalName",
            "schema": {
              "description": "Legal name of the company",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "CompanyGeneralDetailsLegalName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companyGeneralDetailsBusinessIndustry",
            "key": "businessIndustry",
            "schema": {
              "generatedName": "companyGeneralDetailsBusinessIndustry",
              "nameOverride": "CompanyGeneralDetails",
              "title": "CompanyGeneralDetails",
              "value": {
                "description": "The industry the business operates in for a business customer",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "CompanyGeneralDetailsBusinessIndustryItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "CompanyGeneralDetailsBusinessIndustry",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companyGeneralDetailsMainProductsServicesSold",
            "key": "mainProductsServicesSold",
            "schema": {
              "generatedName": "companyGeneralDetailsMainProductsServicesSold",
              "nameOverride": "CompanyGeneralDetails",
              "title": "CompanyGeneralDetails",
              "value": {
                "description": "The key products and services provided by the company",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "CompanyGeneralDetailsMainProductsServicesSoldItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "CompanyGeneralDetailsMainProductsServicesSold",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companyGeneralDetailsUserSegment",
            "key": "userSegment",
            "schema": {
              "generatedName": "companyGeneralDetailsUserSegment",
              "nameOverride": "CompanyGeneralDetails",
              "title": "CompanyGeneralDetails",
              "value": {
                "description": "Segmentation of the business user",
                "generatedName": "CompanyGeneralDetailsUserSegment",
                "values": [
                  {
                    "generatedName": "SOLE_PROPRIETORSHIP",
                    "value": "SOLE_PROPRIETORSHIP",
                    "casing": {}
                  },
                  {
                    "generatedName": "SMB",
                    "value": "SMB",
                    "casing": {}
                  },
                  {
                    "generatedName": "SMALL",
                    "value": "SMALL",
                    "casing": {}
                  },
                  {
                    "generatedName": "MEDIUM",
                    "value": "MEDIUM",
                    "casing": {}
                  },
                  {
                    "generatedName": "LARGE",
                    "value": "LARGE",
                    "casing": {}
                  },
                  {
                    "generatedName": "UNKNOWN",
                    "value": "UNKNOWN",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companyGeneralDetailsUserRegistrationStatus",
            "key": "userRegistrationStatus",
            "schema": {
              "generatedName": "companyGeneralDetailsUserRegistrationStatus",
              "nameOverride": "CompanyGeneralDetails",
              "title": "CompanyGeneralDetails",
              "value": {
                "generatedName": "CompanyGeneralDetailsUserRegistrationStatus",
                "schema": "UserRegistrationStatus",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "companyGeneralDetailsTags",
            "key": "tags",
            "schema": {
              "generatedName": "companyGeneralDetailsTags",
              "nameOverride": "CompanyGeneralDetails",
              "title": "CompanyGeneralDetails",
              "value": {
                "description": "Additional information that can be added via tags",
                "value": {
                  "generatedName": "CompanyGeneralDetailsTagsItem",
                  "schema": "Tag",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "CompanyGeneralDetailsTags",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for business user company general details",
        "generatedName": "CompanyGeneralDetails",
        "nameOverride": "CompanyGeneralDetails",
        "title": "CompanyGeneralDetails",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CompanyRegistrationDetails": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "companyRegistrationDetailsRegistrationIdentifier",
            "key": "registrationIdentifier",
            "schema": {
              "description": "Commercial registry registration number for the company in its registration country",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "CompanyRegistrationDetailsRegistrationIdentifier",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companyRegistrationDetailsRegistrationCountry",
            "key": "registrationCountry",
            "schema": {
              "generatedName": "CompanyRegistrationDetailsRegistrationCountry",
              "schema": "CountryCode",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "companyRegistrationDetailsTaxIdentifier",
            "key": "taxIdentifier",
            "schema": {
              "generatedName": "companyRegistrationDetailsTaxIdentifier",
              "nameOverride": "CompanyRegistrationDetails",
              "title": "CompanyRegistrationDetails",
              "value": {
                "description": "Tax ID number of the registered entity",
                "schema": {
                  "type": "string"
                },
                "generatedName": "CompanyRegistrationDetailsTaxIdentifier",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companyRegistrationDetailsLegalEntityType",
            "key": "legalEntityType",
            "schema": {
              "generatedName": "companyRegistrationDetailsLegalEntityType",
              "nameOverride": "CompanyRegistrationDetails",
              "title": "CompanyRegistrationDetails",
              "value": {
                "description": "Type of legal entity. Ex: Limited Liability",
                "schema": {
                  "type": "string"
                },
                "generatedName": "CompanyRegistrationDetailsLegalEntityType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companyRegistrationDetailsDateOfRegistration",
            "key": "dateOfRegistration",
            "schema": {
              "generatedName": "companyRegistrationDetailsDateOfRegistration",
              "nameOverride": "CompanyRegistrationDetails",
              "title": "CompanyRegistrationDetails",
              "value": {
                "schema": {
                  "pattern": "^(\\d{4}-\\d{2}-\\d{2})*$",
                  "type": "string"
                },
                "generatedName": "CompanyRegistrationDetailsDateOfRegistration",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companyRegistrationDetailsTags",
            "key": "tags",
            "schema": {
              "generatedName": "companyRegistrationDetailsTags",
              "nameOverride": "CompanyRegistrationDetails",
              "title": "CompanyRegistrationDetails",
              "value": {
                "description": "Additional information that can be added via tags",
                "value": {
                  "generatedName": "CompanyRegistrationDetailsTagsItem",
                  "schema": "Tag",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "CompanyRegistrationDetailsTags",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for business user company registration details",
        "generatedName": "CompanyRegistrationDetails",
        "nameOverride": "CompanyRegistrationDetails",
        "title": "CompanyRegistrationDetails",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Business": {
        "allOf": [
          {
            "generatedName": "BusinessBase",
            "schema": "BusinessBase",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          {
            "generatedName": "BusinessOptional",
            "schema": "BusinessOptional",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [],
        "allOfPropertyConflicts": [],
        "generatedName": "Business",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "BusinessBase": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "businessBaseUserId",
            "key": "userId",
            "schema": {
              "description": "Unique user ID for the user",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "BusinessBaseUserId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "businessBaseCreatedTimestamp",
            "key": "createdTimestamp",
            "schema": {
              "description": "Timestamp when the user was created",
              "schema": {
                "minimum": 1262300400000,
                "maximum": 4133890801000,
                "type": "double"
              },
              "generatedName": "BusinessBaseCreatedTimestamp",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for a business user base fields",
        "generatedName": "BusinessBase",
        "nameOverride": "BusinessBase",
        "title": "BusinessBase",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "BusinessOptional": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "businessOptionalUserStateDetails",
            "key": "userStateDetails",
            "schema": {
              "generatedName": "businessOptionalUserStateDetails",
              "nameOverride": "BusinessOptional",
              "title": "BusinessOptional",
              "value": {
                "generatedName": "BusinessOptionalUserStateDetails",
                "schema": "UserStateDetails",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "businessOptionalKycStatusDetails",
            "key": "kycStatusDetails",
            "schema": {
              "generatedName": "businessOptionalKycStatusDetails",
              "nameOverride": "BusinessOptional",
              "title": "BusinessOptional",
              "value": {
                "generatedName": "BusinessOptionalKycStatusDetails",
                "schema": "KYCStatusDetails",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "businessOptionalLegalEntity",
            "key": "legalEntity",
            "schema": {
              "generatedName": "businessOptionalLegalEntity",
              "nameOverride": "BusinessOptional",
              "title": "BusinessOptional",
              "value": {
                "generatedName": "BusinessOptionalLegalEntity",
                "schema": "LegalEntity",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "businessOptionalShareHolders",
            "key": "shareHolders",
            "schema": {
              "generatedName": "businessOptionalShareHolders",
              "nameOverride": "BusinessOptional",
              "title": "BusinessOptional",
              "value": {
                "description": "Shareholders (beneficiaries) of the company that hold at least 25% ownership. Can be another company or an individual",
                "value": {
                  "generatedName": "BusinessOptionalShareHoldersItem",
                  "schema": "Person",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "BusinessOptionalShareHolders",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "businessOptionalDirectors",
            "key": "directors",
            "schema": {
              "generatedName": "businessOptionalDirectors",
              "nameOverride": "BusinessOptional",
              "title": "BusinessOptional",
              "value": {
                "description": "Director(s) of the company. Must be at least one",
                "value": {
                  "generatedName": "BusinessOptionalDirectorsItem",
                  "schema": "Person",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "BusinessOptionalDirectors",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "businessOptionalTransactionLimits",
            "key": "transactionLimits",
            "schema": {
              "generatedName": "businessOptionalTransactionLimits",
              "nameOverride": "BusinessOptional",
              "title": "BusinessOptional",
              "value": {
                "generatedName": "BusinessOptionalTransactionLimits",
                "schema": "TransactionLimits",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "businessOptionalRiskLevel",
            "key": "riskLevel",
            "schema": {
              "generatedName": "businessOptionalRiskLevel",
              "nameOverride": "BusinessOptional",
              "title": "BusinessOptional",
              "value": {
                "generatedName": "BusinessOptionalRiskLevel",
                "schema": "RiskLevel",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "businessOptionalAllowedPaymentMethods",
            "key": "allowedPaymentMethods",
            "schema": {
              "generatedName": "businessOptionalAllowedPaymentMethods",
              "nameOverride": "BusinessOptional",
              "title": "BusinessOptional",
              "value": {
                "value": {
                  "generatedName": "BusinessOptionalAllowedPaymentMethodsItem",
                  "schema": "PaymentMethod",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "BusinessOptionalAllowedPaymentMethods",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "businessOptionalLinkedEntities",
            "key": "linkedEntities",
            "schema": {
              "generatedName": "businessOptionalLinkedEntities",
              "nameOverride": "BusinessOptional",
              "title": "BusinessOptional",
              "value": {
                "generatedName": "BusinessOptionalLinkedEntities",
                "schema": "BusinessEntityLink",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "businessOptionalAcquisitionChannel",
            "key": "acquisitionChannel",
            "schema": {
              "generatedName": "businessOptionalAcquisitionChannel",
              "nameOverride": "BusinessOptional",
              "title": "BusinessOptional",
              "value": {
                "generatedName": "BusinessOptionalAcquisitionChannel",
                "schema": "AcquisitionChannel",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "businessOptionalSavedPaymentDetails",
            "key": "savedPaymentDetails",
            "schema": {
              "generatedName": "businessOptionalSavedPaymentDetails",
              "nameOverride": "BusinessOptional",
              "title": "BusinessOptional",
              "value": {
                "value": {
                  "value": {
                    "commonProperties": [],
                    "discriminantProperty": "method",
                    "generatedName": "BusinessOptionalSavedPaymentDetailsItem",
                    "schemas": {
                      "CARD": {
                        "generatedName": "ComponentsSchemasCardDetails",
                        "schema": "CardDetails",
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "reference"
                      },
                      "GENERIC_BANK_ACCOUNT": {
                        "generatedName": "ComponentsSchemasGenericBankAccountDetails",
                        "schema": "GenericBankAccountDetails",
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "reference"
                      },
                      "IBAN": {
                        "generatedName": "ComponentsSchemasIbanDetails",
                        "schema": "IBANDetails",
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "reference"
                      },
                      "ACH": {
                        "generatedName": "ComponentsSchemasAchDetails",
                        "schema": "ACHDetails",
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "reference"
                      },
                      "SWIFT": {
                        "generatedName": "ComponentsSchemasSwiftDetails",
                        "schema": "SWIFTDetails",
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "reference"
                      },
                      "MPESA": {
                        "generatedName": "ComponentsSchemasMpesaDetails",
                        "schema": "MpesaDetails",
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "reference"
                      },
                      "UPI": {
                        "generatedName": "ComponentsSchemasUpiDetails",
                        "schema": "UPIDetails",
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "reference"
                      },
                      "WALLET": {
                        "generatedName": "ComponentsSchemasWalletDetails",
                        "schema": "WalletDetails",
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "reference"
                      },
                      "CHECK": {
                        "generatedName": "ComponentsSchemasCheckDetails",
                        "schema": "CheckDetails",
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "reference"
                      }
                    },
                    "groupName": [],
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "discriminated"
                  },
                  "type": "oneOf"
                },
                "generatedName": "BusinessOptionalSavedPaymentDetails",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "businessOptionalMccDetails",
            "key": "mccDetails",
            "schema": {
              "generatedName": "businessOptionalMccDetails",
              "nameOverride": "BusinessOptional",
              "title": "BusinessOptional",
              "value": {
                "generatedName": "BusinessOptionalMccDetails",
                "schema": "MCCDetails",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "businessOptionalTags",
            "key": "tags",
            "schema": {
              "generatedName": "businessOptionalTags",
              "nameOverride": "BusinessOptional",
              "title": "BusinessOptional",
              "value": {
                "description": "Additional information that can be added via tags",
                "value": {
                  "generatedName": "BusinessOptionalTagsItem",
                  "schema": "Tag",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "BusinessOptionalTags",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for a business user - optional fields",
        "generatedName": "BusinessOptional",
        "nameOverride": "BusinessOptional",
        "title": "BusinessOptional",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "BusinessUsersResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "businessUsersResponseUserId",
            "key": "userId",
            "schema": {
              "description": "user ID the risk score pertains to",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "BusinessUsersResponseUserId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for business user risk score response",
        "generatedName": "BusinessUsersResponse",
        "nameOverride": "BusinessUsersResponse",
        "title": "BusinessUsersResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ConsumerUsersResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "consumerUsersResponseUserId",
            "key": "userId",
            "schema": {
              "description": "user ID the risk score pertains to",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "ConsumerUsersResponseUserId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for consumer user risk score response",
        "generatedName": "ConsumerUsersResponse",
        "nameOverride": "ConsumerUsersResponse",
        "title": "ConsumerUsersResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CardDetails": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "cardDetailsCardFingerprint",
            "key": "cardFingerprint",
            "schema": {
              "generatedName": "cardDetailsCardFingerprint",
              "nameOverride": "CardDetails",
              "title": "CardDetails",
              "value": {
                "description": "Unique card fingerprint that helps identify a specific card without having to use explicit card number. This is likely available at your card payment scheme provider",
                "schema": {
                  "minLength": 1,
                  "type": "string"
                },
                "generatedName": "CardDetailsCardFingerprint",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "cardDetailsCardIssuedCountry",
            "key": "cardIssuedCountry",
            "schema": {
              "generatedName": "cardDetailsCardIssuedCountry",
              "nameOverride": "CardDetails",
              "title": "CardDetails",
              "value": {
                "generatedName": "CardDetailsCardIssuedCountry",
                "schema": "CountryCode",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "cardDetailsTransactionReferenceField",
            "key": "transactionReferenceField",
            "schema": {
              "generatedName": "cardDetailsTransactionReferenceField",
              "nameOverride": "CardDetails",
              "title": "CardDetails",
              "value": {
                "description": "Reference for the transaction",
                "schema": {
                  "minLength": 1,
                  "type": "string"
                },
                "generatedName": "CardDetailsTransactionReferenceField",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "cardDetails3DsDone",
            "key": "3dsDone",
            "schema": {
              "generatedName": "cardDetails3DsDone",
              "nameOverride": "CardDetails",
              "title": "CardDetails",
              "value": {
                "description": "Whether 3ds was successfully enforced for the transaction",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "CardDetails3DsDone",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "cardDetailsNameOnCard",
            "key": "nameOnCard",
            "schema": {
              "generatedName": "cardDetailsNameOnCard",
              "nameOverride": "CardDetails",
              "title": "CardDetails",
              "value": {
                "generatedName": "CardDetailsNameOnCard",
                "schema": "ConsumerName",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "cardDetailsCardExpiry",
            "key": "cardExpiry",
            "schema": {
              "generatedName": "cardDetailsCardExpiry",
              "nameOverride": "CardDetails",
              "title": "CardDetails",
              "value": {
                "generatedName": "CardDetailsCardExpiry",
                "schema": "CardExpiry",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "cardDetailsCardLast4Digits",
            "key": "cardLast4Digits",
            "schema": {
              "generatedName": "cardDetailsCardLast4Digits",
              "nameOverride": "CardDetails",
              "title": "CardDetails",
              "value": {
                "description": "Last 4 digits of Card",
                "schema": {
                  "minLength": 4,
                  "maxLength": 4,
                  "type": "string"
                },
                "generatedName": "CardDetailsCardLast4Digits",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "cardDetailsCardBrand",
            "key": "cardBrand",
            "schema": {
              "generatedName": "cardDetailsCardBrand",
              "nameOverride": "CardDetails",
              "title": "CardDetails",
              "value": {
                "description": "Brand of Card",
                "generatedName": "CardDetailsCardBrand",
                "values": [
                  {
                    "generatedName": "VISA",
                    "value": "VISA",
                    "casing": {}
                  },
                  {
                    "generatedName": "MASTERCARD",
                    "value": "MASTERCARD",
                    "casing": {}
                  },
                  {
                    "generatedName": "AMERICAN_EXPRESS",
                    "value": "AMERICAN_EXPRESS",
                    "casing": {}
                  },
                  {
                    "generatedName": "DISCOVER",
                    "value": "DISCOVER",
                    "casing": {}
                  },
                  {
                    "generatedName": "UNIONPAY",
                    "value": "UNIONPAY",
                    "casing": {}
                  },
                  {
                    "generatedName": "RUPAY",
                    "value": "RUPAY",
                    "casing": {}
                  },
                  {
                    "generatedName": "JCB",
                    "value": "JCB",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "cardDetailsCardFunding",
            "key": "cardFunding",
            "schema": {
              "generatedName": "cardDetailsCardFunding",
              "nameOverride": "CardDetails",
              "title": "CardDetails",
              "value": {
                "description": "Funding of Card",
                "generatedName": "CardDetailsCardFunding",
                "values": [
                  {
                    "generatedName": "CREDIT",
                    "value": "CREDIT",
                    "casing": {}
                  },
                  {
                    "generatedName": "DEBIT",
                    "value": "DEBIT",
                    "casing": {}
                  },
                  {
                    "generatedName": "PREPAID",
                    "value": "PREPAID",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "cardDetailsCardAuthenticated",
            "key": "cardAuthenticated",
            "schema": {
              "generatedName": "cardDetailsCardAuthenticated",
              "nameOverride": "CardDetails",
              "title": "CardDetails",
              "value": {
                "description": "Authentication of Card",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "CardDetailsCardAuthenticated",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "cardDetailsPaymentChannel",
            "key": "paymentChannel",
            "schema": {
              "generatedName": "cardDetailsPaymentChannel",
              "nameOverride": "CardDetails",
              "title": "CardDetails",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "CardDetailsPaymentChannel",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "cardDetailsCardType",
            "key": "cardType",
            "schema": {
              "generatedName": "cardDetailsCardType",
              "nameOverride": "CardDetails",
              "title": "CardDetails",
              "value": {
                "generatedName": "CardDetailsCardType",
                "values": [
                  {
                    "generatedName": "VIRTUAL",
                    "value": "VIRTUAL",
                    "casing": {}
                  },
                  {
                    "generatedName": "PHYSICAL",
                    "value": "PHYSICAL",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "cardDetailsMerchantDetails",
            "key": "merchantDetails",
            "schema": {
              "generatedName": "cardDetailsMerchantDetails",
              "nameOverride": "CardDetails",
              "title": "CardDetails",
              "value": {
                "generatedName": "CardDetailsMerchantDetails",
                "schema": "CardMerchantDetails",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for credit or debit card details",
        "generatedName": "CardDetails",
        "nameOverride": "CardDetails",
        "title": "CardDetails",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IBANDetails": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "ibanDetailsBic",
            "key": "BIC",
            "schema": {
              "generatedName": "ibanDetailsBic",
              "nameOverride": "IBANDetails",
              "title": "IBANDetails",
              "value": {
                "description": "Identifier for the bank. Can be routing number, BIK number, SWIFT code, BIC number etc.",
                "schema": {
                  "minLength": 1,
                  "type": "string"
                },
                "generatedName": "IbanDetailsBic",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ibanDetailsBankName",
            "key": "bankName",
            "schema": {
              "generatedName": "ibanDetailsBankName",
              "nameOverride": "IBANDetails",
              "title": "IBANDetails",
              "value": {
                "description": "Name of the bank",
                "schema": {
                  "minLength": 1,
                  "type": "string"
                },
                "generatedName": "IbanDetailsBankName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ibanDetailsBankAddress",
            "key": "bankAddress",
            "schema": {
              "generatedName": "ibanDetailsBankAddress",
              "nameOverride": "IBANDetails",
              "title": "IBANDetails",
              "value": {
                "generatedName": "IbanDetailsBankAddress",
                "schema": "Address",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "ibanDetailsCountry",
            "key": "country",
            "schema": {
              "generatedName": "ibanDetailsCountry",
              "nameOverride": "IBANDetails",
              "title": "IBANDetails",
              "value": {
                "generatedName": "IbanDetailsCountry",
                "schema": "CountryCode",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "ibanDetailsIban",
            "key": "IBAN",
            "schema": {
              "generatedName": "ibanDetailsIban",
              "nameOverride": "IBANDetails",
              "title": "IBANDetails",
              "value": {
                "description": "Account number of the user. Can be account number, IBAN number etc.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "IbanDetailsIban",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ibanDetailsName",
            "key": "name",
            "schema": {
              "generatedName": "ibanDetailsName",
              "nameOverride": "IBANDetails",
              "title": "IBANDetails",
              "value": {
                "description": "Name of the bank account holder",
                "schema": {
                  "type": "string"
                },
                "generatedName": "IbanDetailsName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ibanDetailsTags",
            "key": "tags",
            "schema": {
              "generatedName": "ibanDetailsTags",
              "nameOverride": "IBANDetails",
              "title": "IBANDetails",
              "value": {
                "generatedName": "IbanDetailsTags",
                "schema": "Tag",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "ibanDetailsBankBranchCode",
            "key": "bankBranchCode",
            "schema": {
              "generatedName": "ibanDetailsBankBranchCode",
              "nameOverride": "IBANDetails",
              "title": "IBANDetails",
              "value": {
                "description": "Branch code of the bank. In some countries, this can be the same as the bank's SWIFT code",
                "schema": {
                  "type": "string"
                },
                "generatedName": "IbanDetailsBankBranchCode",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ibanDetailsPaymentChannel",
            "key": "paymentChannel",
            "schema": {
              "generatedName": "ibanDetailsPaymentChannel",
              "nameOverride": "IBANDetails",
              "title": "IBANDetails",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "IbanDetailsPaymentChannel",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Standardized model for Bank Details",
        "generatedName": "IbanDetails",
        "nameOverride": "IBANDetails",
        "title": "IBANDetails",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "WalletDetails": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "walletDetailsWalletType",
            "key": "walletType",
            "schema": {
              "description": "Wallet type if there are various types of wallets belonging to the same user. E.g. Checking, savings, vault, different currency wallets etc.",
              "schema": {
                "type": "string"
              },
              "generatedName": "WalletDetailsWalletType",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "walletDetailsWalletId",
            "key": "walletId",
            "schema": {
              "generatedName": "walletDetailsWalletId",
              "nameOverride": "WalletDetails",
              "title": "WalletDetails",
              "value": {
                "description": "Unique ID of the wallet",
                "schema": {
                  "minLength": 1,
                  "type": "string"
                },
                "generatedName": "WalletDetailsWalletId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "walletDetailsPaymentChannel",
            "key": "paymentChannel",
            "schema": {
              "generatedName": "walletDetailsPaymentChannel",
              "nameOverride": "WalletDetails",
              "title": "WalletDetails",
              "value": {
                "description": "Payment Channel used through wallet",
                "schema": {
                  "type": "string"
                },
                "generatedName": "WalletDetailsPaymentChannel",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "walletDetailsName",
            "key": "name",
            "schema": {
              "generatedName": "walletDetailsName",
              "nameOverride": "WalletDetails",
              "title": "WalletDetails",
              "value": {
                "description": "Name of the account holder for a specific wallet",
                "schema": {
                  "type": "string"
                },
                "generatedName": "WalletDetailsName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "walletDetailsTags",
            "key": "tags",
            "schema": {
              "generatedName": "walletDetailsTags",
              "nameOverride": "WalletDetails",
              "title": "WalletDetails",
              "value": {
                "generatedName": "WalletDetailsTags",
                "schema": "Tag",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "walletDetailsWalletPhoneNumber",
            "key": "walletPhoneNumber",
            "schema": {
              "generatedName": "walletDetailsWalletPhoneNumber",
              "nameOverride": "WalletDetails",
              "title": "WalletDetails",
              "value": {
                "description": "Phone number associated with the wallet, if any",
                "schema": {
                  "type": "string"
                },
                "generatedName": "WalletDetailsWalletPhoneNumber",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Standardized model for a Generic wallet transaction",
        "generatedName": "WalletDetails",
        "nameOverride": "WalletDetails",
        "title": "WalletDetails",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ACHDetails": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "achDetailsRoutingNumber",
            "key": "routingNumber",
            "schema": {
              "generatedName": "achDetailsRoutingNumber",
              "nameOverride": "ACHDetails",
              "title": "ACHDetails",
              "value": {
                "description": "Routing number of the bank",
                "schema": {
                  "minLength": 1,
                  "type": "string"
                },
                "generatedName": "AchDetailsRoutingNumber",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "achDetailsAccountNumber",
            "key": "accountNumber",
            "schema": {
              "generatedName": "achDetailsAccountNumber",
              "nameOverride": "ACHDetails",
              "title": "ACHDetails",
              "value": {
                "description": "Bank account number of the individual",
                "schema": {
                  "minLength": 1,
                  "type": "string"
                },
                "generatedName": "AchDetailsAccountNumber",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "achDetailsBankName",
            "key": "bankName",
            "schema": {
              "generatedName": "achDetailsBankName",
              "nameOverride": "ACHDetails",
              "title": "ACHDetails",
              "value": {
                "description": "Name of the bank",
                "schema": {
                  "minLength": 1,
                  "type": "string"
                },
                "generatedName": "AchDetailsBankName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "achDetailsName",
            "key": "name",
            "schema": {
              "generatedName": "achDetailsName",
              "nameOverride": "ACHDetails",
              "title": "ACHDetails",
              "value": {
                "description": "Name of the account holder",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AchDetailsName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "achDetailsBankAddress",
            "key": "bankAddress",
            "schema": {
              "generatedName": "achDetailsBankAddress",
              "nameOverride": "ACHDetails",
              "title": "ACHDetails",
              "value": {
                "generatedName": "AchDetailsBankAddress",
                "schema": "Address",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "achDetailsBeneficiaryName",
            "key": "beneficiaryName",
            "schema": {
              "generatedName": "achDetailsBeneficiaryName",
              "nameOverride": "ACHDetails",
              "title": "ACHDetails",
              "value": {
                "description": "Beneficiary name of the account",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AchDetailsBeneficiaryName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for ACH payment method",
        "generatedName": "AchDetails",
        "nameOverride": "ACHDetails",
        "title": "ACHDetails",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SWIFTDetails": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "swiftDetailsSwiftCode",
            "key": "swiftCode",
            "schema": {
              "generatedName": "swiftDetailsSwiftCode",
              "nameOverride": "SWIFTDetails",
              "title": "SWIFTDetails",
              "value": {
                "description": "SWIFT code of the financial institution",
                "schema": {
                  "minLength": 1,
                  "type": "string"
                },
                "generatedName": "SwiftDetailsSwiftCode",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "swiftDetailsAccountNumber",
            "key": "accountNumber",
            "schema": {
              "generatedName": "swiftDetailsAccountNumber",
              "nameOverride": "SWIFTDetails",
              "title": "SWIFTDetails",
              "value": {
                "description": "Account number",
                "schema": {
                  "minLength": 1,
                  "type": "string"
                },
                "generatedName": "SwiftDetailsAccountNumber",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "swiftDetailsAccountType",
            "key": "accountType",
            "schema": {
              "generatedName": "swiftDetailsAccountType",
              "nameOverride": "SWIFTDetails",
              "title": "SWIFTDetails",
              "value": {
                "description": "Account type. E.g. Checking, Savings etc.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SwiftDetailsAccountType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "swiftDetailsBankName",
            "key": "bankName",
            "schema": {
              "generatedName": "swiftDetailsBankName",
              "nameOverride": "SWIFTDetails",
              "title": "SWIFTDetails",
              "value": {
                "description": "Name of the bank",
                "schema": {
                  "minLength": 1,
                  "type": "string"
                },
                "generatedName": "SwiftDetailsBankName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "swiftDetailsName",
            "key": "name",
            "schema": {
              "generatedName": "swiftDetailsName",
              "nameOverride": "SWIFTDetails",
              "title": "SWIFTDetails",
              "value": {
                "description": "Name of the account holder",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SwiftDetailsName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "swiftDetailsBankAddress",
            "key": "bankAddress",
            "schema": {
              "generatedName": "swiftDetailsBankAddress",
              "nameOverride": "SWIFTDetails",
              "title": "SWIFTDetails",
              "value": {
                "generatedName": "SwiftDetailsBankAddress",
                "schema": "Address",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "swiftDetailsSpecialInstructions",
            "key": "specialInstructions",
            "schema": {
              "generatedName": "swiftDetailsSpecialInstructions",
              "nameOverride": "SWIFTDetails",
              "title": "SWIFTDetails",
              "value": {
                "description": "Special instructions if any",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SwiftDetailsSpecialInstructions",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for SWIFT payment method",
        "generatedName": "SwiftDetails",
        "nameOverride": "SWIFTDetails",
        "title": "SWIFTDetails",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "MpesaDetails": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "mpesaDetailsBusinessShortCode",
            "key": "businessShortCode",
            "schema": {
              "description": "Business code",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "MpesaDetailsBusinessShortCode",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "mpesaDetailsTransactionType",
            "key": "transactionType",
            "schema": {
              "description": "Type of transaction",
              "generatedName": "MpesaDetailsTransactionType",
              "values": [
                {
                  "generatedName": "CustomerPayBillOnline",
                  "value": "CustomerPayBillOnline",
                  "casing": {}
                },
                {
                  "generatedName": "CustomerBuyGoodsOnline",
                  "value": "CustomerBuyGoodsOnline",
                  "casing": {}
                },
                {
                  "generatedName": "SalaryPayment",
                  "value": "SalaryPayment",
                  "casing": {}
                },
                {
                  "generatedName": "BusinessPayment",
                  "value": "BusinessPayment",
                  "casing": {}
                },
                {
                  "generatedName": "PromotionPayment",
                  "value": "PromotionPayment",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "mpesaDetailsPhoneNumber",
            "key": "phoneNumber",
            "schema": {
              "description": "Contact Number of the account holder",
              "schema": {
                "type": "string"
              },
              "generatedName": "MpesaDetailsPhoneNumber",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for Mpesa payment method",
        "generatedName": "MpesaDetails",
        "nameOverride": "MpesaDetails",
        "title": "MpesaDetails",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "GenericBankAccountDetails": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "genericBankAccountDetailsAccountNumber",
            "key": "accountNumber",
            "schema": {
              "generatedName": "genericBankAccountDetailsAccountNumber",
              "nameOverride": "GenericBankAccountDetails",
              "title": "GenericBankAccountDetails",
              "value": {
                "description": "Bank account number",
                "schema": {
                  "minLength": 1,
                  "type": "string"
                },
                "generatedName": "GenericBankAccountDetailsAccountNumber",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "genericBankAccountDetailsAccountType",
            "key": "accountType",
            "schema": {
              "generatedName": "genericBankAccountDetailsAccountType",
              "nameOverride": "GenericBankAccountDetails",
              "title": "GenericBankAccountDetails",
              "value": {
                "description": "Bank account type. E.g. Checking, Savings etc.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "GenericBankAccountDetailsAccountType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "genericBankAccountDetailsBankName",
            "key": "bankName",
            "schema": {
              "generatedName": "genericBankAccountDetailsBankName",
              "nameOverride": "GenericBankAccountDetails",
              "title": "GenericBankAccountDetails",
              "value": {
                "description": "Name of the bank",
                "schema": {
                  "minLength": 1,
                  "type": "string"
                },
                "generatedName": "GenericBankAccountDetailsBankName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "genericBankAccountDetailsBankCode",
            "key": "bankCode",
            "schema": {
              "generatedName": "genericBankAccountDetailsBankCode",
              "nameOverride": "GenericBankAccountDetails",
              "title": "GenericBankAccountDetails",
              "value": {
                "description": "Unique identifier of the bank. In some countries, this can be the same as the bank's SWIFT code",
                "schema": {
                  "type": "string"
                },
                "generatedName": "GenericBankAccountDetailsBankCode",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "genericBankAccountDetailsName",
            "key": "name",
            "schema": {
              "generatedName": "genericBankAccountDetailsName",
              "nameOverride": "GenericBankAccountDetails",
              "title": "GenericBankAccountDetails",
              "value": {
                "description": "Name of the account holder",
                "schema": {
                  "type": "string"
                },
                "generatedName": "GenericBankAccountDetailsName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "genericBankAccountDetailsBankAddress",
            "key": "bankAddress",
            "schema": {
              "generatedName": "genericBankAccountDetailsBankAddress",
              "nameOverride": "GenericBankAccountDetails",
              "title": "GenericBankAccountDetails",
              "value": {
                "generatedName": "GenericBankAccountDetailsBankAddress",
                "schema": "Address",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "genericBankAccountDetailsSpecialInstructions",
            "key": "specialInstructions",
            "schema": {
              "generatedName": "genericBankAccountDetailsSpecialInstructions",
              "nameOverride": "GenericBankAccountDetails",
              "title": "GenericBankAccountDetails",
              "value": {
                "description": "Special instructions to be specified if any",
                "schema": {
                  "type": "string"
                },
                "generatedName": "GenericBankAccountDetailsSpecialInstructions",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "genericBankAccountDetailsPaymentChannel",
            "key": "paymentChannel",
            "schema": {
              "generatedName": "genericBankAccountDetailsPaymentChannel",
              "nameOverride": "GenericBankAccountDetails",
              "title": "GenericBankAccountDetails",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GenericBankAccountDetailsPaymentChannel",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for any generic bank account",
        "generatedName": "GenericBankAccountDetails",
        "nameOverride": "GenericBankAccountDetails",
        "title": "GenericBankAccountDetails",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "UPIDetails": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "upiDetailsUpiId",
            "key": "upiID",
            "schema": {
              "description": "UPI Id number",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "UpiDetailsUpiId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "upiDetailsBankProvider",
            "key": "bankProvider",
            "schema": {
              "generatedName": "upiDetailsBankProvider",
              "nameOverride": "UPIDetails",
              "title": "UPIDetails",
              "value": {
                "description": "Bank provider name",
                "schema": {
                  "minLength": 1,
                  "type": "string"
                },
                "generatedName": "UpiDetailsBankProvider",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "upiDetailsInterfaceProvider",
            "key": "interfaceProvider",
            "schema": {
              "generatedName": "upiDetailsInterfaceProvider",
              "nameOverride": "UPIDetails",
              "title": "UPIDetails",
              "value": {
                "description": "Interface provider name",
                "schema": {
                  "minLength": 1,
                  "type": "string"
                },
                "generatedName": "UpiDetailsInterfaceProvider",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "upiDetailsName",
            "key": "name",
            "schema": {
              "generatedName": "upiDetailsName",
              "nameOverride": "UPIDetails",
              "title": "UPIDetails",
              "value": {
                "description": "Name of the account holder",
                "schema": {
                  "type": "string"
                },
                "generatedName": "UpiDetailsName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for UPI payment method",
        "generatedName": "UpiDetails",
        "nameOverride": "UPIDetails",
        "title": "UPIDetails",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TransactionLimits": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "transactionLimitsMaximumDailyTransactionLimit",
            "key": "maximumDailyTransactionLimit",
            "schema": {
              "generatedName": "transactionLimitsMaximumDailyTransactionLimit",
              "nameOverride": "TransactionLimits",
              "title": "TransactionLimits",
              "value": {
                "generatedName": "TransactionLimitsMaximumDailyTransactionLimit",
                "schema": "Amount",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "transactionLimitsMaximumWeeklyTransactionLimit",
            "key": "maximumWeeklyTransactionLimit",
            "schema": {
              "generatedName": "transactionLimitsMaximumWeeklyTransactionLimit",
              "nameOverride": "TransactionLimits",
              "title": "TransactionLimits",
              "value": {
                "generatedName": "TransactionLimitsMaximumWeeklyTransactionLimit",
                "schema": "Amount",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "transactionLimitsMaximumMonthlyTransactionLimit",
            "key": "maximumMonthlyTransactionLimit",
            "schema": {
              "generatedName": "transactionLimitsMaximumMonthlyTransactionLimit",
              "nameOverride": "TransactionLimits",
              "title": "TransactionLimits",
              "value": {
                "generatedName": "TransactionLimitsMaximumMonthlyTransactionLimit",
                "schema": "Amount",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "transactionLimitsMaximumQuarterlyTransactionLimit",
            "key": "maximumQuarterlyTransactionLimit",
            "schema": {
              "generatedName": "transactionLimitsMaximumQuarterlyTransactionLimit",
              "nameOverride": "TransactionLimits",
              "title": "TransactionLimits",
              "value": {
                "generatedName": "TransactionLimitsMaximumQuarterlyTransactionLimit",
                "schema": "Amount",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "transactionLimitsMaximumTransactionLimit",
            "key": "maximumTransactionLimit",
            "schema": {
              "generatedName": "transactionLimitsMaximumTransactionLimit",
              "nameOverride": "TransactionLimits",
              "title": "TransactionLimits",
              "value": {
                "generatedName": "TransactionLimitsMaximumTransactionLimit",
                "schema": "Amount",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "transactionLimitsMaximumYearlyTransactionLimit",
            "key": "maximumYearlyTransactionLimit",
            "schema": {
              "generatedName": "transactionLimitsMaximumYearlyTransactionLimit",
              "nameOverride": "TransactionLimits",
              "title": "TransactionLimits",
              "value": {
                "generatedName": "TransactionLimitsMaximumYearlyTransactionLimit",
                "schema": "Amount",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "transactionLimitsPaymentMethodLimits",
            "key": "paymentMethodLimits",
            "schema": {
              "generatedName": "transactionLimitsPaymentMethodLimits",
              "nameOverride": "TransactionLimits",
              "title": "TransactionLimits",
              "value": {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "transactionLimitsPaymentMethodLimitsAch",
                    "key": "ACH",
                    "schema": {
                      "generatedName": "transactionLimitsPaymentMethodLimitsAch",
                      "value": {
                        "generatedName": "TransactionLimitsPaymentMethodLimitsAch",
                        "schema": "TransactionLimit",
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "reference"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": [],
                    "readonly": false
                  },
                  {
                    "conflict": {},
                    "generatedName": "transactionLimitsPaymentMethodLimitsCard",
                    "key": "CARD",
                    "schema": {
                      "generatedName": "transactionLimitsPaymentMethodLimitsCard",
                      "value": {
                        "generatedName": "TransactionLimitsPaymentMethodLimitsCard",
                        "schema": "TransactionLimit",
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "reference"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": [],
                    "readonly": false
                  },
                  {
                    "conflict": {},
                    "generatedName": "transactionLimitsPaymentMethodLimitsIban",
                    "key": "IBAN",
                    "schema": {
                      "generatedName": "transactionLimitsPaymentMethodLimitsIban",
                      "value": {
                        "generatedName": "TransactionLimitsPaymentMethodLimitsIban",
                        "schema": "TransactionLimit",
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "reference"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": [],
                    "readonly": false
                  },
                  {
                    "conflict": {},
                    "generatedName": "transactionLimitsPaymentMethodLimitsUpi",
                    "key": "UPI",
                    "schema": {
                      "generatedName": "transactionLimitsPaymentMethodLimitsUpi",
                      "value": {
                        "generatedName": "TransactionLimitsPaymentMethodLimitsUpi",
                        "schema": "TransactionLimit",
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "reference"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": [],
                    "readonly": false
                  },
                  {
                    "conflict": {},
                    "generatedName": "transactionLimitsPaymentMethodLimitsGenericBankAccount",
                    "key": "GENERIC_BANK_ACCOUNT",
                    "schema": {
                      "generatedName": "transactionLimitsPaymentMethodLimitsGenericBankAccount",
                      "value": {
                        "generatedName": "TransactionLimitsPaymentMethodLimitsGenericBankAccount",
                        "schema": "TransactionLimit",
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "reference"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": [],
                    "readonly": false
                  },
                  {
                    "conflict": {},
                    "generatedName": "transactionLimitsPaymentMethodLimitsMpesa",
                    "key": "MPESA",
                    "schema": {
                      "generatedName": "transactionLimitsPaymentMethodLimitsMpesa",
                      "value": {
                        "generatedName": "TransactionLimitsPaymentMethodLimitsMpesa",
                        "schema": "TransactionLimit",
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "reference"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": [],
                    "readonly": false
                  },
                  {
                    "conflict": {},
                    "generatedName": "transactionLimitsPaymentMethodLimitsSwift",
                    "key": "SWIFT",
                    "schema": {
                      "generatedName": "transactionLimitsPaymentMethodLimitsSwift",
                      "value": {
                        "generatedName": "TransactionLimitsPaymentMethodLimitsSwift",
                        "schema": "TransactionLimit",
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "reference"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": [],
                    "readonly": false
                  },
                  {
                    "conflict": {},
                    "generatedName": "transactionLimitsPaymentMethodLimitsWallet",
                    "key": "WALLET",
                    "schema": {
                      "generatedName": "transactionLimitsPaymentMethodLimitsWallet",
                      "value": {
                        "generatedName": "TransactionLimitsPaymentMethodLimitsWallet",
                        "schema": "TransactionLimit",
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "reference"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": [],
                    "readonly": false
                  },
                  {
                    "conflict": {},
                    "generatedName": "transactionLimitsPaymentMethodLimitsCheck",
                    "key": "CHECK",
                    "schema": {
                      "generatedName": "transactionLimitsPaymentMethodLimitsCheck",
                      "value": {
                        "generatedName": "TransactionLimitsPaymentMethodLimitsCheck",
                        "schema": "TransactionLimit",
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "reference"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": [],
                    "readonly": false
                  }
                ],
                "allOfPropertyConflicts": [],
                "generatedName": "TransactionLimitsPaymentMethodLimits",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for transaction limits for a given user",
        "generatedName": "TransactionLimits",
        "nameOverride": "TransactionLimits",
        "title": "TransactionLimits",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "RuleAction": {
        "description": "Model for rule action if a rule is hit. This is returned in the API response and can be configured on Console by operational accounts like a Compliance Analyst",
        "generatedName": "RuleAction",
        "nameOverride": "RuleAction",
        "title": "RuleAction",
        "values": [
          {
            "generatedName": "ALLOW",
            "value": "ALLOW",
            "casing": {}
          },
          {
            "generatedName": "FLAG",
            "value": "FLAG",
            "casing": {}
          },
          {
            "generatedName": "BLOCK",
            "value": "BLOCK",
            "casing": {}
          },
          {
            "generatedName": "SUSPEND",
            "value": "SUSPEND",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "RuleHitMeta": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "ruleHitMetaHitDirections",
            "key": "hitDirections",
            "schema": {
              "generatedName": "ruleHitMetaHitDirections",
              "value": {
                "value": {
                  "generatedName": "RuleHitMetaHitDirectionsItem",
                  "schema": "RuleHitDirection",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "RuleHitMetaHitDirections",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ruleHitMetaFalsePositiveDetails",
            "key": "falsePositiveDetails",
            "schema": {
              "generatedName": "ruleHitMetaFalsePositiveDetails",
              "value": {
                "generatedName": "RuleHitMetaFalsePositiveDetails",
                "schema": "FalsePositiveDetails",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "ruleHitMetaSanctionsDetails",
            "key": "sanctionsDetails",
            "schema": {
              "generatedName": "ruleHitMetaSanctionsDetails",
              "value": {
                "value": {
                  "generatedName": "RuleHitMetaSanctionsDetailsItem",
                  "schema": "SanctionsDetails",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "RuleHitMetaSanctionsDetails",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Details of rule execution, for internal purposes only",
        "generatedName": "RuleHitMeta",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "RuleHitDirection": {
        "generatedName": "RuleHitDirection",
        "nameOverride": "RuleHitDirection",
        "title": "RuleHitDirection",
        "values": [
          {
            "generatedName": "ORIGIN",
            "value": "ORIGIN",
            "casing": {}
          },
          {
            "generatedName": "DESTINATION",
            "value": "DESTINATION",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "RuleNature": {
        "generatedName": "RuleNature",
        "title": "Rule nature type",
        "values": [
          {
            "generatedName": "AML",
            "value": "AML",
            "casing": {}
          },
          {
            "generatedName": "FRAUD",
            "value": "FRAUD",
            "casing": {}
          },
          {
            "generatedName": "CTF",
            "value": "CTF",
            "casing": {}
          },
          {
            "generatedName": "SCREENING",
            "value": "SCREENING",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "RuleLabels": {
        "generatedName": "RuleLabels",
        "nameOverride": "RuleLabels",
        "title": "RuleLabels",
        "values": [
          {
            "generatedName": "UNEXPECTED_BEHAVIOR",
            "value": "UNEXPECTED_BEHAVIOR",
            "casing": {}
          },
          {
            "generatedName": "ILLICIT_GAINS_CHECK",
            "value": "ILLICIT_GAINS_CHECK",
            "casing": {}
          },
          {
            "generatedName": "RFI_TRIGGER",
            "value": "RFI_TRIGGER",
            "casing": {}
          },
          {
            "generatedName": "EDD_TRIGGER",
            "value": "EDD_TRIGGER",
            "casing": {}
          },
          {
            "generatedName": "KYC_TRIGGER",
            "value": "KYC_TRIGGER",
            "casing": {}
          },
          {
            "generatedName": "SCAM",
            "value": "SCAM",
            "casing": {}
          },
          {
            "generatedName": "ABUSE",
            "value": "ABUSE",
            "casing": {}
          },
          {
            "generatedName": "ACCOUNT_TAKEOVER",
            "value": "ACCOUNT_TAKEOVER",
            "casing": {}
          },
          {
            "generatedName": "DISPUTE",
            "value": "DISPUTE",
            "casing": {}
          },
          {
            "generatedName": "SANCTIONS",
            "value": "SANCTIONS",
            "casing": {}
          },
          {
            "generatedName": "SANCTIONS_PEP",
            "value": "SANCTIONS_PEP",
            "casing": {}
          },
          {
            "generatedName": "SANCTIONS_PEP_ADVERSE_MEDIA",
            "value": "SANCTIONS_PEP_ADVERSE_MEDIA",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "TransactionEvent": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "transactionEventTransactionState",
            "key": "transactionState",
            "schema": {
              "generatedName": "TransactionEventTransactionState",
              "schema": "TransactionState",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "transactionEventTimestamp",
            "key": "timestamp",
            "schema": {
              "description": "Timestamp of the event",
              "schema": {
                "minimum": 1262300400000,
                "maximum": 4133890801000,
                "type": "double"
              },
              "generatedName": "TransactionEventTimestamp",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionEventTransactionId",
            "key": "transactionId",
            "schema": {
              "description": "Transaction ID the event pertains to",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "TransactionEventTransactionId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionEventEventId",
            "key": "eventId",
            "schema": {
              "generatedName": "transactionEventEventId",
              "value": {
                "description": "Unique event ID",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TransactionEventEventId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionEventReason",
            "key": "reason",
            "schema": {
              "generatedName": "transactionEventReason",
              "value": {
                "description": "Reason for the event or a state change",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TransactionEventReason",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionEventEventDescription",
            "key": "eventDescription",
            "schema": {
              "generatedName": "transactionEventEventDescription",
              "value": {
                "description": "Event description",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TransactionEventEventDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionEventUpdatedTransactionAttributes",
            "key": "updatedTransactionAttributes",
            "schema": {
              "generatedName": "transactionEventUpdatedTransactionAttributes",
              "value": {
                "generatedName": "TransactionEventUpdatedTransactionAttributes",
                "schema": "TransactionUpdatable",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "transactionEventMetaData",
            "key": "metaData",
            "schema": {
              "generatedName": "transactionEventMetaData",
              "value": {
                "generatedName": "TransactionEventMetaData",
                "schema": "DeviceData",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for transaction-related events",
        "generatedName": "TransactionEvent",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ConsumerUserEvent": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "consumerUserEventTimestamp",
            "key": "timestamp",
            "schema": {
              "description": "Timestamp of the event",
              "schema": {
                "minimum": 1262300400000,
                "maximum": 4133890801000,
                "type": "double"
              },
              "generatedName": "ConsumerUserEventTimestamp",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "consumerUserEventUserId",
            "key": "userId",
            "schema": {
              "description": "Transaction ID the event pertains to",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "ConsumerUserEventUserId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "consumerUserEventEventId",
            "key": "eventId",
            "schema": {
              "generatedName": "consumerUserEventEventId",
              "nameOverride": "ConsumerUserEvent",
              "title": "ConsumerUserEvent",
              "value": {
                "description": "Unique event ID",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ConsumerUserEventEventId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "consumerUserEventReason",
            "key": "reason",
            "schema": {
              "generatedName": "consumerUserEventReason",
              "nameOverride": "ConsumerUserEvent",
              "title": "ConsumerUserEvent",
              "value": {
                "description": "Reason for the event or a state change",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ConsumerUserEventReason",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "consumerUserEventEventDescription",
            "key": "eventDescription",
            "schema": {
              "generatedName": "consumerUserEventEventDescription",
              "nameOverride": "ConsumerUserEvent",
              "title": "ConsumerUserEvent",
              "value": {
                "description": "Event description",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ConsumerUserEventEventDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "consumerUserEventUpdatedConsumerUserAttributes",
            "key": "updatedConsumerUserAttributes",
            "schema": {
              "generatedName": "consumerUserEventUpdatedConsumerUserAttributes",
              "nameOverride": "ConsumerUserEvent",
              "title": "ConsumerUserEvent",
              "value": {
                "generatedName": "ConsumerUserEventUpdatedConsumerUserAttributes",
                "schema": "UserOptional",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for consumer user-related events",
        "generatedName": "ConsumerUserEvent",
        "nameOverride": "ConsumerUserEvent",
        "title": "ConsumerUserEvent",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "BusinessUserEvent": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "businessUserEventTimestamp",
            "key": "timestamp",
            "schema": {
              "description": "Timestamp of the event",
              "schema": {
                "minimum": 1262300400000,
                "maximum": 4133890801000,
                "type": "double"
              },
              "generatedName": "BusinessUserEventTimestamp",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "businessUserEventUserId",
            "key": "userId",
            "schema": {
              "description": "Transaction ID the event pertains to",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "BusinessUserEventUserId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "businessUserEventEventId",
            "key": "eventId",
            "schema": {
              "generatedName": "businessUserEventEventId",
              "nameOverride": "BusinessUserEvent",
              "title": "BusinessUserEvent",
              "value": {
                "description": "Unique event ID",
                "schema": {
                  "type": "string"
                },
                "generatedName": "BusinessUserEventEventId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "businessUserEventReason",
            "key": "reason",
            "schema": {
              "generatedName": "businessUserEventReason",
              "nameOverride": "BusinessUserEvent",
              "title": "BusinessUserEvent",
              "value": {
                "description": "Reason for the event or a state change",
                "schema": {
                  "type": "string"
                },
                "generatedName": "BusinessUserEventReason",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "businessUserEventEventDescription",
            "key": "eventDescription",
            "schema": {
              "generatedName": "businessUserEventEventDescription",
              "nameOverride": "BusinessUserEvent",
              "title": "BusinessUserEvent",
              "value": {
                "description": "Event description",
                "schema": {
                  "type": "string"
                },
                "generatedName": "BusinessUserEventEventDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "businessUserEventUpdatedBusinessUserAttributes",
            "key": "updatedBusinessUserAttributes",
            "schema": {
              "generatedName": "businessUserEventUpdatedBusinessUserAttributes",
              "nameOverride": "BusinessUserEvent",
              "title": "BusinessUserEvent",
              "value": {
                "generatedName": "BusinessUserEventUpdatedBusinessUserAttributes",
                "schema": "BusinessOptional",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for business user-related events",
        "generatedName": "BusinessUserEvent",
        "nameOverride": "BusinessUserEvent",
        "title": "BusinessUserEvent",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CaseManagementEvent": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "caseManagementEventCaseStatus",
            "key": "caseStatus",
            "schema": {
              "description": "Status of a case. E.g. Open, Closed etc.",
              "generatedName": "CaseManagementEventCaseStatus",
              "values": [
                {
                  "generatedName": "CLOSED",
                  "value": "CLOSED",
                  "casing": {}
                },
                {
                  "generatedName": "HIT",
                  "value": "HIT",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "caseManagementEventTimestamp",
            "key": "timestamp",
            "schema": {
              "description": "Timestamp of the event",
              "schema": {
                "minimum": 1262300400000,
                "type": "double"
              },
              "generatedName": "CaseManagementEventTimestamp",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "caseManagementEventCaseStatusReason",
            "key": "caseStatusReason",
            "schema": {
              "description": "Case status reason. E.g. Closed & False Positive, Closed & Investigation Completed etc.",
              "generatedName": "CaseManagementEventCaseStatusReason",
              "values": [
                {
                  "generatedName": "FALSE_POSITIVE",
                  "value": "FALSE_POSITIVE",
                  "casing": {}
                },
                {
                  "generatedName": "INVESTIGATION_COMPLETED",
                  "value": "INVESTIGATION_COMPLETED",
                  "casing": {}
                },
                {
                  "generatedName": "DOCUMENTS_COLLECTED",
                  "value": "DOCUMENTS_COLLECTED",
                  "casing": {}
                },
                {
                  "generatedName": "OTHER",
                  "value": "OTHER",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "caseManagementEventTransactionId",
            "key": "transactionId",
            "schema": {
              "generatedName": "caseManagementEventTransactionId",
              "nameOverride": "CaseManagementEvent",
              "title": "CaseManagementEvent",
              "value": {
                "description": "Transaction ID the case pertains to",
                "schema": {
                  "minLength": 1,
                  "type": "string"
                },
                "generatedName": "CaseManagementEventTransactionId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "caseManagementEventUserId",
            "key": "userId",
            "schema": {
              "generatedName": "caseManagementEventUserId",
              "nameOverride": "CaseManagementEvent",
              "title": "CaseManagementEvent",
              "value": {
                "description": "User ID the case pertains to",
                "schema": {
                  "type": "string"
                },
                "generatedName": "CaseManagementEventUserId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "caseManagementEventEventId",
            "key": "eventId",
            "schema": {
              "generatedName": "caseManagementEventEventId",
              "nameOverride": "CaseManagementEvent",
              "title": "CaseManagementEvent",
              "value": {
                "description": "Event ID the case pertains to",
                "schema": {
                  "type": "string"
                },
                "generatedName": "CaseManagementEventEventId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "caseManagementEventCaseStatusReasonDescription",
            "key": "caseStatusReasonDescription",
            "schema": {
              "generatedName": "caseManagementEventCaseStatusReasonDescription",
              "nameOverride": "CaseManagementEvent",
              "title": "CaseManagementEvent",
              "value": {
                "description": "Case status reason description",
                "schema": {
                  "type": "string"
                },
                "generatedName": "CaseManagementEventCaseStatusReasonDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for case management events",
        "generatedName": "CaseManagementEvent",
        "nameOverride": "CaseManagementEvent",
        "title": "CaseManagementEvent",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Date": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "dateDay",
            "key": "day",
            "schema": {
              "description": "Day of date",
              "schema": {
                "type": "double"
              },
              "generatedName": "DateDay",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dateMonth",
            "key": "month",
            "schema": {
              "description": "Month of date",
              "schema": {
                "type": "double"
              },
              "generatedName": "DateMonth",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dateYear",
            "key": "year",
            "schema": {
              "description": "Year of date",
              "schema": {
                "type": "double"
              },
              "generatedName": "DateYear",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for date",
        "generatedName": "Date",
        "nameOverride": "Date",
        "title": "Date",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TransactionState": {
        "description": "Model for transaction states. E.g. Processing, Refunded, Successful etc.",
        "generatedName": "TransactionState",
        "nameOverride": "TransactionState",
        "title": "TransactionState",
        "values": [
          {
            "generatedName": "CREATED",
            "value": "CREATED",
            "casing": {}
          },
          {
            "generatedName": "PROCESSING",
            "value": "PROCESSING",
            "casing": {}
          },
          {
            "generatedName": "SENT",
            "value": "SENT",
            "casing": {}
          },
          {
            "generatedName": "EXPIRED",
            "value": "EXPIRED",
            "casing": {}
          },
          {
            "generatedName": "DECLINED",
            "value": "DECLINED",
            "casing": {}
          },
          {
            "generatedName": "SUSPENDED",
            "value": "SUSPENDED",
            "casing": {}
          },
          {
            "generatedName": "REFUNDED",
            "value": "REFUNDED",
            "casing": {}
          },
          {
            "generatedName": "SUCCESSFUL",
            "value": "SUCCESSFUL",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "AcquisitionChannel": {
        "description": "Model for User acquisition channel",
        "generatedName": "AcquisitionChannel",
        "nameOverride": "AcquisitionChannel",
        "title": "AcquisitionChannel",
        "values": [
          {
            "generatedName": "ORGANIC",
            "value": "ORGANIC",
            "casing": {}
          },
          {
            "generatedName": "PAID",
            "value": "PAID",
            "casing": {}
          },
          {
            "generatedName": "REFERRAL",
            "value": "REFERRAL",
            "casing": {}
          },
          {
            "generatedName": "OFFLINE",
            "value": "OFFLINE",
            "casing": {}
          },
          {
            "generatedName": "GATHERING",
            "value": "GATHERING",
            "casing": {}
          },
          {
            "generatedName": "UNKNOWN",
            "value": "UNKNOWN",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "UPIPaymentMethod": {
        "description": "Classify the method of payment as \"UPI\" for UPIDetails",
        "value": {
          "value": "UPI",
          "type": "string"
        },
        "generatedName": "UpiPaymentMethod",
        "nameOverride": "UPIPaymentMethod",
        "title": "UPIPaymentMethod",
        "groupName": [],
        "type": "literal"
      },
      "IBANPaymentMethod": {
        "description": "Classify the method of payment as \"IBAN\" for IBANDetails\n",
        "value": {
          "value": "IBAN",
          "type": "string"
        },
        "generatedName": "IbanPaymentMethod",
        "nameOverride": "IBANPaymentMethod",
        "title": "IBANPaymentMethod",
        "groupName": [],
        "type": "literal"
      },
      "CardPaymentMethod": {
        "description": "Classify the method of payment as \"Card\" for CardDetails\n",
        "value": {
          "value": "CARD",
          "type": "string"
        },
        "generatedName": "CardPaymentMethod",
        "nameOverride": "CardPaymentMethod",
        "title": "CardPaymentMethod",
        "groupName": [],
        "type": "literal"
      },
      "WalletPaymentMethod": {
        "description": "Classify the method of payment as \"Wallet\" for WalletDetails",
        "value": {
          "value": "WALLET",
          "type": "string"
        },
        "generatedName": "WalletPaymentMethod",
        "nameOverride": "WalletPaymentMethod",
        "title": "WalletPaymentMethod",
        "groupName": [],
        "type": "literal"
      },
      "ACHPaymentMethod": {
        "description": "Classify the method of payment as \"ACH\" for ACHDetails",
        "value": {
          "value": "ACH",
          "type": "string"
        },
        "generatedName": "AchPaymentMethod",
        "nameOverride": "ACHPaymentMethod",
        "title": "ACHPaymentMethod",
        "groupName": [],
        "type": "literal"
      },
      "SWIFTPaymentMethod": {
        "description": "Classify the method of payment as \"SWIFT\" for SWIFTDetails",
        "value": {
          "value": "SWIFT",
          "type": "string"
        },
        "generatedName": "SwiftPaymentMethod",
        "nameOverride": "SWIFTPaymentMethod",
        "title": "SWIFTPaymentMethod",
        "groupName": [],
        "type": "literal"
      },
      "CheckPaymentMethod": {
        "description": "Classify the method of payment as \"CHECK\" for CheckDetails",
        "value": {
          "value": "CHECK",
          "type": "string"
        },
        "generatedName": "CheckPaymentMethod",
        "nameOverride": "CheckPaymentMethod",
        "title": "CheckPaymentMethod",
        "groupName": [],
        "type": "literal"
      },
      "MpesaPaymentMethod": {
        "description": "Classify the method of payment as \"Mpesa\" for MpesaDetails",
        "value": {
          "value": "MPESA",
          "type": "string"
        },
        "generatedName": "MpesaPaymentMethod",
        "nameOverride": "MpesaPaymentMethod",
        "title": "MpesaPaymentMethod",
        "groupName": [],
        "type": "literal"
      },
      "GeneralBankAccountPaymentMethod": {
        "description": "Classify the method of payment as \"GENERIC_BANK_ACCOUNT\" for GenericBankAccountDetails",
        "value": {
          "value": "GENERIC_BANK_ACCOUNT",
          "type": "string"
        },
        "generatedName": "GeneralBankAccountPaymentMethod",
        "nameOverride": "GeneralBankAccountPaymentMethod",
        "title": "GeneralBankAccountPaymentMethod",
        "groupName": [],
        "type": "literal"
      },
      "UserState": {
        "generatedName": "UserState",
        "nameOverride": "UserState",
        "title": "UserState",
        "values": [
          {
            "generatedName": "UNACCEPTABLE",
            "value": "UNACCEPTABLE",
            "casing": {}
          },
          {
            "generatedName": "UNDECIDED",
            "value": "UNDECIDED",
            "casing": {}
          },
          {
            "generatedName": "TERMINATED",
            "value": "TERMINATED",
            "casing": {}
          },
          {
            "generatedName": "ACTIVE",
            "value": "ACTIVE",
            "casing": {}
          },
          {
            "generatedName": "INACTIVE",
            "value": "INACTIVE",
            "casing": {}
          },
          {
            "generatedName": "DORMANT",
            "value": "DORMANT",
            "casing": {}
          },
          {
            "generatedName": "CREATED",
            "value": "CREATED",
            "casing": {}
          },
          {
            "generatedName": "DELETED",
            "value": "DELETED",
            "casing": {}
          },
          {
            "generatedName": "SUSPENDED",
            "value": "SUSPENDED",
            "casing": {}
          },
          {
            "generatedName": "BLOCKED",
            "value": "BLOCKED",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "KYCStatus": {
        "generatedName": "KycStatus",
        "nameOverride": "KYCStatus",
        "title": "KYCStatus",
        "values": [
          {
            "generatedName": "SUCCESSFUL",
            "value": "SUCCESSFUL",
            "casing": {}
          },
          {
            "generatedName": "FAILED",
            "value": "FAILED",
            "casing": {}
          },
          {
            "generatedName": "NOT_STARTED",
            "value": "NOT_STARTED",
            "casing": {}
          },
          {
            "generatedName": "IN_PROGRESS",
            "value": "IN_PROGRESS",
            "casing": {}
          },
          {
            "generatedName": "MANUAL_REVIEW",
            "value": "MANUAL_REVIEW",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "PEPStatus": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "pepStatusIsPepHit",
            "key": "isPepHit",
            "schema": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "PepStatusIsPepHit",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "pepStatusPepCountry",
            "key": "pepCountry",
            "schema": {
              "generatedName": "pepStatusPepCountry",
              "nameOverride": "PEPStatus",
              "title": "PEPStatus",
              "value": {
                "schema": {
                  "minLength": 2,
                  "maxLength": 2,
                  "type": "string"
                },
                "generatedName": "PepStatusPepCountry",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PepStatus",
        "nameOverride": "PEPStatus",
        "title": "PEPStatus",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "KYCStatusDetails": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "kycStatusDetailsReason",
            "key": "reason",
            "schema": {
              "generatedName": "kycStatusDetailsReason",
              "nameOverride": "KYCStatusDetails",
              "title": "KYCStatusDetails",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "KycStatusDetailsReason",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "kycStatusDetailsStatus",
            "key": "status",
            "schema": {
              "generatedName": "kycStatusDetailsStatus",
              "nameOverride": "KYCStatusDetails",
              "title": "KYCStatusDetails",
              "value": {
                "generatedName": "KycStatusDetailsStatus",
                "schema": "KYCStatus",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "KycStatusDetails",
        "nameOverride": "KYCStatusDetails",
        "title": "KYCStatusDetails",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "UserStateDetails": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "userStateDetailsUserId",
            "key": "userId",
            "schema": {
              "generatedName": "userStateDetailsUserId",
              "nameOverride": "UserStateDetails",
              "title": "UserStateDetails",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "UserStateDetailsUserId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userStateDetailsReason",
            "key": "reason",
            "schema": {
              "generatedName": "userStateDetailsReason",
              "nameOverride": "UserStateDetails",
              "title": "UserStateDetails",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "UserStateDetailsReason",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userStateDetailsState",
            "key": "state",
            "schema": {
              "generatedName": "UserStateDetailsState",
              "schema": "UserState",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UserStateDetails",
        "nameOverride": "UserStateDetails",
        "title": "UserStateDetails",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CaseClosedDetails": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "caseClosedDetailsCaseId",
            "key": "caseId",
            "schema": {
              "generatedName": "caseClosedDetailsCaseId",
              "nameOverride": "CaseClosedDetails",
              "title": "CaseClosedDetails",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "CaseClosedDetailsCaseId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "caseClosedDetailsStatus",
            "key": "status",
            "schema": {
              "generatedName": "caseClosedDetailsStatus",
              "nameOverride": "CaseClosedDetails",
              "title": "CaseClosedDetails",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "CaseClosedDetailsStatus",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "caseClosedDetailsReasons",
            "key": "reasons",
            "schema": {
              "generatedName": "caseClosedDetailsReasons",
              "nameOverride": "CaseClosedDetails",
              "title": "CaseClosedDetails",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "CaseClosedDetailsReasonsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "CaseClosedDetailsReasons",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "caseClosedDetailsReasonDescriptionForOther",
            "key": "reasonDescriptionForOther",
            "schema": {
              "generatedName": "caseClosedDetailsReasonDescriptionForOther",
              "nameOverride": "CaseClosedDetails",
              "title": "CaseClosedDetails",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "CaseClosedDetailsReasonDescriptionForOtherItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "CaseClosedDetailsReasonDescriptionForOther",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "caseClosedDetailsComment",
            "key": "comment",
            "schema": {
              "generatedName": "caseClosedDetailsComment",
              "nameOverride": "CaseClosedDetails",
              "title": "CaseClosedDetails",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "CaseClosedDetailsComment",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "caseClosedDetailsUserId",
            "key": "userId",
            "schema": {
              "generatedName": "caseClosedDetailsUserId",
              "nameOverride": "CaseClosedDetails",
              "title": "CaseClosedDetails",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "CaseClosedDetailsUserId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "caseClosedDetailsTransactionIds",
            "key": "transactionIds",
            "schema": {
              "generatedName": "caseClosedDetailsTransactionIds",
              "nameOverride": "CaseClosedDetails",
              "title": "CaseClosedDetails",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "CaseClosedDetailsTransactionIdsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "CaseClosedDetailsTransactionIds",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CaseClosedDetails",
        "nameOverride": "CaseClosedDetails",
        "title": "CaseClosedDetails",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "AlertClosedDetails": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "alertClosedDetailsAlertId",
            "key": "alertId",
            "schema": {
              "generatedName": "alertClosedDetailsAlertId",
              "nameOverride": "AlertClosedDetails",
              "title": "AlertClosedDetails",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AlertClosedDetailsAlertId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "alertClosedDetailsStatus",
            "key": "status",
            "schema": {
              "generatedName": "alertClosedDetailsStatus",
              "nameOverride": "AlertClosedDetails",
              "title": "AlertClosedDetails",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AlertClosedDetailsStatus",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "alertClosedDetailsReasons",
            "key": "reasons",
            "schema": {
              "generatedName": "alertClosedDetailsReasons",
              "nameOverride": "AlertClosedDetails",
              "title": "AlertClosedDetails",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AlertClosedDetailsReasonsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "AlertClosedDetailsReasons",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "alertClosedDetailsReasonDescriptionForOther",
            "key": "reasonDescriptionForOther",
            "schema": {
              "generatedName": "alertClosedDetailsReasonDescriptionForOther",
              "nameOverride": "AlertClosedDetails",
              "title": "AlertClosedDetails",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AlertClosedDetailsReasonDescriptionForOtherItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "AlertClosedDetailsReasonDescriptionForOther",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "alertClosedDetailsComment",
            "key": "comment",
            "schema": {
              "generatedName": "alertClosedDetailsComment",
              "nameOverride": "AlertClosedDetails",
              "title": "AlertClosedDetails",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AlertClosedDetailsComment",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "alertClosedDetailsUserId",
            "key": "userId",
            "schema": {
              "generatedName": "alertClosedDetailsUserId",
              "nameOverride": "AlertClosedDetails",
              "title": "AlertClosedDetails",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AlertClosedDetailsUserId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "alertClosedDetailsTransactionIds",
            "key": "transactionIds",
            "schema": {
              "generatedName": "alertClosedDetailsTransactionIds",
              "nameOverride": "AlertClosedDetails",
              "title": "AlertClosedDetails",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AlertClosedDetailsTransactionIdsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "AlertClosedDetailsTransactionIds",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "alertClosedDetailsRuleName",
            "key": "ruleName",
            "schema": {
              "generatedName": "alertClosedDetailsRuleName",
              "nameOverride": "AlertClosedDetails",
              "title": "AlertClosedDetails",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AlertClosedDetailsRuleName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "alertClosedDetailsRuleDescription",
            "key": "ruleDescription",
            "schema": {
              "generatedName": "alertClosedDetailsRuleDescription",
              "nameOverride": "AlertClosedDetails",
              "title": "AlertClosedDetails",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AlertClosedDetailsRuleDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "alertClosedDetailsRuleId",
            "key": "ruleId",
            "schema": {
              "generatedName": "alertClosedDetailsRuleId",
              "nameOverride": "AlertClosedDetails",
              "title": "AlertClosedDetails",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AlertClosedDetailsRuleId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "alertClosedDetailsRuleInstanceId",
            "key": "ruleInstanceId",
            "schema": {
              "generatedName": "alertClosedDetailsRuleInstanceId",
              "nameOverride": "AlertClosedDetails",
              "title": "AlertClosedDetails",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AlertClosedDetailsRuleInstanceId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AlertClosedDetails",
        "nameOverride": "AlertClosedDetails",
        "title": "AlertClosedDetails",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "RiskLevel": {
        "generatedName": "RiskLevel",
        "nameOverride": "RiskLevel",
        "title": "RiskLevel",
        "values": [
          {
            "generatedName": "VERY_HIGH",
            "value": "VERY_HIGH",
            "casing": {}
          },
          {
            "generatedName": "HIGH",
            "value": "HIGH",
            "casing": {}
          },
          {
            "generatedName": "MEDIUM",
            "value": "MEDIUM",
            "casing": {}
          },
          {
            "generatedName": "LOW",
            "value": "LOW",
            "casing": {}
          },
          {
            "generatedName": "VERY_LOW",
            "value": "VERY_LOW",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "CardExpiry": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "cardExpiryMonth",
            "key": "month",
            "schema": {
              "generatedName": "cardExpiryMonth",
              "nameOverride": "CardExpiry",
              "title": "CardExpiry",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "CardExpiryMonth",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "cardExpiryYear",
            "key": "year",
            "schema": {
              "generatedName": "cardExpiryYear",
              "nameOverride": "CardExpiry",
              "title": "CardExpiry",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "CardExpiryYear",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CardExpiry",
        "nameOverride": "CardExpiry",
        "title": "CardExpiry",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TransactionType": {
        "generatedName": "TransactionType",
        "nameOverride": "TransactionType",
        "title": "TransactionType",
        "values": [
          {
            "generatedName": "DEPOSIT",
            "value": "DEPOSIT",
            "casing": {}
          },
          {
            "generatedName": "TRANSFER",
            "value": "TRANSFER",
            "casing": {}
          },
          {
            "generatedName": "EXTERNAL_PAYMENT",
            "value": "EXTERNAL_PAYMENT",
            "casing": {}
          },
          {
            "generatedName": "WITHDRAWAL",
            "value": "WITHDRAWAL",
            "casing": {}
          },
          {
            "generatedName": "REFUND",
            "value": "REFUND",
            "casing": {}
          },
          {
            "generatedName": "OTHER",
            "value": "OTHER",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "WebhookEvent": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "webhookEventId",
            "key": "id",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "WebhookEventId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "webhookEventType",
            "key": "type",
            "schema": {
              "generatedName": "WebhookEventType",
              "schema": "WebhookEventType",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "webhookEventData",
            "key": "data",
            "schema": {
              "generatedName": "WebhookEventData",
              "schema": "UserStateDetails",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "webhookEventCreatedTimestamp",
            "key": "createdTimestamp",
            "schema": {
              "schema": {
                "minimum": 1262300400000,
                "type": "double"
              },
              "generatedName": "WebhookEventCreatedTimestamp",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WebhookEvent",
        "nameOverride": "WebhookEvent",
        "title": "WebhookEvent",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "WebhookEventType": {
        "generatedName": "WebhookEventType",
        "nameOverride": "WebhookEventType",
        "title": "WebhookEventType",
        "values": [
          {
            "generatedName": "CASE_CLOSED",
            "value": "CASE_CLOSED",
            "casing": {}
          },
          {
            "generatedName": "USER_STATE_UPDATED",
            "value": "USER_STATE_UPDATED",
            "casing": {}
          },
          {
            "generatedName": "ALERT_CLOSED",
            "value": "ALERT_CLOSED",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "ListType": {
        "generatedName": "ListType",
        "values": [
          {
            "generatedName": "WHITELIST",
            "value": "WHITELIST",
            "casing": {}
          },
          {
            "generatedName": "BLACKLIST",
            "value": "BLACKLIST",
            "casing": {}
          },
          {
            "generatedName": "FLAGRIGHT_LIBRARY",
            "value": "FLAGRIGHT_LIBRARY",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "ListSubtype": {
        "generatedName": "ListSubtype",
        "values": [
          {
            "generatedName": "USER_ID",
            "value": "USER_ID",
            "casing": {}
          },
          {
            "generatedName": "CARD_FINGERPRINT_NUMBER",
            "value": "CARD_FINGERPRINT_NUMBER",
            "casing": {}
          },
          {
            "generatedName": "IBAN_NUMBER",
            "value": "IBAN_NUMBER",
            "casing": {}
          },
          {
            "generatedName": "BANK_ACCOUNT_NUMBER",
            "value": "BANK_ACCOUNT_NUMBER",
            "casing": {}
          },
          {
            "generatedName": "ACH_ACCOUNT_NUMBER",
            "value": "ACH_ACCOUNT_NUMBER",
            "casing": {}
          },
          {
            "generatedName": "SWIFT_ACCOUNT_NUMBER",
            "value": "SWIFT_ACCOUNT_NUMBER",
            "casing": {}
          },
          {
            "generatedName": "BIC",
            "value": "BIC",
            "casing": {}
          },
          {
            "generatedName": "BANK_SWIFT_CODE",
            "value": "BANK_SWIFT_CODE",
            "casing": {}
          },
          {
            "generatedName": "UPI_IDENTIFYING_NUMBER",
            "value": "UPI_IDENTIFYING_NUMBER",
            "casing": {}
          },
          {
            "generatedName": "IP_ADDRESS",
            "value": "IP_ADDRESS",
            "casing": {}
          },
          {
            "generatedName": "STRING",
            "value": "STRING",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "ListKeyMetadata": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "ListKeyMetadataKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "ListKeyMetadataValue",
          "type": "unknown"
        },
        "generatedName": "ListKeyMetadata",
        "title": "ListKeyMetadata",
        "nameOverride": "ListKeyMetadata",
        "groupName": [],
        "type": "map"
      },
      "ListData": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "listDataMetadata",
            "key": "metadata",
            "schema": {
              "generatedName": "listDataMetadata",
              "nameOverride": "ListData",
              "title": "ListData",
              "value": {
                "generatedName": "ListDataMetadata",
                "schema": "ListMetadata",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "listDataItems",
            "key": "items",
            "schema": {
              "generatedName": "listDataItems",
              "nameOverride": "ListData",
              "title": "ListData",
              "value": {
                "description": "List items",
                "value": {
                  "generatedName": "ListDataItemsItem",
                  "schema": "ListItem",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ListDataItems",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Payload of a list, new or existed",
        "generatedName": "ListData",
        "nameOverride": "ListData",
        "title": "ListData",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ListItem": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "listItemKey",
            "key": "key",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ListItemKey",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "listItemMetadata",
            "key": "metadata",
            "schema": {
              "generatedName": "listItemMetadata",
              "nameOverride": "ListItem",
              "title": "ListItem",
              "value": {
                "generatedName": "ListItemMetadata",
                "schema": "ListKeyMetadata",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ListItem",
        "nameOverride": "ListItem",
        "title": "ListItem",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ListMetadata": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "listMetadataName",
            "key": "name",
            "schema": {
              "generatedName": "listMetadataName",
              "nameOverride": "ListMetadata",
              "title": "ListMetadata",
              "value": {
                "description": "List name",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ListMetadataName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "listMetadataDescription",
            "key": "description",
            "schema": {
              "generatedName": "listMetadataDescription",
              "nameOverride": "ListMetadata",
              "title": "ListMetadata",
              "value": {
                "description": "List description",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ListMetadataDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "listMetadataStatus",
            "key": "status",
            "schema": {
              "generatedName": "listMetadataStatus",
              "nameOverride": "ListMetadata",
              "title": "ListMetadata",
              "value": {
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "ListMetadataStatus",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "listMetadataChecksum",
            "key": "checksum",
            "schema": {
              "generatedName": "listMetadataChecksum",
              "nameOverride": "ListMetadata",
              "title": "ListMetadata",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ListMetadataChecksum",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ListMetadata",
        "nameOverride": "ListMetadata",
        "title": "ListMetadata",
        "groupName": [],
        "additionalProperties": true,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ListExisted": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "listExistedListId",
            "key": "listId",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ListExistedListId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "listExistedHeader",
            "key": "header",
            "schema": {
              "generatedName": "ListExistedHeader",
              "schema": "ListHeader",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "listExistedItems",
            "key": "items",
            "schema": {
              "description": "List items",
              "value": {
                "generatedName": "ListExistedItemsItem",
                "schema": "ListItem",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "ListExistedItems",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "List with ID and header",
        "generatedName": "ListExisted",
        "nameOverride": "ListExisted",
        "title": "ListExisted",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ListHeader": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "listHeaderListId",
            "key": "listId",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ListHeaderListId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "listHeaderListType",
            "key": "listType",
            "schema": {
              "generatedName": "ListHeaderListType",
              "schema": "ListType",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "listHeaderSubtype",
            "key": "subtype",
            "schema": {
              "generatedName": "ListHeaderSubtype",
              "schema": "ListSubtype",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "listHeaderMetadata",
            "key": "metadata",
            "schema": {
              "generatedName": "listHeaderMetadata",
              "nameOverride": "ListHeader",
              "title": "ListHeader",
              "value": {
                "generatedName": "ListHeaderMetadata",
                "schema": "ListMetadata",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "listHeaderCreatedTimestamp",
            "key": "createdTimestamp",
            "schema": {
              "schema": {
                "type": "double"
              },
              "generatedName": "ListHeaderCreatedTimestamp",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "listHeaderSize",
            "key": "size",
            "schema": {
              "schema": {
                "type": "double"
              },
              "generatedName": "ListHeaderSize",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ListHeader",
        "nameOverride": "ListHeader",
        "title": "ListHeader",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PaymentMethod": {
        "generatedName": "PaymentMethod",
        "nameOverride": "PaymentMethod",
        "title": "PaymentMethod",
        "values": [
          {
            "generatedName": "ACH",
            "value": "ACH",
            "casing": {}
          },
          {
            "generatedName": "CARD",
            "value": "CARD",
            "casing": {}
          },
          {
            "generatedName": "IBAN",
            "value": "IBAN",
            "casing": {}
          },
          {
            "generatedName": "UPI",
            "value": "UPI",
            "casing": {}
          },
          {
            "generatedName": "GENERIC_BANK_ACCOUNT",
            "value": "GENERIC_BANK_ACCOUNT",
            "casing": {}
          },
          {
            "generatedName": "MPESA",
            "value": "MPESA",
            "casing": {}
          },
          {
            "generatedName": "SWIFT",
            "value": "SWIFT",
            "casing": {}
          },
          {
            "generatedName": "WALLET",
            "value": "WALLET",
            "casing": {}
          },
          {
            "generatedName": "CHECK",
            "value": "CHECK",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "CardMerchantDetails": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "cardMerchantDetailsId",
            "key": "id",
            "schema": {
              "generatedName": "cardMerchantDetailsId",
              "nameOverride": "CardMerchantDetails",
              "title": "CardMerchantDetails",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "CardMerchantDetailsId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "cardMerchantDetailsCategory",
            "key": "category",
            "schema": {
              "generatedName": "cardMerchantDetailsCategory",
              "nameOverride": "CardMerchantDetails",
              "title": "CardMerchantDetails",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "CardMerchantDetailsCategory",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "cardMerchantDetailsMcc",
            "key": "MCC",
            "schema": {
              "generatedName": "cardMerchantDetailsMcc",
              "nameOverride": "CardMerchantDetails",
              "title": "CardMerchantDetails",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "CardMerchantDetailsMcc",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "cardMerchantDetailsCity",
            "key": "city",
            "schema": {
              "generatedName": "cardMerchantDetailsCity",
              "nameOverride": "CardMerchantDetails",
              "title": "CardMerchantDetails",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "CardMerchantDetailsCity",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "cardMerchantDetailsCountry",
            "key": "country",
            "schema": {
              "generatedName": "cardMerchantDetailsCountry",
              "nameOverride": "CardMerchantDetails",
              "title": "CardMerchantDetails",
              "value": {
                "schema": {
                  "minLength": 2,
                  "maxLength": 2,
                  "type": "string"
                },
                "generatedName": "CardMerchantDetailsCountry",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "cardMerchantDetailsState",
            "key": "state",
            "schema": {
              "generatedName": "cardMerchantDetailsState",
              "nameOverride": "CardMerchantDetails",
              "title": "CardMerchantDetails",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "CardMerchantDetailsState",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "cardMerchantDetailsPostCode",
            "key": "postCode",
            "schema": {
              "generatedName": "cardMerchantDetailsPostCode",
              "nameOverride": "CardMerchantDetails",
              "title": "CardMerchantDetails",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "CardMerchantDetailsPostCode",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CardMerchantDetails",
        "nameOverride": "CardMerchantDetails",
        "title": "CardMerchantDetails",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CheckDetails": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "checkDetailsCheckNumber",
            "key": "checkNumber",
            "schema": {
              "generatedName": "checkDetailsCheckNumber",
              "nameOverride": "CheckDetails",
              "title": "CheckDetails",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "CheckDetailsCheckNumber",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "checkDetailsCheckIdentifier",
            "key": "checkIdentifier",
            "schema": {
              "generatedName": "checkDetailsCheckIdentifier",
              "nameOverride": "CheckDetails",
              "title": "CheckDetails",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "CheckDetailsCheckIdentifier",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "checkDetailsName",
            "key": "name",
            "schema": {
              "generatedName": "checkDetailsName",
              "nameOverride": "CheckDetails",
              "title": "CheckDetails",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "CheckDetailsName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "checkDetailsDeliveryStatus",
            "key": "deliveryStatus",
            "schema": {
              "generatedName": "checkDetailsDeliveryStatus",
              "nameOverride": "CheckDetails",
              "title": "CheckDetails",
              "value": {
                "generatedName": "CheckDetailsDeliveryStatus",
                "values": [
                  {
                    "generatedName": "COMPLETED",
                    "value": "COMPLETED",
                    "casing": {}
                  },
                  {
                    "generatedName": "PENDING",
                    "value": "PENDING",
                    "casing": {}
                  },
                  {
                    "generatedName": "SETTLED",
                    "value": "SETTLED",
                    "casing": {}
                  },
                  {
                    "generatedName": "CANCELED",
                    "value": "CANCELED",
                    "casing": {}
                  },
                  {
                    "generatedName": "REFUND",
                    "value": "REFUND",
                    "casing": {}
                  },
                  {
                    "generatedName": "DECLINED",
                    "value": "DECLINED",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "checkDetailsEtaTimestamp",
            "key": "etaTimestamp",
            "schema": {
              "generatedName": "checkDetailsEtaTimestamp",
              "nameOverride": "CheckDetails",
              "title": "CheckDetails",
              "value": {
                "schema": {
                  "minimum": 1262300400000,
                  "type": "double"
                },
                "generatedName": "CheckDetailsEtaTimestamp",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "checkDetailsShippingAddress",
            "key": "shippingAddress",
            "schema": {
              "generatedName": "checkDetailsShippingAddress",
              "nameOverride": "CheckDetails",
              "title": "CheckDetails",
              "value": {
                "generatedName": "CheckDetailsShippingAddress",
                "schema": "Address",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CheckDetails",
        "nameOverride": "CheckDetails",
        "title": "CheckDetails",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CountryCode": {
        "generatedName": "CountryCode",
        "nameOverride": "CountryCode",
        "title": "CountryCode",
        "values": [
          {
            "generatedName": "AF",
            "value": "AF",
            "casing": {}
          },
          {
            "generatedName": "AL",
            "value": "AL",
            "casing": {}
          },
          {
            "generatedName": "DZ",
            "value": "DZ",
            "casing": {}
          },
          {
            "generatedName": "AS",
            "value": "AS",
            "casing": {}
          },
          {
            "generatedName": "AD",
            "value": "AD",
            "casing": {}
          },
          {
            "generatedName": "AO",
            "value": "AO",
            "casing": {}
          },
          {
            "generatedName": "AI",
            "value": "AI",
            "casing": {}
          },
          {
            "generatedName": "AQ",
            "value": "AQ",
            "casing": {}
          },
          {
            "generatedName": "AG",
            "value": "AG",
            "casing": {}
          },
          {
            "generatedName": "AR",
            "value": "AR",
            "casing": {}
          },
          {
            "generatedName": "AM",
            "value": "AM",
            "casing": {}
          },
          {
            "generatedName": "AW",
            "value": "AW",
            "casing": {}
          },
          {
            "generatedName": "AU",
            "value": "AU",
            "casing": {}
          },
          {
            "generatedName": "AT",
            "value": "AT",
            "casing": {}
          },
          {
            "generatedName": "AZ",
            "value": "AZ",
            "casing": {}
          },
          {
            "generatedName": "BS",
            "value": "BS",
            "casing": {}
          },
          {
            "generatedName": "BH",
            "value": "BH",
            "casing": {}
          },
          {
            "generatedName": "BD",
            "value": "BD",
            "casing": {}
          },
          {
            "generatedName": "BB",
            "value": "BB",
            "casing": {}
          },
          {
            "generatedName": "BY",
            "value": "BY",
            "casing": {}
          },
          {
            "generatedName": "BE",
            "value": "BE",
            "casing": {}
          },
          {
            "generatedName": "BZ",
            "value": "BZ",
            "casing": {}
          },
          {
            "generatedName": "BJ",
            "value": "BJ",
            "casing": {}
          },
          {
            "generatedName": "BM",
            "value": "BM",
            "casing": {}
          },
          {
            "generatedName": "BT",
            "value": "BT",
            "casing": {}
          },
          {
            "generatedName": "BO",
            "value": "BO",
            "casing": {}
          },
          {
            "generatedName": "BQ",
            "value": "BQ",
            "casing": {}
          },
          {
            "generatedName": "BA",
            "value": "BA",
            "casing": {}
          },
          {
            "generatedName": "BW",
            "value": "BW",
            "casing": {}
          },
          {
            "generatedName": "BV",
            "value": "BV",
            "casing": {}
          },
          {
            "generatedName": "BR",
            "value": "BR",
            "casing": {}
          },
          {
            "generatedName": "IO",
            "value": "IO",
            "casing": {}
          },
          {
            "generatedName": "BN",
            "value": "BN",
            "casing": {}
          },
          {
            "generatedName": "BG",
            "value": "BG",
            "casing": {}
          },
          {
            "generatedName": "BF",
            "value": "BF",
            "casing": {}
          },
          {
            "generatedName": "BI",
            "value": "BI",
            "casing": {}
          },
          {
            "generatedName": "CV",
            "value": "CV",
            "casing": {}
          },
          {
            "generatedName": "KH",
            "value": "KH",
            "casing": {}
          },
          {
            "generatedName": "CM",
            "value": "CM",
            "casing": {}
          },
          {
            "generatedName": "CA",
            "value": "CA",
            "casing": {}
          },
          {
            "generatedName": "KY",
            "value": "KY",
            "casing": {}
          },
          {
            "generatedName": "CF",
            "value": "CF",
            "casing": {}
          },
          {
            "generatedName": "TD",
            "value": "TD",
            "casing": {}
          },
          {
            "generatedName": "CL",
            "value": "CL",
            "casing": {}
          },
          {
            "generatedName": "CN",
            "value": "CN",
            "casing": {}
          },
          {
            "generatedName": "CX",
            "value": "CX",
            "casing": {}
          },
          {
            "generatedName": "CC",
            "value": "CC",
            "casing": {}
          },
          {
            "generatedName": "CO",
            "value": "CO",
            "casing": {}
          },
          {
            "generatedName": "KM",
            "value": "KM",
            "casing": {}
          },
          {
            "generatedName": "CD",
            "value": "CD",
            "casing": {}
          },
          {
            "generatedName": "CG",
            "value": "CG",
            "casing": {}
          },
          {
            "generatedName": "CK",
            "value": "CK",
            "casing": {}
          },
          {
            "generatedName": "CR",
            "value": "CR",
            "casing": {}
          },
          {
            "generatedName": "HR",
            "value": "HR",
            "casing": {}
          },
          {
            "generatedName": "CU",
            "value": "CU",
            "casing": {}
          },
          {
            "generatedName": "CW",
            "value": "CW",
            "casing": {}
          },
          {
            "generatedName": "CY",
            "value": "CY",
            "casing": {}
          },
          {
            "generatedName": "CZ",
            "value": "CZ",
            "casing": {}
          },
          {
            "generatedName": "CI",
            "value": "CI",
            "casing": {}
          },
          {
            "generatedName": "DK",
            "value": "DK",
            "casing": {}
          },
          {
            "generatedName": "DJ",
            "value": "DJ",
            "casing": {}
          },
          {
            "generatedName": "DM",
            "value": "DM",
            "casing": {}
          },
          {
            "generatedName": "DO",
            "value": "DO",
            "casing": {}
          },
          {
            "generatedName": "EC",
            "value": "EC",
            "casing": {}
          },
          {
            "generatedName": "EG",
            "value": "EG",
            "casing": {}
          },
          {
            "generatedName": "SV",
            "value": "SV",
            "casing": {}
          },
          {
            "generatedName": "GQ",
            "value": "GQ",
            "casing": {}
          },
          {
            "generatedName": "ER",
            "value": "ER",
            "casing": {}
          },
          {
            "generatedName": "EE",
            "value": "EE",
            "casing": {}
          },
          {
            "generatedName": "SZ",
            "value": "SZ",
            "casing": {}
          },
          {
            "generatedName": "ET",
            "value": "ET",
            "casing": {}
          },
          {
            "generatedName": "FK",
            "value": "FK",
            "casing": {}
          },
          {
            "generatedName": "FO",
            "value": "FO",
            "casing": {}
          },
          {
            "generatedName": "FJ",
            "value": "FJ",
            "casing": {}
          },
          {
            "generatedName": "FI",
            "value": "FI",
            "casing": {}
          },
          {
            "generatedName": "FR",
            "value": "FR",
            "casing": {}
          },
          {
            "generatedName": "GF",
            "value": "GF",
            "casing": {}
          },
          {
            "generatedName": "PF",
            "value": "PF",
            "casing": {}
          },
          {
            "generatedName": "TF",
            "value": "TF",
            "casing": {}
          },
          {
            "generatedName": "GA",
            "value": "GA",
            "casing": {}
          },
          {
            "generatedName": "GM",
            "value": "GM",
            "casing": {}
          },
          {
            "generatedName": "GE",
            "value": "GE",
            "casing": {}
          },
          {
            "generatedName": "DE",
            "value": "DE",
            "casing": {}
          },
          {
            "generatedName": "GH",
            "value": "GH",
            "casing": {}
          },
          {
            "generatedName": "GI",
            "value": "GI",
            "casing": {}
          },
          {
            "generatedName": "GR",
            "value": "GR",
            "casing": {}
          },
          {
            "generatedName": "GL",
            "value": "GL",
            "casing": {}
          },
          {
            "generatedName": "GD",
            "value": "GD",
            "casing": {}
          },
          {
            "generatedName": "GP",
            "value": "GP",
            "casing": {}
          },
          {
            "generatedName": "GU",
            "value": "GU",
            "casing": {}
          },
          {
            "generatedName": "GT",
            "value": "GT",
            "casing": {}
          },
          {
            "generatedName": "GG",
            "value": "GG",
            "casing": {}
          },
          {
            "generatedName": "GN",
            "value": "GN",
            "casing": {}
          },
          {
            "generatedName": "GW",
            "value": "GW",
            "casing": {}
          },
          {
            "generatedName": "GY",
            "value": "GY",
            "casing": {}
          },
          {
            "generatedName": "HT",
            "value": "HT",
            "casing": {}
          },
          {
            "generatedName": "HM",
            "value": "HM",
            "casing": {}
          },
          {
            "generatedName": "VA",
            "value": "VA",
            "casing": {}
          },
          {
            "generatedName": "HN",
            "value": "HN",
            "casing": {}
          },
          {
            "generatedName": "HK",
            "value": "HK",
            "casing": {}
          },
          {
            "generatedName": "HU",
            "value": "HU",
            "casing": {}
          },
          {
            "generatedName": "IS",
            "value": "IS",
            "casing": {}
          },
          {
            "generatedName": "IN",
            "value": "IN",
            "casing": {}
          },
          {
            "generatedName": "ID",
            "value": "ID",
            "casing": {}
          },
          {
            "generatedName": "IR",
            "value": "IR",
            "casing": {}
          },
          {
            "generatedName": "IQ",
            "value": "IQ",
            "casing": {}
          },
          {
            "generatedName": "IE",
            "value": "IE",
            "casing": {}
          },
          {
            "generatedName": "IM",
            "value": "IM",
            "casing": {}
          },
          {
            "generatedName": "IL",
            "value": "IL",
            "casing": {}
          },
          {
            "generatedName": "IT",
            "value": "IT",
            "casing": {}
          },
          {
            "generatedName": "JM",
            "value": "JM",
            "casing": {}
          },
          {
            "generatedName": "JP",
            "value": "JP",
            "casing": {}
          },
          {
            "generatedName": "JE",
            "value": "JE",
            "casing": {}
          },
          {
            "generatedName": "JO",
            "value": "JO",
            "casing": {}
          },
          {
            "generatedName": "KZ",
            "value": "KZ",
            "casing": {}
          },
          {
            "generatedName": "KE",
            "value": "KE",
            "casing": {}
          },
          {
            "generatedName": "KI",
            "value": "KI",
            "casing": {}
          },
          {
            "generatedName": "KP",
            "value": "KP",
            "casing": {}
          },
          {
            "generatedName": "KR",
            "value": "KR",
            "casing": {}
          },
          {
            "generatedName": "KW",
            "value": "KW",
            "casing": {}
          },
          {
            "generatedName": "KG",
            "value": "KG",
            "casing": {}
          },
          {
            "generatedName": "LA",
            "value": "LA",
            "casing": {}
          },
          {
            "generatedName": "LV",
            "value": "LV",
            "casing": {}
          },
          {
            "generatedName": "LB",
            "value": "LB",
            "casing": {}
          },
          {
            "generatedName": "LS",
            "value": "LS",
            "casing": {}
          },
          {
            "generatedName": "LR",
            "value": "LR",
            "casing": {}
          },
          {
            "generatedName": "LY",
            "value": "LY",
            "casing": {}
          },
          {
            "generatedName": "LI",
            "value": "LI",
            "casing": {}
          },
          {
            "generatedName": "LT",
            "value": "LT",
            "casing": {}
          },
          {
            "generatedName": "LU",
            "value": "LU",
            "casing": {}
          },
          {
            "generatedName": "MO",
            "value": "MO",
            "casing": {}
          },
          {
            "generatedName": "MG",
            "value": "MG",
            "casing": {}
          },
          {
            "generatedName": "MW",
            "value": "MW",
            "casing": {}
          },
          {
            "generatedName": "MY",
            "value": "MY",
            "casing": {}
          },
          {
            "generatedName": "MV",
            "value": "MV",
            "casing": {}
          },
          {
            "generatedName": "ML",
            "value": "ML",
            "casing": {}
          },
          {
            "generatedName": "MT",
            "value": "MT",
            "casing": {}
          },
          {
            "generatedName": "MH",
            "value": "MH",
            "casing": {}
          },
          {
            "generatedName": "MQ",
            "value": "MQ",
            "casing": {}
          },
          {
            "generatedName": "MR",
            "value": "MR",
            "casing": {}
          },
          {
            "generatedName": "MU",
            "value": "MU",
            "casing": {}
          },
          {
            "generatedName": "YT",
            "value": "YT",
            "casing": {}
          },
          {
            "generatedName": "MX",
            "value": "MX",
            "casing": {}
          },
          {
            "generatedName": "FM",
            "value": "FM",
            "casing": {}
          },
          {
            "generatedName": "MD",
            "value": "MD",
            "casing": {}
          },
          {
            "generatedName": "MC",
            "value": "MC",
            "casing": {}
          },
          {
            "generatedName": "MN",
            "value": "MN",
            "casing": {}
          },
          {
            "generatedName": "ME",
            "value": "ME",
            "casing": {}
          },
          {
            "generatedName": "MS",
            "value": "MS",
            "casing": {}
          },
          {
            "generatedName": "MA",
            "value": "MA",
            "casing": {}
          },
          {
            "generatedName": "MZ",
            "value": "MZ",
            "casing": {}
          },
          {
            "generatedName": "MM",
            "value": "MM",
            "casing": {}
          },
          {
            "generatedName": "NA",
            "value": "NA",
            "casing": {}
          },
          {
            "generatedName": "NR",
            "value": "NR",
            "casing": {}
          },
          {
            "generatedName": "NP",
            "value": "NP",
            "casing": {}
          },
          {
            "generatedName": "NL",
            "value": "NL",
            "casing": {}
          },
          {
            "generatedName": "NC",
            "value": "NC",
            "casing": {}
          },
          {
            "generatedName": "NZ",
            "value": "NZ",
            "casing": {}
          },
          {
            "generatedName": "NI",
            "value": "NI",
            "casing": {}
          },
          {
            "generatedName": "NE",
            "value": "NE",
            "casing": {}
          },
          {
            "generatedName": "NG",
            "value": "NG",
            "casing": {}
          },
          {
            "generatedName": "NU",
            "value": "NU",
            "casing": {}
          },
          {
            "generatedName": "NF",
            "value": "NF",
            "casing": {}
          },
          {
            "generatedName": "MK",
            "value": "MK",
            "casing": {}
          },
          {
            "generatedName": "MP",
            "value": "MP",
            "casing": {}
          },
          {
            "generatedName": "NO",
            "value": "NO",
            "casing": {}
          },
          {
            "generatedName": "OM",
            "value": "OM",
            "casing": {}
          },
          {
            "generatedName": "PK",
            "value": "PK",
            "casing": {}
          },
          {
            "generatedName": "PW",
            "value": "PW",
            "casing": {}
          },
          {
            "generatedName": "PS",
            "value": "PS",
            "casing": {}
          },
          {
            "generatedName": "PA",
            "value": "PA",
            "casing": {}
          },
          {
            "generatedName": "PG",
            "value": "PG",
            "casing": {}
          },
          {
            "generatedName": "PY",
            "value": "PY",
            "casing": {}
          },
          {
            "generatedName": "PE",
            "value": "PE",
            "casing": {}
          },
          {
            "generatedName": "PH",
            "value": "PH",
            "casing": {}
          },
          {
            "generatedName": "PN",
            "value": "PN",
            "casing": {}
          },
          {
            "generatedName": "PL",
            "value": "PL",
            "casing": {}
          },
          {
            "generatedName": "PT",
            "value": "PT",
            "casing": {}
          },
          {
            "generatedName": "PR",
            "value": "PR",
            "casing": {}
          },
          {
            "generatedName": "QA",
            "value": "QA",
            "casing": {}
          },
          {
            "generatedName": "RO",
            "value": "RO",
            "casing": {}
          },
          {
            "generatedName": "RU",
            "value": "RU",
            "casing": {}
          },
          {
            "generatedName": "RW",
            "value": "RW",
            "casing": {}
          },
          {
            "generatedName": "RE",
            "value": "RE",
            "casing": {}
          },
          {
            "generatedName": "BL",
            "value": "BL",
            "casing": {}
          },
          {
            "generatedName": "SH",
            "value": "SH",
            "casing": {}
          },
          {
            "generatedName": "KN",
            "value": "KN",
            "casing": {}
          },
          {
            "generatedName": "LC",
            "value": "LC",
            "casing": {}
          },
          {
            "generatedName": "MF",
            "value": "MF",
            "casing": {}
          },
          {
            "generatedName": "PM",
            "value": "PM",
            "casing": {}
          },
          {
            "generatedName": "VC",
            "value": "VC",
            "casing": {}
          },
          {
            "generatedName": "WS",
            "value": "WS",
            "casing": {}
          },
          {
            "generatedName": "SM",
            "value": "SM",
            "casing": {}
          },
          {
            "generatedName": "ST",
            "value": "ST",
            "casing": {}
          },
          {
            "generatedName": "SA",
            "value": "SA",
            "casing": {}
          },
          {
            "generatedName": "SN",
            "value": "SN",
            "casing": {}
          },
          {
            "generatedName": "RS",
            "value": "RS",
            "casing": {}
          },
          {
            "generatedName": "SC",
            "value": "SC",
            "casing": {}
          },
          {
            "generatedName": "SL",
            "value": "SL",
            "casing": {}
          },
          {
            "generatedName": "SG",
            "value": "SG",
            "casing": {}
          },
          {
            "generatedName": "SX",
            "value": "SX",
            "casing": {}
          },
          {
            "generatedName": "SK",
            "value": "SK",
            "casing": {}
          },
          {
            "generatedName": "SI",
            "value": "SI",
            "casing": {}
          },
          {
            "generatedName": "SB",
            "value": "SB",
            "casing": {}
          },
          {
            "generatedName": "SO",
            "value": "SO",
            "casing": {}
          },
          {
            "generatedName": "ZA",
            "value": "ZA",
            "casing": {}
          },
          {
            "generatedName": "GS",
            "value": "GS",
            "casing": {}
          },
          {
            "generatedName": "SS",
            "value": "SS",
            "casing": {}
          },
          {
            "generatedName": "ES",
            "value": "ES",
            "casing": {}
          },
          {
            "generatedName": "LK",
            "value": "LK",
            "casing": {}
          },
          {
            "generatedName": "SD",
            "value": "SD",
            "casing": {}
          },
          {
            "generatedName": "SR",
            "value": "SR",
            "casing": {}
          },
          {
            "generatedName": "SJ",
            "value": "SJ",
            "casing": {}
          },
          {
            "generatedName": "SE",
            "value": "SE",
            "casing": {}
          },
          {
            "generatedName": "CH",
            "value": "CH",
            "casing": {}
          },
          {
            "generatedName": "SY",
            "value": "SY",
            "casing": {}
          },
          {
            "generatedName": "TW",
            "value": "TW",
            "casing": {}
          },
          {
            "generatedName": "TJ",
            "value": "TJ",
            "casing": {}
          },
          {
            "generatedName": "TZ",
            "value": "TZ",
            "casing": {}
          },
          {
            "generatedName": "TH",
            "value": "TH",
            "casing": {}
          },
          {
            "generatedName": "TL",
            "value": "TL",
            "casing": {}
          },
          {
            "generatedName": "TG",
            "value": "TG",
            "casing": {}
          },
          {
            "generatedName": "TK",
            "value": "TK",
            "casing": {}
          },
          {
            "generatedName": "TO",
            "value": "TO",
            "casing": {}
          },
          {
            "generatedName": "TT",
            "value": "TT",
            "casing": {}
          },
          {
            "generatedName": "TN",
            "value": "TN",
            "casing": {}
          },
          {
            "generatedName": "TM",
            "value": "TM",
            "casing": {}
          },
          {
            "generatedName": "TC",
            "value": "TC",
            "casing": {}
          },
          {
            "generatedName": "TV",
            "value": "TV",
            "casing": {}
          },
          {
            "generatedName": "TR",
            "value": "TR",
            "casing": {}
          },
          {
            "generatedName": "UG",
            "value": "UG",
            "casing": {}
          },
          {
            "generatedName": "UA",
            "value": "UA",
            "casing": {}
          },
          {
            "generatedName": "AE",
            "value": "AE",
            "casing": {}
          },
          {
            "generatedName": "GB",
            "value": "GB",
            "casing": {}
          },
          {
            "generatedName": "UM",
            "value": "UM",
            "casing": {}
          },
          {
            "generatedName": "US",
            "value": "US",
            "casing": {}
          },
          {
            "generatedName": "UY",
            "value": "UY",
            "casing": {}
          },
          {
            "generatedName": "UZ",
            "value": "UZ",
            "casing": {}
          },
          {
            "generatedName": "VU",
            "value": "VU",
            "casing": {}
          },
          {
            "generatedName": "VE",
            "value": "VE",
            "casing": {}
          },
          {
            "generatedName": "VN",
            "value": "VN",
            "casing": {}
          },
          {
            "generatedName": "VG",
            "value": "VG",
            "casing": {}
          },
          {
            "generatedName": "VI",
            "value": "VI",
            "casing": {}
          },
          {
            "generatedName": "WF",
            "value": "WF",
            "casing": {}
          },
          {
            "generatedName": "EH",
            "value": "EH",
            "casing": {}
          },
          {
            "generatedName": "YE",
            "value": "YE",
            "casing": {}
          },
          {
            "generatedName": "ZM",
            "value": "ZM",
            "casing": {}
          },
          {
            "generatedName": "ZW",
            "value": "ZW",
            "casing": {}
          },
          {
            "generatedName": "AX",
            "value": "AX",
            "casing": {}
          },
          {
            "generatedName": "NOT_APPLICABLE",
            "value": "N/A",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "CurrencyCode": {
        "generatedName": "CurrencyCode",
        "nameOverride": "CurrencyCode",
        "title": "CurrencyCode",
        "values": [
          {
            "generatedName": "OneInch",
            "value": "1INCH",
            "casing": {}
          },
          {
            "generatedName": "AAVE",
            "value": "AAVE",
            "casing": {}
          },
          {
            "generatedName": "ADA",
            "value": "ADA",
            "casing": {}
          },
          {
            "generatedName": "AED",
            "value": "AED",
            "casing": {}
          },
          {
            "generatedName": "AFN",
            "value": "AFN",
            "casing": {}
          },
          {
            "generatedName": "ALGO",
            "value": "ALGO",
            "casing": {}
          },
          {
            "generatedName": "ALL",
            "value": "ALL",
            "casing": {}
          },
          {
            "generatedName": "AMD",
            "value": "AMD",
            "casing": {}
          },
          {
            "generatedName": "AMP",
            "value": "AMP",
            "casing": {}
          },
          {
            "generatedName": "ANG",
            "value": "ANG",
            "casing": {}
          },
          {
            "generatedName": "AOA",
            "value": "AOA",
            "casing": {}
          },
          {
            "generatedName": "AR",
            "value": "AR",
            "casing": {}
          },
          {
            "generatedName": "ARS",
            "value": "ARS",
            "casing": {}
          },
          {
            "generatedName": "ATOM",
            "value": "ATOM",
            "casing": {}
          },
          {
            "generatedName": "AUD",
            "value": "AUD",
            "casing": {}
          },
          {
            "generatedName": "AVAX",
            "value": "AVAX",
            "casing": {}
          },
          {
            "generatedName": "AWG",
            "value": "AWG",
            "casing": {}
          },
          {
            "generatedName": "AXS",
            "value": "AXS",
            "casing": {}
          },
          {
            "generatedName": "AZN",
            "value": "AZN",
            "casing": {}
          },
          {
            "generatedName": "BAM",
            "value": "BAM",
            "casing": {}
          },
          {
            "generatedName": "BAT",
            "value": "BAT",
            "casing": {}
          },
          {
            "generatedName": "BBD",
            "value": "BBD",
            "casing": {}
          },
          {
            "generatedName": "BCH",
            "value": "BCH",
            "casing": {}
          },
          {
            "generatedName": "BDT",
            "value": "BDT",
            "casing": {}
          },
          {
            "generatedName": "BGN",
            "value": "BGN",
            "casing": {}
          },
          {
            "generatedName": "BHD",
            "value": "BHD",
            "casing": {}
          },
          {
            "generatedName": "BIF",
            "value": "BIF",
            "casing": {}
          },
          {
            "generatedName": "BMD",
            "value": "BMD",
            "casing": {}
          },
          {
            "generatedName": "BNB",
            "value": "BNB",
            "casing": {}
          },
          {
            "generatedName": "BND",
            "value": "BND",
            "casing": {}
          },
          {
            "generatedName": "BOB",
            "value": "BOB",
            "casing": {}
          },
          {
            "generatedName": "BRL",
            "value": "BRL",
            "casing": {}
          },
          {
            "generatedName": "BSD",
            "value": "BSD",
            "casing": {}
          },
          {
            "generatedName": "BSV",
            "value": "BSV",
            "casing": {}
          },
          {
            "generatedName": "BTC",
            "value": "BTC",
            "casing": {}
          },
          {
            "generatedName": "BTCB",
            "value": "BTCB",
            "casing": {}
          },
          {
            "generatedName": "BTG",
            "value": "BTG",
            "casing": {}
          },
          {
            "generatedName": "BTN",
            "value": "BTN",
            "casing": {}
          },
          {
            "generatedName": "BUSD",
            "value": "BUSD",
            "casing": {}
          },
          {
            "generatedName": "BWP",
            "value": "BWP",
            "casing": {}
          },
          {
            "generatedName": "BYN",
            "value": "BYN",
            "casing": {}
          },
          {
            "generatedName": "BYR",
            "value": "BYR",
            "casing": {}
          },
          {
            "generatedName": "BZD",
            "value": "BZD",
            "casing": {}
          },
          {
            "generatedName": "CAD",
            "value": "CAD",
            "casing": {}
          },
          {
            "generatedName": "CAKE",
            "value": "CAKE",
            "casing": {}
          },
          {
            "generatedName": "CDF",
            "value": "CDF",
            "casing": {}
          },
          {
            "generatedName": "CELO",
            "value": "CELO",
            "casing": {}
          },
          {
            "generatedName": "CHF",
            "value": "CHF",
            "casing": {}
          },
          {
            "generatedName": "CHZ",
            "value": "CHZ",
            "casing": {}
          },
          {
            "generatedName": "CLF",
            "value": "CLF",
            "casing": {}
          },
          {
            "generatedName": "CLP",
            "value": "CLP",
            "casing": {}
          },
          {
            "generatedName": "CNY",
            "value": "CNY",
            "casing": {}
          },
          {
            "generatedName": "COMP",
            "value": "COMP",
            "casing": {}
          },
          {
            "generatedName": "COP",
            "value": "COP",
            "casing": {}
          },
          {
            "generatedName": "CRC",
            "value": "CRC",
            "casing": {}
          },
          {
            "generatedName": "CRO",
            "value": "CRO",
            "casing": {}
          },
          {
            "generatedName": "CRV",
            "value": "CRV",
            "casing": {}
          },
          {
            "generatedName": "CUC",
            "value": "CUC",
            "casing": {}
          },
          {
            "generatedName": "CUP",
            "value": "CUP",
            "casing": {}
          },
          {
            "generatedName": "CVE",
            "value": "CVE",
            "casing": {}
          },
          {
            "generatedName": "CVX",
            "value": "CVX",
            "casing": {}
          },
          {
            "generatedName": "CZK",
            "value": "CZK",
            "casing": {}
          },
          {
            "generatedName": "DAI",
            "value": "DAI",
            "casing": {}
          },
          {
            "generatedName": "DASH",
            "value": "DASH",
            "casing": {}
          },
          {
            "generatedName": "DCR",
            "value": "DCR",
            "casing": {}
          },
          {
            "generatedName": "DFI",
            "value": "DFI",
            "casing": {}
          },
          {
            "generatedName": "DJF",
            "value": "DJF",
            "casing": {}
          },
          {
            "generatedName": "DKK",
            "value": "DKK",
            "casing": {}
          },
          {
            "generatedName": "DOGE",
            "value": "DOGE",
            "casing": {}
          },
          {
            "generatedName": "DOP",
            "value": "DOP",
            "casing": {}
          },
          {
            "generatedName": "DOT",
            "value": "DOT",
            "casing": {}
          },
          {
            "generatedName": "DZD",
            "value": "DZD",
            "casing": {}
          },
          {
            "generatedName": "EGLD",
            "value": "EGLD",
            "casing": {}
          },
          {
            "generatedName": "EGP",
            "value": "EGP",
            "casing": {}
          },
          {
            "generatedName": "ENJ",
            "value": "ENJ",
            "casing": {}
          },
          {
            "generatedName": "EOS",
            "value": "EOS",
            "casing": {}
          },
          {
            "generatedName": "ERN",
            "value": "ERN",
            "casing": {}
          },
          {
            "generatedName": "ETB",
            "value": "ETB",
            "casing": {}
          },
          {
            "generatedName": "ETC",
            "value": "ETC",
            "casing": {}
          },
          {
            "generatedName": "ETH",
            "value": "ETH",
            "casing": {}
          },
          {
            "generatedName": "EUR",
            "value": "EUR",
            "casing": {}
          },
          {
            "generatedName": "FEI",
            "value": "FEI",
            "casing": {}
          },
          {
            "generatedName": "FIL",
            "value": "FIL",
            "casing": {}
          },
          {
            "generatedName": "FJD",
            "value": "FJD",
            "casing": {}
          },
          {
            "generatedName": "FKP",
            "value": "FKP",
            "casing": {}
          },
          {
            "generatedName": "FLOW",
            "value": "FLOW",
            "casing": {}
          },
          {
            "generatedName": "FRAX",
            "value": "FRAX",
            "casing": {}
          },
          {
            "generatedName": "FTM",
            "value": "FTM",
            "casing": {}
          },
          {
            "generatedName": "FTT",
            "value": "FTT",
            "casing": {}
          },
          {
            "generatedName": "GALA",
            "value": "GALA",
            "casing": {}
          },
          {
            "generatedName": "GBP",
            "value": "GBP",
            "casing": {}
          },
          {
            "generatedName": "GEL",
            "value": "GEL",
            "casing": {}
          },
          {
            "generatedName": "GGP",
            "value": "GGP",
            "casing": {}
          },
          {
            "generatedName": "GHS",
            "value": "GHS",
            "casing": {}
          },
          {
            "generatedName": "GIP",
            "value": "GIP",
            "casing": {}
          },
          {
            "generatedName": "GMD",
            "value": "GMD",
            "casing": {}
          },
          {
            "generatedName": "GNF",
            "value": "GNF",
            "casing": {}
          },
          {
            "generatedName": "GNO",
            "value": "GNO",
            "casing": {}
          },
          {
            "generatedName": "GRT",
            "value": "GRT",
            "casing": {}
          },
          {
            "generatedName": "GT",
            "value": "GT",
            "casing": {}
          },
          {
            "generatedName": "GTQ",
            "value": "GTQ",
            "casing": {}
          },
          {
            "generatedName": "GYD",
            "value": "GYD",
            "casing": {}
          },
          {
            "generatedName": "HBAR",
            "value": "HBAR",
            "casing": {}
          },
          {
            "generatedName": "HKD",
            "value": "HKD",
            "casing": {}
          },
          {
            "generatedName": "HNL",
            "value": "HNL",
            "casing": {}
          },
          {
            "generatedName": "HNT",
            "value": "HNT",
            "casing": {}
          },
          {
            "generatedName": "HOT",
            "value": "HOT",
            "casing": {}
          },
          {
            "generatedName": "HRK",
            "value": "HRK",
            "casing": {}
          },
          {
            "generatedName": "HT",
            "value": "HT",
            "casing": {}
          },
          {
            "generatedName": "HTG",
            "value": "HTG",
            "casing": {}
          },
          {
            "generatedName": "HUF",
            "value": "HUF",
            "casing": {}
          },
          {
            "generatedName": "ICP",
            "value": "ICP",
            "casing": {}
          },
          {
            "generatedName": "IDR",
            "value": "IDR",
            "casing": {}
          },
          {
            "generatedName": "ILS",
            "value": "ILS",
            "casing": {}
          },
          {
            "generatedName": "IMP",
            "value": "IMP",
            "casing": {}
          },
          {
            "generatedName": "INJ",
            "value": "INJ",
            "casing": {}
          },
          {
            "generatedName": "INR",
            "value": "INR",
            "casing": {}
          },
          {
            "generatedName": "IQD",
            "value": "IQD",
            "casing": {}
          },
          {
            "generatedName": "IRR",
            "value": "IRR",
            "casing": {}
          },
          {
            "generatedName": "ISK",
            "value": "ISK",
            "casing": {}
          },
          {
            "generatedName": "JEP",
            "value": "JEP",
            "casing": {}
          },
          {
            "generatedName": "JMD",
            "value": "JMD",
            "casing": {}
          },
          {
            "generatedName": "JOD",
            "value": "JOD",
            "casing": {}
          },
          {
            "generatedName": "JPY",
            "value": "JPY",
            "casing": {}
          },
          {
            "generatedName": "KAVA",
            "value": "KAVA",
            "casing": {}
          },
          {
            "generatedName": "KCS",
            "value": "KCS",
            "casing": {}
          },
          {
            "generatedName": "KDA",
            "value": "KDA",
            "casing": {}
          },
          {
            "generatedName": "KES",
            "value": "KES",
            "casing": {}
          },
          {
            "generatedName": "KGS",
            "value": "KGS",
            "casing": {}
          },
          {
            "generatedName": "KHR",
            "value": "KHR",
            "casing": {}
          },
          {
            "generatedName": "KLAY",
            "value": "KLAY",
            "casing": {}
          },
          {
            "generatedName": "KMF",
            "value": "KMF",
            "casing": {}
          },
          {
            "generatedName": "KNC",
            "value": "KNC",
            "casing": {}
          },
          {
            "generatedName": "KPW",
            "value": "KPW",
            "casing": {}
          },
          {
            "generatedName": "KRW",
            "value": "KRW",
            "casing": {}
          },
          {
            "generatedName": "KSM",
            "value": "KSM",
            "casing": {}
          },
          {
            "generatedName": "KWD",
            "value": "KWD",
            "casing": {}
          },
          {
            "generatedName": "KYD",
            "value": "KYD",
            "casing": {}
          },
          {
            "generatedName": "KZT",
            "value": "KZT",
            "casing": {}
          },
          {
            "generatedName": "LAK",
            "value": "LAK",
            "casing": {}
          },
          {
            "generatedName": "LBP",
            "value": "LBP",
            "casing": {}
          },
          {
            "generatedName": "LEO",
            "value": "LEO",
            "casing": {}
          },
          {
            "generatedName": "LINK",
            "value": "LINK",
            "casing": {}
          },
          {
            "generatedName": "LKR",
            "value": "LKR",
            "casing": {}
          },
          {
            "generatedName": "LRC",
            "value": "LRC",
            "casing": {}
          },
          {
            "generatedName": "LRD",
            "value": "LRD",
            "casing": {}
          },
          {
            "generatedName": "LSL",
            "value": "LSL",
            "casing": {}
          },
          {
            "generatedName": "LTC",
            "value": "LTC",
            "casing": {}
          },
          {
            "generatedName": "LTL",
            "value": "LTL",
            "casing": {}
          },
          {
            "generatedName": "LUNA",
            "value": "LUNA",
            "casing": {}
          },
          {
            "generatedName": "LVL",
            "value": "LVL",
            "casing": {}
          },
          {
            "generatedName": "LYD",
            "value": "LYD",
            "casing": {}
          },
          {
            "generatedName": "MAD",
            "value": "MAD",
            "casing": {}
          },
          {
            "generatedName": "MANA",
            "value": "MANA",
            "casing": {}
          },
          {
            "generatedName": "MATIC",
            "value": "MATIC",
            "casing": {}
          },
          {
            "generatedName": "MDL",
            "value": "MDL",
            "casing": {}
          },
          {
            "generatedName": "MGA",
            "value": "MGA",
            "casing": {}
          },
          {
            "generatedName": "MINA",
            "value": "MINA",
            "casing": {}
          },
          {
            "generatedName": "MIOTA",
            "value": "MIOTA",
            "casing": {}
          },
          {
            "generatedName": "MKD",
            "value": "MKD",
            "casing": {}
          },
          {
            "generatedName": "MKR",
            "value": "MKR",
            "casing": {}
          },
          {
            "generatedName": "MMK",
            "value": "MMK",
            "casing": {}
          },
          {
            "generatedName": "MNT",
            "value": "MNT",
            "casing": {}
          },
          {
            "generatedName": "MOP",
            "value": "MOP",
            "casing": {}
          },
          {
            "generatedName": "MRO",
            "value": "MRO",
            "casing": {}
          },
          {
            "generatedName": "MUR",
            "value": "MUR",
            "casing": {}
          },
          {
            "generatedName": "MVR",
            "value": "MVR",
            "casing": {}
          },
          {
            "generatedName": "MWK",
            "value": "MWK",
            "casing": {}
          },
          {
            "generatedName": "MXN",
            "value": "MXN",
            "casing": {}
          },
          {
            "generatedName": "MYR",
            "value": "MYR",
            "casing": {}
          },
          {
            "generatedName": "MZN",
            "value": "MZN",
            "casing": {}
          },
          {
            "generatedName": "NAD",
            "value": "NAD",
            "casing": {}
          },
          {
            "generatedName": "NEAR",
            "value": "NEAR",
            "casing": {}
          },
          {
            "generatedName": "NEO",
            "value": "NEO",
            "casing": {}
          },
          {
            "generatedName": "NEXO",
            "value": "NEXO",
            "casing": {}
          },
          {
            "generatedName": "NGN",
            "value": "NGN",
            "casing": {}
          },
          {
            "generatedName": "NIO",
            "value": "NIO",
            "casing": {}
          },
          {
            "generatedName": "NOK",
            "value": "NOK",
            "casing": {}
          },
          {
            "generatedName": "NPR",
            "value": "NPR",
            "casing": {}
          },
          {
            "generatedName": "NZD",
            "value": "NZD",
            "casing": {}
          },
          {
            "generatedName": "OKB",
            "value": "OKB",
            "casing": {}
          },
          {
            "generatedName": "OMR",
            "value": "OMR",
            "casing": {}
          },
          {
            "generatedName": "ONE",
            "value": "ONE",
            "casing": {}
          },
          {
            "generatedName": "PAB",
            "value": "PAB",
            "casing": {}
          },
          {
            "generatedName": "PAXG",
            "value": "PAXG",
            "casing": {}
          },
          {
            "generatedName": "PEN",
            "value": "PEN",
            "casing": {}
          },
          {
            "generatedName": "PGK",
            "value": "PGK",
            "casing": {}
          },
          {
            "generatedName": "PHP",
            "value": "PHP",
            "casing": {}
          },
          {
            "generatedName": "PKR",
            "value": "PKR",
            "casing": {}
          },
          {
            "generatedName": "PLN",
            "value": "PLN",
            "casing": {}
          },
          {
            "generatedName": "PYG",
            "value": "PYG",
            "casing": {}
          },
          {
            "generatedName": "QAR",
            "value": "QAR",
            "casing": {}
          },
          {
            "generatedName": "QNT",
            "value": "QNT",
            "casing": {}
          },
          {
            "generatedName": "QTUM",
            "value": "QTUM",
            "casing": {}
          },
          {
            "generatedName": "RON",
            "value": "RON",
            "casing": {}
          },
          {
            "generatedName": "RSD",
            "value": "RSD",
            "casing": {}
          },
          {
            "generatedName": "RUB",
            "value": "RUB",
            "casing": {}
          },
          {
            "generatedName": "RUNE",
            "value": "RUNE",
            "casing": {}
          },
          {
            "generatedName": "RWF",
            "value": "RWF",
            "casing": {}
          },
          {
            "generatedName": "SAND",
            "value": "SAND",
            "casing": {}
          },
          {
            "generatedName": "SAR",
            "value": "SAR",
            "casing": {}
          },
          {
            "generatedName": "SBD",
            "value": "SBD",
            "casing": {}
          },
          {
            "generatedName": "SCR",
            "value": "SCR",
            "casing": {}
          },
          {
            "generatedName": "SDG",
            "value": "SDG",
            "casing": {}
          },
          {
            "generatedName": "SEK",
            "value": "SEK",
            "casing": {}
          },
          {
            "generatedName": "SGD",
            "value": "SGD",
            "casing": {}
          },
          {
            "generatedName": "SHIB",
            "value": "SHIB",
            "casing": {}
          },
          {
            "generatedName": "SHP",
            "value": "SHP",
            "casing": {}
          },
          {
            "generatedName": "SLE",
            "value": "SLE",
            "casing": {}
          },
          {
            "generatedName": "SLL",
            "value": "SLL",
            "casing": {}
          },
          {
            "generatedName": "SOL",
            "value": "SOL",
            "casing": {}
          },
          {
            "generatedName": "SOS",
            "value": "SOS",
            "casing": {}
          },
          {
            "generatedName": "SRD",
            "value": "SRD",
            "casing": {}
          },
          {
            "generatedName": "STD",
            "value": "STD",
            "casing": {}
          },
          {
            "generatedName": "STX",
            "value": "STX",
            "casing": {}
          },
          {
            "generatedName": "SVC",
            "value": "SVC",
            "casing": {}
          },
          {
            "generatedName": "SYP",
            "value": "SYP",
            "casing": {}
          },
          {
            "generatedName": "SZL",
            "value": "SZL",
            "casing": {}
          },
          {
            "generatedName": "THB",
            "value": "THB",
            "casing": {}
          },
          {
            "generatedName": "THETA",
            "value": "THETA",
            "casing": {}
          },
          {
            "generatedName": "TJS",
            "value": "TJS",
            "casing": {}
          },
          {
            "generatedName": "TMT",
            "value": "TMT",
            "casing": {}
          },
          {
            "generatedName": "TND",
            "value": "TND",
            "casing": {}
          },
          {
            "generatedName": "TOP",
            "value": "TOP",
            "casing": {}
          },
          {
            "generatedName": "TRX",
            "value": "TRX",
            "casing": {}
          },
          {
            "generatedName": "TRY",
            "value": "TRY",
            "casing": {}
          },
          {
            "generatedName": "TTD",
            "value": "TTD",
            "casing": {}
          },
          {
            "generatedName": "TTT",
            "value": "TTT",
            "casing": {}
          },
          {
            "generatedName": "TUSD",
            "value": "TUSD",
            "casing": {}
          },
          {
            "generatedName": "TWD",
            "value": "TWD",
            "casing": {}
          },
          {
            "generatedName": "TZS",
            "value": "TZS",
            "casing": {}
          },
          {
            "generatedName": "UAH",
            "value": "UAH",
            "casing": {}
          },
          {
            "generatedName": "UGX",
            "value": "UGX",
            "casing": {}
          },
          {
            "generatedName": "UNI",
            "value": "UNI",
            "casing": {}
          },
          {
            "generatedName": "USD",
            "value": "USD",
            "casing": {}
          },
          {
            "generatedName": "USDC",
            "value": "USDC",
            "casing": {}
          },
          {
            "generatedName": "USDP",
            "value": "USDP",
            "casing": {}
          },
          {
            "generatedName": "USDT",
            "value": "USDT",
            "casing": {}
          },
          {
            "generatedName": "UYU",
            "value": "UYU",
            "casing": {}
          },
          {
            "generatedName": "UZS",
            "value": "UZS",
            "casing": {}
          },
          {
            "generatedName": "VEF",
            "value": "VEF",
            "casing": {}
          },
          {
            "generatedName": "VET",
            "value": "VET",
            "casing": {}
          },
          {
            "generatedName": "VND",
            "value": "VND",
            "casing": {}
          },
          {
            "generatedName": "VUV",
            "value": "VUV",
            "casing": {}
          },
          {
            "generatedName": "WAVES",
            "value": "WAVES",
            "casing": {}
          },
          {
            "generatedName": "WBTC",
            "value": "WBTC",
            "casing": {}
          },
          {
            "generatedName": "WEMIX",
            "value": "WEMIX",
            "casing": {}
          },
          {
            "generatedName": "WST",
            "value": "WST",
            "casing": {}
          },
          {
            "generatedName": "XAF",
            "value": "XAF",
            "casing": {}
          },
          {
            "generatedName": "XAG",
            "value": "XAG",
            "casing": {}
          },
          {
            "generatedName": "XAU",
            "value": "XAU",
            "casing": {}
          },
          {
            "generatedName": "XCD",
            "value": "XCD",
            "casing": {}
          },
          {
            "generatedName": "XCH",
            "value": "XCH",
            "casing": {}
          },
          {
            "generatedName": "XDC",
            "value": "XDC",
            "casing": {}
          },
          {
            "generatedName": "XDR",
            "value": "XDR",
            "casing": {}
          },
          {
            "generatedName": "XEC",
            "value": "XEC",
            "casing": {}
          },
          {
            "generatedName": "XEM",
            "value": "XEM",
            "casing": {}
          },
          {
            "generatedName": "XLM",
            "value": "XLM",
            "casing": {}
          },
          {
            "generatedName": "XMR",
            "value": "XMR",
            "casing": {}
          },
          {
            "generatedName": "XOF",
            "value": "XOF",
            "casing": {}
          },
          {
            "generatedName": "XPF",
            "value": "XPF",
            "casing": {}
          },
          {
            "generatedName": "XRP",
            "value": "XRP",
            "casing": {}
          },
          {
            "generatedName": "XTZ",
            "value": "XTZ",
            "casing": {}
          },
          {
            "generatedName": "YER",
            "value": "YER",
            "casing": {}
          },
          {
            "generatedName": "ZAR",
            "value": "ZAR",
            "casing": {}
          },
          {
            "generatedName": "ZEC",
            "value": "ZEC",
            "casing": {}
          },
          {
            "generatedName": "ZIL",
            "value": "ZIL",
            "casing": {}
          },
          {
            "generatedName": "ZMK",
            "value": "ZMK",
            "casing": {}
          },
          {
            "generatedName": "ZMW",
            "value": "ZMW",
            "casing": {}
          },
          {
            "generatedName": "ZWL",
            "value": "ZWL",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "MCCDetails": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "mccDetailsCode",
            "key": "code",
            "schema": {
              "description": "Merchant code",
              "schema": {
                "type": "double"
              },
              "generatedName": "MccDetailsCode",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "mccDetailsDescription",
            "key": "description",
            "schema": {
              "generatedName": "mccDetailsDescription",
              "nameOverride": "MCCDetails",
              "title": "MCCDetails",
              "value": {
                "description": "Merchant Description",
                "schema": {
                  "type": "string"
                },
                "generatedName": "MccDetailsDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "MccDetails",
        "nameOverride": "MCCDetails",
        "title": "MCCDetails",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TransactionCountLimit": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "transactionCountLimitDay",
            "key": "day",
            "schema": {
              "generatedName": "transactionCountLimitDay",
              "nameOverride": "TransactionCountLimit",
              "title": "TransactionCountLimit",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "TransactionCountLimitDay",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionCountLimitWeek",
            "key": "week",
            "schema": {
              "generatedName": "transactionCountLimitWeek",
              "nameOverride": "TransactionCountLimit",
              "title": "TransactionCountLimit",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "TransactionCountLimitWeek",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionCountLimitMonth",
            "key": "month",
            "schema": {
              "generatedName": "transactionCountLimitMonth",
              "nameOverride": "TransactionCountLimit",
              "title": "TransactionCountLimit",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "TransactionCountLimitMonth",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionCountLimitYear",
            "key": "year",
            "schema": {
              "generatedName": "transactionCountLimitYear",
              "nameOverride": "TransactionCountLimit",
              "title": "TransactionCountLimit",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "TransactionCountLimitYear",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TransactionCountLimit",
        "nameOverride": "TransactionCountLimit",
        "title": "TransactionCountLimit",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TransactionAmountLimit": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "transactionAmountLimitDay",
            "key": "day",
            "schema": {
              "generatedName": "transactionAmountLimitDay",
              "nameOverride": "TransactionAmountLimit",
              "title": "TransactionAmountLimit",
              "value": {
                "generatedName": "TransactionAmountLimitDay",
                "schema": "Amount",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "transactionAmountLimitWeek",
            "key": "week",
            "schema": {
              "generatedName": "transactionAmountLimitWeek",
              "nameOverride": "TransactionAmountLimit",
              "title": "TransactionAmountLimit",
              "value": {
                "generatedName": "TransactionAmountLimitWeek",
                "schema": "Amount",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "transactionAmountLimitMonth",
            "key": "month",
            "schema": {
              "generatedName": "transactionAmountLimitMonth",
              "nameOverride": "TransactionAmountLimit",
              "title": "TransactionAmountLimit",
              "value": {
                "generatedName": "TransactionAmountLimitMonth",
                "schema": "Amount",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "transactionAmountLimitYear",
            "key": "year",
            "schema": {
              "generatedName": "transactionAmountLimitYear",
              "nameOverride": "TransactionAmountLimit",
              "title": "TransactionAmountLimit",
              "value": {
                "generatedName": "TransactionAmountLimitYear",
                "schema": "Amount",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TransactionAmountLimit",
        "nameOverride": "TransactionAmountLimit",
        "title": "TransactionAmountLimit",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TransactionLimit": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "transactionLimitTransactionCountLimit",
            "key": "transactionCountLimit",
            "schema": {
              "generatedName": "transactionLimitTransactionCountLimit",
              "nameOverride": "TransactionLimit",
              "title": "TransactionLimit",
              "value": {
                "generatedName": "TransactionLimitTransactionCountLimit",
                "schema": "TransactionCountLimit",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "transactionLimitTransactionAmountLimit",
            "key": "transactionAmountLimit",
            "schema": {
              "generatedName": "transactionLimitTransactionAmountLimit",
              "nameOverride": "TransactionLimit",
              "title": "TransactionLimit",
              "value": {
                "generatedName": "TransactionLimitTransactionAmountLimit",
                "schema": "TransactionAmountLimit",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "transactionLimitAverageTransactionAmountLimit",
            "key": "averageTransactionAmountLimit",
            "schema": {
              "generatedName": "transactionLimitAverageTransactionAmountLimit",
              "nameOverride": "TransactionLimit",
              "title": "TransactionLimit",
              "value": {
                "generatedName": "TransactionLimitAverageTransactionAmountLimit",
                "schema": "TransactionAmountLimit",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TransactionLimit",
        "nameOverride": "TransactionLimit",
        "title": "TransactionLimit",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "FalsePositiveDetails": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "falsePositiveDetailsIsFalsePositive",
            "key": "isFalsePositive",
            "schema": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "FalsePositiveDetailsIsFalsePositive",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "falsePositiveDetailsConfidenceScore",
            "key": "confidenceScore",
            "schema": {
              "schema": {
                "type": "double"
              },
              "generatedName": "FalsePositiveDetailsConfidenceScore",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "FalsePositiveDetails",
        "nameOverride": "FalsePositiveDetails",
        "title": "FalsePositiveDetails",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SanctionsDetails": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sanctionsDetailsName",
            "key": "name",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "SanctionsDetailsName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sanctionsDetailsSearchId",
            "key": "searchId",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "SanctionsDetailsSearchId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sanctionsDetailsEntityType",
            "key": "entityType",
            "schema": {
              "generatedName": "sanctionsDetailsEntityType",
              "nameOverride": "SanctionsDetails",
              "title": "SanctionsDetails",
              "value": {
                "generatedName": "SanctionsDetailsEntityType",
                "schema": "SanctionsDetailsEntityType",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SanctionsDetails",
        "nameOverride": "SanctionsDetails",
        "title": "SanctionsDetails",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SanctionsDetailsEntityType": {
        "generatedName": "SanctionsDetailsEntityType",
        "nameOverride": "SanctionsDetailsEntityType",
        "title": "SanctionsDetailsEntityType",
        "values": [
          {
            "generatedName": "CONSUMER_NAME",
            "value": "CONSUMER_NAME",
            "casing": {}
          },
          {
            "generatedName": "LEGAL_NAME",
            "value": "LEGAL_NAME",
            "casing": {}
          },
          {
            "generatedName": "SHAREHOLDER",
            "value": "SHAREHOLDER",
            "casing": {}
          },
          {
            "generatedName": "DIRECTOR",
            "value": "DIRECTOR",
            "casing": {}
          },
          {
            "generatedName": "NAME_ON_CARD",
            "value": "NAME_ON_CARD",
            "casing": {}
          },
          {
            "generatedName": "PAYMENT_NAME",
            "value": "PAYMENT_NAME",
            "casing": {}
          },
          {
            "generatedName": "PAYMENT_BENEFICIARY_NAME",
            "value": "PAYMENT_BENEFICIARY_NAME",
            "casing": {}
          },
          {
            "generatedName": "BANK_NAME",
            "value": "BANK_NAME",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "BusinessEntityLink": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "businessEntityLinkParentUserId",
            "key": "parentUserId",
            "schema": {
              "generatedName": "businessEntityLinkParentUserId",
              "nameOverride": "BusinessEntityLink",
              "title": "BusinessEntityLink",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "BusinessEntityLinkParentUserId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "businessEntityLinkChildUserIds",
            "key": "childUserIds",
            "schema": {
              "generatedName": "businessEntityLinkChildUserIds",
              "nameOverride": "BusinessEntityLink",
              "title": "BusinessEntityLink",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "BusinessEntityLinkChildUserIdsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "BusinessEntityLinkChildUserIds",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "BusinessEntityLink",
        "nameOverride": "BusinessEntityLink",
        "title": "BusinessEntityLink",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "UserWithRulesResult": {
        "allOf": [
          {
            "generatedName": "User",
            "schema": "User",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "userWithRulesResultExecutedRules",
            "key": "executedRules",
            "schema": {
              "generatedName": "userWithRulesResultExecutedRules",
              "value": {
                "value": {
                  "generatedName": "UserWithRulesResultExecutedRulesItem",
                  "schema": "ExecutedRulesResult",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "UserWithRulesResultExecutedRules",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userWithRulesResultHitRules",
            "key": "hitRules",
            "schema": {
              "generatedName": "userWithRulesResultHitRules",
              "value": {
                "value": {
                  "generatedName": "UserWithRulesResultHitRulesItem",
                  "schema": "HitRulesDetails",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "UserWithRulesResultHitRules",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for consumer user payload with rules result",
        "generatedName": "UserWithRulesResult",
        "nameOverride": "UserWithRulesResult",
        "title": "UserWithRulesResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "BusinessWithRulesResult": {
        "allOf": [
          {
            "generatedName": "Business",
            "schema": "Business",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "businessWithRulesResultExecutedRules",
            "key": "executedRules",
            "schema": {
              "generatedName": "businessWithRulesResultExecutedRules",
              "value": {
                "value": {
                  "generatedName": "BusinessWithRulesResultExecutedRulesItem",
                  "schema": "ExecutedRulesResult",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "BusinessWithRulesResultExecutedRules",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "businessWithRulesResultHitRules",
            "key": "hitRules",
            "schema": {
              "generatedName": "businessWithRulesResultHitRules",
              "value": {
                "value": {
                  "generatedName": "BusinessWithRulesResultHitRulesItem",
                  "schema": "HitRulesDetails",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "BusinessWithRulesResultHitRules",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model for business payload with rules result",
        "generatedName": "BusinessWithRulesResult",
        "nameOverride": "BusinessWithRulesResult",
        "title": "BusinessWithRulesResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Thing": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "thingPublishedAt",
            "key": "publishedAt",
            "schema": {
              "generatedName": "ThingPublishedAt",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ThingPublishedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "nullable"
            },
            "audiences": [],
            "readonly": true
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Thing",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      }
    },
    "namespacedSchemas": {}
  },
  "variables": {},
  "nonRequestReferencedSchemas": {},
  "securitySchemes": {
    "x-api-key": {
      "headerName": "x-api-key",
      "type": "header"
    }
  },
  "globalHeaders": [],
  "idempotencyHeaders": [],
  "groups": {}
}