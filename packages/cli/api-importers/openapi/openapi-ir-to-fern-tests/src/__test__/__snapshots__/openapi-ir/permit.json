{
  "title": "Permit.io API",
  "description": "\nAuthorization as a service\n",
  "servers": [
    {
      "url": "https://api.permit.io"
    }
  ],
  "tags": {
    "tagsById": {
      "Organizations": {
        "id": "Organizations",
        "description": "\nThe Organizations API gives you access to control and manage your Permit organizations.\n\nAn organization represents a **single billable account** (i.e: a company using Permit).\nYou may invite your team members to your Permit account, and thus multiple team members\nmay control an organization simultaniously (each member has access according to his role).\n"
      },
      "Projects": {
        "id": "Projects",
        "description": "\nProjects let you manage permissions for different business objectives from a single Permit account.\n\nFor example, you can create one project called \"Billing App\" and another project called \"Web App\".\nEvery project is a separate silo, and has its own unique set of environments and policies.\n"
      },
      "Environments": {
        "id": "Environments",
        "description": "\nEnvironments are silos contained within projects that enables you to safely iterate on changes.\n\nEnvironments allow you to manage your policy throughout your entire development lifecycle,\nfrom dev to production. Typical environments within a project could be `production`, `staging`,\nor individual environments.\n\nEach project must contain at least one environment.\nYou may clone an environment from a base environment, similar to git branches.\nYou can later safely merge the changes, after you tested them.\n"
      },
      "Resources": {
        "id": "Resources",
        "description": "\nResources are *types* of objects or feature names that you wish to protect (or gate) with permissions.\n\nFor example, if you build a document-sharing app like google docs, you might want to define a \"document\" resource.\n\nA resource definition block typically contains **actions**.\nActions are the various ways you can interact with the object / feature. Each (resource, action) pair defines a unique permission level.\n\nA resource may also contain:\n- roles (if you wish to define resource-bound roles or if your permissions model is relational)\n- relations to other resources (if your permissions model is relational, i.e: you work with a ReBAC model)\n- attributes (attributes that are typically defined on the resource, typically used in ABAC models)\n"
      },
      "Resource Actions": {
        "id": "Resource Actions",
        "description": "\nActions are the various ways you can interact with a resource or affect the resource.\nEach (resource, action) pair defines a unique permission level.\n"
      },
      "Resource Roles": {
        "id": "Resource Roles",
        "description": "\nRoles allow you to associate permissions indirectly via a job function.\n\nResource roles allow you to grant roles that are scoped to a resource, thus\nexpressing ownership or arbitrary relationships between an actor (i.e: user) and\na specific object.\n\nThis API allows you to manipulate roles: assign or unassign permissions to a role,\ndefine hierarchy (inheritance) between two roles or define relationships between two roles.\n"
      },
      "Resource Attributes": {
        "id": "Resource Attributes",
        "description": "\nResource attributes allow you to specify an arbitrary schema attributes that are part\nof the definition of resource and must be included in any of its instances.\n\nAttributes are used to enforce attribute-based access control policies.\n\nFor example, if we are building the github's permissions system, we might want to know\non the `Repository` resource whether the repo is private or now. In such case we will\ndefine a boolean `private` attributes that we can now use in our policies.\n"
      },
      "User Attributes": {
        "id": "User Attributes",
        "description": "\nUser attributes allow you to specify an arbitrary schema attributes that are part\nof the definition of the User resource.\n\nAttributes are used to enforce attribute-based access control policies.\n\n*NOTE: A User is a Resource by itself, so basically a user's attribute is an attribute that assigned to the resource called \"user\".*\n\nFor example, if we are building the github's permissions system, we might want to know\nwhether the user is an owner of the organization or not. In such case we will\ndefine a string `owner` attribute that we can now use in our policies.\n"
      },
      "Roles": {
        "id": "Roles",
        "description": "\nRoles allow you to associate permissions indirectly via a job function.\n\nThe Roles API allows you to manipulate roles: assign or unassign permissions to a role,\ndefine hierarchy between roles or define relationships between resource roles.\n\nRoles manipulated by this API are **tenant roles**, meaning when they are assigned, they are\nassigned on a tenant.\n"
      },
      "Condition Sets": {
        "id": "Condition Sets",
        "description": "\nCondition sets are sets of objects that are dynamically defined based on conditions on the objects' attributes.\nConditions sets allows you the flexibility of ABAC with the simplicity of RBAC.\n\nThere are currently two types of condition sets at the moment:\n1) user set = the set of users that match all the specified conditions.\n2) resource set = the set of resources that match all the specified conditions.\n\nExamples:\n\n- `us_based_employees` = {U1, ..., Un} = {all **users** who are *located in the US* and are *assigned the employee role*}\n- `private_repos` = {R1, ..., Rn} = {all **resources** *of type repository* that *are private*}\n\nWe can then picture a **matrix** of assignment between *user sets* and *resource sets*.\n\nExample:\nIf we check the checkbox where `us_based_employees` and `private_repos->clone` action intersect, we are setting a rule:\n*all US based employees can clone private repos*.\n"
      },
      "Resource Action Groups": {
        "id": "Resource Action Groups",
        "description": "\nResource Action Groups are groups of actions that are assigned\nto a role as one action.\n"
      },
      "Users": {
        "id": "Users",
        "description": "\nUsers represent human end-users of your applications that you'd like to enforce permissions on.\n\nYou must create a user object in Permit.io prior to trying to enforce permissions for that user.\nA user is identified by its key, and you can only create one user with the same key inside a Permit environment.\nYou can place users within tenants via role assignments in order to enforce multi-tenancy in your app.\n\nYou may create users via the API (shown below), with one of the SDKs, or via the Permit cloud console.\n"
      },
      "Tenants": {
        "id": "Tenants",
        "description": "\nA tenant is a group of users that share a common organizational identity.\n\nEach tenant is a silo that can enforce strict boundaries between your customers.\nYou can associate your protected objects with a specific tenant, and only users\nbelonging to that tenant may access these resources (pending on adequate permissions).\n\nUsually, each tenant will represent one of the end-customer companies in your product\n(i.e. the company that you sell to). Through the tenant feature we enable you to have\nmulti-tenancy straight out of the box.\n"
      },
      "Role Assignments": {
        "id": "Role Assignments",
        "description": "\nRole Assignments are RBAC-constructs that state that a actor (i.e: user) is assigned a role within a tenant.\n\nWith role assignments you can assign or unassign roles to a user.\nRole assignment define the relationship between users and tenants.\n"
      },
      "Condition Set Rules": {
        "id": "Condition Set Rules",
        "description": "\nRepresents a \"mini\" ABAC rule comprised of (UserSet, Action, ResourceSet).\n\nIf such tuple exists, it means all users matching the UserSet\ncan perform the Action on the resources matching ResourceSet.\n\nExample:\n(`us_based_employees`, `repository:clone`, `private_repos`) where:\n- `us_based_employees` is a user set\n- `repository:clone` is an action\n- `private_repos` is a resource set\n"
      },
      "Resource Instances": {
        "id": "Resource Instances",
        "description": "\nResource instances are instances of resource types.\n\nAn instance represents **a single object** in your system on which you'd want to enforce authorization.\nYou can use this API to store tenancy data (tenant) and arbitraty data (attributes).\n"
      },
      "Proxy Config": {
        "id": "Proxy Config",
        "description": "\nProxy Config is set to enable the Permit Proxy to make proxied requests as part of the Frontend AuthZ.\n"
      },
      "Bulk Operations": {
        "id": "Bulk Operations",
        "description": "None"
      }
    },
    "orderedTagIds": [
      "Organizations",
      "Projects",
      "Environments",
      "Resources",
      "Resource Actions",
      "Resource Roles",
      "Resource Attributes",
      "User Attributes",
      "Roles",
      "Condition Sets",
      "Resource Action Groups",
      "Users",
      "Tenants",
      "Role Assignments",
      "Condition Set Rules",
      "Resource Instances",
      "Proxy Config",
      "Bulk Operations"
    ]
  },
  "hasEndpointsMarkedInternal": false,
  "endpoints": [
    {
      "summary": "List Organizations",
      "audiences": [],
      "operationId": "list_organizations",
      "tags": [
        "Organizations"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Page number of the results to fetch, starting at 1.",
          "name": "page",
          "schema": {
            "generatedName": "ListOrganizationsRequestPage",
            "nameOverride": "Page",
            "title": "Page",
            "description": "Page number of the results to fetch, starting at 1.",
            "value": {
              "description": "Page number of the results to fetch, starting at 1.",
              "schema": {
                "default": 1,
                "minimum": 1,
                "type": "int"
              },
              "generatedName": "ListOrganizationsRequestPage",
              "nameOverride": "Page",
              "title": "Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The number of results per page (max 100).",
          "name": "per_page",
          "schema": {
            "generatedName": "ListOrganizationsRequestPerPage",
            "title": "Per Page",
            "description": "The number of results per page (max 100).",
            "value": {
              "description": "The number of results per page (max 100).",
              "schema": {
                "default": 30,
                "minimum": 1,
                "maximum": 100,
                "type": "int"
              },
              "generatedName": "ListOrganizationsRequestPerPage",
              "title": "Per Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListOrganizationsRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "value": {
            "generatedName": "ListOrganizationsResponseItem",
            "schema": "OrganizationRead",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "ListOrganizationsResponse",
          "title": "Response List Organizations V2 Orgs Get",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Lists all the organizations that can be accessed by the\nauthenticated actor (i.e: human team member or api key).",
      "authed": true,
      "method": "GET",
      "path": "/v2/orgs",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "key": {
                      "value": {
                        "value": "key",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "is_enterprise": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "created_at": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "settings": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": {
                                "value": "value",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "type": "unknown"
                          }
                        }
                      ],
                      "type": "map"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Create Organization",
      "audiences": [],
      "operationId": "create_organization",
      "tags": [
        "Organizations"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CreateOrganizationRequest",
      "request": {
        "schema": {
          "generatedName": "CreateOrganizationRequest",
          "schema": "OrganizationCreate",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "CreateOrganizationResponse",
          "schema": "OrganizationReadWithAPIKey",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Creates a new organization that will be owned by the\nauthenticated actor (i.e: human team member or api key).",
      "authed": true,
      "method": "POST",
      "path": "/v2/orgs",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "key": {
                "value": {
                  "value": "key",
                  "type": "string"
                },
                "type": "primitive"
              },
              "name": {
                "value": {
                  "value": "name",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "key": {
                  "value": {
                    "value": "key",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "is_enterprise": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "settings": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "api_key_id": {
                  "value": {
                    "value": "api_key_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "api_key_secret": {
                  "value": {
                    "value": "api_key_secret",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get Organization",
      "audiences": [],
      "operationId": "get_organization",
      "tags": [
        "Organizations"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \"slug\").",
          "name": "org_id",
          "schema": {
            "description": "Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetOrganizationRequestOrgId",
            "title": "Org Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetOrganizationRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "GetOrganizationResponse",
          "schema": "OrganizationRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Gets a single organization (Permit.io account) matching the given org_id,\nif such org exists and can be accessed by the authenticated actor.",
      "authed": true,
      "method": "GET",
      "path": "/v2/orgs/{org_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "org_id",
              "value": {
                "value": {
                  "value": "org_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "key": {
                  "value": {
                    "value": "key",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "is_enterprise": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "settings": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete Organization",
      "audiences": [],
      "operationId": "delete_organization",
      "tags": [
        "Organizations"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \"slug\").",
          "name": "org_id",
          "schema": {
            "description": "Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteOrganizationRequestOrgId",
            "title": "Org Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteOrganizationRequest",
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Deletes an organization (Permit.io account) and all its related data.",
      "authed": true,
      "method": "DELETE",
      "path": "/v2/orgs/{org_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "org_id",
              "value": {
                "value": {
                  "value": "org_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Update Organization",
      "audiences": [],
      "operationId": "update_organization",
      "tags": [
        "Organizations"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \"slug\").",
          "name": "org_id",
          "schema": {
            "description": "Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateOrganizationRequestOrgId",
            "title": "Org Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UpdateOrganizationRequest",
      "request": {
        "schema": {
          "generatedName": "UpdateOrganizationRequest",
          "schema": "OrganizationUpdate",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "UpdateOrganizationResponse",
          "schema": "OrganizationRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Updates the organization's profile.",
      "authed": true,
      "method": "PATCH",
      "path": "/v2/orgs/{org_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "org_id",
              "value": {
                "value": {
                  "value": "org_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "key": {
                  "value": {
                    "value": "key",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "is_enterprise": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "settings": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get Active Organization",
      "audiences": [],
      "operationId": "get_active_organization",
      "tags": [
        "Organizations"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetActiveOrganizationRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "GetActiveOrganizationResponse",
          "schema": "OrganizationRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Gets a single organization (Permit.io account) matching the given org_id,\nif such org exists and can be accessed by the authenticated actor.",
      "authed": true,
      "method": "GET",
      "path": "/v2/orgs/active/org",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "key": {
                  "value": {
                    "value": "key",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "is_enterprise": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "settings": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "List Projects",
      "audiences": [],
      "operationId": "list_projects",
      "tags": [
        "Projects"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Page number of the results to fetch, starting at 1.",
          "name": "page",
          "schema": {
            "generatedName": "ListProjectsRequestPage",
            "nameOverride": "Page",
            "title": "Page",
            "description": "Page number of the results to fetch, starting at 1.",
            "value": {
              "description": "Page number of the results to fetch, starting at 1.",
              "schema": {
                "default": 1,
                "minimum": 1,
                "type": "int"
              },
              "generatedName": "ListProjectsRequestPage",
              "nameOverride": "Page",
              "title": "Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The number of results per page (max 100).",
          "name": "per_page",
          "schema": {
            "generatedName": "ListProjectsRequestPerPage",
            "title": "Per Page",
            "description": "The number of results per page (max 100).",
            "value": {
              "description": "The number of results per page (max 100).",
              "schema": {
                "default": 30,
                "minimum": 1,
                "maximum": 100,
                "type": "int"
              },
              "generatedName": "ListProjectsRequestPerPage",
              "title": "Per Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListProjectsRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "value": {
            "generatedName": "ListProjectsResponseItem",
            "schema": "ProjectRead",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "ListProjectsResponse",
          "title": "Response List Projects V2 Projects Get",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Lists all the projects under the active organization.",
      "authed": true,
      "method": "GET",
      "path": "/v2/projects",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "key": {
                      "value": {
                        "value": "key",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "urn_namespace": {
                      "value": {
                        "value": "urn_namespace",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "organization_id": {
                      "value": {
                        "value": "organization_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "created_at": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "description": {
                      "value": {
                        "value": "description",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "settings": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": {
                                "value": "value",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "type": "unknown"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    "active_policy_repo_id": {
                      "value": {
                        "value": "active_policy_repo_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Create Project",
      "audiences": [],
      "operationId": "create_project",
      "tags": [
        "Projects"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CreateProjectRequest",
      "request": {
        "schema": {
          "generatedName": "CreateProjectRequest",
          "schema": "ProjectCreate",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "CreateProjectResponse",
          "schema": "ProjectRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Creates a new project under the active organization.",
      "authed": true,
      "method": "POST",
      "path": "/v2/projects",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "key": {
                "value": {
                  "value": "key",
                  "type": "string"
                },
                "type": "primitive"
              },
              "name": {
                "value": {
                  "value": "name",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "key": {
                  "value": {
                    "value": "key",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "urn_namespace": {
                  "value": {
                    "value": "urn_namespace",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "organization_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "description",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "settings": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "active_policy_repo_id": {
                  "value": {
                    "value": "active_policy_repo_id",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get Project",
      "audiences": [],
      "operationId": "get_project",
      "tags": [
        "Projects"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetProjectRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetProjectRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "GetProjectResponse",
          "schema": "ProjectRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Gets a single project matching the given proj_id, if such project exists.",
      "authed": true,
      "method": "GET",
      "path": "/v2/projects/{proj_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "key": {
                  "value": {
                    "value": "key",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "urn_namespace": {
                  "value": {
                    "value": "urn_namespace",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "organization_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "description",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "settings": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "active_policy_repo_id": {
                  "value": {
                    "value": "active_policy_repo_id",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete Project",
      "audiences": [],
      "operationId": "delete_project",
      "tags": [
        "Projects"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteProjectRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteProjectRequest",
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Deletes the project and all its related data.",
      "authed": true,
      "method": "DELETE",
      "path": "/v2/projects/{proj_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Update Project",
      "audiences": [],
      "operationId": "update_project",
      "tags": [
        "Projects"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateProjectRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UpdateProjectRequest",
      "request": {
        "schema": {
          "generatedName": "UpdateProjectRequest",
          "schema": "ProjectUpdate",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "UpdateProjectResponse",
          "schema": "ProjectRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Updates the project.",
      "authed": true,
      "method": "PATCH",
      "path": "/v2/projects/{proj_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "key": {
                  "value": {
                    "value": "key",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "urn_namespace": {
                  "value": {
                    "value": "urn_namespace",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "organization_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "description",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "settings": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "active_policy_repo_id": {
                  "value": {
                    "value": "active_policy_repo_id",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Stats Environments",
      "audiences": [],
      "operationId": "stats_environments",
      "tags": [
        "Environments"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "StatsEnvironmentsRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "StatsEnvironmentsRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "StatsEnvironmentsRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "StatsEnvironmentsResponse",
          "schema": "EnvironmentStats",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/v2/projects/{proj_id}/envs/{env_id}/stats",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "key": {
                  "value": {
                    "value": "key",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "organization_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "project_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "description",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "custom_branch_name": {
                  "value": {
                    "value": "custom_branch_name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "jwks": {
                  "properties": {
                    "keys": {
                      "value": [
                        {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "settings": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "pdp_configs": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "organization_id": {
                          "value": {
                            "value": "organization_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "project_id": {
                          "value": {
                            "value": "project_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "environment_id": {
                          "value": {
                            "value": "environment_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "client_secret": {
                          "value": {
                            "value": "client_secret",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "stats": {
                  "properties": {
                    "roles": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "users": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "policies": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "resources": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "tenants": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "has_decision_logs": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "members": {
                      "value": [
                        {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "email": {
                              "value": {
                                "value": "janedoe@permituser.com",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "email_verified": {
                              "value": {
                                "value": true,
                                "type": "boolean"
                              },
                              "type": "primitive"
                            },
                            "name": {
                              "value": {
                                "value": "Jane Josephine Doe",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "given_name": {
                              "value": {
                                "value": "Jane",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "family_name": {
                              "value": {
                                "value": "Doe",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "picture": {
                              "value": {
                                "value": "http://permituser.com/janedoe/me.jpg",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "is_superuser": {
                              "value": {
                                "value": false,
                                "type": "boolean"
                              },
                              "type": "primitive"
                            },
                            "is_onboarding": {
                              "value": {
                                "value": true,
                                "type": "boolean"
                              },
                              "type": "primitive"
                            },
                            "onboarding_step": {
                              "value": "done",
                              "type": "enum"
                            },
                            "created_at": {
                              "value": {
                                "value": "2019-08-20T14:15:22Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "last_login": {
                              "value": {
                                "value": "2019-08-24T14:15:22Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "last_ip": {
                              "value": {
                                "value": "1.2.3.4",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "logins_count": {
                              "value": {
                                "value": 2,
                                "type": "int"
                              },
                              "type": "primitive"
                            },
                            "identities": {
                              "value": [
                                {
                                  "properties": {
                                    "user_id": {
                                      "value": {
                                        "value": "google-oauth2|000000000000000000001",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "provider": {
                                      "value": {
                                        "value": "google-oauth2",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "sub": {
                                      "value": {
                                        "value": "000000000000000000001",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "email": {
                                      "value": {
                                        "value": "Jane@permituser.com",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "email_verified": {
                                      "value": {
                                        "value": true,
                                        "type": "boolean"
                                      },
                                      "type": "primitive"
                                    },
                                    "auth0_info": {
                                      "value": [
                                        {
                                          "key": {
                                            "value": "key",
                                            "type": "string"
                                          },
                                          "value": {
                                            "value": {
                                              "value": {
                                                "value": "value",
                                                "type": "string"
                                              },
                                              "type": "primitive"
                                            },
                                            "type": "unknown"
                                          }
                                        }
                                      ],
                                      "type": "map"
                                    }
                                  },
                                  "type": "object"
                                }
                              ],
                              "type": "array"
                            },
                            "invite": {
                              "properties": {
                                "email": {
                                  "value": {
                                    "value": "Jane@permituser.com",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "role": {
                                  "value": "admin",
                                  "type": "enum"
                                },
                                "id": {
                                  "value": {
                                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "organization_id": {
                                  "value": {
                                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "invite_code": {
                                  "value": {
                                    "value": "40ef0e48-a11f-4963-a229-e396c9eeefff",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "created_at": {
                                  "value": {
                                    "value": "2019-08-24T14:15:22Z",
                                    "type": "datetime"
                                  },
                                  "type": "primitive"
                                },
                                "status": {
                                  "value": "pending",
                                  "type": "enum"
                                },
                                "failed_reason": {
                                  "value": {
                                    "value": "",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            },
                            "settings": {
                              "value": [
                                {
                                  "key": {
                                    "value": "option",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": {
                                      "value": {
                                        "value": "value",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "type": "unknown"
                                  }
                                },
                                {
                                  "key": {
                                    "value": "another-option",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": {
                                      "value": {
                                        "value": "another-value",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "type": "unknown"
                                  }
                                }
                              ],
                              "type": "map"
                            },
                            "grants": {
                              "value": [
                                {
                                  "properties": {
                                    "organization_id": {
                                      "value": {
                                        "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "object_type": {
                                      "value": "org",
                                      "type": "enum"
                                    },
                                    "access_level": {
                                      "value": "admin",
                                      "type": "enum"
                                    }
                                  },
                                  "type": "object"
                                }
                              ],
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "List Environments",
      "audiences": [],
      "operationId": "list_environments",
      "tags": [
        "Environments"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListEnvironmentsRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Page number of the results to fetch, starting at 1.",
          "name": "page",
          "schema": {
            "generatedName": "ListEnvironmentsRequestPage",
            "nameOverride": "Page",
            "title": "Page",
            "description": "Page number of the results to fetch, starting at 1.",
            "value": {
              "description": "Page number of the results to fetch, starting at 1.",
              "schema": {
                "default": 1,
                "minimum": 1,
                "type": "int"
              },
              "generatedName": "ListEnvironmentsRequestPage",
              "nameOverride": "Page",
              "title": "Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The number of results per page (max 100).",
          "name": "per_page",
          "schema": {
            "generatedName": "ListEnvironmentsRequestPerPage",
            "title": "Per Page",
            "description": "The number of results per page (max 100).",
            "value": {
              "description": "The number of results per page (max 100).",
              "schema": {
                "default": 30,
                "minimum": 1,
                "maximum": 100,
                "type": "int"
              },
              "generatedName": "ListEnvironmentsRequestPerPage",
              "title": "Per Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListEnvironmentsRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "value": {
            "generatedName": "ListEnvironmentsResponseItem",
            "schema": "EnvironmentRead",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "ListEnvironmentsResponse",
          "title": "Response List Environments V2 Projects  Proj Id  Envs Get",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Lists all the environments under a given project.",
      "authed": true,
      "method": "GET",
      "path": "/v2/projects/{proj_id}/envs",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "key": {
                      "value": {
                        "value": "key",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "organization_id": {
                      "value": {
                        "value": "organization_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "project_id": {
                      "value": {
                        "value": "project_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "created_at": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "description": {
                      "value": {
                        "value": "description",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "custom_branch_name": {
                      "value": {
                        "value": "custom_branch_name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "jwks": {
                      "properties": {
                        "keys": {
                          "value": [
                            {
                              "value": [
                                {
                                  "key": {
                                    "value": "key",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": {
                                      "value": {
                                        "value": "value",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "type": "unknown"
                                  }
                                }
                              ],
                              "type": "map"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "settings": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": {
                                "value": "value",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "type": "unknown"
                          }
                        }
                      ],
                      "type": "map"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Create Environment",
      "audiences": [],
      "operationId": "create_environment",
      "tags": [
        "Environments"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "CreateEnvironmentRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CreateEnvironmentRequest",
      "request": {
        "schema": {
          "generatedName": "CreateEnvironmentRequest",
          "schema": "EnvironmentCreate",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "CreateEnvironmentResponse",
          "schema": "EnvironmentRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Creates a new environment under a given project.",
      "authed": true,
      "method": "POST",
      "path": "/v2/projects/{proj_id}/envs",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "key": {
                "value": {
                  "value": "key",
                  "type": "string"
                },
                "type": "primitive"
              },
              "name": {
                "value": {
                  "value": "name",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "key": {
                  "value": {
                    "value": "key",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "organization_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "project_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "description",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "custom_branch_name": {
                  "value": {
                    "value": "custom_branch_name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "jwks": {
                  "properties": {
                    "keys": {
                      "value": [
                        {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "settings": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get Environment",
      "audiences": [],
      "operationId": "get_environment",
      "tags": [
        "Environments"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetEnvironmentRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetEnvironmentRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetEnvironmentRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "GetEnvironmentResponse",
          "schema": "EnvironmentRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Gets a single environment matching the given env_id, if such environment exists.",
      "authed": true,
      "method": "GET",
      "path": "/v2/projects/{proj_id}/envs/{env_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "key": {
                  "value": {
                    "value": "key",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "organization_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "project_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "description",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "custom_branch_name": {
                  "value": {
                    "value": "custom_branch_name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "jwks": {
                  "properties": {
                    "keys": {
                      "value": [
                        {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "settings": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete Environment",
      "audiences": [],
      "operationId": "delete_environment",
      "tags": [
        "Environments"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteEnvironmentRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteEnvironmentRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteEnvironmentRequest",
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Deletes an environment and all its related data.",
      "authed": true,
      "method": "DELETE",
      "path": "/v2/projects/{proj_id}/envs/{env_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Update Environment",
      "audiences": [],
      "operationId": "update_environment",
      "tags": [
        "Environments"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateEnvironmentRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateEnvironmentRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UpdateEnvironmentRequest",
      "request": {
        "schema": {
          "generatedName": "UpdateEnvironmentRequest",
          "schema": "EnvironmentUpdate",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "UpdateEnvironmentResponse",
          "schema": "EnvironmentRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Updates the environment.",
      "authed": true,
      "method": "PATCH",
      "path": "/v2/projects/{proj_id}/envs/{env_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "key": {
                  "value": {
                    "value": "key",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "organization_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "project_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "description",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "custom_branch_name": {
                  "value": {
                    "value": "custom_branch_name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "jwks": {
                  "properties": {
                    "keys": {
                      "value": [
                        {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "settings": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Copy Environment",
      "audiences": [],
      "operationId": "copy_environment",
      "tags": [
        "Environments"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "CopyEnvironmentRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "CopyEnvironmentRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CopyEnvironmentRequest",
      "request": {
        "schema": {
          "generatedName": "CopyEnvironmentRequest",
          "schema": "EnvironmentCopy",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "CopyEnvironmentResponse",
          "schema": "EnvironmentRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Copy environment\n\nThis endpoint either duplicates an existing environment to a new environment\nin the same project, or copies from an existing environment to another\nexisting environment.\n\nThe `scope` object controls which objects will be copied to the target\nenvironment.\n\nTo clone to a new environment, the user must have write permissions\nto the containing project. To clone into an existing environment,\nthe user must have write permissions to the target environment.\n\nCopying environments across projects or organizations is not\nallowed.",
      "authed": true,
      "method": "POST",
      "path": "/v2/projects/{proj_id}/envs/{env_id}/copy",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "target_env": {
                "properties": {},
                "type": "object"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "key": {
                  "value": {
                    "value": "key",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "organization_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "project_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "description",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "custom_branch_name": {
                  "value": {
                    "value": "custom_branch_name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "jwks": {
                  "properties": {
                    "keys": {
                      "value": [
                        {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "settings": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "List Resources",
      "audiences": [],
      "operationId": "list_resources",
      "tags": [
        "Resources"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListResourcesRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListResourcesRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Text search for the resources name or key",
          "name": "search",
          "schema": {
            "generatedName": "ListResourcesRequestSearch",
            "nameOverride": "Search",
            "title": "Search",
            "description": "Text search for the resources name or key",
            "value": {
              "description": "Text search for the resources name or key",
              "schema": {
                "type": "string"
              },
              "generatedName": "ListResourcesRequestSearch",
              "nameOverride": "Search",
              "title": "Search",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include or exclude built-in resources, default is False",
          "name": "include_built_in",
          "schema": {
            "generatedName": "ListResourcesRequestIncludeBuiltIn",
            "title": "Include Built In",
            "description": "Whether to include or exclude built-in resources, default is False",
            "value": {
              "description": "Whether to include or exclude built-in resources, default is False",
              "schema": {
                "default": false,
                "type": "boolean"
              },
              "generatedName": "ListResourcesRequestIncludeBuiltIn",
              "title": "Include Built In",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Include total count in response",
          "name": "include_total_count",
          "schema": {
            "generatedName": "ListResourcesRequestIncludeTotalCount",
            "title": "Include Total Count",
            "description": "Include total count in response",
            "value": {
              "description": "Include total count in response",
              "schema": {
                "default": false,
                "type": "boolean"
              },
              "generatedName": "ListResourcesRequestIncludeTotalCount",
              "title": "Include Total Count",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Page number of the results to fetch, starting at 1.",
          "name": "page",
          "schema": {
            "generatedName": "ListResourcesRequestPage",
            "nameOverride": "Page",
            "title": "Page",
            "description": "Page number of the results to fetch, starting at 1.",
            "value": {
              "description": "Page number of the results to fetch, starting at 1.",
              "schema": {
                "default": 1,
                "minimum": 1,
                "type": "int"
              },
              "generatedName": "ListResourcesRequestPage",
              "nameOverride": "Page",
              "title": "Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The number of results per page (max 100).",
          "name": "per_page",
          "schema": {
            "generatedName": "ListResourcesRequestPerPage",
            "title": "Per Page",
            "description": "The number of results per page (max 100).",
            "value": {
              "description": "The number of results per page (max 100).",
              "schema": {
                "default": 30,
                "minimum": 1,
                "maximum": 100,
                "type": "int"
              },
              "generatedName": "ListResourcesRequestPerPage",
              "title": "Per Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListResourcesRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "value": {
            "generatedName": "ListResourcesResponse",
            "title": "Response List Resources V2 Schema  Proj Id   Env Id  Resources Get",
            "schemas": [
              {
                "generatedName": "ListResourcesResponseZero",
                "schema": "PaginatedResult_ResourceRead_",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              {
                "value": {
                  "generatedName": "ListResourcesResponseItem",
                  "schema": "ResourceRead",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ListResourcesResponse",
                "groupName": [],
                "type": "array"
              }
            ],
            "groupName": [],
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "undiscriminated"
          },
          "type": "oneOf"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Lists all the resources defined in your schema.",
      "authed": true,
      "method": "GET",
      "path": "/v2/schema/{proj_id}/{env_id}/resources",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "data": {
                  "value": [
                    {
                      "properties": {
                        "key": {
                          "value": {
                            "value": "repository",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "organization_id": {
                          "value": {
                            "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "project_id": {
                          "value": {
                            "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "environment_id": {
                          "value": {
                            "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2019-08-24T14:15:22Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2019-08-24T14:15:22Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "Repository",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "urn": {
                          "value": {
                            "value": "prn:github:scm:repository",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "description": {
                          "value": {
                            "value": "a git repository stored on github",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "actions": {
                          "value": [
                            {
                              "key": {
                                "value": "clone",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "id": {
                                    "value": {
                                      "value": "90e21d70-2b1b-42f0-b492-8fd69c1d79d1",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            {
                              "key": {
                                "value": "read",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "id": {
                                    "value": {
                                      "value": "2bc27751-6115-43c0-b68c-928cb46e34bc",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            {
                              "key": {
                                "value": "push",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "id": {
                                    "value": {
                                      "value": "e06da336-6e03-41d6-a495-40b0d7537b2a",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "attributes": {
                          "value": [
                            {
                              "key": {
                                "value": "created",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "type": {
                                    "value": "time",
                                    "type": "enum"
                                  },
                                  "description": {
                                    "value": {
                                      "value": "the time (timestamp) the repository was created",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "id": {
                                    "value": {
                                      "value": "497f6eca-6276-4993-bfeb-53cbbbba6f11",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            {
                              "key": {
                                "value": "private",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "type": {
                                    "value": "bool",
                                    "type": "enum"
                                  },
                                  "description": {
                                    "value": {
                                      "value": "whether the repo is private (if false, the repo is public)",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "id": {
                                    "value": {
                                      "value": "497f6eca-6276-4993-bfeb-53cbbbba6f22",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "action_groups": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": [
                                  {
                                    "value": {
                                      "value": "value",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                ],
                                "type": "array"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "total_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "page_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Create Resource",
      "audiences": [],
      "operationId": "create_resource",
      "tags": [
        "Resources"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "CreateResourceRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "CreateResourceRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CreateResourceRequest",
      "request": {
        "schema": {
          "generatedName": "CreateResourceRequest",
          "schema": "ResourceCreate",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "CreateResourceResponse",
          "schema": "ResourceRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Creates a new resource (a type of object you may protect with permissions).",
      "authed": true,
      "method": "POST",
      "path": "/v2/schema/{proj_id}/{env_id}/resources",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "key": {
                "value": {
                  "value": "repository",
                  "type": "string"
                },
                "type": "primitive"
              },
              "name": {
                "value": {
                  "value": "Repository",
                  "type": "string"
                },
                "type": "primitive"
              },
              "actions": {
                "value": [
                  {
                    "key": {
                      "value": "clone",
                      "type": "string"
                    },
                    "value": {
                      "properties": {},
                      "type": "object"
                    }
                  },
                  {
                    "key": {
                      "value": "read",
                      "type": "string"
                    },
                    "value": {
                      "properties": {},
                      "type": "object"
                    }
                  },
                  {
                    "key": {
                      "value": "push",
                      "type": "string"
                    },
                    "value": {
                      "properties": {},
                      "type": "object"
                    }
                  }
                ],
                "type": "map"
              },
              "attributes": {
                "value": [
                  {
                    "key": {
                      "value": "created",
                      "type": "string"
                    },
                    "value": {
                      "properties": {
                        "type": {
                          "value": "time",
                          "type": "enum"
                        },
                        "description": {
                          "value": {
                            "value": "the time (timestamp) the repository was created",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  },
                  {
                    "key": {
                      "value": "private",
                      "type": "string"
                    },
                    "value": {
                      "properties": {
                        "type": {
                          "value": "bool",
                          "type": "enum"
                        },
                        "description": {
                          "value": {
                            "value": "whether the repo is private (if false, the repo is public)",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  }
                ],
                "type": "map"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "key": {
                  "value": {
                    "value": "repository",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "Repository",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "urn": {
                  "value": {
                    "value": "prn:github:scm:repository",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "a git repository stored on github",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "actions": {
                  "value": [
                    {
                      "key": {
                        "value": "clone",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "name": {
                            "value": {
                              "value": "name",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "description": {
                            "value": {
                              "value": "description",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "attributes": {
                            "value": [
                              {
                                "key": {
                                  "value": "key",
                                  "type": "string"
                                },
                                "value": {
                                  "value": {
                                    "value": {
                                      "value": "value",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "type": "unknown"
                                }
                              }
                            ],
                            "type": "map"
                          },
                          "id": {
                            "value": {
                              "value": "90e21d70-2b1b-42f0-b492-8fd69c1d79d1",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "key": {
                            "value": {
                              "value": "key",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    },
                    {
                      "key": {
                        "value": "read",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "name": {
                            "value": {
                              "value": "name",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "description": {
                            "value": {
                              "value": "description",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "attributes": {
                            "value": [
                              {
                                "key": {
                                  "value": "key",
                                  "type": "string"
                                },
                                "value": {
                                  "value": {
                                    "value": {
                                      "value": "value",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "type": "unknown"
                                }
                              }
                            ],
                            "type": "map"
                          },
                          "id": {
                            "value": {
                              "value": "2bc27751-6115-43c0-b68c-928cb46e34bc",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "key": {
                            "value": {
                              "value": "key",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    },
                    {
                      "key": {
                        "value": "push",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "name": {
                            "value": {
                              "value": "name",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "description": {
                            "value": {
                              "value": "description",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "attributes": {
                            "value": [
                              {
                                "key": {
                                  "value": "key",
                                  "type": "string"
                                },
                                "value": {
                                  "value": {
                                    "value": {
                                      "value": "value",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "type": "unknown"
                                }
                              }
                            ],
                            "type": "map"
                          },
                          "id": {
                            "value": {
                              "value": "e06da336-6e03-41d6-a495-40b0d7537b2a",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "key": {
                            "value": {
                              "value": "key",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "attributes": {
                  "value": [
                    {
                      "key": {
                        "value": "created",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "type": {
                            "value": "time",
                            "type": "enum"
                          },
                          "description": {
                            "value": {
                              "value": "the time (timestamp) the repository was created",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "497f6eca-6276-4993-bfeb-53cbbbba6f11",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "key": {
                            "value": {
                              "value": "key",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    },
                    {
                      "key": {
                        "value": "private",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "type": {
                            "value": "bool",
                            "type": "enum"
                          },
                          "description": {
                            "value": {
                              "value": "whether the repo is private (if false, the repo is public)",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "497f6eca-6276-4993-bfeb-53cbbbba6f22",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "key": {
                            "value": {
                              "value": "key",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "action_groups": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": [
                          {
                            "value": {
                              "value": "value",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        ],
                        "type": "array"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get Resource",
      "audiences": [],
      "operationId": "get_resource",
      "tags": [
        "Resources"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetResourceRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetResourceRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
          "name": "resource_id",
          "schema": {
            "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetResourceRequestResourceId",
            "title": "Resource Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetResourceRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "GetResourceResponse",
          "schema": "ResourceRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Gets a single resource, if such resource exists.",
      "authed": true,
      "method": "GET",
      "path": "/v2/schema/{proj_id}/{env_id}/resources/{resource_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "resource_id",
              "value": {
                "value": {
                  "value": "resource_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "key": {
                  "value": {
                    "value": "repository",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "Repository",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "urn": {
                  "value": {
                    "value": "prn:github:scm:repository",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "a git repository stored on github",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "actions": {
                  "value": [
                    {
                      "key": {
                        "value": "clone",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "name": {
                            "value": {
                              "value": "name",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "description": {
                            "value": {
                              "value": "description",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "attributes": {
                            "value": [
                              {
                                "key": {
                                  "value": "key",
                                  "type": "string"
                                },
                                "value": {
                                  "value": {
                                    "value": {
                                      "value": "value",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "type": "unknown"
                                }
                              }
                            ],
                            "type": "map"
                          },
                          "id": {
                            "value": {
                              "value": "90e21d70-2b1b-42f0-b492-8fd69c1d79d1",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "key": {
                            "value": {
                              "value": "key",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    },
                    {
                      "key": {
                        "value": "read",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "name": {
                            "value": {
                              "value": "name",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "description": {
                            "value": {
                              "value": "description",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "attributes": {
                            "value": [
                              {
                                "key": {
                                  "value": "key",
                                  "type": "string"
                                },
                                "value": {
                                  "value": {
                                    "value": {
                                      "value": "value",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "type": "unknown"
                                }
                              }
                            ],
                            "type": "map"
                          },
                          "id": {
                            "value": {
                              "value": "2bc27751-6115-43c0-b68c-928cb46e34bc",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "key": {
                            "value": {
                              "value": "key",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    },
                    {
                      "key": {
                        "value": "push",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "name": {
                            "value": {
                              "value": "name",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "description": {
                            "value": {
                              "value": "description",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "attributes": {
                            "value": [
                              {
                                "key": {
                                  "value": "key",
                                  "type": "string"
                                },
                                "value": {
                                  "value": {
                                    "value": {
                                      "value": "value",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "type": "unknown"
                                }
                              }
                            ],
                            "type": "map"
                          },
                          "id": {
                            "value": {
                              "value": "e06da336-6e03-41d6-a495-40b0d7537b2a",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "key": {
                            "value": {
                              "value": "key",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "attributes": {
                  "value": [
                    {
                      "key": {
                        "value": "created",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "type": {
                            "value": "time",
                            "type": "enum"
                          },
                          "description": {
                            "value": {
                              "value": "the time (timestamp) the repository was created",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "497f6eca-6276-4993-bfeb-53cbbbba6f11",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "key": {
                            "value": {
                              "value": "key",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    },
                    {
                      "key": {
                        "value": "private",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "type": {
                            "value": "bool",
                            "type": "enum"
                          },
                          "description": {
                            "value": {
                              "value": "whether the repo is private (if false, the repo is public)",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "497f6eca-6276-4993-bfeb-53cbbbba6f22",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "key": {
                            "value": {
                              "value": "key",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "action_groups": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": [
                          {
                            "value": {
                              "value": "value",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        ],
                        "type": "array"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Replace Resource",
      "audiences": [],
      "operationId": "replace_resource",
      "tags": [
        "Resources"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ReplaceResourceRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ReplaceResourceRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
          "name": "resource_id",
          "schema": {
            "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ReplaceResourceRequestResourceId",
            "title": "Resource Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ReplaceResourceRequest",
      "request": {
        "schema": {
          "generatedName": "ReplaceResourceRequest",
          "schema": "ResourceReplace",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "ReplaceResourceResponse",
          "schema": "ResourceRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Completely replaces the resource definition.\n\n- If the resource key is changed, all role and permissions assignments for the the resource will be revoked.\n- If the resource key is unchanged, but some actions are removed or renamed from the resource definition,\nrole and permissions assignments for these actions will be revoked.\n\nTODO: we need to decide if we are auto-revoking, or if we are rejecting the PUT completely while there are permissions that can be affected.",
      "authed": true,
      "method": "PUT",
      "path": "/v2/schema/{proj_id}/{env_id}/resources/{resource_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "resource_id",
              "value": {
                "value": {
                  "value": "resource_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "name": {
                "value": {
                  "value": "name",
                  "type": "string"
                },
                "type": "primitive"
              },
              "actions": {
                "value": [
                  {
                    "key": {
                      "value": "key",
                      "type": "string"
                    },
                    "value": {
                      "properties": {},
                      "type": "object"
                    }
                  }
                ],
                "type": "map"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "key": {
                  "value": {
                    "value": "repository",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "Repository",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "urn": {
                  "value": {
                    "value": "prn:github:scm:repository",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "a git repository stored on github",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "actions": {
                  "value": [
                    {
                      "key": {
                        "value": "clone",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "name": {
                            "value": {
                              "value": "name",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "description": {
                            "value": {
                              "value": "description",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "attributes": {
                            "value": [
                              {
                                "key": {
                                  "value": "key",
                                  "type": "string"
                                },
                                "value": {
                                  "value": {
                                    "value": {
                                      "value": "value",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "type": "unknown"
                                }
                              }
                            ],
                            "type": "map"
                          },
                          "id": {
                            "value": {
                              "value": "90e21d70-2b1b-42f0-b492-8fd69c1d79d1",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "key": {
                            "value": {
                              "value": "key",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    },
                    {
                      "key": {
                        "value": "read",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "name": {
                            "value": {
                              "value": "name",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "description": {
                            "value": {
                              "value": "description",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "attributes": {
                            "value": [
                              {
                                "key": {
                                  "value": "key",
                                  "type": "string"
                                },
                                "value": {
                                  "value": {
                                    "value": {
                                      "value": "value",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "type": "unknown"
                                }
                              }
                            ],
                            "type": "map"
                          },
                          "id": {
                            "value": {
                              "value": "2bc27751-6115-43c0-b68c-928cb46e34bc",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "key": {
                            "value": {
                              "value": "key",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    },
                    {
                      "key": {
                        "value": "push",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "name": {
                            "value": {
                              "value": "name",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "description": {
                            "value": {
                              "value": "description",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "attributes": {
                            "value": [
                              {
                                "key": {
                                  "value": "key",
                                  "type": "string"
                                },
                                "value": {
                                  "value": {
                                    "value": {
                                      "value": "value",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "type": "unknown"
                                }
                              }
                            ],
                            "type": "map"
                          },
                          "id": {
                            "value": {
                              "value": "e06da336-6e03-41d6-a495-40b0d7537b2a",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "key": {
                            "value": {
                              "value": "key",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "attributes": {
                  "value": [
                    {
                      "key": {
                        "value": "created",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "type": {
                            "value": "time",
                            "type": "enum"
                          },
                          "description": {
                            "value": {
                              "value": "the time (timestamp) the repository was created",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "497f6eca-6276-4993-bfeb-53cbbbba6f11",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "key": {
                            "value": {
                              "value": "key",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    },
                    {
                      "key": {
                        "value": "private",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "type": {
                            "value": "bool",
                            "type": "enum"
                          },
                          "description": {
                            "value": {
                              "value": "whether the repo is private (if false, the repo is public)",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "497f6eca-6276-4993-bfeb-53cbbbba6f22",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "key": {
                            "value": {
                              "value": "key",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "action_groups": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": [
                          {
                            "value": {
                              "value": "value",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        ],
                        "type": "array"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete Resource",
      "audiences": [],
      "operationId": "delete_resource",
      "tags": [
        "Resources"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteResourceRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteResourceRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
          "name": "resource_id",
          "schema": {
            "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteResourceRequestResourceId",
            "title": "Resource Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteResourceRequest",
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Deletes the resource and all its related data.",
      "authed": true,
      "method": "DELETE",
      "path": "/v2/schema/{proj_id}/{env_id}/resources/{resource_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "resource_id",
              "value": {
                "value": {
                  "value": "resource_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Update Resource",
      "audiences": [],
      "operationId": "update_resource",
      "tags": [
        "Resources"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateResourceRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateResourceRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
          "name": "resource_id",
          "schema": {
            "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateResourceRequestResourceId",
            "title": "Resource Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UpdateResourceRequest",
      "request": {
        "schema": {
          "generatedName": "UpdateResourceRequest",
          "schema": "ResourceUpdate",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "UpdateResourceResponse",
          "schema": "ResourceRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Partially updates the resource definition.\nFields that will be provided will be completely overwritten.",
      "authed": true,
      "method": "PATCH",
      "path": "/v2/schema/{proj_id}/{env_id}/resources/{resource_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "resource_id",
              "value": {
                "value": {
                  "value": "resource_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "key": {
                  "value": {
                    "value": "repository",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "Repository",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "urn": {
                  "value": {
                    "value": "prn:github:scm:repository",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "a git repository stored on github",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "actions": {
                  "value": [
                    {
                      "key": {
                        "value": "clone",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "name": {
                            "value": {
                              "value": "name",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "description": {
                            "value": {
                              "value": "description",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "attributes": {
                            "value": [
                              {
                                "key": {
                                  "value": "key",
                                  "type": "string"
                                },
                                "value": {
                                  "value": {
                                    "value": {
                                      "value": "value",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "type": "unknown"
                                }
                              }
                            ],
                            "type": "map"
                          },
                          "id": {
                            "value": {
                              "value": "90e21d70-2b1b-42f0-b492-8fd69c1d79d1",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "key": {
                            "value": {
                              "value": "key",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    },
                    {
                      "key": {
                        "value": "read",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "name": {
                            "value": {
                              "value": "name",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "description": {
                            "value": {
                              "value": "description",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "attributes": {
                            "value": [
                              {
                                "key": {
                                  "value": "key",
                                  "type": "string"
                                },
                                "value": {
                                  "value": {
                                    "value": {
                                      "value": "value",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "type": "unknown"
                                }
                              }
                            ],
                            "type": "map"
                          },
                          "id": {
                            "value": {
                              "value": "2bc27751-6115-43c0-b68c-928cb46e34bc",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "key": {
                            "value": {
                              "value": "key",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    },
                    {
                      "key": {
                        "value": "push",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "name": {
                            "value": {
                              "value": "name",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "description": {
                            "value": {
                              "value": "description",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "attributes": {
                            "value": [
                              {
                                "key": {
                                  "value": "key",
                                  "type": "string"
                                },
                                "value": {
                                  "value": {
                                    "value": {
                                      "value": "value",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "type": "unknown"
                                }
                              }
                            ],
                            "type": "map"
                          },
                          "id": {
                            "value": {
                              "value": "e06da336-6e03-41d6-a495-40b0d7537b2a",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "key": {
                            "value": {
                              "value": "key",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "attributes": {
                  "value": [
                    {
                      "key": {
                        "value": "created",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "type": {
                            "value": "time",
                            "type": "enum"
                          },
                          "description": {
                            "value": {
                              "value": "the time (timestamp) the repository was created",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "497f6eca-6276-4993-bfeb-53cbbbba6f11",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "key": {
                            "value": {
                              "value": "key",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    },
                    {
                      "key": {
                        "value": "private",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "type": {
                            "value": "bool",
                            "type": "enum"
                          },
                          "description": {
                            "value": {
                              "value": "whether the repo is private (if false, the repo is public)",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "497f6eca-6276-4993-bfeb-53cbbbba6f22",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "key": {
                            "value": {
                              "value": "key",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "action_groups": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": [
                          {
                            "value": {
                              "value": "value",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        ],
                        "type": "array"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "List Resource Actions",
      "audiences": [],
      "operationId": "list_resource_actions",
      "tags": [
        "Resource Actions"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListResourceActionsRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListResourceActionsRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
          "name": "resource_id",
          "schema": {
            "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListResourceActionsRequestResourceId",
            "title": "Resource Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Page number of the results to fetch, starting at 1.",
          "name": "page",
          "schema": {
            "generatedName": "ListResourceActionsRequestPage",
            "nameOverride": "Page",
            "title": "Page",
            "description": "Page number of the results to fetch, starting at 1.",
            "value": {
              "description": "Page number of the results to fetch, starting at 1.",
              "schema": {
                "default": 1,
                "minimum": 1,
                "type": "int"
              },
              "generatedName": "ListResourceActionsRequestPage",
              "nameOverride": "Page",
              "title": "Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The number of results per page (max 100).",
          "name": "per_page",
          "schema": {
            "generatedName": "ListResourceActionsRequestPerPage",
            "title": "Per Page",
            "description": "The number of results per page (max 100).",
            "value": {
              "description": "The number of results per page (max 100).",
              "schema": {
                "default": 30,
                "minimum": 1,
                "maximum": 100,
                "type": "int"
              },
              "generatedName": "ListResourceActionsRequestPerPage",
              "title": "Per Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListResourceActionsRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "value": {
            "generatedName": "ListResourceActionsResponseItem",
            "schema": "ResourceActionRead",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "ListResourceActionsResponse",
          "title": "Response List Resource Actions V2 Schema  Proj Id   Env Id  Resources  Resource Id  Actions Get",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Lists all the actions defined on the resource.",
      "authed": true,
      "method": "GET",
      "path": "/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/actions",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "resource_id",
              "value": {
                "value": {
                  "value": "resource_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "name": {
                      "value": {
                        "value": "read",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "description": {
                      "value": {
                        "value": "read a document",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "attributes": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": {
                                "value": "value",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "type": "unknown"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    "key": {
                      "value": {
                        "value": "read",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "permission_name": {
                      "value": {
                        "value": "document:read",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "organization_id": {
                      "value": {
                        "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "project_id": {
                      "value": {
                        "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "environment_id": {
                      "value": {
                        "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "resource_id": {
                      "value": {
                        "value": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "created_at": {
                      "value": {
                        "value": "2019-08-24T14:15:22Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2019-08-24T14:15:22Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Create Resource Action",
      "audiences": [],
      "operationId": "create_resource_action",
      "tags": [
        "Resource Actions"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "CreateResourceActionRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "CreateResourceActionRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
          "name": "resource_id",
          "schema": {
            "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "CreateResourceActionRequestResourceId",
            "title": "Resource Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CreateResourceActionRequest",
      "request": {
        "schema": {
          "generatedName": "CreateResourceActionRequest",
          "schema": "ResourceActionCreate",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "CreateResourceActionResponse",
          "schema": "ResourceActionRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Creates a new action that can affect the resource.",
      "authed": true,
      "method": "POST",
      "path": "/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/actions",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "resource_id",
              "value": {
                "value": {
                  "value": "resource_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "key": {
                "value": {
                  "value": "read",
                  "type": "string"
                },
                "type": "primitive"
              },
              "name": {
                "value": {
                  "value": "read",
                  "type": "string"
                },
                "type": "primitive"
              },
              "description": {
                "value": {
                  "value": "read a document",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "name": {
                  "value": {
                    "value": "read",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "read a document",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "attributes": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "key": {
                  "value": {
                    "value": "read",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "permission_name": {
                  "value": {
                    "value": "document:read",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "resource_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get Resource Action",
      "audiences": [],
      "operationId": "get_resource_action",
      "tags": [
        "Resource Actions"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetResourceActionRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetResourceActionRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
          "name": "resource_id",
          "schema": {
            "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetResourceActionRequestResourceId",
            "title": "Resource Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the action, or the URL-friendly key of the action (i.e: the \"slug\").",
          "name": "action_id",
          "schema": {
            "description": "Either the unique id of the action, or the URL-friendly key of the action (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetResourceActionRequestActionId",
            "title": "Action Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetResourceActionRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "GetResourceActionResponse",
          "schema": "ResourceActionRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Gets a single action defined on the resource, if such action exists.",
      "authed": true,
      "method": "GET",
      "path": "/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/actions/{action_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "resource_id",
              "value": {
                "value": {
                  "value": "resource_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "action_id",
              "value": {
                "value": {
                  "value": "action_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "name": {
                  "value": {
                    "value": "read",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "read a document",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "attributes": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "key": {
                  "value": {
                    "value": "read",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "permission_name": {
                  "value": {
                    "value": "document:read",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "resource_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete Resource Action",
      "audiences": [],
      "operationId": "delete_resource_action",
      "tags": [
        "Resource Actions"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteResourceActionRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteResourceActionRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
          "name": "resource_id",
          "schema": {
            "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteResourceActionRequestResourceId",
            "title": "Resource Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the action, or the URL-friendly key of the action (i.e: the \"slug\").",
          "name": "action_id",
          "schema": {
            "description": "Either the unique id of the action, or the URL-friendly key of the action (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteResourceActionRequestActionId",
            "title": "Action Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteResourceActionRequest",
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Deletes the action and all its related data.\nThis includes any permissions granted to perform the action.",
      "authed": true,
      "method": "DELETE",
      "path": "/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/actions/{action_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "resource_id",
              "value": {
                "value": {
                  "value": "resource_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "action_id",
              "value": {
                "value": {
                  "value": "action_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Update Resource Action",
      "audiences": [],
      "operationId": "update_resource_action",
      "tags": [
        "Resource Actions"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateResourceActionRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateResourceActionRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
          "name": "resource_id",
          "schema": {
            "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateResourceActionRequestResourceId",
            "title": "Resource Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the action, or the URL-friendly key of the action (i.e: the \"slug\").",
          "name": "action_id",
          "schema": {
            "description": "Either the unique id of the action, or the URL-friendly key of the action (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateResourceActionRequestActionId",
            "title": "Action Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UpdateResourceActionRequest",
      "request": {
        "schema": {
          "generatedName": "UpdateResourceActionRequest",
          "schema": "ResourceActionUpdate",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "UpdateResourceActionResponse",
          "schema": "ResourceActionRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Partially updates the action defined on a resource.\nFields that will be provided will be completely overwritten.",
      "authed": true,
      "method": "PATCH",
      "path": "/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/actions/{action_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "resource_id",
              "value": {
                "value": {
                  "value": "resource_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "action_id",
              "value": {
                "value": {
                  "value": "action_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "description": {
                "value": {
                  "value": "read a document",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "name": {
                  "value": {
                    "value": "read",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "read a document",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "attributes": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "key": {
                  "value": {
                    "value": "read",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "permission_name": {
                  "value": {
                    "value": "document:read",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "resource_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "List Resource Action Groups",
      "audiences": [],
      "operationId": "list_resource_action_groups",
      "tags": [
        "Resource Action Groups"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListResourceActionGroupsRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListResourceActionGroupsRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
          "name": "resource_id",
          "schema": {
            "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListResourceActionGroupsRequestResourceId",
            "title": "Resource Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Page number of the results to fetch, starting at 1.",
          "name": "page",
          "schema": {
            "generatedName": "ListResourceActionGroupsRequestPage",
            "nameOverride": "Page",
            "title": "Page",
            "description": "Page number of the results to fetch, starting at 1.",
            "value": {
              "description": "Page number of the results to fetch, starting at 1.",
              "schema": {
                "default": 1,
                "minimum": 1,
                "type": "int"
              },
              "generatedName": "ListResourceActionGroupsRequestPage",
              "nameOverride": "Page",
              "title": "Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The number of results per page (max 100).",
          "name": "per_page",
          "schema": {
            "generatedName": "ListResourceActionGroupsRequestPerPage",
            "title": "Per Page",
            "description": "The number of results per page (max 100).",
            "value": {
              "description": "The number of results per page (max 100).",
              "schema": {
                "default": 30,
                "minimum": 1,
                "maximum": 100,
                "type": "int"
              },
              "generatedName": "ListResourceActionGroupsRequestPerPage",
              "title": "Per Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListResourceActionGroupsRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "value": {
            "generatedName": "ListResourceActionGroupsResponseItem",
            "schema": "ResourceActionGroupRead",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "ListResourceActionGroupsResponse",
          "title": "Response List Resource Action Groups V2 Schema  Proj Id   Env Id  Resources  Resource Id  Action Groups Get",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Lists all the action groups defined on the resource.",
      "authed": true,
      "method": "GET",
      "path": "/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/action_groups",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "resource_id",
              "value": {
                "value": {
                  "value": "resource_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "name": {
                      "value": {
                        "value": "Writer",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "description": {
                      "value": {
                        "value": "Writer Action Group",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "attributes": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": {
                                "value": "value",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "type": "unknown"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    "actions": {
                      "value": [
                        {
                          "value": {
                            "value": "read",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        {
                          "value": {
                            "value": "update",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "key": {
                      "value": {
                        "value": "writer",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "organization_id": {
                      "value": {
                        "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "project_id": {
                      "value": {
                        "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "environment_id": {
                      "value": {
                        "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "resource_id": {
                      "value": {
                        "value": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "created_at": {
                      "value": {
                        "value": "2019-08-24T14:15:22Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2019-08-24T14:15:22Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Create Resource Action Group",
      "audiences": [],
      "operationId": "create_resource_action_group",
      "tags": [
        "Resource Action Groups"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "CreateResourceActionGroupRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "CreateResourceActionGroupRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
          "name": "resource_id",
          "schema": {
            "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "CreateResourceActionGroupRequestResourceId",
            "title": "Resource Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CreateResourceActionGroupRequest",
      "request": {
        "schema": {
          "generatedName": "CreateResourceActionGroupRequest",
          "schema": "ResourceActionGroupCreate",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "CreateResourceActionGroupResponse",
          "schema": "ResourceActionGroupRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Creates a new action group that can affect the resource.",
      "authed": true,
      "method": "POST",
      "path": "/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/action_groups",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "resource_id",
              "value": {
                "value": {
                  "value": "resource_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "key": {
                "value": {
                  "value": "writer",
                  "type": "string"
                },
                "type": "primitive"
              },
              "name": {
                "value": {
                  "value": "Writer",
                  "type": "string"
                },
                "type": "primitive"
              },
              "description": {
                "value": {
                  "value": "Writer Action Group",
                  "type": "string"
                },
                "type": "primitive"
              },
              "actions": {
                "value": [
                  {
                    "value": {
                      "value": "read",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "value": "update",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "name": {
                  "value": {
                    "value": "Writer",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "Writer Action Group",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "attributes": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "actions": {
                  "value": [
                    {
                      "value": {
                        "value": "read",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "update",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "key": {
                  "value": {
                    "value": "writer",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "resource_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get Resource Action Group",
      "audiences": [],
      "operationId": "get_resource_action_group",
      "tags": [
        "Resource Action Groups"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetResourceActionGroupRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetResourceActionGroupRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
          "name": "resource_id",
          "schema": {
            "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetResourceActionGroupRequestResourceId",
            "title": "Resource Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the action group, or the URL-friendly key of the action group (i.e: the \"slug\").",
          "name": "action_group_id",
          "schema": {
            "description": "Either the unique id of the action group, or the URL-friendly key of the action group (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetResourceActionGroupRequestActionGroupId",
            "title": "Action Group Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetResourceActionGroupRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "GetResourceActionGroupResponse",
          "schema": "ResourceActionGroupRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Gets a single action group defined on the resource, if such action exists.",
      "authed": true,
      "method": "GET",
      "path": "/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/action_groups/{action_group_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "resource_id",
              "value": {
                "value": {
                  "value": "resource_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "action_group_id",
              "value": {
                "value": {
                  "value": "action_group_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "name": {
                  "value": {
                    "value": "Writer",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "Writer Action Group",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "attributes": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "actions": {
                  "value": [
                    {
                      "value": {
                        "value": "read",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "update",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "key": {
                  "value": {
                    "value": "writer",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "resource_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete Resource Action Group",
      "audiences": [],
      "operationId": "delete_resource_action_group",
      "tags": [
        "Resource Action Groups"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteResourceActionGroupRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteResourceActionGroupRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
          "name": "resource_id",
          "schema": {
            "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteResourceActionGroupRequestResourceId",
            "title": "Resource Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the action group, or the URL-friendly key of the action group (i.e: the \"slug\").",
          "name": "action_group_id",
          "schema": {
            "description": "Either the unique id of the action group, or the URL-friendly key of the action group (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteResourceActionGroupRequestActionGroupId",
            "title": "Action Group Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteResourceActionGroupRequest",
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Deletes the action and all its related data.\nThis includes any permissions granted to perform the action.",
      "authed": true,
      "method": "DELETE",
      "path": "/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/action_groups/{action_group_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "resource_id",
              "value": {
                "value": {
                  "value": "resource_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "action_group_id",
              "value": {
                "value": {
                  "value": "action_group_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Update Resource Action Group",
      "audiences": [],
      "operationId": "update_resource_action_group",
      "tags": [
        "Resource Action Groups"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
          "name": "resource_id",
          "schema": {
            "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateResourceActionGroupRequestResourceId",
            "title": "Resource Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the action group, or the URL-friendly key of the action group (i.e: the \"slug\").",
          "name": "action_group_id",
          "schema": {
            "description": "Either the unique id of the action group, or the URL-friendly key of the action group (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateResourceActionGroupRequestActionGroupId",
            "title": "Action Group Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateResourceActionGroupRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateResourceActionGroupRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UpdateResourceActionGroupRequest",
      "request": {
        "schema": {
          "generatedName": "UpdateResourceActionGroupRequest",
          "schema": "ResourceActionGroupUpdate",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "UpdateResourceActionGroupResponse",
          "schema": "ResourceActionGroupRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Partially updates the action defined on a resource.\nFields that will be provided will be completely overwritten.",
      "authed": true,
      "method": "PATCH",
      "path": "/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/action_groups/{action_group_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "resource_id",
              "value": {
                "value": {
                  "value": "resource_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "action_group_id",
              "value": {
                "value": {
                  "value": "action_group_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "name": {
                  "value": {
                    "value": "Writer",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "Writer Action Group",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "attributes": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "actions": {
                  "value": [
                    {
                      "value": {
                        "value": "read",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "update",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "key": {
                  "value": {
                    "value": "writer",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "resource_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "List Resource Roles",
      "audiences": [],
      "operationId": "list_resource_roles",
      "tags": [
        "Resource Roles"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListResourceRolesRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListResourceRolesRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
          "name": "resource_id",
          "schema": {
            "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListResourceRolesRequestResourceId",
            "title": "Resource Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Page number of the results to fetch, starting at 1.",
          "name": "page",
          "schema": {
            "generatedName": "ListResourceRolesRequestPage",
            "nameOverride": "Page",
            "title": "Page",
            "description": "Page number of the results to fetch, starting at 1.",
            "value": {
              "description": "Page number of the results to fetch, starting at 1.",
              "schema": {
                "default": 1,
                "minimum": 1,
                "type": "int"
              },
              "generatedName": "ListResourceRolesRequestPage",
              "nameOverride": "Page",
              "title": "Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The number of results per page (max 100).",
          "name": "per_page",
          "schema": {
            "generatedName": "ListResourceRolesRequestPerPage",
            "title": "Per Page",
            "description": "The number of results per page (max 100).",
            "value": {
              "description": "The number of results per page (max 100).",
              "schema": {
                "default": 30,
                "minimum": 1,
                "maximum": 100,
                "type": "int"
              },
              "generatedName": "ListResourceRolesRequestPerPage",
              "title": "Per Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListResourceRolesRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "value": {
            "generatedName": "ListResourceRolesResponseItem",
            "schema": "ResourceRoleRead",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "ListResourceRolesResponse",
          "title": "Response List Resource Roles V2 Schema  Proj Id   Env Id  Resources  Resource Id  Roles Get",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Lists all the roles defined on the resource.",
      "authed": true,
      "method": "GET",
      "path": "/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/roles",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "resource_id",
              "value": {
                "value": {
                  "value": "resource_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "name": {
                      "value": {
                        "value": "Maintainer",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "description": {
                      "value": {
                        "value": "the maintainer role can read from the repo and push changes",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "permissions": {
                      "value": [
                        {
                          "value": {
                            "value": "push",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "attributes": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": {
                                "value": "value",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "type": "unknown"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    "extends": {
                      "value": [
                        {
                          "value": {
                            "value": "contributor",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "key": {
                      "value": {
                        "value": "maintainer",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "organization_id": {
                      "value": {
                        "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "project_id": {
                      "value": {
                        "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "environment_id": {
                      "value": {
                        "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "resource_id": {
                      "value": {
                        "value": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "created_at": {
                      "value": {
                        "value": "2019-08-24T14:15:22Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2019-08-24T14:15:22Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Create Resource Role",
      "audiences": [],
      "operationId": "create_resource_role",
      "tags": [
        "Resource Roles"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "CreateResourceRoleRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "CreateResourceRoleRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
          "name": "resource_id",
          "schema": {
            "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "CreateResourceRoleRequestResourceId",
            "title": "Resource Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CreateResourceRoleRequest",
      "request": {
        "schema": {
          "generatedName": "CreateResourceRoleRequest",
          "schema": "ResourceRoleCreate",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "CreateResourceRoleResponse",
          "schema": "ResourceRoleRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Creates a new role associated with the resource.",
      "authed": true,
      "method": "POST",
      "path": "/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/roles",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "resource_id",
              "value": {
                "value": {
                  "value": "resource_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "key": {
                "value": {
                  "value": "maintainer",
                  "type": "string"
                },
                "type": "primitive"
              },
              "name": {
                "value": {
                  "value": "Maintainer",
                  "type": "string"
                },
                "type": "primitive"
              },
              "description": {
                "value": {
                  "value": "the maintainer role can read from the repo and push changes",
                  "type": "string"
                },
                "type": "primitive"
              },
              "permissions": {
                "value": [
                  {
                    "value": {
                      "value": "push",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              },
              "extends": {
                "value": [
                  {
                    "value": {
                      "value": "contributor",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "name": {
                  "value": {
                    "value": "Maintainer",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "the maintainer role can read from the repo and push changes",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "permissions": {
                  "value": [
                    {
                      "value": {
                        "value": "push",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "attributes": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "extends": {
                  "value": [
                    {
                      "value": {
                        "value": "contributor",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "key": {
                  "value": {
                    "value": "maintainer",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "resource_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get Resource Role",
      "audiences": [],
      "operationId": "get_resource_role",
      "tags": [
        "Resource Roles"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetResourceRoleRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetResourceRoleRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
          "name": "resource_id",
          "schema": {
            "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetResourceRoleRequestResourceId",
            "title": "Resource Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
          "name": "role_id",
          "schema": {
            "description": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetResourceRoleRequestRoleId",
            "title": "Role Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetResourceRoleRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "GetResourceRoleResponse",
          "schema": "ResourceRoleRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Gets a single role defined on the resource, if such role exists.",
      "authed": true,
      "method": "GET",
      "path": "/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/roles/{role_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "resource_id",
              "value": {
                "value": {
                  "value": "resource_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "role_id",
              "value": {
                "value": {
                  "value": "role_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "name": {
                  "value": {
                    "value": "Maintainer",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "the maintainer role can read from the repo and push changes",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "permissions": {
                  "value": [
                    {
                      "value": {
                        "value": "push",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "attributes": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "extends": {
                  "value": [
                    {
                      "value": {
                        "value": "contributor",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "key": {
                  "value": {
                    "value": "maintainer",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "resource_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete Resource Role",
      "audiences": [],
      "operationId": "delete_resource_role",
      "tags": [
        "Resource Roles"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteResourceRoleRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteResourceRoleRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
          "name": "resource_id",
          "schema": {
            "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteResourceRoleRequestResourceId",
            "title": "Resource Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
          "name": "role_id",
          "schema": {
            "description": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteResourceRoleRequestRoleId",
            "title": "Role Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteResourceRoleRequest",
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Deletes the role and all its related data.\nThis includes any permissions granted to said role.",
      "authed": true,
      "method": "DELETE",
      "path": "/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/roles/{role_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "resource_id",
              "value": {
                "value": {
                  "value": "resource_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "role_id",
              "value": {
                "value": {
                  "value": "role_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Update Resource Role",
      "audiences": [],
      "operationId": "update_resource_role",
      "tags": [
        "Resource Roles"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateResourceRoleRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateResourceRoleRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
          "name": "resource_id",
          "schema": {
            "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateResourceRoleRequestResourceId",
            "title": "Resource Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
          "name": "role_id",
          "schema": {
            "description": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateResourceRoleRequestRoleId",
            "title": "Role Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UpdateResourceRoleRequest",
      "request": {
        "schema": {
          "generatedName": "UpdateResourceRoleRequest",
          "schema": "ResourceRoleUpdate",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "UpdateResourceRoleResponse",
          "schema": "ResourceRoleRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Partially updates the role defined on a resource.\nFields that will be provided will be completely overwritten.",
      "authed": true,
      "method": "PATCH",
      "path": "/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/roles/{role_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "resource_id",
              "value": {
                "value": {
                  "value": "resource_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "role_id",
              "value": {
                "value": {
                  "value": "role_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "description": {
                "value": {
                  "value": "the maintainer role can read from the repo and push changes",
                  "type": "string"
                },
                "type": "primitive"
              },
              "permissions": {
                "value": [
                  {
                    "value": {
                      "value": "push",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "name": {
                  "value": {
                    "value": "Maintainer",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "the maintainer role can read from the repo and push changes",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "permissions": {
                  "value": [
                    {
                      "value": {
                        "value": "push",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "attributes": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "extends": {
                  "value": [
                    {
                      "value": {
                        "value": "contributor",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "key": {
                  "value": {
                    "value": "maintainer",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "resource_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Assign Permissions to Role",
      "audiences": [],
      "operationId": "assign_permissions_to_resource_role",
      "tags": [
        "Resource Roles"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "AssignPermissionsToResourceRoleRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "AssignPermissionsToResourceRoleRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
          "name": "resource_id",
          "schema": {
            "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "AssignPermissionsToResourceRoleRequestResourceId",
            "title": "Resource Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
          "name": "role_id",
          "schema": {
            "description": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "AssignPermissionsToResourceRoleRequestRoleId",
            "title": "Role Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AssignPermissionsToResourceRoleRequest",
      "request": {
        "schema": {
          "generatedName": "AssignPermissionsToResourceRoleRequest",
          "schema": "AddRolePermissions",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "AssignPermissionsToResourceRoleResponse",
          "schema": "ResourceRoleRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Assign permissions to role.\n\nIf some of the permissions specified are already assigned, will skip them.",
      "authed": true,
      "method": "POST",
      "path": "/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/roles/{role_id}/permissions",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "resource_id",
              "value": {
                "value": {
                  "value": "resource_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "role_id",
              "value": {
                "value": {
                  "value": "role_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "permissions": {
                "value": [
                  {
                    "value": {
                      "value": "document:write",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "name": {
                  "value": {
                    "value": "Maintainer",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "the maintainer role can read from the repo and push changes",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "permissions": {
                  "value": [
                    {
                      "value": {
                        "value": "push",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "attributes": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "extends": {
                  "value": [
                    {
                      "value": {
                        "value": "contributor",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "key": {
                  "value": {
                    "value": "maintainer",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "resource_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Remove Permissions from Role",
      "audiences": [],
      "operationId": "remove_permissions_from_resource_role",
      "tags": [
        "Resource Roles"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "RemovePermissionsFromResourceRoleRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "RemovePermissionsFromResourceRoleRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
          "name": "resource_id",
          "schema": {
            "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "RemovePermissionsFromResourceRoleRequestResourceId",
            "title": "Resource Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
          "name": "role_id",
          "schema": {
            "description": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "RemovePermissionsFromResourceRoleRequestRoleId",
            "title": "Role Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "RemovePermissionsFromResourceRoleRequest",
      "request": {
        "schema": {
          "generatedName": "RemovePermissionsFromResourceRoleRequest",
          "schema": "RemoveRolePermissions",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "RemovePermissionsFromResourceRoleResponse",
          "schema": "ResourceRoleRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Remove permissions from role.\n\nIf some of the permissions specified are already unassigned, will skip them.",
      "authed": true,
      "method": "DELETE",
      "path": "/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/roles/{role_id}/permissions",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "resource_id",
              "value": {
                "value": {
                  "value": "resource_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "role_id",
              "value": {
                "value": {
                  "value": "role_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "permissions": {
                "value": [
                  {
                    "value": {
                      "value": "document:share",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "name": {
                  "value": {
                    "value": "Maintainer",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "the maintainer role can read from the repo and push changes",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "permissions": {
                  "value": [
                    {
                      "value": {
                        "value": "push",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "attributes": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "extends": {
                  "value": [
                    {
                      "value": {
                        "value": "contributor",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "key": {
                  "value": {
                    "value": "maintainer",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "resource_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get Resource Role Ancestors",
      "audiences": [],
      "operationId": "get_resource_role_ancestors",
      "tags": [
        "Resource Roles"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetResourceRoleAncestorsRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetResourceRoleAncestorsRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
          "name": "resource_id",
          "schema": {
            "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetResourceRoleAncestorsRequestResourceId",
            "title": "Resource Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
          "name": "role_id",
          "schema": {
            "description": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetResourceRoleAncestorsRequestRoleId",
            "title": "Role Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetResourceRoleAncestorsRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "GetResourceRoleAncestorsResponse",
          "schema": "ResourceRoleList",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/roles/{role_id}/ancestors",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "resource_id",
              "value": {
                "value": {
                  "value": "resource_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "role_id",
              "value": {
                "value": {
                  "value": "role_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "roles": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "Maintainer",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "description": {
                          "value": {
                            "value": "the maintainer role can read from the repo and push changes",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "permissions": {
                          "value": [
                            {
                              "value": {
                                "value": "push",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "attributes": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "extends": {
                          "value": [
                            {
                              "value": {
                                "value": "contributor",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "key": {
                          "value": {
                            "value": "maintainer",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "organization_id": {
                          "value": {
                            "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "project_id": {
                          "value": {
                            "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "environment_id": {
                          "value": {
                            "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "resource_id": {
                          "value": {
                            "value": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2019-08-24T14:15:22Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2019-08-24T14:15:22Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get Resource Role Descendants",
      "audiences": [],
      "operationId": "get_resource_role_descendants",
      "tags": [
        "Resource Roles"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetResourceRoleDescendantsRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetResourceRoleDescendantsRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
          "name": "resource_id",
          "schema": {
            "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetResourceRoleDescendantsRequestResourceId",
            "title": "Resource Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
          "name": "role_id",
          "schema": {
            "description": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetResourceRoleDescendantsRequestRoleId",
            "title": "Role Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetResourceRoleDescendantsRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "GetResourceRoleDescendantsResponse",
          "schema": "ResourceRoleList",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/roles/{role_id}/descendants",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "resource_id",
              "value": {
                "value": {
                  "value": "resource_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "role_id",
              "value": {
                "value": {
                  "value": "role_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "roles": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "Maintainer",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "description": {
                          "value": {
                            "value": "the maintainer role can read from the repo and push changes",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "permissions": {
                          "value": [
                            {
                              "value": {
                                "value": "push",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "attributes": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "extends": {
                          "value": [
                            {
                              "value": {
                                "value": "contributor",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "key": {
                          "value": {
                            "value": "maintainer",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "organization_id": {
                          "value": {
                            "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "project_id": {
                          "value": {
                            "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "environment_id": {
                          "value": {
                            "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "resource_id": {
                          "value": {
                            "value": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2019-08-24T14:15:22Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2019-08-24T14:15:22Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "List Resource Attributes",
      "audiences": [],
      "operationId": "list_resource_attributes",
      "tags": [
        "Resource Attributes"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListResourceAttributesRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListResourceAttributesRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
          "name": "resource_id",
          "schema": {
            "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListResourceAttributesRequestResourceId",
            "title": "Resource Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Page number of the results to fetch, starting at 1.",
          "name": "page",
          "schema": {
            "generatedName": "ListResourceAttributesRequestPage",
            "nameOverride": "Page",
            "title": "Page",
            "description": "Page number of the results to fetch, starting at 1.",
            "value": {
              "description": "Page number of the results to fetch, starting at 1.",
              "schema": {
                "default": 1,
                "minimum": 1,
                "type": "int"
              },
              "generatedName": "ListResourceAttributesRequestPage",
              "nameOverride": "Page",
              "title": "Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The number of results per page (max 100).",
          "name": "per_page",
          "schema": {
            "generatedName": "ListResourceAttributesRequestPerPage",
            "title": "Per Page",
            "description": "The number of results per page (max 100).",
            "value": {
              "description": "The number of results per page (max 100).",
              "schema": {
                "default": 30,
                "minimum": 1,
                "maximum": 100,
                "type": "int"
              },
              "generatedName": "ListResourceAttributesRequestPerPage",
              "title": "Per Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListResourceAttributesRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "value": {
            "generatedName": "ListResourceAttributesResponseItem",
            "schema": "ResourceAttributeRead",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "ListResourceAttributesResponse",
          "title": "Response List Resource Attributes V2 Schema  Proj Id   Env Id  Resources  Resource Id  Attributes Get",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Lists all the attributes defined on the resource.",
      "authed": true,
      "method": "GET",
      "path": "/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/attributes",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "resource_id",
              "value": {
                "value": {
                  "value": "resource_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "type": {
                      "value": "bool",
                      "type": "enum"
                    },
                    "description": {
                      "value": {
                        "value": "whether or not the github repository is private",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "key": {
                      "value": {
                        "value": "private",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "resource_id": {
                      "value": {
                        "value": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "resource_key": {
                      "value": {
                        "value": "repository",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "organization_id": {
                      "value": {
                        "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "project_id": {
                      "value": {
                        "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "environment_id": {
                      "value": {
                        "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "created_at": {
                      "value": {
                        "value": "2019-08-24T14:15:22Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2019-08-24T14:15:22Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "built_in": {
                      "value": {
                        "value": false,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Create Resource Attribute",
      "audiences": [],
      "operationId": "create_resource_attribute",
      "tags": [
        "Resource Attributes"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "CreateResourceAttributeRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "CreateResourceAttributeRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
          "name": "resource_id",
          "schema": {
            "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "CreateResourceAttributeRequestResourceId",
            "title": "Resource Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CreateResourceAttributeRequest",
      "request": {
        "schema": {
          "generatedName": "CreateResourceAttributeRequest",
          "schema": "ResourceAttributeCreate",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "CreateResourceAttributeResponse",
          "schema": "ResourceAttributeRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Creates a new attribute as part of the resource definition.",
      "authed": true,
      "method": "POST",
      "path": "/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/attributes",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "resource_id",
              "value": {
                "value": {
                  "value": "resource_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "key": {
                "value": {
                  "value": "private",
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": {
                "value": "bool",
                "type": "enum"
              },
              "description": {
                "value": {
                  "value": "whether or not the github repository is private",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "type": {
                  "value": "bool",
                  "type": "enum"
                },
                "description": {
                  "value": {
                    "value": "whether or not the github repository is private",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "key": {
                  "value": {
                    "value": "private",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "resource_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "resource_key": {
                  "value": {
                    "value": "repository",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "built_in": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get Resource Attribute",
      "audiences": [],
      "operationId": "get_resource_attribute",
      "tags": [
        "Resource Attributes"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetResourceAttributeRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetResourceAttributeRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
          "name": "resource_id",
          "schema": {
            "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetResourceAttributeRequestResourceId",
            "title": "Resource Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
          "name": "attribute_id",
          "schema": {
            "description": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetResourceAttributeRequestAttributeId",
            "title": "Attribute Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetResourceAttributeRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "GetResourceAttributeResponse",
          "schema": "ResourceAttributeRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Gets a single attribute defined on the resource, if such attribute exists.",
      "authed": true,
      "method": "GET",
      "path": "/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/attributes/{attribute_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "resource_id",
              "value": {
                "value": {
                  "value": "resource_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "attribute_id",
              "value": {
                "value": {
                  "value": "attribute_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "type": {
                  "value": "bool",
                  "type": "enum"
                },
                "description": {
                  "value": {
                    "value": "whether or not the github repository is private",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "key": {
                  "value": {
                    "value": "private",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "resource_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "resource_key": {
                  "value": {
                    "value": "repository",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "built_in": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete Resource Attribute",
      "audiences": [],
      "operationId": "delete_resource_attribute",
      "tags": [
        "Resource Attributes"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteResourceAttributeRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteResourceAttributeRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
          "name": "resource_id",
          "schema": {
            "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteResourceAttributeRequestResourceId",
            "title": "Resource Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
          "name": "attribute_id",
          "schema": {
            "description": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteResourceAttributeRequestAttributeId",
            "title": "Attribute Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Page number of the results to fetch, starting at 1.",
          "name": "page",
          "schema": {
            "generatedName": "DeleteResourceAttributeRequestPage",
            "nameOverride": "Page",
            "title": "Page",
            "description": "Page number of the results to fetch, starting at 1.",
            "value": {
              "description": "Page number of the results to fetch, starting at 1.",
              "schema": {
                "default": 1,
                "minimum": 1,
                "type": "int"
              },
              "generatedName": "DeleteResourceAttributeRequestPage",
              "nameOverride": "Page",
              "title": "Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The number of results per page (max 100).",
          "name": "per_page",
          "schema": {
            "generatedName": "DeleteResourceAttributeRequestPerPage",
            "title": "Per Page",
            "description": "The number of results per page (max 100).",
            "value": {
              "description": "The number of results per page (max 100).",
              "schema": {
                "default": 30,
                "minimum": 1,
                "maximum": 100,
                "type": "int"
              },
              "generatedName": "DeleteResourceAttributeRequestPerPage",
              "title": "Per Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "DeleteResourceAttributeRequest",
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Deletes the attribute and all its related data.\n\nNote: If the attribute is used by policies, removing it will cause the\nattribute to evaluate as `undefined`.",
      "authed": true,
      "method": "DELETE",
      "path": "/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/attributes/{attribute_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "resource_id",
              "value": {
                "value": {
                  "value": "resource_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "attribute_id",
              "value": {
                "value": {
                  "value": "attribute_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Update Resource Attribute",
      "audiences": [],
      "operationId": "update_resource_attribute",
      "tags": [
        "Resource Attributes"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateResourceAttributeRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateResourceAttributeRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
          "name": "resource_id",
          "schema": {
            "description": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateResourceAttributeRequestResourceId",
            "title": "Resource Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
          "name": "attribute_id",
          "schema": {
            "description": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateResourceAttributeRequestAttributeId",
            "title": "Attribute Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UpdateResourceAttributeRequest",
      "request": {
        "schema": {
          "generatedName": "UpdateResourceAttributeRequest",
          "schema": "ResourceAttributeUpdate",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "UpdateResourceAttributeResponse",
          "schema": "ResourceAttributeRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Partially updates the attribute defined on a resource.\nFields that will be provided will be completely overwritten.",
      "authed": true,
      "method": "PATCH",
      "path": "/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/attributes/{attribute_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "resource_id",
              "value": {
                "value": {
                  "value": "resource_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "attribute_id",
              "value": {
                "value": {
                  "value": "attribute_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "description": {
                "value": {
                  "value": "whether or not the github repository is private",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "type": {
                  "value": "bool",
                  "type": "enum"
                },
                "description": {
                  "value": {
                    "value": "whether or not the github repository is private",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "key": {
                  "value": {
                    "value": "private",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "resource_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "resource_key": {
                  "value": {
                    "value": "repository",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "built_in": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "List User Attributes",
      "audiences": [],
      "operationId": "list_user_attributes",
      "tags": [
        "User Attributes"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListUserAttributesRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListUserAttributesRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "name": "resource_id",
          "schema": {
            "generatedName": "ListUserAttributesRequestResourceId",
            "title": "Resource Id",
            "value": {
              "schema": {
                "default": "__user",
                "type": "string"
              },
              "generatedName": "ListUserAttributesRequestResourceId",
              "title": "Resource Id",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Page number of the results to fetch, starting at 1.",
          "name": "page",
          "schema": {
            "generatedName": "ListUserAttributesRequestPage",
            "nameOverride": "Page",
            "title": "Page",
            "description": "Page number of the results to fetch, starting at 1.",
            "value": {
              "description": "Page number of the results to fetch, starting at 1.",
              "schema": {
                "default": 1,
                "minimum": 1,
                "type": "int"
              },
              "generatedName": "ListUserAttributesRequestPage",
              "nameOverride": "Page",
              "title": "Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The number of results per page (max 100).",
          "name": "per_page",
          "schema": {
            "generatedName": "ListUserAttributesRequestPerPage",
            "title": "Per Page",
            "description": "The number of results per page (max 100).",
            "value": {
              "description": "The number of results per page (max 100).",
              "schema": {
                "default": 30,
                "minimum": 1,
                "maximum": 100,
                "type": "int"
              },
              "generatedName": "ListUserAttributesRequestPerPage",
              "title": "Per Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListUserAttributesRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "value": {
            "generatedName": "ListUserAttributesResponseItem",
            "schema": "ResourceAttributeRead",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "ListUserAttributesResponse",
          "title": "Response List User Attributes V2 Schema  Proj Id   Env Id  Users Attributes Get",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Lists all the attributes defined on the User resource.",
      "authed": true,
      "method": "GET",
      "path": "/v2/schema/{proj_id}/{env_id}/users/attributes",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "type": {
                      "value": "bool",
                      "type": "enum"
                    },
                    "description": {
                      "value": {
                        "value": "whether or not the github repository is private",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "key": {
                      "value": {
                        "value": "private",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "resource_id": {
                      "value": {
                        "value": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "resource_key": {
                      "value": {
                        "value": "repository",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "organization_id": {
                      "value": {
                        "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "project_id": {
                      "value": {
                        "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "environment_id": {
                      "value": {
                        "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "created_at": {
                      "value": {
                        "value": "2019-08-24T14:15:22Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2019-08-24T14:15:22Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "built_in": {
                      "value": {
                        "value": false,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Create User Attribute",
      "audiences": [],
      "operationId": "create_user_attribute",
      "tags": [
        "User Attributes"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "CreateUserAttributeRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "CreateUserAttributeRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "name": "resource_id",
          "schema": {
            "generatedName": "CreateUserAttributeRequestResourceId",
            "title": "Resource Id",
            "value": {
              "schema": {
                "default": "__user",
                "type": "string"
              },
              "generatedName": "CreateUserAttributeRequestResourceId",
              "title": "Resource Id",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "CreateUserAttributeRequest",
      "request": {
        "schema": {
          "generatedName": "CreateUserAttributeRequestBody",
          "schema": "ResourceAttributeCreate",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "CreateUserAttributeResponse",
          "schema": "ResourceAttributeRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Creates a new attribute for the User resource.",
      "authed": true,
      "method": "POST",
      "path": "/v2/schema/{proj_id}/{env_id}/users/attributes",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "key": {
                "value": {
                  "value": "private",
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": {
                "value": "bool",
                "type": "enum"
              },
              "description": {
                "value": {
                  "value": "whether or not the github repository is private",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "type": {
                  "value": "bool",
                  "type": "enum"
                },
                "description": {
                  "value": {
                    "value": "whether or not the github repository is private",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "key": {
                  "value": {
                    "value": "private",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "resource_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "resource_key": {
                  "value": {
                    "value": "repository",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "built_in": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get User Attribute",
      "audiences": [],
      "operationId": "get_user_attribute",
      "tags": [
        "User Attributes"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetUserAttributeRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetUserAttributeRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
          "name": "attribute_id",
          "schema": {
            "description": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetUserAttributeRequestAttributeId",
            "title": "Attribute Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "name": "resource_id",
          "schema": {
            "generatedName": "GetUserAttributeRequestResourceId",
            "title": "Resource Id",
            "value": {
              "schema": {
                "default": "__user",
                "type": "string"
              },
              "generatedName": "GetUserAttributeRequestResourceId",
              "title": "Resource Id",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetUserAttributeRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "GetUserAttributeResponse",
          "schema": "ResourceAttributeRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Gets a single attribute defined on the User resource, if such attribute exists.",
      "authed": true,
      "method": "GET",
      "path": "/v2/schema/{proj_id}/{env_id}/users/attributes/{attribute_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "attribute_id",
              "value": {
                "value": {
                  "value": "attribute_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "type": {
                  "value": "bool",
                  "type": "enum"
                },
                "description": {
                  "value": {
                    "value": "whether or not the github repository is private",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "key": {
                  "value": {
                    "value": "private",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "resource_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "resource_key": {
                  "value": {
                    "value": "repository",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "built_in": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete User Attribute",
      "audiences": [],
      "operationId": "delete_user_attribute",
      "tags": [
        "User Attributes"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteUserAttributeRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteUserAttributeRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
          "name": "attribute_id",
          "schema": {
            "description": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteUserAttributeRequestAttributeId",
            "title": "Attribute Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "name": "resource_id",
          "schema": {
            "generatedName": "DeleteUserAttributeRequestResourceId",
            "title": "Resource Id",
            "value": {
              "schema": {
                "default": "__user",
                "type": "string"
              },
              "generatedName": "DeleteUserAttributeRequestResourceId",
              "title": "Resource Id",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Page number of the results to fetch, starting at 1.",
          "name": "page",
          "schema": {
            "generatedName": "DeleteUserAttributeRequestPage",
            "nameOverride": "Page",
            "title": "Page",
            "description": "Page number of the results to fetch, starting at 1.",
            "value": {
              "description": "Page number of the results to fetch, starting at 1.",
              "schema": {
                "default": 1,
                "minimum": 1,
                "type": "int"
              },
              "generatedName": "DeleteUserAttributeRequestPage",
              "nameOverride": "Page",
              "title": "Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The number of results per page (max 100).",
          "name": "per_page",
          "schema": {
            "generatedName": "DeleteUserAttributeRequestPerPage",
            "title": "Per Page",
            "description": "The number of results per page (max 100).",
            "value": {
              "description": "The number of results per page (max 100).",
              "schema": {
                "default": 30,
                "minimum": 1,
                "maximum": 100,
                "type": "int"
              },
              "generatedName": "DeleteUserAttributeRequestPerPage",
              "title": "Per Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "DeleteUserAttributeRequest",
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Deletes the attribute and all its related data.\n\nNote: If the attribute is used by policies, removing it will cause the\nattribute to evaluate as `undefined`.",
      "authed": true,
      "method": "DELETE",
      "path": "/v2/schema/{proj_id}/{env_id}/users/attributes/{attribute_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "attribute_id",
              "value": {
                "value": {
                  "value": "attribute_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Update User Attribute",
      "audiences": [],
      "operationId": "update_user_attribute",
      "tags": [
        "User Attributes"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateUserAttributeRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateUserAttributeRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
          "name": "attribute_id",
          "schema": {
            "description": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateUserAttributeRequestAttributeId",
            "title": "Attribute Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "name": "resource_id",
          "schema": {
            "generatedName": "UpdateUserAttributeRequestResourceId",
            "title": "Resource Id",
            "value": {
              "schema": {
                "default": "__user",
                "type": "string"
              },
              "generatedName": "UpdateUserAttributeRequestResourceId",
              "title": "Resource Id",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "UpdateUserAttributeRequest",
      "request": {
        "schema": {
          "generatedName": "UpdateUserAttributeRequestBody",
          "schema": "ResourceAttributeUpdate",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "UpdateUserAttributeResponse",
          "schema": "ResourceAttributeRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Partially updates the attribute defined on the User resource.\nFields that will be provided will be completely overwritten.",
      "authed": true,
      "method": "PATCH",
      "path": "/v2/schema/{proj_id}/{env_id}/users/attributes/{attribute_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "attribute_id",
              "value": {
                "value": {
                  "value": "attribute_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "description": {
                "value": {
                  "value": "whether or not the github repository is private",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "type": {
                  "value": "bool",
                  "type": "enum"
                },
                "description": {
                  "value": {
                    "value": "whether or not the github repository is private",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "key": {
                  "value": {
                    "value": "private",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "resource_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "resource_key": {
                  "value": {
                    "value": "repository",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "built_in": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "List Roles",
      "audiences": [],
      "operationId": "list_roles",
      "tags": [
        "Roles"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListRolesRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListRolesRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Text search for the roles name or key",
          "name": "search",
          "schema": {
            "generatedName": "ListRolesRequestSearch",
            "nameOverride": "Search",
            "title": "Search",
            "description": "Text search for the roles name or key",
            "value": {
              "description": "Text search for the roles name or key",
              "schema": {
                "type": "string"
              },
              "generatedName": "ListRolesRequestSearch",
              "nameOverride": "Search",
              "title": "Search",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Include total count in response",
          "name": "include_total_count",
          "schema": {
            "generatedName": "ListRolesRequestIncludeTotalCount",
            "title": "Include Total Count",
            "description": "Include total count in response",
            "value": {
              "description": "Include total count in response",
              "schema": {
                "default": false,
                "type": "boolean"
              },
              "generatedName": "ListRolesRequestIncludeTotalCount",
              "title": "Include Total Count",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Page number of the results to fetch, starting at 1.",
          "name": "page",
          "schema": {
            "generatedName": "ListRolesRequestPage",
            "nameOverride": "Page",
            "title": "Page",
            "description": "Page number of the results to fetch, starting at 1.",
            "value": {
              "description": "Page number of the results to fetch, starting at 1.",
              "schema": {
                "default": 1,
                "minimum": 1,
                "type": "int"
              },
              "generatedName": "ListRolesRequestPage",
              "nameOverride": "Page",
              "title": "Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The number of results per page (max 100).",
          "name": "per_page",
          "schema": {
            "generatedName": "ListRolesRequestPerPage",
            "title": "Per Page",
            "description": "The number of results per page (max 100).",
            "value": {
              "description": "The number of results per page (max 100).",
              "schema": {
                "default": 30,
                "minimum": 1,
                "maximum": 100,
                "type": "int"
              },
              "generatedName": "ListRolesRequestPerPage",
              "title": "Per Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListRolesRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "value": {
            "generatedName": "ListRolesResponse",
            "title": "Response List Roles V2 Schema  Proj Id   Env Id  Roles Get",
            "schemas": [
              {
                "generatedName": "ListRolesResponseZero",
                "schema": "PaginatedResult_RoleRead_",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              {
                "value": {
                  "generatedName": "ListRolesResponseItem",
                  "schema": "RoleRead",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ListRolesResponse",
                "groupName": [],
                "type": "array"
              }
            ],
            "groupName": [],
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "undiscriminated"
          },
          "type": "oneOf"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Lists all tenant roles.",
      "authed": true,
      "method": "GET",
      "path": "/v2/schema/{proj_id}/{env_id}/roles",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "data": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "Editor",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "description": {
                          "value": {
                            "value": "the editor role can read and write to documents",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "permissions": {
                          "value": [
                            {
                              "value": {
                                "value": "document:write",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "attributes": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "extends": {
                          "value": [
                            {
                              "value": {
                                "value": "viewer",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "key": {
                          "value": {
                            "value": "editor",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "organization_id": {
                          "value": {
                            "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "project_id": {
                          "value": {
                            "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "environment_id": {
                          "value": {
                            "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2019-08-24T14:15:22Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2019-08-24T14:15:22Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "total_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "page_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Create Role",
      "audiences": [],
      "operationId": "create_role",
      "tags": [
        "Roles"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "CreateRoleRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "CreateRoleRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CreateRoleRequest",
      "request": {
        "schema": {
          "generatedName": "CreateRoleRequest",
          "schema": "RoleCreate",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "CreateRoleResponse",
          "schema": "RoleRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Creates a new tenant role.",
      "authed": true,
      "method": "POST",
      "path": "/v2/schema/{proj_id}/{env_id}/roles",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "key": {
                "value": {
                  "value": "editor",
                  "type": "string"
                },
                "type": "primitive"
              },
              "name": {
                "value": {
                  "value": "Editor",
                  "type": "string"
                },
                "type": "primitive"
              },
              "description": {
                "value": {
                  "value": "the editor role can read and write to documents",
                  "type": "string"
                },
                "type": "primitive"
              },
              "permissions": {
                "value": [
                  {
                    "value": {
                      "value": "document:write",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              },
              "extends": {
                "value": [
                  {
                    "value": {
                      "value": "viewer",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "name": {
                  "value": {
                    "value": "Editor",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "the editor role can read and write to documents",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "permissions": {
                  "value": [
                    {
                      "value": {
                        "value": "document:write",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "attributes": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "extends": {
                  "value": [
                    {
                      "value": {
                        "value": "viewer",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "key": {
                  "value": {
                    "value": "editor",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get Role",
      "audiences": [],
      "operationId": "get_role",
      "tags": [
        "Roles"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetRoleRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetRoleRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
          "name": "role_id",
          "schema": {
            "description": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetRoleRequestRoleId",
            "title": "Role Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetRoleRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "GetRoleResponse",
          "schema": "RoleRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Gets a single tenant role, if such role exists.",
      "authed": true,
      "method": "GET",
      "path": "/v2/schema/{proj_id}/{env_id}/roles/{role_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "role_id",
              "value": {
                "value": {
                  "value": "role_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "name": {
                  "value": {
                    "value": "Editor",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "the editor role can read and write to documents",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "permissions": {
                  "value": [
                    {
                      "value": {
                        "value": "document:write",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "attributes": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "extends": {
                  "value": [
                    {
                      "value": {
                        "value": "viewer",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "key": {
                  "value": {
                    "value": "editor",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete Role",
      "audiences": [],
      "operationId": "delete_role",
      "tags": [
        "Roles"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteRoleRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteRoleRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
          "name": "role_id",
          "schema": {
            "description": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteRoleRequestRoleId",
            "title": "Role Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteRoleRequest",
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Deletes a tenant role and all its related data.\nThis includes any permissions granted to said role.",
      "authed": true,
      "method": "DELETE",
      "path": "/v2/schema/{proj_id}/{env_id}/roles/{role_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "role_id",
              "value": {
                "value": {
                  "value": "role_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Update Role",
      "audiences": [],
      "operationId": "update_role",
      "tags": [
        "Roles"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateRoleRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateRoleRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
          "name": "role_id",
          "schema": {
            "description": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateRoleRequestRoleId",
            "title": "Role Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UpdateRoleRequest",
      "request": {
        "schema": {
          "generatedName": "UpdateRoleRequest",
          "schema": "RoleUpdate",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "UpdateRoleResponse",
          "schema": "RoleRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Partially updates a tenant role.\nFields that will be provided will be completely overwritten.",
      "authed": true,
      "method": "PATCH",
      "path": "/v2/schema/{proj_id}/{env_id}/roles/{role_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "role_id",
              "value": {
                "value": {
                  "value": "role_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "description": {
                "value": {
                  "value": "the editor role can read and write to documents",
                  "type": "string"
                },
                "type": "primitive"
              },
              "permissions": {
                "value": [
                  {
                    "value": {
                      "value": "document:write",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "name": {
                  "value": {
                    "value": "Editor",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "the editor role can read and write to documents",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "permissions": {
                  "value": [
                    {
                      "value": {
                        "value": "document:write",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "attributes": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "extends": {
                  "value": [
                    {
                      "value": {
                        "value": "viewer",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "key": {
                  "value": {
                    "value": "editor",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Assign Permissions To Role",
      "audiences": [],
      "operationId": "assign_permissions_to_role",
      "tags": [
        "Roles"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "AssignPermissionsToRoleRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "AssignPermissionsToRoleRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
          "name": "role_id",
          "schema": {
            "description": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "AssignPermissionsToRoleRequestRoleId",
            "title": "Role Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AssignPermissionsToRoleRequest",
      "request": {
        "schema": {
          "generatedName": "AssignPermissionsToRoleRequest",
          "schema": "AddRolePermissions",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "AssignPermissionsToRoleResponse",
          "schema": "RoleRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Assign permissions to role.\n\nIf some of the permissions specified are already assigned, will skip them.",
      "authed": true,
      "method": "POST",
      "path": "/v2/schema/{proj_id}/{env_id}/roles/{role_id}/permissions",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "role_id",
              "value": {
                "value": {
                  "value": "role_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "permissions": {
                "value": [
                  {
                    "value": {
                      "value": "document:write",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "name": {
                  "value": {
                    "value": "Editor",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "the editor role can read and write to documents",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "permissions": {
                  "value": [
                    {
                      "value": {
                        "value": "document:write",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "attributes": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "extends": {
                  "value": [
                    {
                      "value": {
                        "value": "viewer",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "key": {
                  "value": {
                    "value": "editor",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Remove Permissions From Role",
      "audiences": [],
      "operationId": "remove_permissions_from_role",
      "tags": [
        "Roles"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "RemovePermissionsFromRoleRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "RemovePermissionsFromRoleRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
          "name": "role_id",
          "schema": {
            "description": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "RemovePermissionsFromRoleRequestRoleId",
            "title": "Role Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "RemovePermissionsFromRoleRequest",
      "request": {
        "schema": {
          "generatedName": "RemovePermissionsFromRoleRequest",
          "schema": "RemoveRolePermissions",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "RemovePermissionsFromRoleResponse",
          "schema": "RoleRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Remove permissions from role.\n\nIf some of the permissions specified are already unassigned, will skip them.",
      "authed": true,
      "method": "DELETE",
      "path": "/v2/schema/{proj_id}/{env_id}/roles/{role_id}/permissions",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "role_id",
              "value": {
                "value": {
                  "value": "role_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "permissions": {
                "value": [
                  {
                    "value": {
                      "value": "document:share",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "name": {
                  "value": {
                    "value": "Editor",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "the editor role can read and write to documents",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "permissions": {
                  "value": [
                    {
                      "value": {
                        "value": "document:write",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "attributes": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "extends": {
                  "value": [
                    {
                      "value": {
                        "value": "viewer",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "key": {
                  "value": {
                    "value": "editor",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get Role Ancestors",
      "audiences": [],
      "operationId": "get_role_ancestors",
      "tags": [
        "Roles"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetRoleAncestorsRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetRoleAncestorsRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
          "name": "role_id",
          "schema": {
            "description": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetRoleAncestorsRequestRoleId",
            "title": "Role Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetRoleAncestorsRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "GetRoleAncestorsResponse",
          "schema": "RoleList",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/v2/schema/{proj_id}/{env_id}/roles/{role_id}/ancestors",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "role_id",
              "value": {
                "value": {
                  "value": "role_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "roles": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "Editor",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "description": {
                          "value": {
                            "value": "the editor role can read and write to documents",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "permissions": {
                          "value": [
                            {
                              "value": {
                                "value": "document:write",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "attributes": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "extends": {
                          "value": [
                            {
                              "value": {
                                "value": "viewer",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "key": {
                          "value": {
                            "value": "editor",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "organization_id": {
                          "value": {
                            "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "project_id": {
                          "value": {
                            "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "environment_id": {
                          "value": {
                            "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2019-08-24T14:15:22Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2019-08-24T14:15:22Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get Role Descendants",
      "audiences": [],
      "operationId": "get_role_descendants",
      "tags": [
        "Roles"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetRoleDescendantsRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetRoleDescendantsRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
          "name": "role_id",
          "schema": {
            "description": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetRoleDescendantsRequestRoleId",
            "title": "Role Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetRoleDescendantsRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "GetRoleDescendantsResponse",
          "schema": "RoleList",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/v2/schema/{proj_id}/{env_id}/roles/{role_id}/descendants",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "role_id",
              "value": {
                "value": {
                  "value": "role_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "roles": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "Editor",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "description": {
                          "value": {
                            "value": "the editor role can read and write to documents",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "permissions": {
                          "value": [
                            {
                              "value": {
                                "value": "document:write",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "attributes": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "extends": {
                          "value": [
                            {
                              "value": {
                                "value": "viewer",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "key": {
                          "value": {
                            "value": "editor",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "organization_id": {
                          "value": {
                            "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "project_id": {
                          "value": {
                            "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "environment_id": {
                          "value": {
                            "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2019-08-24T14:15:22Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2019-08-24T14:15:22Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "List Condition Sets",
      "audiences": [],
      "operationId": "list_condition_sets",
      "tags": [
        "Condition Sets"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListConditionSetsRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListConditionSetsRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Text search for the condition sets name or key",
          "name": "search",
          "schema": {
            "generatedName": "ListConditionSetsRequestSearch",
            "nameOverride": "Search",
            "title": "Search",
            "description": "Text search for the condition sets name or key",
            "value": {
              "description": "Text search for the condition sets name or key",
              "schema": {
                "type": "string"
              },
              "generatedName": "ListConditionSetsRequestSearch",
              "nameOverride": "Search",
              "title": "Search",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "if provided, will return only the condition sets of the specified type. e.g: only user sets.",
          "name": "type",
          "schema": {
            "generatedName": "ListConditionSetsRequestType",
            "description": "if provided, will return only the condition sets of the specified type. e.g: only user sets.",
            "value": {
              "generatedName": "ListConditionSetsRequestType",
              "schema": "ConditionSetType",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Include total count in response",
          "name": "include_total_count",
          "schema": {
            "generatedName": "ListConditionSetsRequestIncludeTotalCount",
            "title": "Include Total Count",
            "description": "Include total count in response",
            "value": {
              "description": "Include total count in response",
              "schema": {
                "default": false,
                "type": "boolean"
              },
              "generatedName": "ListConditionSetsRequestIncludeTotalCount",
              "title": "Include Total Count",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Page number of the results to fetch, starting at 1.",
          "name": "page",
          "schema": {
            "generatedName": "ListConditionSetsRequestPage",
            "nameOverride": "Page",
            "title": "Page",
            "description": "Page number of the results to fetch, starting at 1.",
            "value": {
              "description": "Page number of the results to fetch, starting at 1.",
              "schema": {
                "default": 1,
                "minimum": 1,
                "type": "int"
              },
              "generatedName": "ListConditionSetsRequestPage",
              "nameOverride": "Page",
              "title": "Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The number of results per page (max 100).",
          "name": "per_page",
          "schema": {
            "generatedName": "ListConditionSetsRequestPerPage",
            "title": "Per Page",
            "description": "The number of results per page (max 100).",
            "value": {
              "description": "The number of results per page (max 100).",
              "schema": {
                "default": 30,
                "minimum": 1,
                "maximum": 100,
                "type": "int"
              },
              "generatedName": "ListConditionSetsRequestPerPage",
              "title": "Per Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListConditionSetsRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "value": {
            "generatedName": "ListConditionSetsResponse",
            "title": "Response List Condition Sets V2 Schema  Proj Id   Env Id  Condition Sets Get",
            "schemas": [
              {
                "generatedName": "ListConditionSetsResponseZero",
                "schema": "PaginatedResult_ConditionSetRead_",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              {
                "value": {
                  "generatedName": "ListConditionSetsResponseItem",
                  "schema": "ConditionSetRead",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ListConditionSetsResponse",
                "groupName": [],
                "type": "array"
              }
            ],
            "groupName": [],
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "undiscriminated"
          },
          "type": "oneOf"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Lists all condition sets matching a filter.",
      "authed": true,
      "method": "GET",
      "path": "/v2/schema/{proj_id}/{env_id}/condition_sets",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "data": {
                  "value": [
                    {
                      "properties": {
                        "key": {
                          "value": {
                            "value": "na_based_employees",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": {
                          "value": "userset",
                          "type": "enum"
                        },
                        "autogenerated": {
                          "value": {
                            "value": false,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "resource_id": {
                          "value": {
                            "value": "e05f8571-f31e-20b2-2c45-15ae74cfb0f1",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "organization_id": {
                          "value": {
                            "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "project_id": {
                          "value": {
                            "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "environment_id": {
                          "value": {
                            "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2019-08-24T14:15:22Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2019-08-24T14:15:22Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "resource": {
                          "properties": {
                            "key": {
                              "value": {
                                "value": "repository",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "id": {
                              "value": {
                                "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "organization_id": {
                              "value": {
                                "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "project_id": {
                              "value": {
                                "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "environment_id": {
                              "value": {
                                "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "created_at": {
                              "value": {
                                "value": "2019-08-24T14:15:22Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "updated_at": {
                              "value": {
                                "value": "2019-08-24T14:15:22Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "name": {
                              "value": {
                                "value": "Repository",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "urn": {
                              "value": {
                                "value": "prn:github:scm:repository",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "description": {
                              "value": {
                                "value": "a git repository stored on github",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "actions": {
                              "value": [
                                {
                                  "key": {
                                    "value": "clone",
                                    "type": "string"
                                  },
                                  "value": {
                                    "properties": {
                                      "id": {
                                        "value": {
                                          "value": "90e21d70-2b1b-42f0-b492-8fd69c1d79d1",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                {
                                  "key": {
                                    "value": "read",
                                    "type": "string"
                                  },
                                  "value": {
                                    "properties": {
                                      "id": {
                                        "value": {
                                          "value": "2bc27751-6115-43c0-b68c-928cb46e34bc",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                {
                                  "key": {
                                    "value": "push",
                                    "type": "string"
                                  },
                                  "value": {
                                    "properties": {
                                      "id": {
                                        "value": {
                                          "value": "e06da336-6e03-41d6-a495-40b0d7537b2a",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "object"
                                  }
                                }
                              ],
                              "type": "map"
                            },
                            "attributes": {
                              "value": [
                                {
                                  "key": {
                                    "value": "created",
                                    "type": "string"
                                  },
                                  "value": {
                                    "properties": {
                                      "type": {
                                        "value": "time",
                                        "type": "enum"
                                      },
                                      "description": {
                                        "value": {
                                          "value": "the time (timestamp) the repository was created",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "id": {
                                        "value": {
                                          "value": "497f6eca-6276-4993-bfeb-53cbbbba6f11",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                {
                                  "key": {
                                    "value": "private",
                                    "type": "string"
                                  },
                                  "value": {
                                    "properties": {
                                      "type": {
                                        "value": "bool",
                                        "type": "enum"
                                      },
                                      "description": {
                                        "value": {
                                          "value": "whether the repo is private (if false, the repo is public)",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "id": {
                                        "value": {
                                          "value": "497f6eca-6276-4993-bfeb-53cbbbba6f22",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "object"
                                  }
                                }
                              ],
                              "type": "map"
                            }
                          },
                          "type": "object"
                        },
                        "name": {
                          "value": {
                            "value": "US or Canada based employees",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "description": {
                          "value": {
                            "value": "All employees based in the US or Canada",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "conditions": {
                          "value": [
                            {
                              "key": {
                                "value": "allOf",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "value": [
                                        {
                                          "key": {
                                            "value": "user.role",
                                            "type": "string"
                                          },
                                          "value": {
                                            "value": [
                                              {
                                                "key": {
                                                  "value": "equals",
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "value": {
                                                    "value": "employee",
                                                    "type": "string"
                                                  },
                                                  "type": "primitive"
                                                }
                                              }
                                            ],
                                            "type": "map"
                                          }
                                        }
                                      ],
                                      "type": "map"
                                    },
                                    {
                                      "value": [
                                        {
                                          "key": {
                                            "value": "user.location",
                                            "type": "string"
                                          },
                                          "value": {
                                            "value": [
                                              {
                                                "key": {
                                                  "value": "in",
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "value": [
                                                    {
                                                      "value": {
                                                        "value": "US",
                                                        "type": "string"
                                                      },
                                                      "type": "primitive"
                                                    },
                                                    {
                                                      "value": {
                                                        "value": "Canada",
                                                        "type": "string"
                                                      },
                                                      "type": "primitive"
                                                    }
                                                  ],
                                                  "type": "array"
                                                }
                                              }
                                            ],
                                            "type": "map"
                                          }
                                        }
                                      ],
                                      "type": "map"
                                    }
                                  ],
                                  "type": "array"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "parent_id": {
                          "value": {
                            "value": "parent_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "total_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "page_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Create Condition Set",
      "audiences": [],
      "operationId": "create_condition_set",
      "tags": [
        "Condition Sets"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "CreateConditionSetRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "CreateConditionSetRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CreateConditionSetRequest",
      "request": {
        "schema": {
          "generatedName": "CreateConditionSetRequest",
          "schema": "ConditionSetCreate",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "CreateConditionSetResponse",
          "schema": "ConditionSetRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Creates a new condition set (can be either a user set or a resource set).",
      "authed": true,
      "method": "POST",
      "path": "/v2/schema/{proj_id}/{env_id}/condition_sets",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "key": {
                "value": {
                  "value": "na_based_employees",
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": {
                "value": "userset",
                "type": "enum"
              },
              "name": {
                "value": {
                  "value": "US or Canada based employees",
                  "type": "string"
                },
                "type": "primitive"
              },
              "conditions": {
                "value": [
                  {
                    "key": {
                      "value": "allOf",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": [
                          {
                            "value": [
                              {
                                "key": {
                                  "value": "user.role",
                                  "type": "string"
                                },
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "equals",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "employee",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                }
                              }
                            ],
                            "type": "map"
                          },
                          {
                            "value": [
                              {
                                "key": {
                                  "value": "user.location",
                                  "type": "string"
                                },
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "in",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": [
                                          {
                                            "value": {
                                              "value": "US",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          {
                                            "value": {
                                              "value": "Canada",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        ],
                                        "type": "array"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                }
                              }
                            ],
                            "type": "map"
                          }
                        ],
                        "type": "array"
                      },
                      "type": "unknown"
                    }
                  }
                ],
                "type": "map"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "key": {
                  "value": {
                    "value": "na_based_employees",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "userset",
                  "type": "enum"
                },
                "autogenerated": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "resource_id": {
                  "value": {
                    "value": "e05f8571-f31e-20b2-2c45-15ae74cfb0f1",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "resource": {
                  "properties": {
                    "key": {
                      "value": {
                        "value": "repository",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "organization_id": {
                      "value": {
                        "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "project_id": {
                      "value": {
                        "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "environment_id": {
                      "value": {
                        "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "created_at": {
                      "value": {
                        "value": "2019-08-24T14:15:22Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2019-08-24T14:15:22Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "name": {
                      "value": {
                        "value": "Repository",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "urn": {
                      "value": {
                        "value": "prn:github:scm:repository",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "description": {
                      "value": {
                        "value": "a git repository stored on github",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "actions": {
                      "value": [
                        {
                          "key": {
                            "value": "clone",
                            "type": "string"
                          },
                          "value": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "90e21d70-2b1b-42f0-b492-8fd69c1d79d1",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          }
                        },
                        {
                          "key": {
                            "value": "read",
                            "type": "string"
                          },
                          "value": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "2bc27751-6115-43c0-b68c-928cb46e34bc",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          }
                        },
                        {
                          "key": {
                            "value": "push",
                            "type": "string"
                          },
                          "value": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "e06da336-6e03-41d6-a495-40b0d7537b2a",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    "attributes": {
                      "value": [
                        {
                          "key": {
                            "value": "created",
                            "type": "string"
                          },
                          "value": {
                            "properties": {
                              "type": {
                                "value": "time",
                                "type": "enum"
                              },
                              "description": {
                                "value": {
                                  "value": "the time (timestamp) the repository was created",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "id": {
                                "value": {
                                  "value": "497f6eca-6276-4993-bfeb-53cbbbba6f11",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          }
                        },
                        {
                          "key": {
                            "value": "private",
                            "type": "string"
                          },
                          "value": {
                            "properties": {
                              "type": {
                                "value": "bool",
                                "type": "enum"
                              },
                              "description": {
                                "value": {
                                  "value": "whether the repo is private (if false, the repo is public)",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "id": {
                                "value": {
                                  "value": "497f6eca-6276-4993-bfeb-53cbbbba6f22",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    "action_groups": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": [
                              {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            ],
                            "type": "array"
                          }
                        }
                      ],
                      "type": "map"
                    }
                  },
                  "type": "object"
                },
                "name": {
                  "value": {
                    "value": "US or Canada based employees",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "All employees based in the US or Canada",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "conditions": {
                  "value": [
                    {
                      "key": {
                        "value": "allOf",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "value": [
                                {
                                  "key": {
                                    "value": "user.role",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": [
                                      {
                                        "key": {
                                          "value": "equals",
                                          "type": "string"
                                        },
                                        "value": {
                                          "value": {
                                            "value": "employee",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        }
                                      }
                                    ],
                                    "type": "map"
                                  }
                                }
                              ],
                              "type": "map"
                            },
                            {
                              "value": [
                                {
                                  "key": {
                                    "value": "user.location",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": [
                                      {
                                        "key": {
                                          "value": "in",
                                          "type": "string"
                                        },
                                        "value": {
                                          "value": [
                                            {
                                              "value": {
                                                "value": "US",
                                                "type": "string"
                                              },
                                              "type": "primitive"
                                            },
                                            {
                                              "value": {
                                                "value": "Canada",
                                                "type": "string"
                                              },
                                              "type": "primitive"
                                            }
                                          ],
                                          "type": "array"
                                        }
                                      }
                                    ],
                                    "type": "map"
                                  }
                                }
                              ],
                              "type": "map"
                            }
                          ],
                          "type": "array"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "parent_id": {
                  "value": {
                    "value": "parent_id",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get Condition Set",
      "audiences": [],
      "operationId": "get_condition_set",
      "tags": [
        "Condition Sets"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetConditionSetRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetConditionSetRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \"slug\").",
          "name": "condition_set_id",
          "schema": {
            "description": "Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetConditionSetRequestConditionSetId",
            "title": "Condition Set Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetConditionSetRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "GetConditionSetResponse",
          "schema": "ConditionSetRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Gets a single condition set, if such condition set exists.",
      "authed": true,
      "method": "GET",
      "path": "/v2/schema/{proj_id}/{env_id}/condition_sets/{condition_set_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "condition_set_id",
              "value": {
                "value": {
                  "value": "condition_set_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "key": {
                  "value": {
                    "value": "na_based_employees",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "userset",
                  "type": "enum"
                },
                "autogenerated": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "resource_id": {
                  "value": {
                    "value": "e05f8571-f31e-20b2-2c45-15ae74cfb0f1",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "resource": {
                  "properties": {
                    "key": {
                      "value": {
                        "value": "repository",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "organization_id": {
                      "value": {
                        "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "project_id": {
                      "value": {
                        "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "environment_id": {
                      "value": {
                        "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "created_at": {
                      "value": {
                        "value": "2019-08-24T14:15:22Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2019-08-24T14:15:22Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "name": {
                      "value": {
                        "value": "Repository",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "urn": {
                      "value": {
                        "value": "prn:github:scm:repository",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "description": {
                      "value": {
                        "value": "a git repository stored on github",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "actions": {
                      "value": [
                        {
                          "key": {
                            "value": "clone",
                            "type": "string"
                          },
                          "value": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "90e21d70-2b1b-42f0-b492-8fd69c1d79d1",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          }
                        },
                        {
                          "key": {
                            "value": "read",
                            "type": "string"
                          },
                          "value": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "2bc27751-6115-43c0-b68c-928cb46e34bc",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          }
                        },
                        {
                          "key": {
                            "value": "push",
                            "type": "string"
                          },
                          "value": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "e06da336-6e03-41d6-a495-40b0d7537b2a",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    "attributes": {
                      "value": [
                        {
                          "key": {
                            "value": "created",
                            "type": "string"
                          },
                          "value": {
                            "properties": {
                              "type": {
                                "value": "time",
                                "type": "enum"
                              },
                              "description": {
                                "value": {
                                  "value": "the time (timestamp) the repository was created",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "id": {
                                "value": {
                                  "value": "497f6eca-6276-4993-bfeb-53cbbbba6f11",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          }
                        },
                        {
                          "key": {
                            "value": "private",
                            "type": "string"
                          },
                          "value": {
                            "properties": {
                              "type": {
                                "value": "bool",
                                "type": "enum"
                              },
                              "description": {
                                "value": {
                                  "value": "whether the repo is private (if false, the repo is public)",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "id": {
                                "value": {
                                  "value": "497f6eca-6276-4993-bfeb-53cbbbba6f22",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    "action_groups": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": [
                              {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            ],
                            "type": "array"
                          }
                        }
                      ],
                      "type": "map"
                    }
                  },
                  "type": "object"
                },
                "name": {
                  "value": {
                    "value": "US or Canada based employees",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "All employees based in the US or Canada",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "conditions": {
                  "value": [
                    {
                      "key": {
                        "value": "allOf",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "value": [
                                {
                                  "key": {
                                    "value": "user.role",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": [
                                      {
                                        "key": {
                                          "value": "equals",
                                          "type": "string"
                                        },
                                        "value": {
                                          "value": {
                                            "value": "employee",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        }
                                      }
                                    ],
                                    "type": "map"
                                  }
                                }
                              ],
                              "type": "map"
                            },
                            {
                              "value": [
                                {
                                  "key": {
                                    "value": "user.location",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": [
                                      {
                                        "key": {
                                          "value": "in",
                                          "type": "string"
                                        },
                                        "value": {
                                          "value": [
                                            {
                                              "value": {
                                                "value": "US",
                                                "type": "string"
                                              },
                                              "type": "primitive"
                                            },
                                            {
                                              "value": {
                                                "value": "Canada",
                                                "type": "string"
                                              },
                                              "type": "primitive"
                                            }
                                          ],
                                          "type": "array"
                                        }
                                      }
                                    ],
                                    "type": "map"
                                  }
                                }
                              ],
                              "type": "map"
                            }
                          ],
                          "type": "array"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "parent_id": {
                  "value": {
                    "value": "parent_id",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete Condition Set",
      "audiences": [],
      "operationId": "delete_condition_set",
      "tags": [
        "Condition Sets"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteConditionSetRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteConditionSetRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \"slug\").",
          "name": "condition_set_id",
          "schema": {
            "description": "Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteConditionSetRequestConditionSetId",
            "title": "Condition Set Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteConditionSetRequest",
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Deletes a condition set and all its related data.\nThis includes any permissions granted to said condition set (i.e: any matching condition set rules).",
      "authed": true,
      "method": "DELETE",
      "path": "/v2/schema/{proj_id}/{env_id}/condition_sets/{condition_set_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "condition_set_id",
              "value": {
                "value": {
                  "value": "condition_set_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Update Condition Set",
      "audiences": [],
      "operationId": "update_condition_set",
      "tags": [
        "Condition Sets"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateConditionSetRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateConditionSetRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \"slug\").",
          "name": "condition_set_id",
          "schema": {
            "description": "Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateConditionSetRequestConditionSetId",
            "title": "Condition Set Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UpdateConditionSetRequest",
      "request": {
        "schema": {
          "generatedName": "UpdateConditionSetRequest",
          "schema": "ConditionSetUpdate",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "UpdateConditionSetResponse",
          "schema": "ConditionSetRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Partially updates a condition set.\nFields that will be provided will be completely overwritten.",
      "authed": true,
      "method": "PATCH",
      "path": "/v2/schema/{proj_id}/{env_id}/condition_sets/{condition_set_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "condition_set_id",
              "value": {
                "value": {
                  "value": "condition_set_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "name": {
                "value": {
                  "value": "US based managers",
                  "type": "string"
                },
                "type": "primitive"
              },
              "conditions": {
                "value": [
                  {
                    "key": {
                      "value": "allOf",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": [
                          {
                            "value": [
                              {
                                "key": {
                                  "value": "user.role",
                                  "type": "string"
                                },
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "equals",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "manager",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                }
                              }
                            ],
                            "type": "map"
                          },
                          {
                            "value": [
                              {
                                "key": {
                                  "value": "user.location",
                                  "type": "string"
                                },
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "in",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": [
                                          {
                                            "value": {
                                              "value": "US",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        ],
                                        "type": "array"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                }
                              }
                            ],
                            "type": "map"
                          }
                        ],
                        "type": "array"
                      },
                      "type": "unknown"
                    }
                  }
                ],
                "type": "map"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "key": {
                  "value": {
                    "value": "na_based_employees",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "userset",
                  "type": "enum"
                },
                "autogenerated": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "resource_id": {
                  "value": {
                    "value": "e05f8571-f31e-20b2-2c45-15ae74cfb0f1",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "resource": {
                  "properties": {
                    "key": {
                      "value": {
                        "value": "repository",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "organization_id": {
                      "value": {
                        "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "project_id": {
                      "value": {
                        "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "environment_id": {
                      "value": {
                        "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "created_at": {
                      "value": {
                        "value": "2019-08-24T14:15:22Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2019-08-24T14:15:22Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "name": {
                      "value": {
                        "value": "Repository",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "urn": {
                      "value": {
                        "value": "prn:github:scm:repository",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "description": {
                      "value": {
                        "value": "a git repository stored on github",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "actions": {
                      "value": [
                        {
                          "key": {
                            "value": "clone",
                            "type": "string"
                          },
                          "value": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "90e21d70-2b1b-42f0-b492-8fd69c1d79d1",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          }
                        },
                        {
                          "key": {
                            "value": "read",
                            "type": "string"
                          },
                          "value": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "2bc27751-6115-43c0-b68c-928cb46e34bc",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          }
                        },
                        {
                          "key": {
                            "value": "push",
                            "type": "string"
                          },
                          "value": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "e06da336-6e03-41d6-a495-40b0d7537b2a",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    "attributes": {
                      "value": [
                        {
                          "key": {
                            "value": "created",
                            "type": "string"
                          },
                          "value": {
                            "properties": {
                              "type": {
                                "value": "time",
                                "type": "enum"
                              },
                              "description": {
                                "value": {
                                  "value": "the time (timestamp) the repository was created",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "id": {
                                "value": {
                                  "value": "497f6eca-6276-4993-bfeb-53cbbbba6f11",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          }
                        },
                        {
                          "key": {
                            "value": "private",
                            "type": "string"
                          },
                          "value": {
                            "properties": {
                              "type": {
                                "value": "bool",
                                "type": "enum"
                              },
                              "description": {
                                "value": {
                                  "value": "whether the repo is private (if false, the repo is public)",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "id": {
                                "value": {
                                  "value": "497f6eca-6276-4993-bfeb-53cbbbba6f22",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    "action_groups": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": [
                              {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            ],
                            "type": "array"
                          }
                        }
                      ],
                      "type": "map"
                    }
                  },
                  "type": "object"
                },
                "name": {
                  "value": {
                    "value": "US or Canada based employees",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "All employees based in the US or Canada",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "conditions": {
                  "value": [
                    {
                      "key": {
                        "value": "allOf",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "value": [
                                {
                                  "key": {
                                    "value": "user.role",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": [
                                      {
                                        "key": {
                                          "value": "equals",
                                          "type": "string"
                                        },
                                        "value": {
                                          "value": {
                                            "value": "employee",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        }
                                      }
                                    ],
                                    "type": "map"
                                  }
                                }
                              ],
                              "type": "map"
                            },
                            {
                              "value": [
                                {
                                  "key": {
                                    "value": "user.location",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": [
                                      {
                                        "key": {
                                          "value": "in",
                                          "type": "string"
                                        },
                                        "value": {
                                          "value": [
                                            {
                                              "value": {
                                                "value": "US",
                                                "type": "string"
                                              },
                                              "type": "primitive"
                                            },
                                            {
                                              "value": {
                                                "value": "Canada",
                                                "type": "string"
                                              },
                                              "type": "primitive"
                                            }
                                          ],
                                          "type": "array"
                                        }
                                      }
                                    ],
                                    "type": "map"
                                  }
                                }
                              ],
                              "type": "map"
                            }
                          ],
                          "type": "array"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "parent_id": {
                  "value": {
                    "value": "parent_id",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get Condition Set Ancestors",
      "audiences": [],
      "operationId": "get_condition_set_ancestors",
      "tags": [
        "Condition Sets"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetConditionSetAncestorsRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetConditionSetAncestorsRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \"slug\").",
          "name": "condition_set_id",
          "schema": {
            "description": "Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetConditionSetAncestorsRequestConditionSetId",
            "title": "Condition Set Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Page number of the results to fetch, starting at 1.",
          "name": "page",
          "schema": {
            "generatedName": "GetConditionSetAncestorsRequestPage",
            "nameOverride": "Page",
            "title": "Page",
            "description": "Page number of the results to fetch, starting at 1.",
            "value": {
              "description": "Page number of the results to fetch, starting at 1.",
              "schema": {
                "default": 1,
                "minimum": 1,
                "type": "int"
              },
              "generatedName": "GetConditionSetAncestorsRequestPage",
              "nameOverride": "Page",
              "title": "Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The number of results per page (max 100).",
          "name": "per_page",
          "schema": {
            "generatedName": "GetConditionSetAncestorsRequestPerPage",
            "title": "Per Page",
            "description": "The number of results per page (max 100).",
            "value": {
              "description": "The number of results per page (max 100).",
              "schema": {
                "default": 30,
                "minimum": 1,
                "maximum": 100,
                "type": "int"
              },
              "generatedName": "GetConditionSetAncestorsRequestPerPage",
              "title": "Per Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetConditionSetAncestorsRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "value": {
            "generatedName": "GetConditionSetAncestorsResponseItem",
            "schema": "ConditionSetRead",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "GetConditionSetAncestorsResponse",
          "title": "Response Get Condition Set Ancestors V2 Schema  Proj Id   Env Id  Condition Sets  Condition Set Id  Ancestors Get",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Gets all ancestors (parent, parent of parent, and so on)",
      "authed": true,
      "method": "GET",
      "path": "/v2/schema/{proj_id}/{env_id}/condition_sets/{condition_set_id}/ancestors",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "condition_set_id",
              "value": {
                "value": {
                  "value": "condition_set_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "key": {
                      "value": {
                        "value": "na_based_employees",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": {
                      "value": "userset",
                      "type": "enum"
                    },
                    "autogenerated": {
                      "value": {
                        "value": false,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "resource_id": {
                      "value": {
                        "value": "e05f8571-f31e-20b2-2c45-15ae74cfb0f1",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "organization_id": {
                      "value": {
                        "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "project_id": {
                      "value": {
                        "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "environment_id": {
                      "value": {
                        "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "created_at": {
                      "value": {
                        "value": "2019-08-24T14:15:22Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2019-08-24T14:15:22Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "resource": {
                      "properties": {
                        "key": {
                          "value": {
                            "value": "repository",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "organization_id": {
                          "value": {
                            "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "project_id": {
                          "value": {
                            "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "environment_id": {
                          "value": {
                            "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2019-08-24T14:15:22Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2019-08-24T14:15:22Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "Repository",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "urn": {
                          "value": {
                            "value": "prn:github:scm:repository",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "description": {
                          "value": {
                            "value": "a git repository stored on github",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "actions": {
                          "value": [
                            {
                              "key": {
                                "value": "clone",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "id": {
                                    "value": {
                                      "value": "90e21d70-2b1b-42f0-b492-8fd69c1d79d1",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            {
                              "key": {
                                "value": "read",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "id": {
                                    "value": {
                                      "value": "2bc27751-6115-43c0-b68c-928cb46e34bc",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            {
                              "key": {
                                "value": "push",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "id": {
                                    "value": {
                                      "value": "e06da336-6e03-41d6-a495-40b0d7537b2a",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "attributes": {
                          "value": [
                            {
                              "key": {
                                "value": "created",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "type": {
                                    "value": "time",
                                    "type": "enum"
                                  },
                                  "description": {
                                    "value": {
                                      "value": "the time (timestamp) the repository was created",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "id": {
                                    "value": {
                                      "value": "497f6eca-6276-4993-bfeb-53cbbbba6f11",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            {
                              "key": {
                                "value": "private",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "type": {
                                    "value": "bool",
                                    "type": "enum"
                                  },
                                  "description": {
                                    "value": {
                                      "value": "whether the repo is private (if false, the repo is public)",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "id": {
                                    "value": {
                                      "value": "497f6eca-6276-4993-bfeb-53cbbbba6f22",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "action_groups": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": [
                                  {
                                    "value": {
                                      "value": "value",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                ],
                                "type": "array"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      },
                      "type": "object"
                    },
                    "name": {
                      "value": {
                        "value": "US or Canada based employees",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "description": {
                      "value": {
                        "value": "All employees based in the US or Canada",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "conditions": {
                      "value": [
                        {
                          "key": {
                            "value": "allOf",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": [
                                {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "user.role",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": [
                                          {
                                            "key": {
                                              "value": "equals",
                                              "type": "string"
                                            },
                                            "value": {
                                              "value": {
                                                "value": "employee",
                                                "type": "string"
                                              },
                                              "type": "primitive"
                                            }
                                          }
                                        ],
                                        "type": "map"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "user.location",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": [
                                          {
                                            "key": {
                                              "value": "in",
                                              "type": "string"
                                            },
                                            "value": {
                                              "value": [
                                                {
                                                  "value": {
                                                    "value": "US",
                                                    "type": "string"
                                                  },
                                                  "type": "primitive"
                                                },
                                                {
                                                  "value": {
                                                    "value": "Canada",
                                                    "type": "string"
                                                  },
                                                  "type": "primitive"
                                                }
                                              ],
                                              "type": "array"
                                            }
                                          }
                                        ],
                                        "type": "map"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                }
                              ],
                              "type": "array"
                            },
                            "type": "unknown"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    "parent_id": {
                      "value": {
                        "value": "parent_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get Condition Set Descendants",
      "audiences": [],
      "operationId": "get_condition_set_descendants",
      "tags": [
        "Condition Sets"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetConditionSetDescendantsRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetConditionSetDescendantsRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \"slug\").",
          "name": "condition_set_id",
          "schema": {
            "description": "Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetConditionSetDescendantsRequestConditionSetId",
            "title": "Condition Set Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Page number of the results to fetch, starting at 1.",
          "name": "page",
          "schema": {
            "generatedName": "GetConditionSetDescendantsRequestPage",
            "nameOverride": "Page",
            "title": "Page",
            "description": "Page number of the results to fetch, starting at 1.",
            "value": {
              "description": "Page number of the results to fetch, starting at 1.",
              "schema": {
                "default": 1,
                "minimum": 1,
                "type": "int"
              },
              "generatedName": "GetConditionSetDescendantsRequestPage",
              "nameOverride": "Page",
              "title": "Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The number of results per page (max 100).",
          "name": "per_page",
          "schema": {
            "generatedName": "GetConditionSetDescendantsRequestPerPage",
            "title": "Per Page",
            "description": "The number of results per page (max 100).",
            "value": {
              "description": "The number of results per page (max 100).",
              "schema": {
                "default": 30,
                "minimum": 1,
                "maximum": 100,
                "type": "int"
              },
              "generatedName": "GetConditionSetDescendantsRequestPerPage",
              "title": "Per Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetConditionSetDescendantsRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "value": {
            "generatedName": "GetConditionSetDescendantsResponseItem",
            "schema": "ConditionSetRead",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "GetConditionSetDescendantsResponse",
          "title": "Response Get Condition Set Descendants V2 Schema  Proj Id   Env Id  Condition Sets  Condition Set Id  Descendants Get",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Gets all descendants (children, children of children, and so on)",
      "authed": true,
      "method": "GET",
      "path": "/v2/schema/{proj_id}/{env_id}/condition_sets/{condition_set_id}/descendants",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "condition_set_id",
              "value": {
                "value": {
                  "value": "condition_set_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "key": {
                      "value": {
                        "value": "na_based_employees",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": {
                      "value": "userset",
                      "type": "enum"
                    },
                    "autogenerated": {
                      "value": {
                        "value": false,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "resource_id": {
                      "value": {
                        "value": "e05f8571-f31e-20b2-2c45-15ae74cfb0f1",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "organization_id": {
                      "value": {
                        "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "project_id": {
                      "value": {
                        "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "environment_id": {
                      "value": {
                        "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "created_at": {
                      "value": {
                        "value": "2019-08-24T14:15:22Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2019-08-24T14:15:22Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "resource": {
                      "properties": {
                        "key": {
                          "value": {
                            "value": "repository",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "organization_id": {
                          "value": {
                            "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "project_id": {
                          "value": {
                            "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "environment_id": {
                          "value": {
                            "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2019-08-24T14:15:22Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2019-08-24T14:15:22Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "Repository",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "urn": {
                          "value": {
                            "value": "prn:github:scm:repository",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "description": {
                          "value": {
                            "value": "a git repository stored on github",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "actions": {
                          "value": [
                            {
                              "key": {
                                "value": "clone",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "id": {
                                    "value": {
                                      "value": "90e21d70-2b1b-42f0-b492-8fd69c1d79d1",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            {
                              "key": {
                                "value": "read",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "id": {
                                    "value": {
                                      "value": "2bc27751-6115-43c0-b68c-928cb46e34bc",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            {
                              "key": {
                                "value": "push",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "id": {
                                    "value": {
                                      "value": "e06da336-6e03-41d6-a495-40b0d7537b2a",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "attributes": {
                          "value": [
                            {
                              "key": {
                                "value": "created",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "type": {
                                    "value": "time",
                                    "type": "enum"
                                  },
                                  "description": {
                                    "value": {
                                      "value": "the time (timestamp) the repository was created",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "id": {
                                    "value": {
                                      "value": "497f6eca-6276-4993-bfeb-53cbbbba6f11",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            {
                              "key": {
                                "value": "private",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "type": {
                                    "value": "bool",
                                    "type": "enum"
                                  },
                                  "description": {
                                    "value": {
                                      "value": "whether the repo is private (if false, the repo is public)",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "id": {
                                    "value": {
                                      "value": "497f6eca-6276-4993-bfeb-53cbbbba6f22",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "action_groups": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": [
                                  {
                                    "value": {
                                      "value": "value",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                ],
                                "type": "array"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      },
                      "type": "object"
                    },
                    "name": {
                      "value": {
                        "value": "US or Canada based employees",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "description": {
                      "value": {
                        "value": "All employees based in the US or Canada",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "conditions": {
                      "value": [
                        {
                          "key": {
                            "value": "allOf",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": [
                                {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "user.role",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": [
                                          {
                                            "key": {
                                              "value": "equals",
                                              "type": "string"
                                            },
                                            "value": {
                                              "value": {
                                                "value": "employee",
                                                "type": "string"
                                              },
                                              "type": "primitive"
                                            }
                                          }
                                        ],
                                        "type": "map"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "user.location",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": [
                                          {
                                            "key": {
                                              "value": "in",
                                              "type": "string"
                                            },
                                            "value": {
                                              "value": [
                                                {
                                                  "value": {
                                                    "value": "US",
                                                    "type": "string"
                                                  },
                                                  "type": "primitive"
                                                },
                                                {
                                                  "value": {
                                                    "value": "Canada",
                                                    "type": "string"
                                                  },
                                                  "type": "primitive"
                                                }
                                              ],
                                              "type": "array"
                                            }
                                          }
                                        ],
                                        "type": "map"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                }
                              ],
                              "type": "array"
                            },
                            "type": "unknown"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    "parent_id": {
                      "value": {
                        "value": "parent_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "List Users",
      "audiences": [],
      "operationId": "list_users",
      "tags": [
        "Users"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListUsersRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListUsersRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Text search for the email field",
          "name": "search",
          "schema": {
            "generatedName": "ListUsersRequestSearch",
            "nameOverride": "Search",
            "title": "Search",
            "description": "Text search for the email field",
            "value": {
              "description": "Text search for the email field",
              "schema": {
                "type": "string"
              },
              "generatedName": "ListUsersRequestSearch",
              "nameOverride": "Search",
              "title": "Search",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Match users with a specific role",
          "name": "role",
          "schema": {
            "generatedName": "ListUsersRequestRole",
            "nameOverride": "Role",
            "title": "Role",
            "description": "Match users with a specific role",
            "value": {
              "description": "Match users with a specific role",
              "schema": {
                "type": "string"
              },
              "generatedName": "ListUsersRequestRole",
              "nameOverride": "Role",
              "title": "Role",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Page number of the results to fetch, starting at 1.",
          "name": "page",
          "schema": {
            "generatedName": "ListUsersRequestPage",
            "nameOverride": "Page",
            "title": "Page",
            "description": "Page number of the results to fetch, starting at 1.",
            "value": {
              "description": "Page number of the results to fetch, starting at 1.",
              "schema": {
                "default": 1,
                "minimum": 1,
                "type": "int"
              },
              "generatedName": "ListUsersRequestPage",
              "nameOverride": "Page",
              "title": "Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The number of results per page (max 100).",
          "name": "per_page",
          "schema": {
            "generatedName": "ListUsersRequestPerPage",
            "title": "Per Page",
            "description": "The number of results per page (max 100).",
            "value": {
              "description": "The number of results per page (max 100).",
              "schema": {
                "default": 30,
                "minimum": 1,
                "maximum": 100,
                "type": "int"
              },
              "generatedName": "ListUsersRequestPerPage",
              "title": "Per Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListUsersRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "ListUsersResponse",
          "schema": "PaginatedResult_UserRead_",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Lists all the users defined within an environment.",
      "authed": true,
      "method": "GET",
      "path": "/v2/facts/{proj_id}/{env_id}/users",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "data": {
                  "value": [
                    {
                      "properties": {
                        "key": {
                          "value": {
                            "value": "user|892179821739812389327",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "organization_id": {
                          "value": {
                            "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "project_id": {
                          "value": {
                            "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "environment_id": {
                          "value": {
                            "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "associated_tenants": {
                          "value": [
                            {
                              "properties": {
                                "tenant": {
                                  "value": {
                                    "value": "stripe-inc",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "roles": {
                                  "value": [
                                    {
                                      "value": {
                                        "value": "admin",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  ],
                                  "type": "array"
                                },
                                "status": {
                                  "value": "active",
                                  "type": "enum"
                                }
                              },
                              "type": "object"
                            },
                            {
                              "properties": {
                                "tenant": {
                                  "value": {
                                    "value": "othercompany.com",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "roles": {
                                  "value": [
                                    {
                                      "value": {
                                        "value": "viewer",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  ],
                                  "type": "array"
                                },
                                "status": {
                                  "value": "pending",
                                  "type": "enum"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "roles": {
                          "value": [
                            {
                              "properties": {
                                "role": {
                                  "value": {
                                    "value": "admin",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "tenant": {
                                  "value": {
                                    "value": "stripe-inc",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            },
                            {
                              "properties": {
                                "role": {
                                  "value": {
                                    "value": "viewer",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "tenant": {
                                  "value": {
                                    "value": "othercompany.com",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "email": {
                          "value": {
                            "value": "jane@coolcompany.com",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "first_name": {
                          "value": {
                            "value": "Jane",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "last_name": {
                          "value": {
                            "value": "Doe",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "attributes": {
                          "value": [
                            {
                              "key": {
                                "value": "department",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "marketing",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            },
                            {
                              "key": {
                                "value": "age",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": 30,
                                    "type": "int"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            },
                            {
                              "key": {
                                "value": "subscription",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "tier",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "pro",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    {
                                      "key": {
                                        "value": "expired",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": false,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "total_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "page_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Create User",
      "audiences": [],
      "operationId": "create_user",
      "tags": [
        "Users"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "CreateUserRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "CreateUserRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CreateUserRequest",
      "request": {
        "schema": {
          "generatedName": "CreateUserRequest",
          "schema": "UserCreate",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "CreateUserResponse",
          "schema": "UserRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Creates a new user inside the Permit.io system, from that point forward\nyou may run permission checks on that user.\n\nIf the user is already created: will return 200 instead of 201,\nand will return the existing user object in the response body.",
      "authed": true,
      "method": "POST",
      "path": "/v2/facts/{proj_id}/{env_id}/users",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "key": {
                "value": {
                  "value": "user|892179821739812389327",
                  "type": "string"
                },
                "type": "primitive"
              },
              "email": {
                "value": {
                  "value": "jane@coolcompany.com",
                  "type": "string"
                },
                "type": "primitive"
              },
              "first_name": {
                "value": {
                  "value": "Jane",
                  "type": "string"
                },
                "type": "primitive"
              },
              "last_name": {
                "value": {
                  "value": "Doe",
                  "type": "string"
                },
                "type": "primitive"
              },
              "attributes": {
                "value": [
                  {
                    "key": {
                      "value": "department",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": {
                          "value": "marketing",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "unknown"
                    }
                  },
                  {
                    "key": {
                      "value": "age",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": {
                          "value": 30,
                          "type": "int"
                        },
                        "type": "primitive"
                      },
                      "type": "unknown"
                    }
                  },
                  {
                    "key": {
                      "value": "subscription",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": [
                          {
                            "key": {
                              "value": "tier",
                              "type": "string"
                            },
                            "value": {
                              "value": {
                                "value": "pro",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          {
                            "key": {
                              "value": "expired",
                              "type": "string"
                            },
                            "value": {
                              "value": {
                                "value": false,
                                "type": "boolean"
                              },
                              "type": "primitive"
                            }
                          }
                        ],
                        "type": "map"
                      },
                      "type": "unknown"
                    }
                  }
                ],
                "type": "map"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "key": {
                  "value": {
                    "value": "user|892179821739812389327",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "associated_tenants": {
                  "value": [
                    {
                      "properties": {
                        "tenant": {
                          "value": {
                            "value": "stripe-inc",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "roles": {
                          "value": [
                            {
                              "value": {
                                "value": "admin",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "status": {
                          "value": "active",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "tenant": {
                          "value": {
                            "value": "othercompany.com",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "roles": {
                          "value": [
                            {
                              "value": {
                                "value": "viewer",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "status": {
                          "value": "pending",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "roles": {
                  "value": [
                    {
                      "properties": {
                        "role": {
                          "value": {
                            "value": "admin",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tenant": {
                          "value": {
                            "value": "stripe-inc",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "role": {
                          "value": {
                            "value": "viewer",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tenant": {
                          "value": {
                            "value": "othercompany.com",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "email": {
                  "value": {
                    "value": "jane@coolcompany.com",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "first_name": {
                  "value": {
                    "value": "Jane",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "last_name": {
                  "value": {
                    "value": "Doe",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "attributes": {
                  "value": [
                    {
                      "key": {
                        "value": "department",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "marketing",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    },
                    {
                      "key": {
                        "value": "age",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": 30,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    },
                    {
                      "key": {
                        "value": "subscription",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "key": {
                                "value": "tier",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "pro",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            {
                              "key": {
                                "value": "expired",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": false,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get User",
      "audiences": [],
      "operationId": "get_user",
      "tags": [
        "Users"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetUserRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetUserRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
          "name": "user_id",
          "schema": {
            "description": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetUserRequestUserId",
            "title": "User Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetUserRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "GetUserResponse",
          "schema": "UserRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Gets a user, if such user exists. Otherwise returns 404.",
      "authed": true,
      "method": "GET",
      "path": "/v2/facts/{proj_id}/{env_id}/users/{user_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "user_id",
              "value": {
                "value": {
                  "value": "user_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "key": {
                  "value": {
                    "value": "user|892179821739812389327",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "associated_tenants": {
                  "value": [
                    {
                      "properties": {
                        "tenant": {
                          "value": {
                            "value": "stripe-inc",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "roles": {
                          "value": [
                            {
                              "value": {
                                "value": "admin",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "status": {
                          "value": "active",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "tenant": {
                          "value": {
                            "value": "othercompany.com",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "roles": {
                          "value": [
                            {
                              "value": {
                                "value": "viewer",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "status": {
                          "value": "pending",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "roles": {
                  "value": [
                    {
                      "properties": {
                        "role": {
                          "value": {
                            "value": "admin",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tenant": {
                          "value": {
                            "value": "stripe-inc",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "role": {
                          "value": {
                            "value": "viewer",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tenant": {
                          "value": {
                            "value": "othercompany.com",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "email": {
                  "value": {
                    "value": "jane@coolcompany.com",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "first_name": {
                  "value": {
                    "value": "Jane",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "last_name": {
                  "value": {
                    "value": "Doe",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "attributes": {
                  "value": [
                    {
                      "key": {
                        "value": "department",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "marketing",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    },
                    {
                      "key": {
                        "value": "age",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": 30,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    },
                    {
                      "key": {
                        "value": "subscription",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "key": {
                                "value": "tier",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "pro",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            {
                              "key": {
                                "value": "expired",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": false,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Replace User",
      "audiences": [],
      "operationId": "replace_user",
      "tags": [
        "Users"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ReplaceUserRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ReplaceUserRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
          "name": "user_id",
          "schema": {
            "description": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ReplaceUserRequestUserId",
            "title": "User Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ReplaceUserRequest",
      "request": {
        "schema": {
          "generatedName": "ReplaceUserRequest",
          "schema": "UserCreate",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "An existing user was replaced",
        "schema": {
          "generatedName": "ReplaceUserResponse",
          "schema": "UserRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/v2/facts/{proj_id}/{env_id}/users/{user_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "user_id",
              "value": {
                "value": {
                  "value": "user_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "key": {
                "value": {
                  "value": "user|892179821739812389327",
                  "type": "string"
                },
                "type": "primitive"
              },
              "email": {
                "value": {
                  "value": "jane@coolcompany.com",
                  "type": "string"
                },
                "type": "primitive"
              },
              "first_name": {
                "value": {
                  "value": "Jane",
                  "type": "string"
                },
                "type": "primitive"
              },
              "last_name": {
                "value": {
                  "value": "Doe",
                  "type": "string"
                },
                "type": "primitive"
              },
              "attributes": {
                "value": [
                  {
                    "key": {
                      "value": "department",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": {
                          "value": "marketing",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "unknown"
                    }
                  },
                  {
                    "key": {
                      "value": "age",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": {
                          "value": 30,
                          "type": "int"
                        },
                        "type": "primitive"
                      },
                      "type": "unknown"
                    }
                  },
                  {
                    "key": {
                      "value": "subscription",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": [
                          {
                            "key": {
                              "value": "tier",
                              "type": "string"
                            },
                            "value": {
                              "value": {
                                "value": "pro",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          {
                            "key": {
                              "value": "expired",
                              "type": "string"
                            },
                            "value": {
                              "value": {
                                "value": false,
                                "type": "boolean"
                              },
                              "type": "primitive"
                            }
                          }
                        ],
                        "type": "map"
                      },
                      "type": "unknown"
                    }
                  }
                ],
                "type": "map"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "key": {
                  "value": {
                    "value": "user|892179821739812389327",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "associated_tenants": {
                  "value": [
                    {
                      "properties": {
                        "tenant": {
                          "value": {
                            "value": "stripe-inc",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "roles": {
                          "value": [
                            {
                              "value": {
                                "value": "admin",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "status": {
                          "value": "active",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "tenant": {
                          "value": {
                            "value": "othercompany.com",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "roles": {
                          "value": [
                            {
                              "value": {
                                "value": "viewer",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "status": {
                          "value": "pending",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "roles": {
                  "value": [
                    {
                      "properties": {
                        "role": {
                          "value": {
                            "value": "admin",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tenant": {
                          "value": {
                            "value": "stripe-inc",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "role": {
                          "value": {
                            "value": "viewer",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tenant": {
                          "value": {
                            "value": "othercompany.com",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "email": {
                  "value": {
                    "value": "jane@coolcompany.com",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "first_name": {
                  "value": {
                    "value": "Jane",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "last_name": {
                  "value": {
                    "value": "Doe",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "attributes": {
                  "value": [
                    {
                      "key": {
                        "value": "department",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "marketing",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    },
                    {
                      "key": {
                        "value": "age",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": 30,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    },
                    {
                      "key": {
                        "value": "subscription",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "key": {
                                "value": "tier",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "pro",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            {
                              "key": {
                                "value": "expired",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": false,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete User",
      "audiences": [],
      "operationId": "delete_user",
      "tags": [
        "Users"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteUserRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteUserRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
          "name": "user_id",
          "schema": {
            "description": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteUserRequestUserId",
            "title": "User Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteUserRequest",
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Deletes the user and all its related data.",
      "authed": true,
      "method": "DELETE",
      "path": "/v2/facts/{proj_id}/{env_id}/users/{user_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "user_id",
              "value": {
                "value": {
                  "value": "user_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Update User",
      "audiences": [],
      "operationId": "update_user",
      "tags": [
        "Users"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateUserRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateUserRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
          "name": "user_id",
          "schema": {
            "description": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateUserRequestUserId",
            "title": "User Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UpdateUserRequest",
      "request": {
        "schema": {
          "generatedName": "UpdateUserRequest",
          "schema": "UserUpdate",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "UpdateUserResponse",
          "schema": "UserRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Partially updates the user definition.\nFields that will be provided will be completely overwritten.",
      "authed": true,
      "method": "PATCH",
      "path": "/v2/facts/{proj_id}/{env_id}/users/{user_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "user_id",
              "value": {
                "value": {
                  "value": "user_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "key": {
                  "value": {
                    "value": "user|892179821739812389327",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "associated_tenants": {
                  "value": [
                    {
                      "properties": {
                        "tenant": {
                          "value": {
                            "value": "stripe-inc",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "roles": {
                          "value": [
                            {
                              "value": {
                                "value": "admin",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "status": {
                          "value": "active",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "tenant": {
                          "value": {
                            "value": "othercompany.com",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "roles": {
                          "value": [
                            {
                              "value": {
                                "value": "viewer",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "status": {
                          "value": "pending",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "roles": {
                  "value": [
                    {
                      "properties": {
                        "role": {
                          "value": {
                            "value": "admin",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tenant": {
                          "value": {
                            "value": "stripe-inc",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "role": {
                          "value": {
                            "value": "viewer",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tenant": {
                          "value": {
                            "value": "othercompany.com",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "email": {
                  "value": {
                    "value": "jane@coolcompany.com",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "first_name": {
                  "value": {
                    "value": "Jane",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "last_name": {
                  "value": {
                    "value": "Doe",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "attributes": {
                  "value": [
                    {
                      "key": {
                        "value": "department",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "marketing",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    },
                    {
                      "key": {
                        "value": "age",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": 30,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    },
                    {
                      "key": {
                        "value": "subscription",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "key": {
                                "value": "tier",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "pro",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            {
                              "key": {
                                "value": "expired",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": false,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Assign Role To User",
      "audiences": [],
      "operationId": "assign_role_to_user",
      "tags": [
        "Users"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "AssignRoleToUserRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "AssignRoleToUserRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
          "name": "user_id",
          "schema": {
            "description": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "AssignRoleToUserRequestUserId",
            "title": "User Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AssignRoleToUserRequest",
      "request": {
        "schema": {
          "generatedName": "AssignRoleToUserRequest",
          "schema": "UserRoleCreate",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "AssignRoleToUserResponse",
          "schema": "RoleAssignmentRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Assigns a role to the user within the tenant.\n\nThe tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.",
      "authed": true,
      "method": "POST",
      "path": "/v2/facts/{proj_id}/{env_id}/users/{user_id}/roles",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "user_id",
              "value": {
                "value": {
                  "value": "user_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "role": {
                "value": {
                  "value": "admin",
                  "type": "string"
                },
                "type": "primitive"
              },
              "tenant": {
                "value": {
                  "value": "stripe-inc",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "user": {
                  "value": {
                    "value": "jane@coolcompany.com",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": {
                    "value": "admin",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "tenant": {
                  "value": {
                    "value": "stripe-inc",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "user_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4d11",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe022",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "tenant_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e733",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Unassign Role From User",
      "audiences": [],
      "operationId": "unassign_role_from_user",
      "tags": [
        "Users"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UnassignRoleFromUserRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UnassignRoleFromUserRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
          "name": "user_id",
          "schema": {
            "description": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UnassignRoleFromUserRequestUserId",
            "title": "User Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UnassignRoleFromUserRequest",
      "request": {
        "schema": {
          "generatedName": "UnassignRoleFromUserRequest",
          "schema": "UserRoleRemove",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Unassigns the role from the user within the tenant.\n\nThe tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.\n\nIf the role is not actually assigned, will return 404.",
      "authed": true,
      "method": "DELETE",
      "path": "/v2/facts/{proj_id}/{env_id}/users/{user_id}/roles",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "user_id",
              "value": {
                "value": {
                  "value": "user_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "role": {
                "value": {
                  "value": "editor",
                  "type": "string"
                },
                "type": "primitive"
              },
              "tenant": {
                "value": {
                  "value": "google-inc",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "List Tenant Users",
      "audiences": [],
      "operationId": "list_tenant_users",
      "tags": [
        "Tenants"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListTenantUsersRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \"slug\").",
          "name": "tenant_id",
          "schema": {
            "description": "Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListTenantUsersRequestTenantId",
            "title": "Tenant Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListTenantUsersRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Text search for the email field",
          "name": "search",
          "schema": {
            "generatedName": "ListTenantUsersRequestSearch",
            "nameOverride": "Search",
            "title": "Search",
            "description": "Text search for the email field",
            "value": {
              "description": "Text search for the email field",
              "schema": {
                "type": "string"
              },
              "generatedName": "ListTenantUsersRequestSearch",
              "nameOverride": "Search",
              "title": "Search",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Match users with a specific role",
          "name": "role",
          "schema": {
            "generatedName": "ListTenantUsersRequestRole",
            "nameOverride": "Role",
            "title": "Role",
            "description": "Match users with a specific role",
            "value": {
              "description": "Match users with a specific role",
              "schema": {
                "type": "string"
              },
              "generatedName": "ListTenantUsersRequestRole",
              "nameOverride": "Role",
              "title": "Role",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Page number of the results to fetch, starting at 1.",
          "name": "page",
          "schema": {
            "generatedName": "ListTenantUsersRequestPage",
            "nameOverride": "Page",
            "title": "Page",
            "description": "Page number of the results to fetch, starting at 1.",
            "value": {
              "description": "Page number of the results to fetch, starting at 1.",
              "schema": {
                "default": 1,
                "minimum": 1,
                "type": "int"
              },
              "generatedName": "ListTenantUsersRequestPage",
              "nameOverride": "Page",
              "title": "Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The number of results per page (max 100).",
          "name": "per_page",
          "schema": {
            "generatedName": "ListTenantUsersRequestPerPage",
            "title": "Per Page",
            "description": "The number of results per page (max 100).",
            "value": {
              "description": "The number of results per page (max 100).",
              "schema": {
                "default": 30,
                "minimum": 1,
                "maximum": 100,
                "type": "int"
              },
              "generatedName": "ListTenantUsersRequestPerPage",
              "title": "Per Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListTenantUsersRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "ListTenantUsersResponse",
          "schema": "PaginatedResult_UserRead_",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/v2/facts/{proj_id}/{env_id}/tenants/{tenant_id}/users",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "tenant_id",
              "value": {
                "value": {
                  "value": "tenant_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "data": {
                  "value": [
                    {
                      "properties": {
                        "key": {
                          "value": {
                            "value": "user|892179821739812389327",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "organization_id": {
                          "value": {
                            "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "project_id": {
                          "value": {
                            "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "environment_id": {
                          "value": {
                            "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "associated_tenants": {
                          "value": [
                            {
                              "properties": {
                                "tenant": {
                                  "value": {
                                    "value": "stripe-inc",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "roles": {
                                  "value": [
                                    {
                                      "value": {
                                        "value": "admin",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  ],
                                  "type": "array"
                                },
                                "status": {
                                  "value": "active",
                                  "type": "enum"
                                }
                              },
                              "type": "object"
                            },
                            {
                              "properties": {
                                "tenant": {
                                  "value": {
                                    "value": "othercompany.com",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "roles": {
                                  "value": [
                                    {
                                      "value": {
                                        "value": "viewer",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  ],
                                  "type": "array"
                                },
                                "status": {
                                  "value": "pending",
                                  "type": "enum"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "roles": {
                          "value": [
                            {
                              "properties": {
                                "role": {
                                  "value": {
                                    "value": "admin",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "tenant": {
                                  "value": {
                                    "value": "stripe-inc",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            },
                            {
                              "properties": {
                                "role": {
                                  "value": {
                                    "value": "viewer",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "tenant": {
                                  "value": {
                                    "value": "othercompany.com",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "email": {
                          "value": {
                            "value": "jane@coolcompany.com",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "first_name": {
                          "value": {
                            "value": "Jane",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "last_name": {
                          "value": {
                            "value": "Doe",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "attributes": {
                          "value": [
                            {
                              "key": {
                                "value": "department",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "marketing",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            },
                            {
                              "key": {
                                "value": "age",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": 30,
                                    "type": "int"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            },
                            {
                              "key": {
                                "value": "subscription",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "tier",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "pro",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    {
                                      "key": {
                                        "value": "expired",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": false,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "total_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "page_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "List Tenants",
      "audiences": [],
      "operationId": "list_tenants",
      "tags": [
        "Tenants"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListTenantsRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListTenantsRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Text search for the tenant name or key",
          "name": "search",
          "schema": {
            "generatedName": "ListTenantsRequestSearch",
            "nameOverride": "Search",
            "title": "Search",
            "description": "Text search for the tenant name or key",
            "value": {
              "description": "Text search for the tenant name or key",
              "schema": {
                "type": "string"
              },
              "generatedName": "ListTenantsRequestSearch",
              "nameOverride": "Search",
              "title": "Search",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Include total count in response",
          "name": "include_total_count",
          "schema": {
            "generatedName": "ListTenantsRequestIncludeTotalCount",
            "title": "Include Total Count",
            "description": "Include total count in response",
            "value": {
              "description": "Include total count in response",
              "schema": {
                "default": false,
                "type": "boolean"
              },
              "generatedName": "ListTenantsRequestIncludeTotalCount",
              "title": "Include Total Count",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Page number of the results to fetch, starting at 1.",
          "name": "page",
          "schema": {
            "generatedName": "ListTenantsRequestPage",
            "nameOverride": "Page",
            "title": "Page",
            "description": "Page number of the results to fetch, starting at 1.",
            "value": {
              "description": "Page number of the results to fetch, starting at 1.",
              "schema": {
                "default": 1,
                "minimum": 1,
                "type": "int"
              },
              "generatedName": "ListTenantsRequestPage",
              "nameOverride": "Page",
              "title": "Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The number of results per page (max 100).",
          "name": "per_page",
          "schema": {
            "generatedName": "ListTenantsRequestPerPage",
            "title": "Per Page",
            "description": "The number of results per page (max 100).",
            "value": {
              "description": "The number of results per page (max 100).",
              "schema": {
                "default": 30,
                "minimum": 1,
                "maximum": 100,
                "type": "int"
              },
              "generatedName": "ListTenantsRequestPerPage",
              "title": "Per Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListTenantsRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "value": {
            "generatedName": "ListTenantsResponse",
            "title": "Response List Tenants V2 Facts  Proj Id   Env Id  Tenants Get",
            "schemas": [
              {
                "generatedName": "ListTenantsResponseZero",
                "schema": "PaginatedResult_TenantRead_",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              {
                "value": {
                  "generatedName": "ListTenantsResponseItem",
                  "schema": "TenantRead",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ListTenantsResponse",
                "groupName": [],
                "type": "array"
              }
            ],
            "groupName": [],
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "undiscriminated"
          },
          "type": "oneOf"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Lists all the tenants defined within an environment.",
      "authed": true,
      "method": "GET",
      "path": "/v2/facts/{proj_id}/{env_id}/tenants",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "data": {
                  "value": [
                    {
                      "properties": {
                        "key": {
                          "value": {
                            "value": "stripeinc",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "organization_id": {
                          "value": {
                            "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "project_id": {
                          "value": {
                            "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "environment_id": {
                          "value": {
                            "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2019-08-24T14:15:22Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2019-08-24T14:15:22Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "last_action_at": {
                          "value": {
                            "value": "2019-08-24T14:15:22Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "Stripe Inc",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "description": {
                          "value": {
                            "value": "description",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "attributes": {
                          "value": [
                            {
                              "key": {
                                "value": "allowed_locations",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "value": {
                                        "value": "US",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    {
                                      "value": {
                                        "value": "CA",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  ],
                                  "type": "array"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "total_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "page_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Create Tenant",
      "audiences": [],
      "operationId": "create_tenant",
      "tags": [
        "Tenants"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "CreateTenantRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "CreateTenantRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CreateTenantRequest",
      "request": {
        "schema": {
          "generatedName": "CreateTenantRequest",
          "schema": "TenantCreate",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "CreateTenantResponse",
          "schema": "TenantRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Creates a new tenant inside the Permit.io system.\n\nIf the tenant is already created: will return 200 instead of 201,\nand will return the existing tenant object in the response body.",
      "authed": true,
      "method": "POST",
      "path": "/v2/facts/{proj_id}/{env_id}/tenants",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "key": {
                "value": {
                  "value": "stripeinc",
                  "type": "string"
                },
                "type": "primitive"
              },
              "name": {
                "value": {
                  "value": "Stripe Inc",
                  "type": "string"
                },
                "type": "primitive"
              },
              "attributes": {
                "value": [
                  {
                    "key": {
                      "value": "allowed_locations",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": [
                          {
                            "value": {
                              "value": "US",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          {
                            "value": {
                              "value": "CA",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        ],
                        "type": "array"
                      },
                      "type": "unknown"
                    }
                  }
                ],
                "type": "map"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "key": {
                  "value": {
                    "value": "stripeinc",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "last_action_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "Stripe Inc",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "description",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "attributes": {
                  "value": [
                    {
                      "key": {
                        "value": "allowed_locations",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "value": {
                                "value": "US",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            {
                              "value": {
                                "value": "CA",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get Tenant",
      "audiences": [],
      "operationId": "get_tenant",
      "tags": [
        "Tenants"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetTenantRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetTenantRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \"slug\").",
          "name": "tenant_id",
          "schema": {
            "description": "Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetTenantRequestTenantId",
            "title": "Tenant Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetTenantRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "GetTenantResponse",
          "schema": "TenantRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Gets a tenant, if such tenant exists. Otherwise returns 404.",
      "authed": true,
      "method": "GET",
      "path": "/v2/facts/{proj_id}/{env_id}/tenants/{tenant_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "tenant_id",
              "value": {
                "value": {
                  "value": "tenant_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "key": {
                  "value": {
                    "value": "stripeinc",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "last_action_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "Stripe Inc",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "description",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "attributes": {
                  "value": [
                    {
                      "key": {
                        "value": "allowed_locations",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "value": {
                                "value": "US",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            {
                              "value": {
                                "value": "CA",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete Tenant",
      "audiences": [],
      "operationId": "delete_tenant",
      "tags": [
        "Tenants"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteTenantRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteTenantRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \"slug\").",
          "name": "tenant_id",
          "schema": {
            "description": "Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteTenantRequestTenantId",
            "title": "Tenant Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteTenantRequest",
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Deletes the tenant and all its related data.",
      "authed": true,
      "method": "DELETE",
      "path": "/v2/facts/{proj_id}/{env_id}/tenants/{tenant_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "tenant_id",
              "value": {
                "value": {
                  "value": "tenant_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Update Tenant",
      "audiences": [],
      "operationId": "update_tenant",
      "tags": [
        "Tenants"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateTenantRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateTenantRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \"slug\").",
          "name": "tenant_id",
          "schema": {
            "description": "Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateTenantRequestTenantId",
            "title": "Tenant Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UpdateTenantRequest",
      "request": {
        "schema": {
          "generatedName": "UpdateTenantRequest",
          "schema": "TenantUpdate",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "UpdateTenantResponse",
          "schema": "TenantRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Partially updates the tenant definition.\nFields that will be provided will be completely overwritten.",
      "authed": true,
      "method": "PATCH",
      "path": "/v2/facts/{proj_id}/{env_id}/tenants/{tenant_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "tenant_id",
              "value": {
                "value": {
                  "value": "tenant_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "key": {
                  "value": {
                    "value": "stripeinc",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "last_action_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "Stripe Inc",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "description",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "attributes": {
                  "value": [
                    {
                      "key": {
                        "value": "allowed_locations",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "value": {
                                "value": "US",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            {
                              "value": {
                                "value": "CA",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete Tenant User",
      "audiences": [],
      "operationId": "delete_tenant_user",
      "tags": [
        "Tenants"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteTenantUserRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteTenantUserRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \"slug\").",
          "name": "tenant_id",
          "schema": {
            "description": "Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteTenantUserRequestTenantId",
            "title": "Tenant Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
          "name": "user_id",
          "schema": {
            "description": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteTenantUserRequestUserId",
            "title": "User Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteTenantUserRequest",
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Deletes a user under a tenant.",
      "authed": true,
      "method": "DELETE",
      "path": "/v2/facts/{proj_id}/{env_id}/tenants/{tenant_id}/users/{user_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "tenant_id",
              "value": {
                "value": {
                  "value": "tenant_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "user_id",
              "value": {
                "value": {
                  "value": "user_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "List Role Assignments",
      "audiences": [],
      "operationId": "list_role_assignments",
      "tags": [
        "Role Assignments"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListRoleAssignmentsRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListRoleAssignmentsRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "optional user filter, will only return role assignments granted to this user.",
          "name": "user",
          "schema": {
            "generatedName": "ListRoleAssignmentsRequestUser",
            "nameOverride": "User",
            "title": "User",
            "description": "optional user filter, will only return role assignments granted to this user.",
            "value": {
              "description": "optional user filter, will only return role assignments granted to this user.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ListRoleAssignmentsRequestUser",
              "nameOverride": "User",
              "title": "User",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "optional role filter, will only return role assignments granting this role.",
          "name": "role",
          "schema": {
            "generatedName": "ListRoleAssignmentsRequestRole",
            "nameOverride": "Role",
            "title": "Role",
            "description": "optional role filter, will only return role assignments granting this role.",
            "value": {
              "description": "optional role filter, will only return role assignments granting this role.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ListRoleAssignmentsRequestRole",
              "nameOverride": "Role",
              "title": "Role",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "optional tenant filter, will only return role assignments granted in that tenant.",
          "name": "tenant",
          "schema": {
            "generatedName": "ListRoleAssignmentsRequestTenant",
            "nameOverride": "Tenant",
            "title": "Tenant",
            "description": "optional tenant filter, will only return role assignments granted in that tenant.",
            "value": {
              "description": "optional tenant filter, will only return role assignments granted in that tenant.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ListRoleAssignmentsRequestTenant",
              "nameOverride": "Tenant",
              "title": "Tenant",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Page number of the results to fetch, starting at 1.",
          "name": "page",
          "schema": {
            "generatedName": "ListRoleAssignmentsRequestPage",
            "nameOverride": "Page",
            "title": "Page",
            "description": "Page number of the results to fetch, starting at 1.",
            "value": {
              "description": "Page number of the results to fetch, starting at 1.",
              "schema": {
                "default": 1,
                "minimum": 1,
                "type": "int"
              },
              "generatedName": "ListRoleAssignmentsRequestPage",
              "nameOverride": "Page",
              "title": "Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The number of results per page (max 100).",
          "name": "per_page",
          "schema": {
            "generatedName": "ListRoleAssignmentsRequestPerPage",
            "title": "Per Page",
            "description": "The number of results per page (max 100).",
            "value": {
              "description": "The number of results per page (max 100).",
              "schema": {
                "default": 30,
                "minimum": 1,
                "maximum": 100,
                "type": "int"
              },
              "generatedName": "ListRoleAssignmentsRequestPerPage",
              "title": "Per Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListRoleAssignmentsRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "value": {
            "generatedName": "ListRoleAssignmentsResponseItem",
            "schema": "RoleAssignmentRead",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "ListRoleAssignmentsResponse",
          "title": "Response List Role Assignments V2 Facts  Proj Id   Env Id  Role Assignments Get",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Lists the role assignments defined within an environment.\n\n- If the `user` filter is present, will only return the role assignments of that user.\n- If the `tenant` filter is present, will only return the role assignments in that tenant.\n- If the `role` filter is present, will only return role assignments that are granting that role.",
      "authed": true,
      "method": "GET",
      "path": "/v2/facts/{proj_id}/{env_id}/role_assignments",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "user": {
                      "value": {
                        "value": "jane@coolcompany.com",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "role": {
                      "value": {
                        "value": "admin",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "tenant": {
                      "value": {
                        "value": "stripe-inc",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "user_id": {
                      "value": {
                        "value": "7c60d51f-b44e-4682-87d6-449835ea4d11",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "role_id": {
                      "value": {
                        "value": "405d8375-3514-403b-8c43-83ae74cfe022",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "tenant_id": {
                      "value": {
                        "value": "40ef0e48-a11f-4963-a229-e396c9f7e733",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "organization_id": {
                      "value": {
                        "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "project_id": {
                      "value": {
                        "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "environment_id": {
                      "value": {
                        "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "created_at": {
                      "value": {
                        "value": "2019-08-24T14:15:22Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Assign Role",
      "audiences": [],
      "operationId": "assign_role",
      "tags": [
        "Role Assignments"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "AssignRoleRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "AssignRoleRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AssignRoleRequest",
      "request": {
        "schema": {
          "generatedName": "AssignRoleRequest",
          "schema": "RoleAssignmentCreate",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "AssignRoleResponse",
          "schema": "RoleAssignmentRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Assigns a role to a user within a tenant.\n\nThe tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.",
      "authed": true,
      "method": "POST",
      "path": "/v2/facts/{proj_id}/{env_id}/role_assignments",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "role": {
                "value": {
                  "value": "admin",
                  "type": "string"
                },
                "type": "primitive"
              },
              "tenant": {
                "value": {
                  "value": "stripe-inc",
                  "type": "string"
                },
                "type": "primitive"
              },
              "user": {
                "value": {
                  "value": "jane@coolcompany.com",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "user": {
                  "value": {
                    "value": "jane@coolcompany.com",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": {
                    "value": "admin",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "tenant": {
                  "value": {
                    "value": "stripe-inc",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "user_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4d11",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe022",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "tenant_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e733",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Unassign Role",
      "audiences": [],
      "operationId": "unassign_role",
      "tags": [
        "Role Assignments"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UnassignRoleRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UnassignRoleRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UnassignRoleRequest",
      "request": {
        "schema": {
          "generatedName": "UnassignRoleRequest",
          "schema": "RoleAssignmentRemove",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Unassigns a user role within a tenant.\n\nThe tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.\n\nIf the role is not actually assigned, will return 404.",
      "authed": true,
      "method": "DELETE",
      "path": "/v2/facts/{proj_id}/{env_id}/role_assignments",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "role": {
                "value": {
                  "value": "editor",
                  "type": "string"
                },
                "type": "primitive"
              },
              "tenant": {
                "value": {
                  "value": "google-inc",
                  "type": "string"
                },
                "type": "primitive"
              },
              "user": {
                "value": {
                  "value": "jane@coolcompany.com",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Bulk Assign Role",
      "audiences": [],
      "operationId": "bulk_assign_role",
      "tags": [
        "Role Assignments"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "BulkAssignRoleRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "BulkAssignRoleRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "BulkAssignRoleRequest",
      "request": {
        "schema": {
          "value": {
            "generatedName": "BulkAssignRoleRequestItem",
            "schema": "RoleAssignmentCreate",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "BulkAssignRoleRequest",
          "title": "Role Assignments In",
          "groupName": [],
          "type": "array"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "BulkAssignRoleResponse",
          "schema": "BulkRoleAssignmentReport",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/v2/facts/{proj_id}/{env_id}/role_assignments/bulk",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "value": [
              {
                "properties": {
                  "role": {
                    "value": {
                      "value": "admin",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "tenant": {
                    "value": {
                      "value": "stripe-inc",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "user": {
                    "value": {
                      "value": "jane@coolcompany.com",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            ],
            "type": "array"
          },
          "response": {
            "value": {
              "properties": {
                "assignments_created": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Bulk Unassign Role",
      "audiences": [],
      "operationId": "bulk_unassign_role",
      "tags": [
        "Role Assignments"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "BulkUnassignRoleRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "BulkUnassignRoleRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "BulkUnassignRoleRequest",
      "request": {
        "schema": {
          "value": {
            "generatedName": "BulkUnassignRoleRequestItem",
            "schema": "RoleAssignmentRemove",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "BulkUnassignRoleRequest",
          "title": "Role Assignment In",
          "groupName": [],
          "type": "array"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "BulkUnassignRoleResponse",
          "schema": "BulkRoleUnAssignmentReport",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/v2/facts/{proj_id}/{env_id}/role_assignments/bulk",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "value": [
              {
                "properties": {
                  "role": {
                    "value": {
                      "value": "editor",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "tenant": {
                    "value": {
                      "value": "google-inc",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "user": {
                    "value": {
                      "value": "jane@coolcompany.com",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            ],
            "type": "array"
          },
          "response": {
            "value": {
              "properties": {
                "assignments_removed": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "List Set Permissions",
      "audiences": [],
      "operationId": "list_set_permissions",
      "tags": [
        "Condition Set Rules"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListSetPermissionsRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListSetPermissionsRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "optional user set filter, will only return rules where the permission is granted to this user set",
          "name": "user_set",
          "schema": {
            "generatedName": "ListSetPermissionsRequestUserSet",
            "title": "User Set",
            "description": "optional user set filter, will only return rules where the permission is granted to this user set",
            "value": {
              "description": "optional user set filter, will only return rules where the permission is granted to this user set",
              "schema": {
                "type": "string"
              },
              "generatedName": "ListSetPermissionsRequestUserSet",
              "title": "User Set",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "optional permission filter, will only return condition set rules granting this permission",
          "name": "permission",
          "schema": {
            "generatedName": "ListSetPermissionsRequestPermission",
            "nameOverride": "Permission",
            "title": "Permission",
            "description": "optional permission filter, will only return condition set rules granting this permission",
            "value": {
              "description": "optional permission filter, will only return condition set rules granting this permission",
              "schema": {
                "type": "string"
              },
              "generatedName": "ListSetPermissionsRequestPermission",
              "nameOverride": "Permission",
              "title": "Permission",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "optional resource set filter, will only return rules where the permission is granted on this resource set",
          "name": "resource_set",
          "schema": {
            "generatedName": "ListSetPermissionsRequestResourceSet",
            "title": "Resource Set",
            "description": "optional resource set filter, will only return rules where the permission is granted on this resource set",
            "value": {
              "description": "optional resource set filter, will only return rules where the permission is granted on this resource set",
              "schema": {
                "type": "string"
              },
              "generatedName": "ListSetPermissionsRequestResourceSet",
              "title": "Resource Set",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Page number of the results to fetch, starting at 1.",
          "name": "page",
          "schema": {
            "generatedName": "ListSetPermissionsRequestPage",
            "nameOverride": "Page",
            "title": "Page",
            "description": "Page number of the results to fetch, starting at 1.",
            "value": {
              "description": "Page number of the results to fetch, starting at 1.",
              "schema": {
                "default": 1,
                "minimum": 1,
                "type": "int"
              },
              "generatedName": "ListSetPermissionsRequestPage",
              "nameOverride": "Page",
              "title": "Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The number of results per page (max 100).",
          "name": "per_page",
          "schema": {
            "generatedName": "ListSetPermissionsRequestPerPage",
            "title": "Per Page",
            "description": "The number of results per page (max 100).",
            "value": {
              "description": "The number of results per page (max 100).",
              "schema": {
                "default": 30,
                "minimum": 1,
                "maximum": 100,
                "type": "int"
              },
              "generatedName": "ListSetPermissionsRequestPerPage",
              "title": "Per Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListSetPermissionsRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "value": {
            "generatedName": "ListSetPermissionsResponseItem",
            "schema": "ConditionSetRuleRead",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "ListSetPermissionsResponse",
          "title": "Response List Set Permissions V2 Facts  Proj Id   Env Id  Set Rules Get",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Lists the condition set rules matching the filter.\n- If the `user_set` filter is present, will only return the permissions set of that user set.\n- If the `permission` filter is present, will only return the permissions sets that equals to the queried permission.\n- If the `resource_set` filter is present, will only return the permissions set of that resource set.",
      "authed": true,
      "method": "GET",
      "path": "/v2/facts/{proj_id}/{env_id}/set_rules",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "key": {
                      "value": {
                        "value": "us_based_employees_can_repository_clone_private_repos",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "user_set": {
                      "value": {
                        "value": "us_based_employees",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "permission": {
                      "value": {
                        "value": "repository:clone",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "resource_set": {
                      "value": {
                        "value": "private_repos",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "organization_id": {
                      "value": {
                        "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "project_id": {
                      "value": {
                        "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "environment_id": {
                      "value": {
                        "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "created_at": {
                      "value": {
                        "value": "2019-08-24T14:15:22Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2019-08-24T14:16:22Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Assign Set Permissions",
      "audiences": [],
      "operationId": "assign_set_permissions",
      "tags": [
        "Condition Set Rules"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "AssignSetPermissionsRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "AssignSetPermissionsRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AssignSetPermissionsRequest",
      "request": {
        "schema": {
          "generatedName": "AssignSetPermissionsRequest",
          "schema": "ConditionSetRuleCreate",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "value": {
            "generatedName": "AssignSetPermissionsResponseItem",
            "schema": "ConditionSetRuleRead",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "AssignSetPermissionsResponse",
          "title": "Response Assign Set Permissions V2 Facts  Proj Id   Env Id  Set Rules Post",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Grant permissions to a user set *on* a resource set.\n\nIf the permission is already granted, it is skipped.",
      "authed": true,
      "method": "POST",
      "path": "/v2/facts/{proj_id}/{env_id}/set_rules",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "user_set": {
                "value": {
                  "value": "us_based_employees",
                  "type": "string"
                },
                "type": "primitive"
              },
              "permission": {
                "value": {
                  "value": "repository:clone",
                  "type": "string"
                },
                "type": "primitive"
              },
              "resource_set": {
                "value": {
                  "value": "private_repos",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "key": {
                      "value": {
                        "value": "us_based_employees_can_repository_clone_private_repos",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "user_set": {
                      "value": {
                        "value": "us_based_employees",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "permission": {
                      "value": {
                        "value": "repository:clone",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "resource_set": {
                      "value": {
                        "value": "private_repos",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "organization_id": {
                      "value": {
                        "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "project_id": {
                      "value": {
                        "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "environment_id": {
                      "value": {
                        "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "created_at": {
                      "value": {
                        "value": "2019-08-24T14:15:22Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2019-08-24T14:16:22Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Unassign Set Permissions",
      "audiences": [],
      "operationId": "unassign_set_permissions",
      "tags": [
        "Condition Set Rules"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UnassignSetPermissionsRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UnassignSetPermissionsRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UnassignSetPermissionsRequest",
      "request": {
        "schema": {
          "generatedName": "UnassignSetPermissionsRequest",
          "schema": "ConditionSetRuleRemove",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Revokes permissions to a user set *on* a resource set.\n\nIf the permission is not granted, it is skipped.",
      "authed": true,
      "method": "DELETE",
      "path": "/v2/facts/{proj_id}/{env_id}/set_rules",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "user_set": {
                "value": {
                  "value": "us_based_employees",
                  "type": "string"
                },
                "type": "primitive"
              },
              "permission": {
                "value": {
                  "value": "repository:clone",
                  "type": "string"
                },
                "type": "primitive"
              },
              "resource_set": {
                "value": {
                  "value": "private_repos",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "List Resource Instances",
      "audiences": [],
      "operationId": "list_resource_instances",
      "tags": [
        "Resource Instances"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListResourceInstancesRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListResourceInstancesRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Page number of the results to fetch, starting at 1.",
          "name": "page",
          "schema": {
            "generatedName": "ListResourceInstancesRequestPage",
            "nameOverride": "Page",
            "title": "Page",
            "description": "Page number of the results to fetch, starting at 1.",
            "value": {
              "description": "Page number of the results to fetch, starting at 1.",
              "schema": {
                "default": 1,
                "minimum": 1,
                "type": "int"
              },
              "generatedName": "ListResourceInstancesRequestPage",
              "nameOverride": "Page",
              "title": "Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The number of results per page (max 100).",
          "name": "per_page",
          "schema": {
            "generatedName": "ListResourceInstancesRequestPerPage",
            "title": "Per Page",
            "description": "The number of results per page (max 100).",
            "value": {
              "description": "The number of results per page (max 100).",
              "schema": {
                "default": 30,
                "minimum": 1,
                "maximum": 100,
                "type": "int"
              },
              "generatedName": "ListResourceInstancesRequestPerPage",
              "title": "Per Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListResourceInstancesRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "value": {
            "generatedName": "ListResourceInstancesResponseItem",
            "schema": "ResourceInstanceRead",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "ListResourceInstancesResponse",
          "title": "Response List Resource Instances V2 Facts  Proj Id   Env Id  Resource Instances Get",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Lists all the resource instances defined within an environment.",
      "authed": true,
      "method": "GET",
      "path": "/v2/facts/{proj_id}/{env_id}/resource_instances",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "key": {
                      "value": {
                        "value": "react",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "tenant": {
                      "value": {
                        "value": "default",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "resource": {
                      "value": {
                        "value": "repository",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "organization_id": {
                      "value": {
                        "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "project_id": {
                      "value": {
                        "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "environment_id": {
                      "value": {
                        "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "created_at": {
                      "value": {
                        "value": "2019-08-24T14:15:22Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2019-08-24T14:15:22Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "resource_id": {
                      "value": {
                        "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c5",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "tenant_id": {
                      "value": {
                        "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c3",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "attributes": {
                      "value": [
                        {
                          "key": {
                            "value": "private",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": {
                                "value": "false",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "type": "unknown"
                          }
                        },
                        {
                          "key": {
                            "value": "owner",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": {
                                "value": "facebook",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "type": "unknown"
                          }
                        }
                      ],
                      "type": "map"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Create Resource Instance",
      "audiences": [],
      "operationId": "create_resource_instance",
      "tags": [
        "Resource Instances"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "CreateResourceInstanceRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "CreateResourceInstanceRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CreateResourceInstanceRequest",
      "request": {
        "schema": {
          "generatedName": "CreateResourceInstanceRequest",
          "schema": "ResourceInstanceCreate",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "CreateResourceInstanceResponse",
          "schema": "ResourceInstanceRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Creates a new instance inside the Permit.io system.\n\nIf the instance is already created: will return 200 instead of 201,\nand will return the existing instance object in the response body.",
      "authed": true,
      "method": "POST",
      "path": "/v2/facts/{proj_id}/{env_id}/resource_instances",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "key": {
                "value": {
                  "value": "react",
                  "type": "string"
                },
                "type": "primitive"
              },
              "tenant": {
                "value": {
                  "value": "default",
                  "type": "string"
                },
                "type": "primitive"
              },
              "resource": {
                "value": {
                  "value": "repository",
                  "type": "string"
                },
                "type": "primitive"
              },
              "attributes": {
                "value": [
                  {
                    "key": {
                      "value": "private",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": {
                          "value": "false",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "unknown"
                    }
                  },
                  {
                    "key": {
                      "value": "owner",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": {
                          "value": "facebook",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "unknown"
                    }
                  }
                ],
                "type": "map"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "key": {
                  "value": {
                    "value": "react",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "tenant": {
                  "value": {
                    "value": "default",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "resource": {
                  "value": {
                    "value": "repository",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "resource_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c5",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "tenant_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c3",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "attributes": {
                  "value": [
                    {
                      "key": {
                        "value": "private",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "false",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    },
                    {
                      "key": {
                        "value": "owner",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "facebook",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get Resource Instance",
      "audiences": [],
      "operationId": "get_resource_instance",
      "tags": [
        "Resource Instances"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetResourceInstanceRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetResourceInstanceRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the resource instance, or the URL-friendly key of the resource instance (i.e: the \"slug\").",
          "name": "instance_id",
          "schema": {
            "description": "Either the unique id of the resource instance, or the URL-friendly key of the resource instance (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetResourceInstanceRequestInstanceId",
            "title": "Instance Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetResourceInstanceRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "GetResourceInstanceResponse",
          "schema": "ResourceInstanceRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Gets a instance, if such instance exists. Otherwise returns 404.",
      "authed": true,
      "method": "GET",
      "path": "/v2/facts/{proj_id}/{env_id}/resource_instances/{instance_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "instance_id",
              "value": {
                "value": {
                  "value": "instance_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "key": {
                  "value": {
                    "value": "react",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "tenant": {
                  "value": {
                    "value": "default",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "resource": {
                  "value": {
                    "value": "repository",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "resource_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c5",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "tenant_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c3",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "attributes": {
                  "value": [
                    {
                      "key": {
                        "value": "private",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "false",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    },
                    {
                      "key": {
                        "value": "owner",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "facebook",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete Resource Instance",
      "audiences": [],
      "operationId": "delete_resource_instance",
      "tags": [
        "Resource Instances"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteResourceInstanceRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteResourceInstanceRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the resource instance, or the URL-friendly key of the resource instance (i.e: the \"slug\").",
          "name": "instance_id",
          "schema": {
            "description": "Either the unique id of the resource instance, or the URL-friendly key of the resource instance (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteResourceInstanceRequestInstanceId",
            "title": "Instance Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteResourceInstanceRequest",
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Deletes the instance and all its related data.",
      "authed": true,
      "method": "DELETE",
      "path": "/v2/facts/{proj_id}/{env_id}/resource_instances/{instance_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "instance_id",
              "value": {
                "value": {
                  "value": "instance_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Update Resource Instance",
      "audiences": [],
      "operationId": "update_resource_instance",
      "tags": [
        "Resource Instances"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateResourceInstanceRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateResourceInstanceRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the resource instance, or the URL-friendly key of the resource instance (i.e: the \"slug\").",
          "name": "instance_id",
          "schema": {
            "description": "Either the unique id of the resource instance, or the URL-friendly key of the resource instance (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateResourceInstanceRequestInstanceId",
            "title": "Instance Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UpdateResourceInstanceRequest",
      "request": {
        "schema": {
          "generatedName": "UpdateResourceInstanceRequest",
          "schema": "ResourceInstanceUpdate",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "UpdateResourceInstanceResponse",
          "schema": "ResourceInstanceRead",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Partially updates the instance definition.\nFields that will be provided will be completely overwritten.",
      "authed": true,
      "method": "PATCH",
      "path": "/v2/facts/{proj_id}/{env_id}/resource_instances/{instance_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "instance_id",
              "value": {
                "value": {
                  "value": "instance_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "attributes": {
                "value": [
                  {
                    "key": {
                      "value": "private",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": {
                          "value": "false",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "unknown"
                    }
                  },
                  {
                    "key": {
                      "value": "owner",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": {
                          "value": "facebook",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "unknown"
                    }
                  }
                ],
                "type": "map"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "key": {
                  "value": {
                    "value": "react",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "tenant": {
                  "value": {
                    "value": "default",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "resource": {
                  "value": {
                    "value": "repository",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organization_id": {
                  "value": {
                    "value": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "project_id": {
                  "value": {
                    "value": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2019-08-24T14:15:22Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "resource_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c5",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "tenant_id": {
                  "value": {
                    "value": "40ef0e48-a11f-4963-a229-e396c9f7e7c3",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "attributes": {
                  "value": [
                    {
                      "key": {
                        "value": "private",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "false",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    },
                    {
                      "key": {
                        "value": "owner",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "facebook",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Bulk Create Users",
      "audiences": [],
      "operationId": "bulk_create_users",
      "tags": [
        "Bulk Operations"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "BulkCreateUsersRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "BulkCreateUsersRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "BulkCreateUsersRequest",
      "request": {
        "schema": {
          "generatedName": "BulkCreateUsersRequest",
          "schema": "UserCreateBulkOperation",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "BulkCreateUsersResponse",
          "schema": "UserCreateBulkOperationResult",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/v2/facts/{proj_id}/{env_id}/bulk/users",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "operations": {
                "value": [
                  {
                    "properties": {
                      "key": {
                        "value": {
                          "value": "user|892179821739812389327",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "email": {
                        "value": {
                          "value": "jane@coolcompany.com",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "first_name": {
                        "value": {
                          "value": "Jane",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "last_name": {
                        "value": {
                          "value": "Doe",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "attributes": {
                        "value": [
                          {
                            "key": {
                              "value": "department",
                              "type": "string"
                            },
                            "value": {
                              "value": {
                                "value": {
                                  "value": "marketing",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "type": "unknown"
                            }
                          },
                          {
                            "key": {
                              "value": "age",
                              "type": "string"
                            },
                            "value": {
                              "value": {
                                "value": {
                                  "value": 30,
                                  "type": "int"
                                },
                                "type": "primitive"
                              },
                              "type": "unknown"
                            }
                          },
                          {
                            "key": {
                              "value": "subscription",
                              "type": "string"
                            },
                            "value": {
                              "value": {
                                "value": [
                                  {
                                    "key": {
                                      "value": "tier",
                                      "type": "string"
                                    },
                                    "value": {
                                      "value": {
                                        "value": "pro",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  },
                                  {
                                    "key": {
                                      "value": "expired",
                                      "type": "string"
                                    },
                                    "value": {
                                      "value": {
                                        "value": false,
                                        "type": "boolean"
                                      },
                                      "type": "primitive"
                                    }
                                  }
                                ],
                                "type": "map"
                              },
                              "type": "unknown"
                            }
                          }
                        ],
                        "type": "map"
                      }
                    },
                    "type": "object"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {},
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Bulk Replace Users",
      "audiences": [],
      "operationId": "bulk_replace_users",
      "tags": [
        "Bulk Operations"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "BulkReplaceUsersRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "BulkReplaceUsersRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "BulkReplaceUsersRequest",
      "request": {
        "schema": {
          "generatedName": "BulkReplaceUsersRequest",
          "schema": "UserReplaceBulkOperation",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "BulkReplaceUsersResponse",
          "schema": "UserReplaceBulkOperationResult",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/v2/facts/{proj_id}/{env_id}/bulk/users",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "operations": {
                "value": [
                  {
                    "properties": {
                      "key": {
                        "value": {
                          "value": "user|892179821739812389327",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "email": {
                        "value": {
                          "value": "jane@coolcompany.com",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "first_name": {
                        "value": {
                          "value": "Jane",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "last_name": {
                        "value": {
                          "value": "Doe",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "attributes": {
                        "value": [
                          {
                            "key": {
                              "value": "department",
                              "type": "string"
                            },
                            "value": {
                              "value": {
                                "value": {
                                  "value": "marketing",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "type": "unknown"
                            }
                          },
                          {
                            "key": {
                              "value": "age",
                              "type": "string"
                            },
                            "value": {
                              "value": {
                                "value": {
                                  "value": 30,
                                  "type": "int"
                                },
                                "type": "primitive"
                              },
                              "type": "unknown"
                            }
                          },
                          {
                            "key": {
                              "value": "subscription",
                              "type": "string"
                            },
                            "value": {
                              "value": {
                                "value": [
                                  {
                                    "key": {
                                      "value": "tier",
                                      "type": "string"
                                    },
                                    "value": {
                                      "value": {
                                        "value": "pro",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  },
                                  {
                                    "key": {
                                      "value": "expired",
                                      "type": "string"
                                    },
                                    "value": {
                                      "value": {
                                        "value": false,
                                        "type": "boolean"
                                      },
                                      "type": "primitive"
                                    }
                                  }
                                ],
                                "type": "map"
                              },
                              "type": "unknown"
                            }
                          }
                        ],
                        "type": "map"
                      }
                    },
                    "type": "object"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {},
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Bulk Delete Users",
      "audiences": [],
      "operationId": "bulk_delete_users",
      "tags": [
        "Bulk Operations"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "BulkDeleteUsersRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "BulkDeleteUsersRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "BulkDeleteUsersRequest",
      "request": {
        "schema": {
          "generatedName": "BulkDeleteUsersRequest",
          "schema": "UserDeleteBulkOperation",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "BulkDeleteUsersResponse",
          "schema": "UserDeleteBulkOperationResult",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/v2/facts/{proj_id}/{env_id}/bulk/users",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "idents": {
                "value": [
                  {
                    "value": {
                      "value": "idents",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {},
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Bulk Create Tenants",
      "audiences": [],
      "operationId": "bulk_create_tenants",
      "tags": [
        "Bulk Operations"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "BulkCreateTenantsRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "BulkCreateTenantsRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "BulkCreateTenantsRequest",
      "request": {
        "schema": {
          "generatedName": "BulkCreateTenantsRequest",
          "schema": "TenantCreateBulkOperation",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "BulkCreateTenantsResponse",
          "schema": "TenantCreateBulkOperationResult",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/v2/facts/{proj_id}/{env_id}/bulk/tenants",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "operations": {
                "value": [
                  {
                    "properties": {
                      "key": {
                        "value": {
                          "value": "stripeinc",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "name": {
                        "value": {
                          "value": "Stripe Inc",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "attributes": {
                        "value": [
                          {
                            "key": {
                              "value": "allowed_locations",
                              "type": "string"
                            },
                            "value": {
                              "value": {
                                "value": [
                                  {
                                    "value": {
                                      "value": "US",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  {
                                    "value": {
                                      "value": "CA",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                ],
                                "type": "array"
                              },
                              "type": "unknown"
                            }
                          }
                        ],
                        "type": "map"
                      }
                    },
                    "type": "object"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {},
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Bulk Delete Tenants",
      "audiences": [],
      "operationId": "bulk_delete_tenants",
      "tags": [
        "Bulk Operations"
      ],
      "pathParameters": [
        {
          "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
          "name": "proj_id",
          "schema": {
            "description": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "BulkDeleteTenantsRequestProjId",
            "title": "Proj Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
          "name": "env_id",
          "schema": {
            "description": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
            "schema": {
              "type": "string"
            },
            "generatedName": "BulkDeleteTenantsRequestEnvId",
            "title": "Env Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "BulkDeleteTenantsRequest",
      "request": {
        "schema": {
          "generatedName": "BulkDeleteTenantsRequest",
          "schema": "TenantDeleteBulkOperation",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "BulkDeleteTenantsResponse",
          "schema": "TenantDeleteBulkOperationResult",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/v2/facts/{proj_id}/{env_id}/bulk/tenants",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "proj_id",
              "value": {
                "value": {
                  "value": "proj_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "env_id",
              "value": {
                "value": {
                  "value": "env_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "idents": {
                "value": [
                  {
                    "value": {
                      "value": "idents",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {},
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    }
  ],
  "webhooks": [],
  "channel": [],
  "groupedSchemas": {
    "rootSchemas": {
      "ActionBlockEditable": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "actionBlockEditableName",
            "key": "name",
            "schema": {
              "generatedName": "actionBlockEditableName",
              "nameOverride": "ActionBlockEditable",
              "title": "ActionBlockEditable",
              "value": {
                "description": "a more descriptive name for the action",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ActionBlockEditableName",
                "nameOverride": "Name",
                "title": "Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "actionBlockEditableDescription",
            "key": "description",
            "schema": {
              "generatedName": "actionBlockEditableDescription",
              "nameOverride": "ActionBlockEditable",
              "title": "ActionBlockEditable",
              "value": {
                "description": "optional description string explaining what this action represents in your system",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ActionBlockEditableDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "actionBlockEditableAttributes",
            "key": "attributes",
            "schema": {
              "generatedName": "actionBlockEditableAttributes",
              "nameOverride": "ActionBlockEditable",
              "title": "ActionBlockEditable",
              "value": {
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ActionBlockEditableAttributesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ActionBlockEditableAttributesValue",
                  "type": "unknown"
                },
                "generatedName": "ActionBlockEditableAttributes",
                "title": "Attributes",
                "nameOverride": "Attributes",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ActionBlockEditable",
        "nameOverride": "ActionBlockEditable",
        "title": "ActionBlockEditable",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ActionBlockRead": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "actionBlockReadName",
            "key": "name",
            "schema": {
              "generatedName": "actionBlockReadName",
              "nameOverride": "ActionBlockRead",
              "title": "ActionBlockRead",
              "value": {
                "description": "a more descriptive name for the action",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ActionBlockReadName",
                "nameOverride": "Name",
                "title": "Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "actionBlockReadDescription",
            "key": "description",
            "schema": {
              "generatedName": "actionBlockReadDescription",
              "nameOverride": "ActionBlockRead",
              "title": "ActionBlockRead",
              "value": {
                "description": "optional description string explaining what this action represents in your system",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ActionBlockReadDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "actionBlockReadAttributes",
            "key": "attributes",
            "schema": {
              "generatedName": "actionBlockReadAttributes",
              "nameOverride": "ActionBlockRead",
              "title": "ActionBlockRead",
              "value": {
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ActionBlockReadAttributesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ActionBlockReadAttributesValue",
                  "type": "unknown"
                },
                "generatedName": "ActionBlockReadAttributes",
                "title": "Attributes",
                "nameOverride": "Attributes",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "actionBlockReadId",
            "key": "id",
            "schema": {
              "description": "Unique id of the action",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ActionBlockReadId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "actionBlockReadKey",
            "key": "key",
            "schema": {
              "generatedName": "actionBlockReadKey",
              "nameOverride": "ActionBlockRead",
              "title": "ActionBlockRead",
              "value": {
                "description": "action key",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ActionBlockReadKey",
                "nameOverride": "Key",
                "title": "Key",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ActionBlockRead",
        "nameOverride": "ActionBlockRead",
        "title": "ActionBlockRead",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AddRolePermissions": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "addRolePermissionsPermissions",
            "key": "permissions",
            "schema": {
              "description": "List of permissions to assign to the role. If a permission is already granted to the role it is skipped. Each permission can be either a resource action id, or `{resource_key}:{action_key}`, i.e: the \"permission name\".",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AddRolePermissionsPermissionsItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "AddRolePermissionsPermissions",
              "nameOverride": "Permissions",
              "title": "Permissions",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AddRolePermissions",
        "nameOverride": "AddRolePermissions",
        "title": "AddRolePermissions",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AttributeBlockEditable": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "attributeBlockEditableType",
            "key": "type",
            "schema": {
              "description": "The type of the attribute, we currently support: `bool`, `number` (ints, floats), `time` (a timestamp), `string`, and `json`.",
              "generatedName": "AttributeBlockEditableType",
              "schema": "AttributeType",
              "groupName": [],
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "attributeBlockEditableDescription",
            "key": "description",
            "schema": {
              "generatedName": "attributeBlockEditableDescription",
              "nameOverride": "AttributeBlockEditable",
              "title": "AttributeBlockEditable",
              "value": {
                "description": "optional description string explaining what data this attribute will store",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AttributeBlockEditableDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AttributeBlockEditable",
        "nameOverride": "AttributeBlockEditable",
        "title": "AttributeBlockEditable",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AttributeBlockRead": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "attributeBlockReadType",
            "key": "type",
            "schema": {
              "description": "The type of the attribute, we currently support: `bool`, `number` (ints, floats), `time` (a timestamp), `string`, and `json`.",
              "generatedName": "AttributeBlockReadType",
              "schema": "AttributeType",
              "groupName": [],
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "attributeBlockReadDescription",
            "key": "description",
            "schema": {
              "generatedName": "attributeBlockReadDescription",
              "nameOverride": "AttributeBlockRead",
              "title": "AttributeBlockRead",
              "value": {
                "description": "optional description string explaining what data this attribute will store",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AttributeBlockReadDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "attributeBlockReadId",
            "key": "id",
            "schema": {
              "description": "Unique id of the attribute",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "AttributeBlockReadId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "attributeBlockReadKey",
            "key": "key",
            "schema": {
              "generatedName": "attributeBlockReadKey",
              "nameOverride": "AttributeBlockRead",
              "title": "AttributeBlockRead",
              "value": {
                "description": "action key",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AttributeBlockReadKey",
                "nameOverride": "Key",
                "title": "Key",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AttributeBlockRead",
        "nameOverride": "AttributeBlockRead",
        "title": "AttributeBlockRead",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AttributeType": {
        "description": "supported attribute primitives",
        "generatedName": "AttributeType",
        "nameOverride": "AttributeType",
        "title": "AttributeType",
        "values": [
          {
            "generatedName": "bool",
            "value": "bool",
            "casing": {}
          },
          {
            "generatedName": "number",
            "value": "number",
            "casing": {}
          },
          {
            "generatedName": "string",
            "value": "string",
            "casing": {}
          },
          {
            "generatedName": "time",
            "value": "time",
            "casing": {}
          },
          {
            "generatedName": "array",
            "value": "array",
            "casing": {}
          },
          {
            "generatedName": "json",
            "value": "json",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "BulkRoleAssignmentReport": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "bulkRoleAssignmentReportAssignmentsCreated",
            "key": "assignments_created",
            "schema": {
              "generatedName": "bulkRoleAssignmentReportAssignmentsCreated",
              "nameOverride": "BulkRoleAssignmentReport",
              "title": "BulkRoleAssignmentReport",
              "value": {
                "schema": {
                  "default": 0,
                  "type": "int"
                },
                "generatedName": "BulkRoleAssignmentReportAssignmentsCreated",
                "title": "Assignments Created",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "BulkRoleAssignmentReport",
        "nameOverride": "BulkRoleAssignmentReport",
        "title": "BulkRoleAssignmentReport",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "BulkRoleUnAssignmentReport": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "bulkRoleUnAssignmentReportAssignmentsRemoved",
            "key": "assignments_removed",
            "schema": {
              "generatedName": "bulkRoleUnAssignmentReportAssignmentsRemoved",
              "nameOverride": "BulkRoleUnAssignmentReport",
              "title": "BulkRoleUnAssignmentReport",
              "value": {
                "schema": {
                  "default": 0,
                  "type": "int"
                },
                "generatedName": "BulkRoleUnAssignmentReportAssignmentsRemoved",
                "title": "Assignments Removed",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "BulkRoleUnAssignmentReport",
        "nameOverride": "BulkRoleUnAssignmentReport",
        "title": "BulkRoleUnAssignmentReport",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ConditionSetCreate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "conditionSetCreateKey",
            "key": "key",
            "schema": {
              "description": "A unique id by which Permit will identify the condition set. The key will be used as the generated rego rule name.",
              "schema": {
                "pattern": "^[A-Za-z0-9\\-_]+$",
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "ConditionSetCreateKey",
              "nameOverride": "Key",
              "title": "Key",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetCreateType",
            "key": "type",
            "schema": {
              "generatedName": "conditionSetCreateType",
              "nameOverride": "ConditionSetCreate",
              "title": "ConditionSetCreate",
              "value": {
                "description": "the type of the set: UserSet or ResourceSet",
                "generatedName": "ConditionSetCreateType",
                "schema": "ConditionSetType",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetCreateAutogenerated",
            "key": "autogenerated",
            "schema": {
              "generatedName": "conditionSetCreateAutogenerated",
              "nameOverride": "ConditionSetCreate",
              "title": "ConditionSetCreate",
              "value": {
                "description": "whether the set was autogenerated by the system.",
                "schema": {
                  "default": false,
                  "type": "boolean"
                },
                "generatedName": "ConditionSetCreateAutogenerated",
                "nameOverride": "Autogenerated",
                "title": "Autogenerated",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetCreateResourceId",
            "key": "resource_id",
            "schema": {
              "generatedName": "conditionSetCreateResourceId",
              "nameOverride": "ConditionSetCreate",
              "title": "ConditionSetCreate",
              "value": {
                "schema": {
                  "format": "uuid",
                  "type": "string"
                },
                "generatedName": "ConditionSetCreateResourceId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetCreateName",
            "key": "name",
            "schema": {
              "description": "A descriptive name for the set, i.e: 'US based employees' or 'Users behind VPN'",
              "schema": {
                "type": "string"
              },
              "generatedName": "ConditionSetCreateName",
              "nameOverride": "Name",
              "title": "Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetCreateDescription",
            "key": "description",
            "schema": {
              "generatedName": "conditionSetCreateDescription",
              "nameOverride": "ConditionSetCreate",
              "title": "ConditionSetCreate",
              "value": {
                "description": "an optional longer description of the set",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ConditionSetCreateDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetCreateConditions",
            "key": "conditions",
            "schema": {
              "generatedName": "conditionSetCreateConditions",
              "nameOverride": "ConditionSetCreate",
              "title": "ConditionSetCreate",
              "value": {
                "description": "a boolean expression that consists of multiple conditions, with and/or logic.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ConditionSetCreateConditionsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ConditionSetCreateConditionsValue",
                  "type": "unknown"
                },
                "generatedName": "ConditionSetCreateConditions",
                "title": "Conditions",
                "nameOverride": "Conditions",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetCreateParentId",
            "key": "parent_id",
            "schema": {
              "generatedName": "conditionSetCreateParentId",
              "nameOverride": "ConditionSetCreate",
              "title": "ConditionSetCreate",
              "value": {
                "schema": {
                  "format": "uuid",
                  "type": "string"
                },
                "generatedName": "ConditionSetCreateParentId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ConditionSetCreate",
        "nameOverride": "ConditionSetCreate",
        "title": "ConditionSetCreate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ConditionSetRead": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "conditionSetReadKey",
            "key": "key",
            "schema": {
              "description": "A unique id by which Permit will identify the condition set. The key will be used as the generated rego rule name.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ConditionSetReadKey",
              "nameOverride": "Key",
              "title": "Key",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetReadType",
            "key": "type",
            "schema": {
              "generatedName": "conditionSetReadType",
              "nameOverride": "ConditionSetRead",
              "title": "ConditionSetRead",
              "value": {
                "description": "the type of the set: UserSet or ResourceSet",
                "generatedName": "ConditionSetReadType",
                "schema": "ConditionSetType",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetReadAutogenerated",
            "key": "autogenerated",
            "schema": {
              "generatedName": "conditionSetReadAutogenerated",
              "nameOverride": "ConditionSetRead",
              "title": "ConditionSetRead",
              "value": {
                "description": "whether the set was autogenerated by the system.",
                "schema": {
                  "default": false,
                  "type": "boolean"
                },
                "generatedName": "ConditionSetReadAutogenerated",
                "nameOverride": "Autogenerated",
                "title": "Autogenerated",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetReadResourceId",
            "key": "resource_id",
            "schema": {
              "generatedName": "conditionSetReadResourceId",
              "nameOverride": "ConditionSetRead",
              "title": "ConditionSetRead",
              "value": {
                "schema": {
                  "format": "uuid",
                  "type": "string"
                },
                "generatedName": "ConditionSetReadResourceId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetReadId",
            "key": "id",
            "schema": {
              "description": "Unique id of the condition set",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ConditionSetReadId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetReadOrganizationId",
            "key": "organization_id",
            "schema": {
              "description": "Unique id of the organization that the condition set belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ConditionSetReadOrganizationId",
              "title": "Organization Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetReadProjectId",
            "key": "project_id",
            "schema": {
              "description": "Unique id of the project that the condition set belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ConditionSetReadProjectId",
              "title": "Project Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetReadEnvironmentId",
            "key": "environment_id",
            "schema": {
              "description": "Unique id of the environment that the condition set belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ConditionSetReadEnvironmentId",
              "title": "Environment Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetReadCreatedAt",
            "key": "created_at",
            "schema": {
              "description": "Date and time when the condition set was created (ISO_8601 format).",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "ConditionSetReadCreatedAt",
              "title": "Created At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetReadUpdatedAt",
            "key": "updated_at",
            "schema": {
              "description": "Date and time when the condition set was last updated/modified (ISO_8601 format).",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "ConditionSetReadUpdatedAt",
              "title": "Updated At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetReadResource",
            "key": "resource",
            "schema": {
              "generatedName": "conditionSetReadResource",
              "nameOverride": "ConditionSetRead",
              "title": "ConditionSetRead",
              "value": {
                "generatedName": "ConditionSetReadResource",
                "schema": "ResourceRead",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "conditionSetReadName",
            "key": "name",
            "schema": {
              "description": "A descriptive name for the set, i.e: 'US based employees' or 'Users behind VPN'",
              "schema": {
                "type": "string"
              },
              "generatedName": "ConditionSetReadName",
              "nameOverride": "Name",
              "title": "Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetReadDescription",
            "key": "description",
            "schema": {
              "generatedName": "conditionSetReadDescription",
              "nameOverride": "ConditionSetRead",
              "title": "ConditionSetRead",
              "value": {
                "description": "an optional longer description of the set",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ConditionSetReadDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetReadConditions",
            "key": "conditions",
            "schema": {
              "generatedName": "conditionSetReadConditions",
              "nameOverride": "ConditionSetRead",
              "title": "ConditionSetRead",
              "value": {
                "description": "a boolean expression that consists of multiple conditions, with and/or logic.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ConditionSetReadConditionsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ConditionSetReadConditionsValue",
                  "type": "unknown"
                },
                "generatedName": "ConditionSetReadConditions",
                "title": "Conditions",
                "nameOverride": "Conditions",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetReadParentId",
            "key": "parent_id",
            "schema": {
              "generatedName": "conditionSetReadParentId",
              "nameOverride": "ConditionSetRead",
              "title": "ConditionSetRead",
              "value": {
                "schema": {
                  "format": "uuid",
                  "type": "string"
                },
                "generatedName": "ConditionSetReadParentId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ConditionSetRead",
        "nameOverride": "ConditionSetRead",
        "title": "ConditionSetRead",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ConditionSetRuleCreate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "conditionSetRuleCreateUserSet",
            "key": "user_set",
            "schema": {
              "description": "The userset that will be given permission, i.e: all the users matching this rule will be given the specified permission",
              "schema": {
                "type": "string"
              },
              "generatedName": "ConditionSetRuleCreateUserSet",
              "title": "User Set",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetRuleCreatePermission",
            "key": "permission",
            "schema": {
              "description": "The permission that will be granted to the userset *on* the resourceset. The permission can be either a resource action id, or `{resource_key}:{action_key}`, i.e: the \"permission name\".",
              "schema": {
                "type": "string"
              },
              "generatedName": "ConditionSetRuleCreatePermission",
              "nameOverride": "Permission",
              "title": "Permission",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetRuleCreateResourceSet",
            "key": "resource_set",
            "schema": {
              "description": "The resourceset that represents the resources that are granted for access, i.e: all the resources matching this rule can be accessed by the userset to perform the granted *permission*",
              "schema": {
                "type": "string"
              },
              "generatedName": "ConditionSetRuleCreateResourceSet",
              "title": "Resource Set",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetRuleCreateIsRole",
            "key": "is_role",
            "schema": {
              "generatedName": "conditionSetRuleCreateIsRole",
              "nameOverride": "ConditionSetRuleCreate",
              "title": "ConditionSetRuleCreate",
              "value": {
                "description": "if True, will set the condition set rule to the role's autogen user-set.",
                "schema": {
                  "default": false,
                  "type": "boolean"
                },
                "generatedName": "ConditionSetRuleCreateIsRole",
                "title": "Is Role",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetRuleCreateIsResource",
            "key": "is_resource",
            "schema": {
              "generatedName": "conditionSetRuleCreateIsResource",
              "nameOverride": "ConditionSetRuleCreate",
              "title": "ConditionSetRuleCreate",
              "value": {
                "description": "if True, will set the condition set rule to the resource's autogen resource-set.",
                "schema": {
                  "default": false,
                  "type": "boolean"
                },
                "generatedName": "ConditionSetRuleCreateIsResource",
                "title": "Is Resource",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ConditionSetRuleCreate",
        "nameOverride": "ConditionSetRuleCreate",
        "title": "ConditionSetRuleCreate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ConditionSetRuleRead": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "conditionSetRuleReadId",
            "key": "id",
            "schema": {
              "description": "Unique id of the condition set rule",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ConditionSetRuleReadId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetRuleReadKey",
            "key": "key",
            "schema": {
              "description": "A unique id by which Permit will identify this condition set rule.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ConditionSetRuleReadKey",
              "nameOverride": "Key",
              "title": "Key",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetRuleReadUserSet",
            "key": "user_set",
            "schema": {
              "description": "the userset that is currently granted permissions, i.e: all the users matching this rule are granted the permission on the resourceset",
              "schema": {
                "type": "string"
              },
              "generatedName": "ConditionSetRuleReadUserSet",
              "title": "User Set",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetRuleReadPermission",
            "key": "permission",
            "schema": {
              "description": "a permission that is currently granted to the userset *on* the resourceset.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ConditionSetRuleReadPermission",
              "nameOverride": "Permission",
              "title": "Permission",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetRuleReadResourceSet",
            "key": "resource_set",
            "schema": {
              "description": "the resourceset that represents the resources that are currently granted for access, i.e: all the resources matching this rule can be accessed by the userset to perform the granted *permission*",
              "schema": {
                "type": "string"
              },
              "generatedName": "ConditionSetRuleReadResourceSet",
              "title": "Resource Set",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetRuleReadOrganizationId",
            "key": "organization_id",
            "schema": {
              "description": "Unique id of the organization that the condition set rule belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ConditionSetRuleReadOrganizationId",
              "title": "Organization Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetRuleReadProjectId",
            "key": "project_id",
            "schema": {
              "description": "Unique id of the project that the condition set rule belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ConditionSetRuleReadProjectId",
              "title": "Project Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetRuleReadEnvironmentId",
            "key": "environment_id",
            "schema": {
              "description": "Unique id of the environment that the condition set rule belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ConditionSetRuleReadEnvironmentId",
              "title": "Environment Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetRuleReadCreatedAt",
            "key": "created_at",
            "schema": {
              "description": "Date and time when the condition set rule was created (ISO_8601 format).",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "ConditionSetRuleReadCreatedAt",
              "title": "Created At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetRuleReadUpdatedAt",
            "key": "updated_at",
            "schema": {
              "description": "Date and time when the condition set rule was last updated/modified (ISO_8601 format).",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "ConditionSetRuleReadUpdatedAt",
              "title": "Updated At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ConditionSetRuleRead",
        "nameOverride": "ConditionSetRuleRead",
        "title": "ConditionSetRuleRead",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ConditionSetRuleRemove": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "conditionSetRuleRemoveUserSet",
            "key": "user_set",
            "schema": {
              "description": "The userset that will be unassigned these permission, i.e: all the users matching this rule will lose the specified permission",
              "schema": {
                "type": "string"
              },
              "generatedName": "ConditionSetRuleRemoveUserSet",
              "title": "User Set",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetRuleRemovePermission",
            "key": "permission",
            "schema": {
              "description": "The permission that will be removed from the userset *on* the resourceset. The permission can be either a resource action id, or `{resource_key}:{action_key}`, i.e: the \"permission name\".",
              "schema": {
                "type": "string"
              },
              "generatedName": "ConditionSetRuleRemovePermission",
              "nameOverride": "Permission",
              "title": "Permission",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetRuleRemoveResourceSet",
            "key": "resource_set",
            "schema": {
              "description": "The resourceset that represents the resources that are no longer granted for access, i.e: all the resources matching this rule can no longer be accessed by the userset, and will be revoked the specified *permission*",
              "schema": {
                "type": "string"
              },
              "generatedName": "ConditionSetRuleRemoveResourceSet",
              "title": "Resource Set",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetRuleRemoveIsRole",
            "key": "is_role",
            "schema": {
              "generatedName": "conditionSetRuleRemoveIsRole",
              "nameOverride": "ConditionSetRuleRemove",
              "title": "ConditionSetRuleRemove",
              "value": {
                "description": "if True, will set the condition set rule to the role's autogen user-set.",
                "schema": {
                  "default": false,
                  "type": "boolean"
                },
                "generatedName": "ConditionSetRuleRemoveIsRole",
                "title": "Is Role",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetRuleRemoveIsResource",
            "key": "is_resource",
            "schema": {
              "generatedName": "conditionSetRuleRemoveIsResource",
              "nameOverride": "ConditionSetRuleRemove",
              "title": "ConditionSetRuleRemove",
              "value": {
                "description": "if True, will set the condition set rule to the resource's autogen resource-set.",
                "schema": {
                  "default": false,
                  "type": "boolean"
                },
                "generatedName": "ConditionSetRuleRemoveIsResource",
                "title": "Is Resource",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ConditionSetRuleRemove",
        "nameOverride": "ConditionSetRuleRemove",
        "title": "ConditionSetRuleRemove",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ConditionSetType": {
        "description": "An enumeration.",
        "generatedName": "ConditionSetType",
        "nameOverride": "ConditionSetType",
        "title": "ConditionSetType",
        "values": [
          {
            "generatedName": "userset",
            "value": "userset",
            "casing": {}
          },
          {
            "generatedName": "resourceset",
            "value": "resourceset",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "ConditionSetUpdate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "conditionSetUpdateName",
            "key": "name",
            "schema": {
              "generatedName": "conditionSetUpdateName",
              "nameOverride": "ConditionSetUpdate",
              "title": "ConditionSetUpdate",
              "value": {
                "description": "A descriptive name for the set, i.e: 'US based employees' or 'Users behind VPN'",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ConditionSetUpdateName",
                "nameOverride": "Name",
                "title": "Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetUpdateDescription",
            "key": "description",
            "schema": {
              "generatedName": "conditionSetUpdateDescription",
              "nameOverride": "ConditionSetUpdate",
              "title": "ConditionSetUpdate",
              "value": {
                "description": "an optional longer description of the set",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ConditionSetUpdateDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetUpdateConditions",
            "key": "conditions",
            "schema": {
              "generatedName": "conditionSetUpdateConditions",
              "nameOverride": "ConditionSetUpdate",
              "title": "ConditionSetUpdate",
              "value": {
                "description": "a boolean expression that consists of multiple conditions, with and/or logic.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ConditionSetUpdateConditionsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ConditionSetUpdateConditionsValue",
                  "type": "unknown"
                },
                "generatedName": "ConditionSetUpdateConditions",
                "title": "Conditions",
                "nameOverride": "Conditions",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSetUpdateParentId",
            "key": "parent_id",
            "schema": {
              "generatedName": "conditionSetUpdateParentId",
              "nameOverride": "ConditionSetUpdate",
              "title": "ConditionSetUpdate",
              "value": {
                "schema": {
                  "format": "uuid",
                  "type": "string"
                },
                "generatedName": "ConditionSetUpdateParentId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ConditionSetUpdate",
        "nameOverride": "ConditionSetUpdate",
        "title": "ConditionSetUpdate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "EnvironmentCopy": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "environmentCopyTargetEnv",
            "key": "target_env",
            "schema": {
              "description": "If copying a new environment, the environment configuration. If copying to an existing environment, the environment identifier",
              "generatedName": "EnvironmentCopyTargetEnv",
              "schema": "EnvironmentCopyTarget",
              "groupName": [],
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentCopyConflictStrategy",
            "key": "conflict_strategy",
            "schema": {
              "generatedName": "environmentCopyConflictStrategy",
              "nameOverride": "EnvironmentCopy",
              "title": "EnvironmentCopy",
              "value": {
                "description": "Action to take when detecting a conflict when copying. Only applies to copying into an existing environment",
                "generatedName": "EnvironmentCopyConflictStrategy",
                "title": "Conflict Strategy",
                "values": [
                  {
                    "generatedName": "fail",
                    "value": "fail",
                    "casing": {}
                  },
                  {
                    "generatedName": "overwrite",
                    "value": "overwrite",
                    "casing": {}
                  }
                ],
                "default": {
                  "generatedName": "fail",
                  "value": "fail",
                  "casing": {}
                },
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentCopyScope",
            "key": "scope",
            "schema": {
              "generatedName": "environmentCopyScope",
              "nameOverride": "EnvironmentCopy",
              "title": "EnvironmentCopy",
              "value": {
                "description": "Filters to include and exclude copied objects",
                "generatedName": "EnvironmentCopyScope",
                "schema": "EnvironmentCopyScope",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EnvironmentCopy",
        "nameOverride": "EnvironmentCopy",
        "title": "EnvironmentCopy",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "EnvironmentCopyScope": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "environmentCopyScopeResources",
            "key": "resources",
            "schema": {
              "generatedName": "environmentCopyScopeResources",
              "nameOverride": "EnvironmentCopyScope",
              "title": "EnvironmentCopyScope",
              "value": {
                "description": "Resources to copy",
                "generatedName": "EnvironmentCopyScopeResources",
                "schema": "EnvironmentCopyScopeFilters",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentCopyScopeRoles",
            "key": "roles",
            "schema": {
              "generatedName": "environmentCopyScopeRoles",
              "nameOverride": "EnvironmentCopyScope",
              "title": "EnvironmentCopyScope",
              "value": {
                "description": "Roles to copy",
                "generatedName": "EnvironmentCopyScopeRoles",
                "schema": "EnvironmentCopyScopeFilters",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentCopyScopeUserSets",
            "key": "user_sets",
            "schema": {
              "generatedName": "environmentCopyScopeUserSets",
              "nameOverride": "EnvironmentCopyScope",
              "title": "EnvironmentCopyScope",
              "value": {
                "description": "User sets to copy",
                "generatedName": "EnvironmentCopyScopeUserSets",
                "schema": "EnvironmentCopyScopeFilters",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentCopyScopeResourceSets",
            "key": "resource_sets",
            "schema": {
              "generatedName": "environmentCopyScopeResourceSets",
              "nameOverride": "EnvironmentCopyScope",
              "title": "EnvironmentCopyScope",
              "value": {
                "description": "Resource sets to copy",
                "generatedName": "EnvironmentCopyScopeResourceSets",
                "schema": "EnvironmentCopyScopeFilters",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EnvironmentCopyScope",
        "nameOverride": "EnvironmentCopyScope",
        "title": "EnvironmentCopyScope",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "EnvironmentCopyScopeFilters": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "environmentCopyScopeFiltersInclude",
            "key": "include",
            "schema": {
              "generatedName": "environmentCopyScopeFiltersInclude",
              "nameOverride": "EnvironmentCopyScopeFilters",
              "title": "EnvironmentCopyScopeFilters",
              "value": {
                "description": "Objects to include (use * as wildcard)",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "EnvironmentCopyScopeFiltersIncludeItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "EnvironmentCopyScopeFiltersInclude",
                "nameOverride": "Include",
                "title": "Include",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentCopyScopeFiltersExclude",
            "key": "exclude",
            "schema": {
              "generatedName": "environmentCopyScopeFiltersExclude",
              "nameOverride": "EnvironmentCopyScopeFilters",
              "title": "EnvironmentCopyScopeFilters",
              "value": {
                "description": "Object to exclude (use * as wildcard)",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "EnvironmentCopyScopeFiltersExcludeItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "EnvironmentCopyScopeFiltersExclude",
                "nameOverride": "Exclude",
                "title": "Exclude",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EnvironmentCopyScopeFilters",
        "nameOverride": "EnvironmentCopyScopeFilters",
        "title": "EnvironmentCopyScopeFilters",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "EnvironmentCopyTarget": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "environmentCopyTargetExisting",
            "key": "existing",
            "schema": {
              "generatedName": "environmentCopyTargetExisting",
              "nameOverride": "EnvironmentCopyTarget",
              "title": "EnvironmentCopyTarget",
              "value": {
                "description": "Identifier of an existing environment to copy into",
                "schema": {
                  "type": "string"
                },
                "generatedName": "EnvironmentCopyTargetExisting",
                "nameOverride": "Existing",
                "title": "Existing",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentCopyTargetNew",
            "key": "new",
            "schema": {
              "generatedName": "environmentCopyTargetNew",
              "nameOverride": "EnvironmentCopyTarget",
              "title": "EnvironmentCopyTarget",
              "value": {
                "description": "Description of the environment to create. This environment must not already exist.",
                "generatedName": "EnvironmentCopyTargetNew",
                "schema": "EnvironmentCreate",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EnvironmentCopyTarget",
        "nameOverride": "EnvironmentCopyTarget",
        "title": "EnvironmentCopyTarget",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "EnvironmentCreate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "environmentCreateKey",
            "key": "key",
            "schema": {
              "description": "A URL-friendly name of the environment (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the environment.",
              "schema": {
                "pattern": "^[A-Za-z0-9\\-_]+$",
                "type": "string"
              },
              "generatedName": "EnvironmentCreateKey",
              "nameOverride": "Key",
              "title": "Key",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentCreateName",
            "key": "name",
            "schema": {
              "description": "The name of the environment",
              "schema": {
                "type": "string"
              },
              "generatedName": "EnvironmentCreateName",
              "nameOverride": "Name",
              "title": "Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentCreateDescription",
            "key": "description",
            "schema": {
              "generatedName": "environmentCreateDescription",
              "nameOverride": "EnvironmentCreate",
              "title": "EnvironmentCreate",
              "value": {
                "description": "an optional longer description of the environment",
                "schema": {
                  "type": "string"
                },
                "generatedName": "EnvironmentCreateDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentCreateCustomBranchName",
            "key": "custom_branch_name",
            "schema": {
              "generatedName": "environmentCreateCustomBranchName",
              "nameOverride": "EnvironmentCreate",
              "title": "EnvironmentCreate",
              "value": {
                "description": "when using gitops feature, an optional branch name for the environment",
                "schema": {
                  "type": "string"
                },
                "generatedName": "EnvironmentCreateCustomBranchName",
                "title": "Custom Branch Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentCreateJwks",
            "key": "jwks",
            "schema": {
              "generatedName": "environmentCreateJwks",
              "nameOverride": "EnvironmentCreate",
              "title": "EnvironmentCreate",
              "value": {
                "description": "jwks for element frontend only login",
                "generatedName": "EnvironmentCreateJwks",
                "schema": "JwksObj",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentCreateSettings",
            "key": "settings",
            "schema": {
              "generatedName": "environmentCreateSettings",
              "nameOverride": "EnvironmentCreate",
              "title": "EnvironmentCreate",
              "value": {
                "description": "the settings for this environment",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "EnvironmentCreateSettingsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "EnvironmentCreateSettingsValue",
                  "type": "unknown"
                },
                "generatedName": "EnvironmentCreateSettings",
                "title": "Settings",
                "nameOverride": "Settings",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EnvironmentCreate",
        "nameOverride": "EnvironmentCreate",
        "title": "EnvironmentCreate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "EnvironmentRead": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "environmentReadKey",
            "key": "key",
            "schema": {
              "description": "A URL-friendly name of the environment (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the environment.",
              "schema": {
                "type": "string"
              },
              "generatedName": "EnvironmentReadKey",
              "nameOverride": "Key",
              "title": "Key",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentReadId",
            "key": "id",
            "schema": {
              "description": "Unique id of the environment",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "EnvironmentReadId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentReadOrganizationId",
            "key": "organization_id",
            "schema": {
              "description": "Unique id of the organization that the environment belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "EnvironmentReadOrganizationId",
              "title": "Organization Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentReadProjectId",
            "key": "project_id",
            "schema": {
              "description": "Unique id of the project that the environment belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "EnvironmentReadProjectId",
              "title": "Project Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentReadCreatedAt",
            "key": "created_at",
            "schema": {
              "description": "Date and time when the environment was created (ISO_8601 format).",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "EnvironmentReadCreatedAt",
              "title": "Created At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentReadUpdatedAt",
            "key": "updated_at",
            "schema": {
              "description": "Date and time when the environment was last updated/modified (ISO_8601 format).",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "EnvironmentReadUpdatedAt",
              "title": "Updated At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentReadName",
            "key": "name",
            "schema": {
              "description": "The name of the environment",
              "schema": {
                "type": "string"
              },
              "generatedName": "EnvironmentReadName",
              "nameOverride": "Name",
              "title": "Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentReadDescription",
            "key": "description",
            "schema": {
              "generatedName": "environmentReadDescription",
              "nameOverride": "EnvironmentRead",
              "title": "EnvironmentRead",
              "value": {
                "description": "an optional longer description of the environment",
                "schema": {
                  "type": "string"
                },
                "generatedName": "EnvironmentReadDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentReadCustomBranchName",
            "key": "custom_branch_name",
            "schema": {
              "generatedName": "environmentReadCustomBranchName",
              "nameOverride": "EnvironmentRead",
              "title": "EnvironmentRead",
              "value": {
                "description": "when using gitops feature, an optional branch name for the environment",
                "schema": {
                  "type": "string"
                },
                "generatedName": "EnvironmentReadCustomBranchName",
                "title": "Custom Branch Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentReadJwks",
            "key": "jwks",
            "schema": {
              "generatedName": "environmentReadJwks",
              "nameOverride": "EnvironmentRead",
              "title": "EnvironmentRead",
              "value": {
                "description": "jwks for element frontend only login",
                "generatedName": "EnvironmentReadJwks",
                "schema": "JwksObj",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentReadSettings",
            "key": "settings",
            "schema": {
              "generatedName": "environmentReadSettings",
              "nameOverride": "EnvironmentRead",
              "title": "EnvironmentRead",
              "value": {
                "description": "the settings for this environment",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "EnvironmentReadSettingsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "EnvironmentReadSettingsValue",
                  "type": "unknown"
                },
                "generatedName": "EnvironmentReadSettings",
                "title": "Settings",
                "nameOverride": "Settings",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EnvironmentRead",
        "nameOverride": "EnvironmentRead",
        "title": "EnvironmentRead",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "EnvironmentStats": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "environmentStatsKey",
            "key": "key",
            "schema": {
              "description": "A URL-friendly name of the environment (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the environment.",
              "schema": {
                "type": "string"
              },
              "generatedName": "EnvironmentStatsKey",
              "nameOverride": "Key",
              "title": "Key",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentStatsId",
            "key": "id",
            "schema": {
              "description": "Unique id of the environment",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "EnvironmentStatsId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentStatsOrganizationId",
            "key": "organization_id",
            "schema": {
              "description": "Unique id of the organization that the environment belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "EnvironmentStatsOrganizationId",
              "title": "Organization Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentStatsProjectId",
            "key": "project_id",
            "schema": {
              "description": "Unique id of the project that the environment belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "EnvironmentStatsProjectId",
              "title": "Project Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentStatsCreatedAt",
            "key": "created_at",
            "schema": {
              "description": "Date and time when the environment was created (ISO_8601 format).",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "EnvironmentStatsCreatedAt",
              "title": "Created At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentStatsUpdatedAt",
            "key": "updated_at",
            "schema": {
              "description": "Date and time when the environment was last updated/modified (ISO_8601 format).",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "EnvironmentStatsUpdatedAt",
              "title": "Updated At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentStatsName",
            "key": "name",
            "schema": {
              "description": "The name of the environment",
              "schema": {
                "type": "string"
              },
              "generatedName": "EnvironmentStatsName",
              "nameOverride": "Name",
              "title": "Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentStatsDescription",
            "key": "description",
            "schema": {
              "generatedName": "environmentStatsDescription",
              "nameOverride": "EnvironmentStats",
              "title": "EnvironmentStats",
              "value": {
                "description": "an optional longer description of the environment",
                "schema": {
                  "type": "string"
                },
                "generatedName": "EnvironmentStatsDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentStatsCustomBranchName",
            "key": "custom_branch_name",
            "schema": {
              "generatedName": "environmentStatsCustomBranchName",
              "nameOverride": "EnvironmentStats",
              "title": "EnvironmentStats",
              "value": {
                "description": "when using gitops feature, an optional branch name for the environment",
                "schema": {
                  "type": "string"
                },
                "generatedName": "EnvironmentStatsCustomBranchName",
                "title": "Custom Branch Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentStatsJwks",
            "key": "jwks",
            "schema": {
              "generatedName": "environmentStatsJwks",
              "nameOverride": "EnvironmentStats",
              "title": "EnvironmentStats",
              "value": {
                "description": "jwks for element frontend only login",
                "generatedName": "EnvironmentStatsJwks",
                "schema": "JwksObj",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentStatsSettings",
            "key": "settings",
            "schema": {
              "generatedName": "environmentStatsSettings",
              "nameOverride": "EnvironmentStats",
              "title": "EnvironmentStats",
              "value": {
                "description": "the settings for this environment",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "EnvironmentStatsSettingsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "EnvironmentStatsSettingsValue",
                  "type": "unknown"
                },
                "generatedName": "EnvironmentStatsSettings",
                "title": "Settings",
                "nameOverride": "Settings",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentStatsPdpConfigs",
            "key": "pdp_configs",
            "schema": {
              "value": {
                "generatedName": "EnvironmentStatsPdpConfigsItem",
                "schema": "PDPConfigRead",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "EnvironmentStatsPdpConfigs",
              "title": "Pdp Configs",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentStatsStats",
            "key": "stats",
            "schema": {
              "generatedName": "EnvironmentStatsStats",
              "schema": "Statistics",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EnvironmentStats",
        "nameOverride": "EnvironmentStats",
        "title": "EnvironmentStats",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "EnvironmentUpdate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "environmentUpdateName",
            "key": "name",
            "schema": {
              "generatedName": "environmentUpdateName",
              "nameOverride": "EnvironmentUpdate",
              "title": "EnvironmentUpdate",
              "value": {
                "description": "The name of the environment",
                "schema": {
                  "type": "string"
                },
                "generatedName": "EnvironmentUpdateName",
                "nameOverride": "Name",
                "title": "Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentUpdateDescription",
            "key": "description",
            "schema": {
              "generatedName": "environmentUpdateDescription",
              "nameOverride": "EnvironmentUpdate",
              "title": "EnvironmentUpdate",
              "value": {
                "description": "an optional longer description of the environment",
                "schema": {
                  "type": "string"
                },
                "generatedName": "EnvironmentUpdateDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentUpdateCustomBranchName",
            "key": "custom_branch_name",
            "schema": {
              "generatedName": "environmentUpdateCustomBranchName",
              "nameOverride": "EnvironmentUpdate",
              "title": "EnvironmentUpdate",
              "value": {
                "description": "when using gitops feature, an optional branch name for the environment",
                "schema": {
                  "type": "string"
                },
                "generatedName": "EnvironmentUpdateCustomBranchName",
                "title": "Custom Branch Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentUpdateJwks",
            "key": "jwks",
            "schema": {
              "generatedName": "environmentUpdateJwks",
              "nameOverride": "EnvironmentUpdate",
              "title": "EnvironmentUpdate",
              "value": {
                "description": "jwks for element frontend only login",
                "generatedName": "EnvironmentUpdateJwks",
                "schema": "JwksObj",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentUpdateSettings",
            "key": "settings",
            "schema": {
              "generatedName": "environmentUpdateSettings",
              "nameOverride": "EnvironmentUpdate",
              "title": "EnvironmentUpdate",
              "value": {
                "description": "the settings for this environment",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "EnvironmentUpdateSettingsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "EnvironmentUpdateSettingsValue",
                  "type": "unknown"
                },
                "generatedName": "EnvironmentUpdateSettings",
                "title": "Settings",
                "nameOverride": "Settings",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EnvironmentUpdate",
        "nameOverride": "EnvironmentUpdate",
        "title": "EnvironmentUpdate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "HTTPValidationError": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "httpValidationErrorDetail",
            "key": "detail",
            "schema": {
              "generatedName": "httpValidationErrorDetail",
              "nameOverride": "HTTPValidationError",
              "title": "HTTPValidationError",
              "value": {
                "value": {
                  "generatedName": "HttpValidationErrorDetailItem",
                  "schema": "ValidationError",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "HttpValidationErrorDetail",
                "nameOverride": "Detail",
                "title": "Detail",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "HttpValidationError",
        "nameOverride": "HTTPValidationError",
        "title": "HTTPValidationError",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "IdentityRead": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "identityReadUserId",
            "key": "user_id",
            "schema": {
              "description": "Unique User Id of this identity in the identity provider (including the provider type)",
              "schema": {
                "type": "string"
              },
              "generatedName": "IdentityReadUserId",
              "title": "User Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "identityReadProvider",
            "key": "provider",
            "schema": {
              "description": "The identity provider type this identity came from",
              "schema": {
                "type": "string"
              },
              "generatedName": "IdentityReadProvider",
              "nameOverride": "Provider",
              "title": "Provider",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "identityReadSub",
            "key": "sub",
            "schema": {
              "description": "Unique User Id of this identity in the identity provider (NOT including the provider type)",
              "schema": {
                "type": "string"
              },
              "generatedName": "IdentityReadSub",
              "nameOverride": "Sub",
              "title": "Sub",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "identityReadEmail",
            "key": "email",
            "schema": {
              "description": "Email connected to this account identity",
              "schema": {
                "format": "email",
                "type": "string"
              },
              "generatedName": "IdentityReadEmail",
              "nameOverride": "Email",
              "title": "Email",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "identityReadEmailVerified",
            "key": "email_verified",
            "schema": {
              "description": "Whether this email address connected to this account identity is verified or not. For social providers like 'Login with Google' this is done automatically, otherwise we will send the user a verification link in email.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "IdentityReadEmailVerified",
              "title": "Email Verified",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "identityReadAuth0Info",
            "key": "auth0_info",
            "schema": {
              "description": "Raw user info json coming from our identity provider and matching a specific account identity",
              "key": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "IdentityReadAuth0InfoKey",
                "groupName": [],
                "type": "primitive"
              },
              "value": {
                "generatedName": "IdentityReadAuth0InfoValue",
                "type": "unknown"
              },
              "generatedName": "IdentityReadAuth0Info",
              "title": "Auth0 Info",
              "groupName": [],
              "type": "map"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IdentityRead",
        "nameOverride": "IdentityRead",
        "title": "IdentityRead",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "InviteRead": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "inviteReadMemberId",
            "key": "member_id",
            "schema": {
              "generatedName": "inviteReadMemberId",
              "nameOverride": "InviteRead",
              "title": "InviteRead",
              "value": {
                "description": "Unique id of the invite",
                "schema": {
                  "format": "uuid",
                  "type": "string"
                },
                "generatedName": "InviteReadMemberId",
                "title": "Member Id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "inviteReadEmail",
            "key": "email",
            "schema": {
              "description": "The invited member's email address",
              "schema": {
                "format": "email",
                "type": "string"
              },
              "generatedName": "InviteReadEmail",
              "nameOverride": "Email",
              "title": "Email",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "inviteReadRole",
            "key": "role",
            "schema": {
              "generatedName": "inviteReadRole",
              "nameOverride": "InviteRead",
              "title": "InviteRead",
              "value": {
                "description": "The role the member will be assigned with",
                "generatedName": "InviteReadRole",
                "schema": "MemberAccessLevel",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "inviteReadId",
            "key": "id",
            "schema": {
              "description": "Unique id of the invite",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "InviteReadId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "inviteReadOrganizationId",
            "key": "organization_id",
            "schema": {
              "description": "Unique id of the organization that the invite belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "InviteReadOrganizationId",
              "title": "Organization Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "inviteReadInviteCode",
            "key": "invite_code",
            "schema": {
              "description": "The invite code that is sent to the member's email",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "InviteReadInviteCode",
              "title": "Invite Code",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "inviteReadCreatedAt",
            "key": "created_at",
            "schema": {
              "description": "Date and time when the invite was created (ISO_8601 format).",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "InviteReadCreatedAt",
              "title": "Created At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "inviteReadStatus",
            "key": "status",
            "schema": {
              "description": "The status of the invite (pending, failed, etc)",
              "generatedName": "InviteReadStatus",
              "schema": "InviteStatus",
              "groupName": [],
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "inviteReadFailedReason",
            "key": "failed_reason",
            "schema": {
              "generatedName": "inviteReadFailedReason",
              "nameOverride": "InviteRead",
              "title": "InviteRead",
              "value": {
                "description": "if failed, the reason the invitation failed",
                "schema": {
                  "type": "string"
                },
                "generatedName": "InviteReadFailedReason",
                "title": "Failed Reason",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "InviteRead",
        "nameOverride": "InviteRead",
        "title": "InviteRead",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "InviteStatus": {
        "description": "An enumeration.",
        "generatedName": "InviteStatus",
        "nameOverride": "InviteStatus",
        "title": "InviteStatus",
        "values": [
          {
            "generatedName": "pending",
            "value": "pending",
            "casing": {}
          },
          {
            "generatedName": "accepted",
            "value": "accepted",
            "casing": {}
          },
          {
            "generatedName": "failed",
            "value": "failed",
            "casing": {}
          },
          {
            "generatedName": "canceled",
            "value": "canceled",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "JwksObj": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "jwksObjKeys",
            "key": "keys",
            "schema": {
              "description": "The keys to match against the request headers",
              "value": {
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "JwksObjKeysItemKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "JwksObjKeysItemValue",
                  "type": "unknown"
                },
                "generatedName": "JwksObjKeysItem",
                "groupName": [],
                "type": "map"
              },
              "generatedName": "JwksObjKeys",
              "nameOverride": "Keys",
              "title": "Keys",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "JwksObj",
        "nameOverride": "JwksObj",
        "title": "JwksObj",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "MemberAccessLevel": {
        "description": "An enumeration.",
        "generatedName": "MemberAccessLevel",
        "nameOverride": "MemberAccessLevel",
        "title": "MemberAccessLevel",
        "values": [
          {
            "generatedName": "admin",
            "value": "admin",
            "casing": {}
          },
          {
            "generatedName": "write",
            "value": "write",
            "casing": {}
          },
          {
            "generatedName": "read",
            "value": "read",
            "casing": {}
          },
          {
            "generatedName": "no_access",
            "value": "no_access",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "MemberAccessObj": {
        "description": "An enumeration.",
        "generatedName": "MemberAccessObj",
        "nameOverride": "MemberAccessObj",
        "title": "MemberAccessObj",
        "values": [
          {
            "generatedName": "org",
            "value": "org",
            "casing": {}
          },
          {
            "generatedName": "project",
            "value": "project",
            "casing": {}
          },
          {
            "generatedName": "env",
            "value": "env",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "OnboardingStep": {
        "description": "An enumeration.",
        "generatedName": "OnboardingStep",
        "nameOverride": "OnboardingStep",
        "title": "OnboardingStep",
        "values": [
          {
            "generatedName": "create_organization",
            "value": "create_organization",
            "casing": {}
          },
          {
            "generatedName": "create_project",
            "value": "create_project",
            "casing": {}
          },
          {
            "generatedName": "create_resource",
            "value": "create_resource",
            "casing": {}
          },
          {
            "generatedName": "create_actions",
            "value": "create_actions",
            "casing": {}
          },
          {
            "generatedName": "assign_permissions",
            "value": "assign_permissions",
            "casing": {}
          },
          {
            "generatedName": "assign_user_roles",
            "value": "assign_user_roles",
            "casing": {}
          },
          {
            "generatedName": "connect_sdk",
            "value": "connect_sdk",
            "casing": {}
          },
          {
            "generatedName": "done",
            "value": "done",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "OrgMemberReadWithGrants": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "orgMemberReadWithGrantsId",
            "key": "id",
            "schema": {
              "description": "Unique id of the account member",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "OrgMemberReadWithGrantsId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "orgMemberReadWithGrantsEmail",
            "key": "email",
            "schema": {
              "description": "Email of the user controlling this account",
              "schema": {
                "format": "email",
                "type": "string"
              },
              "generatedName": "OrgMemberReadWithGrantsEmail",
              "nameOverride": "Email",
              "title": "Email",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "orgMemberReadWithGrantsEmailVerified",
            "key": "email_verified",
            "schema": {
              "description": "Whether this email address is verified or not. For social providers like 'Login with Google' this is done automatically, otherwise we will send the user a verification link in email.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "OrgMemberReadWithGrantsEmailVerified",
              "title": "Email Verified",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "orgMemberReadWithGrantsName",
            "key": "name",
            "schema": {
              "generatedName": "orgMemberReadWithGrantsName",
              "nameOverride": "OrgMemberReadWithGrants",
              "title": "OrgMemberReadWithGrants",
              "value": {
                "description": "Name of this user",
                "schema": {
                  "type": "string"
                },
                "generatedName": "OrgMemberReadWithGrantsName",
                "nameOverride": "Name",
                "title": "Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "orgMemberReadWithGrantsGivenName",
            "key": "given_name",
            "schema": {
              "generatedName": "orgMemberReadWithGrantsGivenName",
              "nameOverride": "OrgMemberReadWithGrants",
              "title": "OrgMemberReadWithGrants",
              "value": {
                "description": "First name of the user",
                "schema": {
                  "type": "string"
                },
                "generatedName": "OrgMemberReadWithGrantsGivenName",
                "title": "Given Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "orgMemberReadWithGrantsFamilyName",
            "key": "family_name",
            "schema": {
              "generatedName": "orgMemberReadWithGrantsFamilyName",
              "nameOverride": "OrgMemberReadWithGrants",
              "title": "OrgMemberReadWithGrants",
              "value": {
                "description": "Last name of the user",
                "schema": {
                  "type": "string"
                },
                "generatedName": "OrgMemberReadWithGrantsFamilyName",
                "title": "Family Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "orgMemberReadWithGrantsPicture",
            "key": "picture",
            "schema": {
              "generatedName": "orgMemberReadWithGrantsPicture",
              "nameOverride": "OrgMemberReadWithGrants",
              "title": "OrgMemberReadWithGrants",
              "value": {
                "description": "URL to picture, photo, or avatar of the user that controls this account.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "OrgMemberReadWithGrantsPicture",
                "nameOverride": "Picture",
                "title": "Picture",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "orgMemberReadWithGrantsIsSuperuser",
            "key": "is_superuser",
            "schema": {
              "description": "Whether or not this user has special access to permit.io organizations",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "OrgMemberReadWithGrantsIsSuperuser",
              "title": "Is Superuser",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "orgMemberReadWithGrantsIsOnboarding",
            "key": "is_onboarding",
            "schema": {
              "description": "Whether or not this user is currently onboarding, needs to be replaced by a user journey object",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "OrgMemberReadWithGrantsIsOnboarding",
              "title": "Is Onboarding",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "orgMemberReadWithGrantsOnboardingStep",
            "key": "onboarding_step",
            "schema": {
              "description": "the step the user is currently going through in onboarding",
              "generatedName": "OrgMemberReadWithGrantsOnboardingStep",
              "schema": "OnboardingStep",
              "groupName": [],
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "orgMemberReadWithGrantsCreatedAt",
            "key": "created_at",
            "schema": {
              "description": "Date and time when the account member was created (ISO_8601 format).",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "OrgMemberReadWithGrantsCreatedAt",
              "title": "Created At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "orgMemberReadWithGrantsLastLogin",
            "key": "last_login",
            "schema": {
              "generatedName": "orgMemberReadWithGrantsLastLogin",
              "nameOverride": "OrgMemberReadWithGrants",
              "title": "OrgMemberReadWithGrants",
              "value": {
                "description": "Last date and time this user logged in (ISO_8601 format).",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "OrgMemberReadWithGrantsLastLogin",
                "title": "Last Login",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "orgMemberReadWithGrantsLastIp",
            "key": "last_ip",
            "schema": {
              "generatedName": "orgMemberReadWithGrantsLastIp",
              "nameOverride": "OrgMemberReadWithGrants",
              "title": "OrgMemberReadWithGrants",
              "value": {
                "description": "Last IP address from which this user logged in.",
                "schema": {
                  "default": "0.0.0.0",
                  "type": "string"
                },
                "generatedName": "OrgMemberReadWithGrantsLastIp",
                "title": "Last Ip",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "orgMemberReadWithGrantsLoginsCount",
            "key": "logins_count",
            "schema": {
              "generatedName": "orgMemberReadWithGrantsLoginsCount",
              "nameOverride": "OrgMemberReadWithGrants",
              "title": "OrgMemberReadWithGrants",
              "value": {
                "description": "Total number of logins this user has performed.",
                "schema": {
                  "default": 0,
                  "type": "int"
                },
                "generatedName": "OrgMemberReadWithGrantsLoginsCount",
                "title": "Logins Count",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "orgMemberReadWithGrantsIdentities",
            "key": "identities",
            "schema": {
              "value": {
                "generatedName": "OrgMemberReadWithGrantsIdentitiesItem",
                "schema": "IdentityRead",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "OrgMemberReadWithGrantsIdentities",
              "nameOverride": "Identities",
              "title": "Identities",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "orgMemberReadWithGrantsInvite",
            "key": "invite",
            "schema": {
              "generatedName": "orgMemberReadWithGrantsInvite",
              "nameOverride": "OrgMemberReadWithGrants",
              "title": "OrgMemberReadWithGrants",
              "value": {
                "generatedName": "OrgMemberReadWithGrantsInvite",
                "schema": "InviteRead",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "orgMemberReadWithGrantsSettings",
            "key": "settings",
            "schema": {
              "description": "Custom permit.io dashboard settings, such as preferred theme, etc.",
              "key": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "OrgMemberReadWithGrantsSettingsKey",
                "groupName": [],
                "type": "primitive"
              },
              "value": {
                "generatedName": "OrgMemberReadWithGrantsSettingsValue",
                "type": "unknown"
              },
              "generatedName": "OrgMemberReadWithGrantsSettings",
              "title": "Settings",
              "nameOverride": "Settings",
              "groupName": [],
              "type": "map"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "orgMemberReadWithGrantsGrants",
            "key": "grants",
            "schema": {
              "value": {
                "generatedName": "OrgMemberReadWithGrantsGrantsItem",
                "schema": "Permission",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "OrgMemberReadWithGrantsGrants",
              "nameOverride": "Grants",
              "title": "Grants",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "OrgMemberReadWithGrants",
        "nameOverride": "OrgMemberReadWithGrants",
        "title": "OrgMemberReadWithGrants",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "OrganizationCreate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "organizationCreateKey",
            "key": "key",
            "schema": {
              "description": "A URL-friendly name of the organization (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the organization.",
              "schema": {
                "pattern": "^[A-Za-z0-9\\-_]+$",
                "type": "string"
              },
              "generatedName": "OrganizationCreateKey",
              "nameOverride": "Key",
              "title": "Key",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "organizationCreateName",
            "key": "name",
            "schema": {
              "description": "The name of the organization, usually it's your company's name.",
              "schema": {
                "pattern": "^[A-Za-z0-9\\.\\-\\_\\ ]+$",
                "type": "string"
              },
              "generatedName": "OrganizationCreateName",
              "nameOverride": "Name",
              "title": "Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "organizationCreateSettings",
            "key": "settings",
            "schema": {
              "generatedName": "organizationCreateSettings",
              "nameOverride": "OrganizationCreate",
              "title": "OrganizationCreate",
              "value": {
                "description": "the settings for this project",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "OrganizationCreateSettingsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "OrganizationCreateSettingsValue",
                  "type": "unknown"
                },
                "generatedName": "OrganizationCreateSettings",
                "title": "Settings",
                "nameOverride": "Settings",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "OrganizationCreate",
        "nameOverride": "OrganizationCreate",
        "title": "OrganizationCreate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "OrganizationRead": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "organizationReadKey",
            "key": "key",
            "schema": {
              "description": "A URL-friendly name of the organization (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the organization.",
              "schema": {
                "type": "string"
              },
              "generatedName": "OrganizationReadKey",
              "nameOverride": "Key",
              "title": "Key",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "organizationReadId",
            "key": "id",
            "schema": {
              "description": "Unique id of the organization",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "OrganizationReadId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "organizationReadIsEnterprise",
            "key": "is_enterprise",
            "schema": {
              "description": "Is this an enterprise account?",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "OrganizationReadIsEnterprise",
              "title": "Is Enterprise",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "organizationReadCreatedAt",
            "key": "created_at",
            "schema": {
              "description": "Date and time when the organization was created (ISO_8601 format).",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "OrganizationReadCreatedAt",
              "title": "Created At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "organizationReadUpdatedAt",
            "key": "updated_at",
            "schema": {
              "description": "Date and time when the organization was last updated/modified (ISO_8601 format).",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "OrganizationReadUpdatedAt",
              "title": "Updated At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "organizationReadName",
            "key": "name",
            "schema": {
              "description": "The name of the organization, usually it's your company's name.",
              "schema": {
                "type": "string"
              },
              "generatedName": "OrganizationReadName",
              "nameOverride": "Name",
              "title": "Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "organizationReadSettings",
            "key": "settings",
            "schema": {
              "generatedName": "organizationReadSettings",
              "nameOverride": "OrganizationRead",
              "title": "OrganizationRead",
              "value": {
                "description": "the settings for this project",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "OrganizationReadSettingsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "OrganizationReadSettingsValue",
                  "type": "unknown"
                },
                "generatedName": "OrganizationReadSettings",
                "title": "Settings",
                "nameOverride": "Settings",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "OrganizationRead",
        "nameOverride": "OrganizationRead",
        "title": "OrganizationRead",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "OrganizationReadWithAPIKey": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "organizationReadWithApiKeyKey",
            "key": "key",
            "schema": {
              "description": "A URL-friendly name of the organization (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the organization.",
              "schema": {
                "type": "string"
              },
              "generatedName": "OrganizationReadWithApiKeyKey",
              "nameOverride": "Key",
              "title": "Key",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "organizationReadWithApiKeyId",
            "key": "id",
            "schema": {
              "description": "Unique id of the organization",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "OrganizationReadWithApiKeyId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "organizationReadWithApiKeyIsEnterprise",
            "key": "is_enterprise",
            "schema": {
              "description": "Is this an enterprise account?",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "OrganizationReadWithApiKeyIsEnterprise",
              "title": "Is Enterprise",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "organizationReadWithApiKeyCreatedAt",
            "key": "created_at",
            "schema": {
              "description": "Date and time when the organization was created (ISO_8601 format).",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "OrganizationReadWithApiKeyCreatedAt",
              "title": "Created At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "organizationReadWithApiKeyUpdatedAt",
            "key": "updated_at",
            "schema": {
              "description": "Date and time when the organization was last updated/modified (ISO_8601 format).",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "OrganizationReadWithApiKeyUpdatedAt",
              "title": "Updated At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "organizationReadWithApiKeyName",
            "key": "name",
            "schema": {
              "description": "The name of the organization, usually it's your company's name.",
              "schema": {
                "type": "string"
              },
              "generatedName": "OrganizationReadWithApiKeyName",
              "nameOverride": "Name",
              "title": "Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "organizationReadWithApiKeySettings",
            "key": "settings",
            "schema": {
              "generatedName": "organizationReadWithApiKeySettings",
              "nameOverride": "OrganizationReadWithAPIKey",
              "title": "OrganizationReadWithAPIKey",
              "value": {
                "description": "the settings for this project",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "OrganizationReadWithApiKeySettingsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "OrganizationReadWithApiKeySettingsValue",
                  "type": "unknown"
                },
                "generatedName": "OrganizationReadWithApiKeySettings",
                "title": "Settings",
                "nameOverride": "Settings",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "organizationReadWithApiKeyApiKeyId",
            "key": "api_key_id",
            "schema": {
              "generatedName": "organizationReadWithApiKeyApiKeyId",
              "nameOverride": "OrganizationReadWithAPIKey",
              "title": "OrganizationReadWithAPIKey",
              "value": {
                "schema": {
                  "format": "uuid",
                  "type": "string"
                },
                "generatedName": "OrganizationReadWithApiKeyApiKeyId",
                "title": "Api Key Id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "organizationReadWithApiKeyApiKeySecret",
            "key": "api_key_secret",
            "schema": {
              "generatedName": "organizationReadWithApiKeyApiKeySecret",
              "nameOverride": "OrganizationReadWithAPIKey",
              "title": "OrganizationReadWithAPIKey",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "OrganizationReadWithApiKeyApiKeySecret",
                "title": "Api Key Secret",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "OrganizationReadWithApiKey",
        "nameOverride": "OrganizationReadWithAPIKey",
        "title": "OrganizationReadWithAPIKey",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "OrganizationUpdate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "organizationUpdateName",
            "key": "name",
            "schema": {
              "generatedName": "organizationUpdateName",
              "nameOverride": "OrganizationUpdate",
              "title": "OrganizationUpdate",
              "value": {
                "description": "The name of the organization, usually it's your company's name.",
                "schema": {
                  "pattern": "^[A-Za-z0-9\\.\\-\\_\\ ]+$",
                  "type": "string"
                },
                "generatedName": "OrganizationUpdateName",
                "nameOverride": "Name",
                "title": "Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "organizationUpdateSettings",
            "key": "settings",
            "schema": {
              "generatedName": "organizationUpdateSettings",
              "nameOverride": "OrganizationUpdate",
              "title": "OrganizationUpdate",
              "value": {
                "description": "the settings for this project",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "OrganizationUpdateSettingsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "OrganizationUpdateSettingsValue",
                  "type": "unknown"
                },
                "generatedName": "OrganizationUpdateSettings",
                "title": "Settings",
                "nameOverride": "Settings",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "OrganizationUpdate",
        "nameOverride": "OrganizationUpdate",
        "title": "OrganizationUpdate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "PDPConfigRead": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "pdpConfigReadId",
            "key": "id",
            "schema": {
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "PdpConfigReadId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "pdpConfigReadName",
            "key": "name",
            "schema": {
              "generatedName": "pdpConfigReadName",
              "nameOverride": "PDPConfigRead",
              "title": "PDPConfigRead",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "PdpConfigReadName",
                "nameOverride": "Name",
                "title": "Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "pdpConfigReadOrganizationId",
            "key": "organization_id",
            "schema": {
              "description": "Unique id of the organization that the pdp_config belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "PdpConfigReadOrganizationId",
              "title": "Organization Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "pdpConfigReadProjectId",
            "key": "project_id",
            "schema": {
              "description": "Unique id of the project that the pdp_config belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "PdpConfigReadProjectId",
              "title": "Project Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "pdpConfigReadEnvironmentId",
            "key": "environment_id",
            "schema": {
              "description": "Unique id of the environment that the pdp_config belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "PdpConfigReadEnvironmentId",
              "title": "Environment Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "pdpConfigReadClientSecret",
            "key": "client_secret",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "PdpConfigReadClientSecret",
              "title": "Client Secret",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PdpConfigRead",
        "nameOverride": "PDPConfigRead",
        "title": "PDPConfigRead",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "PaginatedResult_ConditionSetRead_": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "paginatedResultConditionSetReadData",
            "key": "data",
            "schema": {
              "description": "List of Condition Sets",
              "value": {
                "generatedName": "PaginatedResultConditionSetReadDataItem",
                "schema": "ConditionSetRead",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "PaginatedResultConditionSetReadData",
              "nameOverride": "Data",
              "title": "Data",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedResultConditionSetReadTotalCount",
            "key": "total_count",
            "schema": {
              "schema": {
                "minimum": 0,
                "type": "int"
              },
              "generatedName": "PaginatedResultConditionSetReadTotalCount",
              "title": "Total Count",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedResultConditionSetReadPageCount",
            "key": "page_count",
            "schema": {
              "generatedName": "paginatedResultConditionSetReadPageCount",
              "title": "PaginatedResult[ConditionSetRead]",
              "value": {
                "schema": {
                  "default": 0,
                  "minimum": 0,
                  "type": "int"
                },
                "generatedName": "PaginatedResultConditionSetReadPageCount",
                "title": "Page Count",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PaginatedResultConditionSetRead",
        "title": "PaginatedResult[ConditionSetRead]",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "PaginatedResult_ResourceRead_": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "paginatedResultResourceReadData",
            "key": "data",
            "schema": {
              "description": "List of Resources",
              "value": {
                "generatedName": "PaginatedResultResourceReadDataItem",
                "schema": "ResourceRead",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "PaginatedResultResourceReadData",
              "nameOverride": "Data",
              "title": "Data",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedResultResourceReadTotalCount",
            "key": "total_count",
            "schema": {
              "schema": {
                "minimum": 0,
                "type": "int"
              },
              "generatedName": "PaginatedResultResourceReadTotalCount",
              "title": "Total Count",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedResultResourceReadPageCount",
            "key": "page_count",
            "schema": {
              "generatedName": "paginatedResultResourceReadPageCount",
              "title": "PaginatedResult[ResourceRead]",
              "value": {
                "schema": {
                  "default": 0,
                  "minimum": 0,
                  "type": "int"
                },
                "generatedName": "PaginatedResultResourceReadPageCount",
                "title": "Page Count",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PaginatedResultResourceRead",
        "title": "PaginatedResult[ResourceRead]",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "PaginatedResult_ResourceRoleRead_": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "paginatedResultResourceRoleReadData",
            "key": "data",
            "schema": {
              "description": "List of Resource Roles",
              "value": {
                "generatedName": "PaginatedResultResourceRoleReadDataItem",
                "schema": "ResourceRoleRead",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "PaginatedResultResourceRoleReadData",
              "nameOverride": "Data",
              "title": "Data",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedResultResourceRoleReadTotalCount",
            "key": "total_count",
            "schema": {
              "schema": {
                "minimum": 0,
                "type": "int"
              },
              "generatedName": "PaginatedResultResourceRoleReadTotalCount",
              "title": "Total Count",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedResultResourceRoleReadPageCount",
            "key": "page_count",
            "schema": {
              "generatedName": "paginatedResultResourceRoleReadPageCount",
              "title": "PaginatedResult[ResourceRoleRead]",
              "value": {
                "schema": {
                  "default": 0,
                  "minimum": 0,
                  "type": "int"
                },
                "generatedName": "PaginatedResultResourceRoleReadPageCount",
                "title": "Page Count",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PaginatedResultResourceRoleRead",
        "title": "PaginatedResult[ResourceRoleRead]",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "PaginatedResult_RoleRead_": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "paginatedResultRoleReadData",
            "key": "data",
            "schema": {
              "description": "List of Roles",
              "value": {
                "generatedName": "PaginatedResultRoleReadDataItem",
                "schema": "RoleRead",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "PaginatedResultRoleReadData",
              "nameOverride": "Data",
              "title": "Data",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedResultRoleReadTotalCount",
            "key": "total_count",
            "schema": {
              "schema": {
                "minimum": 0,
                "type": "int"
              },
              "generatedName": "PaginatedResultRoleReadTotalCount",
              "title": "Total Count",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedResultRoleReadPageCount",
            "key": "page_count",
            "schema": {
              "generatedName": "paginatedResultRoleReadPageCount",
              "title": "PaginatedResult[RoleRead]",
              "value": {
                "schema": {
                  "default": 0,
                  "minimum": 0,
                  "type": "int"
                },
                "generatedName": "PaginatedResultRoleReadPageCount",
                "title": "Page Count",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PaginatedResultRoleRead",
        "title": "PaginatedResult[RoleRead]",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "PaginatedResult_TenantRead_": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "paginatedResultTenantReadData",
            "key": "data",
            "schema": {
              "description": "List of Tenants",
              "value": {
                "generatedName": "PaginatedResultTenantReadDataItem",
                "schema": "TenantRead",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "PaginatedResultTenantReadData",
              "nameOverride": "Data",
              "title": "Data",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedResultTenantReadTotalCount",
            "key": "total_count",
            "schema": {
              "schema": {
                "minimum": 0,
                "type": "int"
              },
              "generatedName": "PaginatedResultTenantReadTotalCount",
              "title": "Total Count",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedResultTenantReadPageCount",
            "key": "page_count",
            "schema": {
              "generatedName": "paginatedResultTenantReadPageCount",
              "title": "PaginatedResult[TenantRead]",
              "value": {
                "schema": {
                  "default": 0,
                  "minimum": 0,
                  "type": "int"
                },
                "generatedName": "PaginatedResultTenantReadPageCount",
                "title": "Page Count",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PaginatedResultTenantRead",
        "title": "PaginatedResult[TenantRead]",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "PaginatedResult_UserRead_": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "paginatedResultUserReadData",
            "key": "data",
            "schema": {
              "description": "List of Users",
              "value": {
                "generatedName": "PaginatedResultUserReadDataItem",
                "schema": "UserRead",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "PaginatedResultUserReadData",
              "nameOverride": "Data",
              "title": "Data",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedResultUserReadTotalCount",
            "key": "total_count",
            "schema": {
              "schema": {
                "minimum": 0,
                "type": "int"
              },
              "generatedName": "PaginatedResultUserReadTotalCount",
              "title": "Total Count",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedResultUserReadPageCount",
            "key": "page_count",
            "schema": {
              "generatedName": "paginatedResultUserReadPageCount",
              "title": "PaginatedResult[UserRead]",
              "value": {
                "schema": {
                  "default": 0,
                  "minimum": 0,
                  "type": "int"
                },
                "generatedName": "PaginatedResultUserReadPageCount",
                "title": "Page Count",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PaginatedResultUserRead",
        "title": "PaginatedResult[UserRead]",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "Permission": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "permissionOrganizationId",
            "key": "organization_id",
            "schema": {
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "PermissionOrganizationId",
              "title": "Organization Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "permissionProjectId",
            "key": "project_id",
            "schema": {
              "generatedName": "permissionProjectId",
              "nameOverride": "Permission",
              "title": "Permission",
              "value": {
                "schema": {
                  "format": "uuid",
                  "type": "string"
                },
                "generatedName": "PermissionProjectId",
                "title": "Project Id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "permissionEnvironmentId",
            "key": "environment_id",
            "schema": {
              "generatedName": "permissionEnvironmentId",
              "nameOverride": "Permission",
              "title": "Permission",
              "value": {
                "schema": {
                  "format": "uuid",
                  "type": "string"
                },
                "generatedName": "PermissionEnvironmentId",
                "title": "Environment Id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "permissionObjectType",
            "key": "object_type",
            "schema": {
              "generatedName": "PermissionObjectType",
              "schema": "MemberAccessObj",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "permissionAccessLevel",
            "key": "access_level",
            "schema": {
              "generatedName": "PermissionAccessLevel",
              "schema": "MemberAccessLevel",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "permissionOrganizationKey",
            "key": "organization_key",
            "schema": {
              "generatedName": "permissionOrganizationKey",
              "nameOverride": "Permission",
              "title": "Permission",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "PermissionOrganizationKey",
                "title": "Organization Key",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "permissionProjectKey",
            "key": "project_key",
            "schema": {
              "generatedName": "permissionProjectKey",
              "nameOverride": "Permission",
              "title": "Permission",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "PermissionProjectKey",
                "title": "Project Key",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "permissionEnvironmentKey",
            "key": "environment_key",
            "schema": {
              "generatedName": "permissionEnvironmentKey",
              "nameOverride": "Permission",
              "title": "Permission",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "PermissionEnvironmentKey",
                "title": "Environment Key",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "permissionOrganizationName",
            "key": "organization_name",
            "schema": {
              "generatedName": "permissionOrganizationName",
              "nameOverride": "Permission",
              "title": "Permission",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "PermissionOrganizationName",
                "title": "Organization Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "permissionProjectName",
            "key": "project_name",
            "schema": {
              "generatedName": "permissionProjectName",
              "nameOverride": "Permission",
              "title": "Permission",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "PermissionProjectName",
                "title": "Project Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "permissionEnvironmentName",
            "key": "environment_name",
            "schema": {
              "generatedName": "permissionEnvironmentName",
              "nameOverride": "Permission",
              "title": "Permission",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "PermissionEnvironmentName",
                "title": "Environment Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Permission",
        "nameOverride": "Permission",
        "title": "Permission",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ProjectCreate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "projectCreateKey",
            "key": "key",
            "schema": {
              "description": "A URL-friendly name of the project (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the project.",
              "schema": {
                "pattern": "^[A-Za-z0-9\\-_]+$",
                "type": "string"
              },
              "generatedName": "ProjectCreateKey",
              "nameOverride": "Key",
              "title": "Key",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "projectCreateUrnNamespace",
            "key": "urn_namespace",
            "schema": {
              "generatedName": "projectCreateUrnNamespace",
              "nameOverride": "ProjectCreate",
              "title": "ProjectCreate",
              "value": {
                "description": "Optional namespace for URNs. If empty, URNs will be generated from project key.",
                "schema": {
                  "pattern": "[a-z0-9-]{2,}",
                  "type": "string"
                },
                "generatedName": "ProjectCreateUrnNamespace",
                "title": "Urn Namespace",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "projectCreateName",
            "key": "name",
            "schema": {
              "description": "The name of the project",
              "schema": {
                "type": "string"
              },
              "generatedName": "ProjectCreateName",
              "nameOverride": "Name",
              "title": "Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "projectCreateDescription",
            "key": "description",
            "schema": {
              "generatedName": "projectCreateDescription",
              "nameOverride": "ProjectCreate",
              "title": "ProjectCreate",
              "value": {
                "description": "a longer description outlining the project objectives",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ProjectCreateDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "projectCreateSettings",
            "key": "settings",
            "schema": {
              "generatedName": "projectCreateSettings",
              "nameOverride": "ProjectCreate",
              "title": "ProjectCreate",
              "value": {
                "description": "the settings for this project",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ProjectCreateSettingsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ProjectCreateSettingsValue",
                  "type": "unknown"
                },
                "generatedName": "ProjectCreateSettings",
                "title": "Settings",
                "nameOverride": "Settings",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "projectCreateActivePolicyRepoId",
            "key": "active_policy_repo_id",
            "schema": {
              "generatedName": "projectCreateActivePolicyRepoId",
              "nameOverride": "ProjectCreate",
              "title": "ProjectCreate",
              "value": {
                "description": "the id of the policy repo to use for this project",
                "schema": {
                  "format": "uuid",
                  "type": "string"
                },
                "generatedName": "ProjectCreateActivePolicyRepoId",
                "title": "Active Policy Repo Id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ProjectCreate",
        "nameOverride": "ProjectCreate",
        "title": "ProjectCreate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ProjectRead": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "projectReadKey",
            "key": "key",
            "schema": {
              "description": "A URL-friendly name of the project (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the project.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ProjectReadKey",
              "nameOverride": "Key",
              "title": "Key",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "projectReadUrnNamespace",
            "key": "urn_namespace",
            "schema": {
              "generatedName": "projectReadUrnNamespace",
              "nameOverride": "ProjectRead",
              "title": "ProjectRead",
              "value": {
                "description": "Optional namespace for URNs. If empty, URNs will be generated from project key.",
                "schema": {
                  "pattern": "[a-z0-9-]{2,}",
                  "type": "string"
                },
                "generatedName": "ProjectReadUrnNamespace",
                "title": "Urn Namespace",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "projectReadId",
            "key": "id",
            "schema": {
              "description": "Unique id of the project",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ProjectReadId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "projectReadOrganizationId",
            "key": "organization_id",
            "schema": {
              "description": "Unique id of the organization that the project belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ProjectReadOrganizationId",
              "title": "Organization Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "projectReadCreatedAt",
            "key": "created_at",
            "schema": {
              "description": "Date and time when the project was created (ISO_8601 format).",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "ProjectReadCreatedAt",
              "title": "Created At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "projectReadUpdatedAt",
            "key": "updated_at",
            "schema": {
              "description": "Date and time when the project was last updated/modified (ISO_8601 format).",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "ProjectReadUpdatedAt",
              "title": "Updated At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "projectReadName",
            "key": "name",
            "schema": {
              "description": "The name of the project",
              "schema": {
                "type": "string"
              },
              "generatedName": "ProjectReadName",
              "nameOverride": "Name",
              "title": "Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "projectReadDescription",
            "key": "description",
            "schema": {
              "generatedName": "projectReadDescription",
              "nameOverride": "ProjectRead",
              "title": "ProjectRead",
              "value": {
                "description": "a longer description outlining the project objectives",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ProjectReadDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "projectReadSettings",
            "key": "settings",
            "schema": {
              "generatedName": "projectReadSettings",
              "nameOverride": "ProjectRead",
              "title": "ProjectRead",
              "value": {
                "description": "the settings for this project",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ProjectReadSettingsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ProjectReadSettingsValue",
                  "type": "unknown"
                },
                "generatedName": "ProjectReadSettings",
                "title": "Settings",
                "nameOverride": "Settings",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "projectReadActivePolicyRepoId",
            "key": "active_policy_repo_id",
            "schema": {
              "generatedName": "projectReadActivePolicyRepoId",
              "nameOverride": "ProjectRead",
              "title": "ProjectRead",
              "value": {
                "description": "the id of the policy repo to use for this project",
                "schema": {
                  "format": "uuid",
                  "type": "string"
                },
                "generatedName": "ProjectReadActivePolicyRepoId",
                "title": "Active Policy Repo Id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ProjectRead",
        "nameOverride": "ProjectRead",
        "title": "ProjectRead",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ProjectUpdate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "projectUpdateName",
            "key": "name",
            "schema": {
              "generatedName": "projectUpdateName",
              "nameOverride": "ProjectUpdate",
              "title": "ProjectUpdate",
              "value": {
                "description": "The name of the project",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ProjectUpdateName",
                "nameOverride": "Name",
                "title": "Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "projectUpdateDescription",
            "key": "description",
            "schema": {
              "generatedName": "projectUpdateDescription",
              "nameOverride": "ProjectUpdate",
              "title": "ProjectUpdate",
              "value": {
                "description": "a longer description outlining the project objectives",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ProjectUpdateDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "projectUpdateSettings",
            "key": "settings",
            "schema": {
              "generatedName": "projectUpdateSettings",
              "nameOverride": "ProjectUpdate",
              "title": "ProjectUpdate",
              "value": {
                "description": "the settings for this project",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ProjectUpdateSettingsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ProjectUpdateSettingsValue",
                  "type": "unknown"
                },
                "generatedName": "ProjectUpdateSettings",
                "title": "Settings",
                "nameOverride": "Settings",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "projectUpdateActivePolicyRepoId",
            "key": "active_policy_repo_id",
            "schema": {
              "generatedName": "projectUpdateActivePolicyRepoId",
              "nameOverride": "ProjectUpdate",
              "title": "ProjectUpdate",
              "value": {
                "description": "the id of the policy repo to use for this project",
                "schema": {
                  "format": "uuid",
                  "type": "string"
                },
                "generatedName": "ProjectUpdateActivePolicyRepoId",
                "title": "Active Policy Repo Id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ProjectUpdate",
        "nameOverride": "ProjectUpdate",
        "title": "ProjectUpdate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "RelationsBlock": {
        "description": "A actions definition block, typically contained within a resource type definition block.\nThe actions represents the ways you can interact with a protected resource.",
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "RelationsBlockKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "RelationsBlockValue",
          "type": "unknown"
        },
        "generatedName": "RelationsBlock",
        "title": "RelationsBlock",
        "nameOverride": "RelationsBlock",
        "groupName": [],
        "type": "map"
      },
      "RemoveRolePermissions": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "removeRolePermissionsPermissions",
            "key": "permissions",
            "schema": {
              "description": "List of permissions to remove from the role. If a permission is not found it is skipped. Each permission can be either a resource action id, or `{resource_key}:{action_key}`,i.e: the \"permission name\".",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "RemoveRolePermissionsPermissionsItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "RemoveRolePermissionsPermissions",
              "nameOverride": "Permissions",
              "title": "Permissions",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RemoveRolePermissions",
        "nameOverride": "RemoveRolePermissions",
        "title": "RemoveRolePermissions",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ResourceActionCreate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "resourceActionCreateKey",
            "key": "key",
            "schema": {
              "description": "A URL-friendly name of the action (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the action.",
              "schema": {
                "pattern": "^[A-Za-z0-9\\-_]+$",
                "type": "string"
              },
              "generatedName": "ResourceActionCreateKey",
              "nameOverride": "Key",
              "title": "Key",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceActionCreateName",
            "key": "name",
            "schema": {
              "description": "The name of the action",
              "schema": {
                "type": "string"
              },
              "generatedName": "ResourceActionCreateName",
              "nameOverride": "Name",
              "title": "Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceActionCreateDescription",
            "key": "description",
            "schema": {
              "generatedName": "resourceActionCreateDescription",
              "nameOverride": "ResourceActionCreate",
              "title": "ResourceActionCreate",
              "value": {
                "description": "An optional longer description of what this action respresents in your system",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResourceActionCreateDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceActionCreateAttributes",
            "key": "attributes",
            "schema": {
              "generatedName": "resourceActionCreateAttributes",
              "nameOverride": "ResourceActionCreate",
              "title": "ResourceActionCreate",
              "value": {
                "description": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this action. This metadata can be used to filter actions using query parameters with attr_ prefix",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ResourceActionCreateAttributesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ResourceActionCreateAttributesValue",
                  "type": "unknown"
                },
                "generatedName": "ResourceActionCreateAttributes",
                "title": "Attributes",
                "nameOverride": "Attributes",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResourceActionCreate",
        "nameOverride": "ResourceActionCreate",
        "title": "ResourceActionCreate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ResourceActionGroupCreate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "resourceActionGroupCreateKey",
            "key": "key",
            "schema": {
              "description": "A URL-friendly name of the action group (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the action group.",
              "schema": {
                "pattern": "^[A-Za-z0-9\\-_]+$",
                "type": "string"
              },
              "generatedName": "ResourceActionGroupCreateKey",
              "nameOverride": "Key",
              "title": "Key",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceActionGroupCreateName",
            "key": "name",
            "schema": {
              "description": "The name of the action group",
              "schema": {
                "type": "string"
              },
              "generatedName": "ResourceActionGroupCreateName",
              "nameOverride": "Name",
              "title": "Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceActionGroupCreateDescription",
            "key": "description",
            "schema": {
              "generatedName": "resourceActionGroupCreateDescription",
              "nameOverride": "ResourceActionGroupCreate",
              "title": "ResourceActionGroupCreate",
              "value": {
                "description": "An optional longer description of what this action group represents in your system",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResourceActionGroupCreateDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceActionGroupCreateAttributes",
            "key": "attributes",
            "schema": {
              "generatedName": "resourceActionGroupCreateAttributes",
              "nameOverride": "ResourceActionGroupCreate",
              "title": "ResourceActionGroupCreate",
              "value": {
                "description": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this action group. This metadata can be used to filter action groups using query parameters with attr_ prefix",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ResourceActionGroupCreateAttributesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ResourceActionGroupCreateAttributesValue",
                  "type": "unknown"
                },
                "generatedName": "ResourceActionGroupCreateAttributes",
                "title": "Attributes",
                "nameOverride": "Attributes",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceActionGroupCreateActions",
            "key": "actions",
            "schema": {
              "generatedName": "resourceActionGroupCreateActions",
              "nameOverride": "ResourceActionGroupCreate",
              "title": "ResourceActionGroupCreate",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ResourceActionGroupCreateActionsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "ResourceActionGroupCreateActions",
                "nameOverride": "Actions",
                "title": "Actions",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResourceActionGroupCreate",
        "nameOverride": "ResourceActionGroupCreate",
        "title": "ResourceActionGroupCreate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ResourceActionGroupRead": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "resourceActionGroupReadName",
            "key": "name",
            "schema": {
              "description": "The name of the action group",
              "schema": {
                "type": "string"
              },
              "generatedName": "ResourceActionGroupReadName",
              "nameOverride": "Name",
              "title": "Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceActionGroupReadDescription",
            "key": "description",
            "schema": {
              "generatedName": "resourceActionGroupReadDescription",
              "nameOverride": "ResourceActionGroupRead",
              "title": "ResourceActionGroupRead",
              "value": {
                "description": "An optional longer description of what this action group represents in your system",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResourceActionGroupReadDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceActionGroupReadAttributes",
            "key": "attributes",
            "schema": {
              "generatedName": "resourceActionGroupReadAttributes",
              "nameOverride": "ResourceActionGroupRead",
              "title": "ResourceActionGroupRead",
              "value": {
                "description": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this action group. This metadata can be used to filter action groups using query parameters with attr_ prefix",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ResourceActionGroupReadAttributesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ResourceActionGroupReadAttributesValue",
                  "type": "unknown"
                },
                "generatedName": "ResourceActionGroupReadAttributes",
                "title": "Attributes",
                "nameOverride": "Attributes",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceActionGroupReadActions",
            "key": "actions",
            "schema": {
              "generatedName": "resourceActionGroupReadActions",
              "nameOverride": "ResourceActionGroupRead",
              "title": "ResourceActionGroupRead",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ResourceActionGroupReadActionsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "ResourceActionGroupReadActions",
                "nameOverride": "Actions",
                "title": "Actions",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceActionGroupReadKey",
            "key": "key",
            "schema": {
              "description": "A URL-friendly name of the action group (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the action group.",
              "schema": {
                "pattern": "^[A-Za-z0-9\\-_]+$",
                "type": "string"
              },
              "generatedName": "ResourceActionGroupReadKey",
              "nameOverride": "Key",
              "title": "Key",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceActionGroupReadId",
            "key": "id",
            "schema": {
              "description": "Unique id of the action group",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ResourceActionGroupReadId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceActionGroupReadOrganizationId",
            "key": "organization_id",
            "schema": {
              "description": "Unique id of the organization that the action group belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ResourceActionGroupReadOrganizationId",
              "title": "Organization Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceActionGroupReadProjectId",
            "key": "project_id",
            "schema": {
              "description": "Unique id of the project that the action group belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ResourceActionGroupReadProjectId",
              "title": "Project Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceActionGroupReadEnvironmentId",
            "key": "environment_id",
            "schema": {
              "description": "Unique id of the environment that the action group belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ResourceActionGroupReadEnvironmentId",
              "title": "Environment Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceActionGroupReadResourceId",
            "key": "resource_id",
            "schema": {
              "description": "Unique id of the resource that the action group belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ResourceActionGroupReadResourceId",
              "title": "Resource Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceActionGroupReadCreatedAt",
            "key": "created_at",
            "schema": {
              "description": "Date and time when the action group was created (ISO_8601 format).",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "ResourceActionGroupReadCreatedAt",
              "title": "Created At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceActionGroupReadUpdatedAt",
            "key": "updated_at",
            "schema": {
              "description": "Date and time when the action group was last updated/modified (ISO_8601 format).",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "ResourceActionGroupReadUpdatedAt",
              "title": "Updated At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResourceActionGroupRead",
        "nameOverride": "ResourceActionGroupRead",
        "title": "ResourceActionGroupRead",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ResourceActionGroupUpdate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "resourceActionGroupUpdateName",
            "key": "name",
            "schema": {
              "generatedName": "resourceActionGroupUpdateName",
              "nameOverride": "ResourceActionGroupUpdate",
              "title": "ResourceActionGroupUpdate",
              "value": {
                "description": "The name of the action group",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResourceActionGroupUpdateName",
                "nameOverride": "Name",
                "title": "Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceActionGroupUpdateDescription",
            "key": "description",
            "schema": {
              "generatedName": "resourceActionGroupUpdateDescription",
              "nameOverride": "ResourceActionGroupUpdate",
              "title": "ResourceActionGroupUpdate",
              "value": {
                "description": "An optional longer description of what this action group represents in your system",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResourceActionGroupUpdateDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceActionGroupUpdateAttributes",
            "key": "attributes",
            "schema": {
              "generatedName": "resourceActionGroupUpdateAttributes",
              "nameOverride": "ResourceActionGroupUpdate",
              "title": "ResourceActionGroupUpdate",
              "value": {
                "description": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this action group. This metadata can be used to filter action groups using query parameters with attr_ prefix",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ResourceActionGroupUpdateAttributesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ResourceActionGroupUpdateAttributesValue",
                  "type": "unknown"
                },
                "generatedName": "ResourceActionGroupUpdateAttributes",
                "title": "Attributes",
                "nameOverride": "Attributes",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceActionGroupUpdateActions",
            "key": "actions",
            "schema": {
              "generatedName": "resourceActionGroupUpdateActions",
              "nameOverride": "ResourceActionGroupUpdate",
              "title": "ResourceActionGroupUpdate",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ResourceActionGroupUpdateActionsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "ResourceActionGroupUpdateActions",
                "nameOverride": "Actions",
                "title": "Actions",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResourceActionGroupUpdate",
        "nameOverride": "ResourceActionGroupUpdate",
        "title": "ResourceActionGroupUpdate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ResourceActionRead": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "resourceActionReadName",
            "key": "name",
            "schema": {
              "description": "The name of the action",
              "schema": {
                "type": "string"
              },
              "generatedName": "ResourceActionReadName",
              "nameOverride": "Name",
              "title": "Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceActionReadDescription",
            "key": "description",
            "schema": {
              "generatedName": "resourceActionReadDescription",
              "nameOverride": "ResourceActionRead",
              "title": "ResourceActionRead",
              "value": {
                "description": "An optional longer description of what this action respresents in your system",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResourceActionReadDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceActionReadAttributes",
            "key": "attributes",
            "schema": {
              "generatedName": "resourceActionReadAttributes",
              "nameOverride": "ResourceActionRead",
              "title": "ResourceActionRead",
              "value": {
                "description": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this action. This metadata can be used to filter actions using query parameters with attr_ prefix",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ResourceActionReadAttributesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ResourceActionReadAttributesValue",
                  "type": "unknown"
                },
                "generatedName": "ResourceActionReadAttributes",
                "title": "Attributes",
                "nameOverride": "Attributes",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceActionReadKey",
            "key": "key",
            "schema": {
              "description": "A URL-friendly name of the action (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the action.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ResourceActionReadKey",
              "nameOverride": "Key",
              "title": "Key",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceActionReadId",
            "key": "id",
            "schema": {
              "description": "Unique id of the action",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ResourceActionReadId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceActionReadPermissionName",
            "key": "permission_name",
            "schema": {
              "description": "The name of the action, prefixed by the resource the action is acting upon.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ResourceActionReadPermissionName",
              "title": "Permission Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceActionReadOrganizationId",
            "key": "organization_id",
            "schema": {
              "description": "Unique id of the organization that the action belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ResourceActionReadOrganizationId",
              "title": "Organization Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceActionReadProjectId",
            "key": "project_id",
            "schema": {
              "description": "Unique id of the project that the action belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ResourceActionReadProjectId",
              "title": "Project Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceActionReadEnvironmentId",
            "key": "environment_id",
            "schema": {
              "description": "Unique id of the environment that the action belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ResourceActionReadEnvironmentId",
              "title": "Environment Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceActionReadResourceId",
            "key": "resource_id",
            "schema": {
              "description": "Unique id of the resource that the action belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ResourceActionReadResourceId",
              "title": "Resource Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceActionReadCreatedAt",
            "key": "created_at",
            "schema": {
              "description": "Date and time when the action was created (ISO_8601 format).",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "ResourceActionReadCreatedAt",
              "title": "Created At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceActionReadUpdatedAt",
            "key": "updated_at",
            "schema": {
              "description": "Date and time when the action was last updated/modified (ISO_8601 format).",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "ResourceActionReadUpdatedAt",
              "title": "Updated At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResourceActionRead",
        "nameOverride": "ResourceActionRead",
        "title": "ResourceActionRead",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ResourceActionUpdate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "resourceActionUpdateName",
            "key": "name",
            "schema": {
              "generatedName": "resourceActionUpdateName",
              "nameOverride": "ResourceActionUpdate",
              "title": "ResourceActionUpdate",
              "value": {
                "description": "The name of the action",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResourceActionUpdateName",
                "nameOverride": "Name",
                "title": "Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceActionUpdateDescription",
            "key": "description",
            "schema": {
              "generatedName": "resourceActionUpdateDescription",
              "nameOverride": "ResourceActionUpdate",
              "title": "ResourceActionUpdate",
              "value": {
                "description": "An optional longer description of what this action respresents in your system",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResourceActionUpdateDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceActionUpdateAttributes",
            "key": "attributes",
            "schema": {
              "generatedName": "resourceActionUpdateAttributes",
              "nameOverride": "ResourceActionUpdate",
              "title": "ResourceActionUpdate",
              "value": {
                "description": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this action. This metadata can be used to filter actions using query parameters with attr_ prefix",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ResourceActionUpdateAttributesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ResourceActionUpdateAttributesValue",
                  "type": "unknown"
                },
                "generatedName": "ResourceActionUpdateAttributes",
                "title": "Attributes",
                "nameOverride": "Attributes",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResourceActionUpdate",
        "nameOverride": "ResourceActionUpdate",
        "title": "ResourceActionUpdate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ResourceAttributeCreate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "resourceAttributeCreateKey",
            "key": "key",
            "schema": {
              "description": "A URL-friendly name of the attribute (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the attribute.",
              "schema": {
                "pattern": "^[A-Za-z0-9\\-_]+$",
                "type": "string"
              },
              "generatedName": "ResourceAttributeCreateKey",
              "nameOverride": "Key",
              "title": "Key",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceAttributeCreateType",
            "key": "type",
            "schema": {
              "description": "The type of the attribute, we currently support: `bool`, `number` (ints, floats), `time` (a timestamp), `string`, and `json`.",
              "generatedName": "ResourceAttributeCreateType",
              "schema": "AttributeType",
              "groupName": [],
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceAttributeCreateDescription",
            "key": "description",
            "schema": {
              "generatedName": "resourceAttributeCreateDescription",
              "nameOverride": "ResourceAttributeCreate",
              "title": "ResourceAttributeCreate",
              "value": {
                "description": "An optional longer description of what this attribute respresents in your system",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResourceAttributeCreateDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResourceAttributeCreate",
        "nameOverride": "ResourceAttributeCreate",
        "title": "ResourceAttributeCreate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ResourceAttributeRead": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "resourceAttributeReadType",
            "key": "type",
            "schema": {
              "description": "The type of the attribute, we currently support: `bool`, `number` (ints, floats), `time` (a timestamp), `string`, and `json`.",
              "generatedName": "ResourceAttributeReadType",
              "schema": "AttributeType",
              "groupName": [],
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceAttributeReadDescription",
            "key": "description",
            "schema": {
              "generatedName": "resourceAttributeReadDescription",
              "nameOverride": "ResourceAttributeRead",
              "title": "ResourceAttributeRead",
              "value": {
                "description": "An optional longer description of what this attribute respresents in your system",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResourceAttributeReadDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceAttributeReadKey",
            "key": "key",
            "schema": {
              "description": "A URL-friendly name of the attribute (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the attribute.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ResourceAttributeReadKey",
              "nameOverride": "Key",
              "title": "Key",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceAttributeReadId",
            "key": "id",
            "schema": {
              "description": "Unique id of the attribute",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ResourceAttributeReadId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceAttributeReadResourceId",
            "key": "resource_id",
            "schema": {
              "description": "Unique id of the resource that the attribute belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ResourceAttributeReadResourceId",
              "title": "Resource Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceAttributeReadResourceKey",
            "key": "resource_key",
            "schema": {
              "description": "A URL-friendly name of the resource (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the resource.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ResourceAttributeReadResourceKey",
              "title": "Resource Key",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceAttributeReadOrganizationId",
            "key": "organization_id",
            "schema": {
              "description": "Unique id of the organization that the attribute belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ResourceAttributeReadOrganizationId",
              "title": "Organization Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceAttributeReadProjectId",
            "key": "project_id",
            "schema": {
              "description": "Unique id of the project that the attribute belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ResourceAttributeReadProjectId",
              "title": "Project Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceAttributeReadEnvironmentId",
            "key": "environment_id",
            "schema": {
              "description": "Unique id of the environment that the attribute belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ResourceAttributeReadEnvironmentId",
              "title": "Environment Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceAttributeReadCreatedAt",
            "key": "created_at",
            "schema": {
              "description": "Date and time when the attribute was created (ISO_8601 format).",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "ResourceAttributeReadCreatedAt",
              "title": "Created At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceAttributeReadUpdatedAt",
            "key": "updated_at",
            "schema": {
              "description": "Date and time when the attribute was last updated/modified (ISO_8601 format).",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "ResourceAttributeReadUpdatedAt",
              "title": "Updated At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceAttributeReadBuiltIn",
            "key": "built_in",
            "schema": {
              "description": "Whether the attribute is built-in, and managed by the Permit system.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "ResourceAttributeReadBuiltIn",
              "title": "Built In",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResourceAttributeRead",
        "nameOverride": "ResourceAttributeRead",
        "title": "ResourceAttributeRead",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ResourceAttributeUpdate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "resourceAttributeUpdateType",
            "key": "type",
            "schema": {
              "generatedName": "resourceAttributeUpdateType",
              "nameOverride": "ResourceAttributeUpdate",
              "title": "ResourceAttributeUpdate",
              "value": {
                "description": "The type of the attribute, we currently support: `bool`, `number` (ints, floats), `time` (a timestamp), `string`, and `json`.",
                "generatedName": "ResourceAttributeUpdateType",
                "schema": "AttributeType",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceAttributeUpdateDescription",
            "key": "description",
            "schema": {
              "generatedName": "resourceAttributeUpdateDescription",
              "nameOverride": "ResourceAttributeUpdate",
              "title": "ResourceAttributeUpdate",
              "value": {
                "description": "An optional longer description of what this attribute respresents in your system",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResourceAttributeUpdateDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResourceAttributeUpdate",
        "nameOverride": "ResourceAttributeUpdate",
        "title": "ResourceAttributeUpdate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ResourceCreate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "resourceCreateKey",
            "key": "key",
            "schema": {
              "description": "A URL-friendly name of the resource (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the resource.",
              "schema": {
                "pattern": "^[A-Za-z0-9\\-_]+$",
                "type": "string"
              },
              "generatedName": "ResourceCreateKey",
              "nameOverride": "Key",
              "title": "Key",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceCreateName",
            "key": "name",
            "schema": {
              "description": "The name of the resource",
              "schema": {
                "type": "string"
              },
              "generatedName": "ResourceCreateName",
              "nameOverride": "Name",
              "title": "Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceCreateUrn",
            "key": "urn",
            "schema": {
              "generatedName": "resourceCreateUrn",
              "nameOverride": "ResourceCreate",
              "title": "ResourceCreate",
              "value": {
                "description": "The [URN](https://en.wikipedia.org/wiki/Uniform_Resource_Name) (Uniform Resource Name) of the resource",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResourceCreateUrn",
                "nameOverride": "Urn",
                "title": "Urn",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceCreateDescription",
            "key": "description",
            "schema": {
              "generatedName": "resourceCreateDescription",
              "nameOverride": "ResourceCreate",
              "title": "ResourceCreate",
              "value": {
                "description": "An optional longer description of what this resource respresents in your system",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResourceCreateDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceCreateActions",
            "key": "actions",
            "schema": {
              "description": "\n        A actions definition block, typically contained within a resource type definition block.\n        The actions represents the ways you can interact with a protected resource.\n        ",
              "key": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResourceCreateActionsKey",
                "groupName": [],
                "type": "primitive"
              },
              "value": {
                "generatedName": "ResourceCreateActionsValue",
                "schema": "ActionBlockEditable",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "ResourceCreateActions",
              "title": "Actions",
              "nameOverride": "Actions",
              "groupName": [],
              "type": "map"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceCreateAttributes",
            "key": "attributes",
            "schema": {
              "generatedName": "resourceCreateAttributes",
              "nameOverride": "ResourceCreate",
              "title": "ResourceCreate",
              "value": {
                "description": "Attributes that each resource of this type defines, and can be used in your ABAC policies.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ResourceCreateAttributesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ResourceCreateAttributesValue",
                  "schema": "AttributeBlockEditable",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResourceCreateAttributes",
                "title": "Attributes",
                "nameOverride": "Attributes",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResourceCreate",
        "nameOverride": "ResourceCreate",
        "title": "ResourceCreate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ResourceInstanceCreate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "resourceInstanceCreateKey",
            "key": "key",
            "schema": {
              "description": "A unique identifier by which Permit will identify the resource instance for permission checks. You will later pass this identifier to the `permit.check()` API. A key can be anything: for example the resource db id, a url slug, a UUID or anything else as long as it's unique on your end. The resource instance key must be url-friendly.",
              "schema": {
                "pattern": "^[A-Za-z0-9\\-_]+$",
                "type": "string"
              },
              "generatedName": "ResourceInstanceCreateKey",
              "nameOverride": "Key",
              "title": "Key",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceInstanceCreateTenant",
            "key": "tenant",
            "schema": {
              "generatedName": "resourceInstanceCreateTenant",
              "nameOverride": "ResourceInstanceCreate",
              "title": "ResourceInstanceCreate",
              "value": {
                "description": "the *key* of the tenant that this resource belongs to, used to enforce tenant boundaries in multi-tenant apps.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResourceInstanceCreateTenant",
                "nameOverride": "Tenant",
                "title": "Tenant",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceInstanceCreateResource",
            "key": "resource",
            "schema": {
              "description": "the *key* of the resource (type) of this resource instance. For example: if this resource instance is the annual budget document, the key of the resource might be `document`.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ResourceInstanceCreateResource",
              "nameOverride": "Resource",
              "title": "Resource",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceInstanceCreateAttributes",
            "key": "attributes",
            "schema": {
              "generatedName": "resourceInstanceCreateAttributes",
              "nameOverride": "ResourceInstanceCreate",
              "title": "ResourceInstanceCreate",
              "value": {
                "description": "Arbitraty resource attributes that will be used to enforce attribute-based access control policies.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ResourceInstanceCreateAttributesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ResourceInstanceCreateAttributesValue",
                  "type": "unknown"
                },
                "generatedName": "ResourceInstanceCreateAttributes",
                "title": "Attributes",
                "nameOverride": "Attributes",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResourceInstanceCreate",
        "nameOverride": "ResourceInstanceCreate",
        "title": "ResourceInstanceCreate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ResourceInstanceRead": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "resourceInstanceReadKey",
            "key": "key",
            "schema": {
              "description": "A unique identifier by which Permit will identify the resource instance for permission checks. You will later pass this identifier to the `permit.check()` API. A key can be anything: for example the resource db id, a url slug, a UUID or anything else as long as it's unique on your end. The resource instance key must be url-friendly.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ResourceInstanceReadKey",
              "nameOverride": "Key",
              "title": "Key",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceInstanceReadTenant",
            "key": "tenant",
            "schema": {
              "generatedName": "resourceInstanceReadTenant",
              "nameOverride": "ResourceInstanceRead",
              "title": "ResourceInstanceRead",
              "value": {
                "description": "the *key* of the tenant that this resource belongs to, used to enforce tenant boundaries in multi-tenant apps.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResourceInstanceReadTenant",
                "nameOverride": "Tenant",
                "title": "Tenant",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceInstanceReadResource",
            "key": "resource",
            "schema": {
              "description": "the *key* of the resource (type) of this resource instance. For example: if this resource instance is the annual budget document, the key of the resource might be `document`.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ResourceInstanceReadResource",
              "nameOverride": "Resource",
              "title": "Resource",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceInstanceReadId",
            "key": "id",
            "schema": {
              "description": "Unique id of the resource instance",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ResourceInstanceReadId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceInstanceReadOrganizationId",
            "key": "organization_id",
            "schema": {
              "description": "Unique id of the organization that the resource instance belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ResourceInstanceReadOrganizationId",
              "title": "Organization Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceInstanceReadProjectId",
            "key": "project_id",
            "schema": {
              "description": "Unique id of the project that the resource instance belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ResourceInstanceReadProjectId",
              "title": "Project Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceInstanceReadEnvironmentId",
            "key": "environment_id",
            "schema": {
              "description": "Unique id of the environment that the resource instance belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ResourceInstanceReadEnvironmentId",
              "title": "Environment Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceInstanceReadCreatedAt",
            "key": "created_at",
            "schema": {
              "description": "Date and time when the resource instance was created (ISO_8601 format).",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "ResourceInstanceReadCreatedAt",
              "title": "Created At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceInstanceReadUpdatedAt",
            "key": "updated_at",
            "schema": {
              "description": "Date and time when the resource instance was last updated/modified (ISO_8601 format).",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "ResourceInstanceReadUpdatedAt",
              "title": "Updated At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceInstanceReadResourceId",
            "key": "resource_id",
            "schema": {
              "description": "the id of the resource (type) of this resource instance.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ResourceInstanceReadResourceId",
              "title": "Resource Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceInstanceReadTenantId",
            "key": "tenant_id",
            "schema": {
              "generatedName": "resourceInstanceReadTenantId",
              "nameOverride": "ResourceInstanceRead",
              "title": "ResourceInstanceRead",
              "value": {
                "description": "the id of the tenant of this resource instance.",
                "schema": {
                  "format": "uuid",
                  "type": "string"
                },
                "generatedName": "ResourceInstanceReadTenantId",
                "title": "Tenant Id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceInstanceReadAttributes",
            "key": "attributes",
            "schema": {
              "generatedName": "resourceInstanceReadAttributes",
              "nameOverride": "ResourceInstanceRead",
              "title": "ResourceInstanceRead",
              "value": {
                "description": "Arbitraty resource attributes that will be used to enforce attribute-based access control policies.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ResourceInstanceReadAttributesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ResourceInstanceReadAttributesValue",
                  "type": "unknown"
                },
                "generatedName": "ResourceInstanceReadAttributes",
                "title": "Attributes",
                "nameOverride": "Attributes",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResourceInstanceRead",
        "nameOverride": "ResourceInstanceRead",
        "title": "ResourceInstanceRead",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ResourceInstanceUpdate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "resourceInstanceUpdateAttributes",
            "key": "attributes",
            "schema": {
              "generatedName": "resourceInstanceUpdateAttributes",
              "nameOverride": "ResourceInstanceUpdate",
              "title": "ResourceInstanceUpdate",
              "value": {
                "description": "Arbitraty resource attributes that will be used to enforce attribute-based access control policies.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ResourceInstanceUpdateAttributesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ResourceInstanceUpdateAttributesValue",
                  "type": "unknown"
                },
                "generatedName": "ResourceInstanceUpdateAttributes",
                "title": "Attributes",
                "nameOverride": "Attributes",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResourceInstanceUpdate",
        "nameOverride": "ResourceInstanceUpdate",
        "title": "ResourceInstanceUpdate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ResourceRead": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "resourceReadKey",
            "key": "key",
            "schema": {
              "description": "A URL-friendly name of the resource (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the resource.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ResourceReadKey",
              "nameOverride": "Key",
              "title": "Key",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceReadId",
            "key": "id",
            "schema": {
              "description": "Unique id of the resource",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ResourceReadId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceReadOrganizationId",
            "key": "organization_id",
            "schema": {
              "description": "Unique id of the organization that the resource belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ResourceReadOrganizationId",
              "title": "Organization Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceReadProjectId",
            "key": "project_id",
            "schema": {
              "description": "Unique id of the project that the resource belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ResourceReadProjectId",
              "title": "Project Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceReadEnvironmentId",
            "key": "environment_id",
            "schema": {
              "description": "Unique id of the environment that the resource belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ResourceReadEnvironmentId",
              "title": "Environment Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceReadCreatedAt",
            "key": "created_at",
            "schema": {
              "description": "Date and time when the resource was created (ISO_8601 format).",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "ResourceReadCreatedAt",
              "title": "Created At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceReadUpdatedAt",
            "key": "updated_at",
            "schema": {
              "description": "Date and time when the resource was last updated/modified (ISO_8601 format).",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "ResourceReadUpdatedAt",
              "title": "Updated At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceReadName",
            "key": "name",
            "schema": {
              "description": "The name of the resource",
              "schema": {
                "type": "string"
              },
              "generatedName": "ResourceReadName",
              "nameOverride": "Name",
              "title": "Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceReadUrn",
            "key": "urn",
            "schema": {
              "generatedName": "resourceReadUrn",
              "nameOverride": "ResourceRead",
              "title": "ResourceRead",
              "value": {
                "description": "The [URN](https://en.wikipedia.org/wiki/Uniform_Resource_Name) (Uniform Resource Name) of the resource",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResourceReadUrn",
                "nameOverride": "Urn",
                "title": "Urn",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceReadDescription",
            "key": "description",
            "schema": {
              "generatedName": "resourceReadDescription",
              "nameOverride": "ResourceRead",
              "title": "ResourceRead",
              "value": {
                "description": "An optional longer description of what this resource respresents in your system",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResourceReadDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceReadActions",
            "key": "actions",
            "schema": {
              "generatedName": "resourceReadActions",
              "nameOverride": "ResourceRead",
              "title": "ResourceRead",
              "value": {
                "description": "\n        A actions definition block, typically contained within a resource type definition block.\n        The actions represents the ways you can interact with a protected resource.\n        ",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ResourceReadActionsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ResourceReadActionsValue",
                  "schema": "ActionBlockRead",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResourceReadActions",
                "title": "Actions",
                "nameOverride": "Actions",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceReadAttributes",
            "key": "attributes",
            "schema": {
              "generatedName": "resourceReadAttributes",
              "nameOverride": "ResourceRead",
              "title": "ResourceRead",
              "value": {
                "description": "Attributes that each resource of this type defines, and can be used in your ABAC policies.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ResourceReadAttributesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ResourceReadAttributesValue",
                  "schema": "AttributeBlockRead",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResourceReadAttributes",
                "title": "Attributes",
                "nameOverride": "Attributes",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceReadActionGroups",
            "key": "action_groups",
            "schema": {
              "generatedName": "resourceReadActionGroups",
              "nameOverride": "ResourceRead",
              "title": "ResourceRead",
              "value": {
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ResourceReadActionGroupsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ResourceReadActionGroupsValueItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "ResourceReadActionGroupsValue",
                  "groupName": [],
                  "inline": true,
                  "type": "array"
                },
                "generatedName": "ResourceReadActionGroups",
                "title": "Action Groups",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResourceRead",
        "nameOverride": "ResourceRead",
        "title": "ResourceRead",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ResourceReplace": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "resourceReplaceName",
            "key": "name",
            "schema": {
              "description": "The name of the resource",
              "schema": {
                "type": "string"
              },
              "generatedName": "ResourceReplaceName",
              "nameOverride": "Name",
              "title": "Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceReplaceUrn",
            "key": "urn",
            "schema": {
              "generatedName": "resourceReplaceUrn",
              "nameOverride": "ResourceReplace",
              "title": "ResourceReplace",
              "value": {
                "description": "The [URN](https://en.wikipedia.org/wiki/Uniform_Resource_Name) (Uniform Resource Name) of the resource",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResourceReplaceUrn",
                "nameOverride": "Urn",
                "title": "Urn",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceReplaceDescription",
            "key": "description",
            "schema": {
              "generatedName": "resourceReplaceDescription",
              "nameOverride": "ResourceReplace",
              "title": "ResourceReplace",
              "value": {
                "description": "An optional longer description of what this resource respresents in your system",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResourceReplaceDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceReplaceActions",
            "key": "actions",
            "schema": {
              "description": "\n        A actions definition block, typically contained within a resource type definition block.\n        The actions represents the ways you can interact with a protected resource.\n        ",
              "key": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResourceReplaceActionsKey",
                "groupName": [],
                "type": "primitive"
              },
              "value": {
                "generatedName": "ResourceReplaceActionsValue",
                "schema": "ActionBlockEditable",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "ResourceReplaceActions",
              "title": "Actions",
              "nameOverride": "Actions",
              "groupName": [],
              "type": "map"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceReplaceAttributes",
            "key": "attributes",
            "schema": {
              "generatedName": "resourceReplaceAttributes",
              "nameOverride": "ResourceReplace",
              "title": "ResourceReplace",
              "value": {
                "description": "Attributes that each resource of this type defines, and can be used in your ABAC policies.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ResourceReplaceAttributesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ResourceReplaceAttributesValue",
                  "schema": "AttributeBlockEditable",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResourceReplaceAttributes",
                "title": "Attributes",
                "nameOverride": "Attributes",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResourceReplace",
        "nameOverride": "ResourceReplace",
        "title": "ResourceReplace",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ResourceRoleCreate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "resourceRoleCreateKey",
            "key": "key",
            "schema": {
              "description": "A URL-friendly name of the role (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the role.",
              "schema": {
                "pattern": "^[A-Za-z0-9\\-_]+$",
                "type": "string"
              },
              "generatedName": "ResourceRoleCreateKey",
              "nameOverride": "Key",
              "title": "Key",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceRoleCreateName",
            "key": "name",
            "schema": {
              "description": "The name of the role",
              "schema": {
                "type": "string"
              },
              "generatedName": "ResourceRoleCreateName",
              "nameOverride": "Name",
              "title": "Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceRoleCreateDescription",
            "key": "description",
            "schema": {
              "generatedName": "resourceRoleCreateDescription",
              "nameOverride": "ResourceRoleCreate",
              "title": "ResourceRoleCreate",
              "value": {
                "description": "optional description string explaining what this role represents, or what permissions are granted to it.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResourceRoleCreateDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceRoleCreatePermissions",
            "key": "permissions",
            "schema": {
              "generatedName": "resourceRoleCreatePermissions",
              "nameOverride": "ResourceRoleCreate",
              "title": "ResourceRoleCreate",
              "value": {
                "description": "list of action keys that define what actions this resource role is permitted to do",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ResourceRoleCreatePermissionsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "ResourceRoleCreatePermissions",
                "nameOverride": "Permissions",
                "title": "Permissions",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceRoleCreateAttributes",
            "key": "attributes",
            "schema": {
              "generatedName": "resourceRoleCreateAttributes",
              "nameOverride": "ResourceRoleCreate",
              "title": "ResourceRoleCreate",
              "value": {
                "description": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this role. This metadata can be used to filter role using query parameters with attr_ prefix, currently supports only 'equals' operator",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ResourceRoleCreateAttributesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ResourceRoleCreateAttributesValue",
                  "type": "unknown"
                },
                "generatedName": "ResourceRoleCreateAttributes",
                "title": "Attributes",
                "nameOverride": "Attributes",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceRoleCreateExtends",
            "key": "extends",
            "schema": {
              "generatedName": "resourceRoleCreateExtends",
              "nameOverride": "ResourceRoleCreate",
              "title": "ResourceRoleCreate",
              "value": {
                "description": "list of role keys that define what roles this role extends. In other words: this role will automatically inherit all the permissions of the given roles in this list.",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ResourceRoleCreateExtendsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "ResourceRoleCreateExtends",
                "nameOverride": "Extends",
                "title": "Extends",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResourceRoleCreate",
        "nameOverride": "ResourceRoleCreate",
        "title": "ResourceRoleCreate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ResourceRoleList": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "resourceRoleListRoles",
            "key": "roles",
            "schema": {
              "value": {
                "generatedName": "ResourceRoleListRoles",
                "title": "Roles",
                "nameOverride": "Roles",
                "schemas": [
                  {
                    "value": {
                      "generatedName": "ResourceRoleListRolesItem",
                      "schema": "ResourceRoleRead",
                      "source": {
                        "file": "../openapi.json",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "generatedName": "ResourceRoleListRoles",
                    "groupName": [],
                    "type": "array"
                  },
                  {
                    "generatedName": "ResourceRoleListRolesOne",
                    "schema": "PaginatedResult_ResourceRoleRead_",
                    "source": {
                      "file": "../openapi.json",
                      "type": "openapi"
                    },
                    "type": "reference"
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "undiscriminated"
              },
              "type": "oneOf"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResourceRoleList",
        "nameOverride": "ResourceRoleList",
        "title": "ResourceRoleList",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ResourceRoleRead": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "resourceRoleReadName",
            "key": "name",
            "schema": {
              "description": "The name of the role",
              "schema": {
                "type": "string"
              },
              "generatedName": "ResourceRoleReadName",
              "nameOverride": "Name",
              "title": "Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceRoleReadDescription",
            "key": "description",
            "schema": {
              "generatedName": "resourceRoleReadDescription",
              "nameOverride": "ResourceRoleRead",
              "title": "ResourceRoleRead",
              "value": {
                "description": "optional description string explaining what this role represents, or what permissions are granted to it.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResourceRoleReadDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceRoleReadPermissions",
            "key": "permissions",
            "schema": {
              "generatedName": "resourceRoleReadPermissions",
              "nameOverride": "ResourceRoleRead",
              "title": "ResourceRoleRead",
              "value": {
                "description": "list of action keys that define what actions this resource role is permitted to do",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ResourceRoleReadPermissionsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "ResourceRoleReadPermissions",
                "nameOverride": "Permissions",
                "title": "Permissions",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceRoleReadAttributes",
            "key": "attributes",
            "schema": {
              "generatedName": "resourceRoleReadAttributes",
              "nameOverride": "ResourceRoleRead",
              "title": "ResourceRoleRead",
              "value": {
                "description": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this role. This metadata can be used to filter role using query parameters with attr_ prefix, currently supports only 'equals' operator",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ResourceRoleReadAttributesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ResourceRoleReadAttributesValue",
                  "type": "unknown"
                },
                "generatedName": "ResourceRoleReadAttributes",
                "title": "Attributes",
                "nameOverride": "Attributes",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceRoleReadExtends",
            "key": "extends",
            "schema": {
              "generatedName": "resourceRoleReadExtends",
              "nameOverride": "ResourceRoleRead",
              "title": "ResourceRoleRead",
              "value": {
                "description": "list of role keys that define what roles this role extends. In other words: this role will automatically inherit all the permissions of the given roles in this list.",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ResourceRoleReadExtendsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "ResourceRoleReadExtends",
                "nameOverride": "Extends",
                "title": "Extends",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceRoleReadKey",
            "key": "key",
            "schema": {
              "description": "A URL-friendly name of the role (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the role.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ResourceRoleReadKey",
              "nameOverride": "Key",
              "title": "Key",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceRoleReadId",
            "key": "id",
            "schema": {
              "description": "Unique id of the role",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ResourceRoleReadId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceRoleReadOrganizationId",
            "key": "organization_id",
            "schema": {
              "description": "Unique id of the organization that the role belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ResourceRoleReadOrganizationId",
              "title": "Organization Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceRoleReadProjectId",
            "key": "project_id",
            "schema": {
              "description": "Unique id of the project that the role belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ResourceRoleReadProjectId",
              "title": "Project Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceRoleReadEnvironmentId",
            "key": "environment_id",
            "schema": {
              "description": "Unique id of the environment that the role belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ResourceRoleReadEnvironmentId",
              "title": "Environment Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceRoleReadResourceId",
            "key": "resource_id",
            "schema": {
              "description": "Unique id of the resource that the role belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ResourceRoleReadResourceId",
              "title": "Resource Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceRoleReadCreatedAt",
            "key": "created_at",
            "schema": {
              "description": "Date and time when the role was created (ISO_8601 format).",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "ResourceRoleReadCreatedAt",
              "title": "Created At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceRoleReadUpdatedAt",
            "key": "updated_at",
            "schema": {
              "description": "Date and time when the role was last updated/modified (ISO_8601 format).",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "ResourceRoleReadUpdatedAt",
              "title": "Updated At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResourceRoleRead",
        "nameOverride": "ResourceRoleRead",
        "title": "ResourceRoleRead",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ResourceRoleUpdate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "resourceRoleUpdateName",
            "key": "name",
            "schema": {
              "generatedName": "resourceRoleUpdateName",
              "nameOverride": "ResourceRoleUpdate",
              "title": "ResourceRoleUpdate",
              "value": {
                "description": "The name of the role",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResourceRoleUpdateName",
                "nameOverride": "Name",
                "title": "Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceRoleUpdateDescription",
            "key": "description",
            "schema": {
              "generatedName": "resourceRoleUpdateDescription",
              "nameOverride": "ResourceRoleUpdate",
              "title": "ResourceRoleUpdate",
              "value": {
                "description": "optional description string explaining what this role represents, or what permissions are granted to it.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResourceRoleUpdateDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceRoleUpdatePermissions",
            "key": "permissions",
            "schema": {
              "generatedName": "resourceRoleUpdatePermissions",
              "nameOverride": "ResourceRoleUpdate",
              "title": "ResourceRoleUpdate",
              "value": {
                "description": "list of action keys that define what actions this resource role is permitted to do",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ResourceRoleUpdatePermissionsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "ResourceRoleUpdatePermissions",
                "nameOverride": "Permissions",
                "title": "Permissions",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceRoleUpdateAttributes",
            "key": "attributes",
            "schema": {
              "generatedName": "resourceRoleUpdateAttributes",
              "nameOverride": "ResourceRoleUpdate",
              "title": "ResourceRoleUpdate",
              "value": {
                "description": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this role. This metadata can be used to filter role using query parameters with attr_ prefix, currently supports only 'equals' operator",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ResourceRoleUpdateAttributesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ResourceRoleUpdateAttributesValue",
                  "type": "unknown"
                },
                "generatedName": "ResourceRoleUpdateAttributes",
                "title": "Attributes",
                "nameOverride": "Attributes",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceRoleUpdateExtends",
            "key": "extends",
            "schema": {
              "generatedName": "resourceRoleUpdateExtends",
              "nameOverride": "ResourceRoleUpdate",
              "title": "ResourceRoleUpdate",
              "value": {
                "description": "list of role keys that define what roles this role extends. In other words: this role will automatically inherit all the permissions of the given roles in this list.",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ResourceRoleUpdateExtendsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "ResourceRoleUpdateExtends",
                "nameOverride": "Extends",
                "title": "Extends",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResourceRoleUpdate",
        "nameOverride": "ResourceRoleUpdate",
        "title": "ResourceRoleUpdate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ResourceUpdate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "resourceUpdateName",
            "key": "name",
            "schema": {
              "generatedName": "resourceUpdateName",
              "nameOverride": "ResourceUpdate",
              "title": "ResourceUpdate",
              "value": {
                "description": "The name of the resource",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResourceUpdateName",
                "nameOverride": "Name",
                "title": "Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceUpdateUrn",
            "key": "urn",
            "schema": {
              "generatedName": "resourceUpdateUrn",
              "nameOverride": "ResourceUpdate",
              "title": "ResourceUpdate",
              "value": {
                "description": "The [URN](https://en.wikipedia.org/wiki/Uniform_Resource_Name) (Uniform Resource Name) of the resource",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResourceUpdateUrn",
                "nameOverride": "Urn",
                "title": "Urn",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceUpdateDescription",
            "key": "description",
            "schema": {
              "generatedName": "resourceUpdateDescription",
              "nameOverride": "ResourceUpdate",
              "title": "ResourceUpdate",
              "value": {
                "description": "An optional longer description of what this resource respresents in your system",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResourceUpdateDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceUpdateActions",
            "key": "actions",
            "schema": {
              "generatedName": "resourceUpdateActions",
              "nameOverride": "ResourceUpdate",
              "title": "ResourceUpdate",
              "value": {
                "description": "\n        A actions definition block, typically contained within a resource type definition block.\n        The actions represents the ways you can interact with a protected resource.\n        ",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ResourceUpdateActionsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ResourceUpdateActionsValue",
                  "schema": "ActionBlockEditable",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResourceUpdateActions",
                "title": "Actions",
                "nameOverride": "Actions",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceUpdateAttributes",
            "key": "attributes",
            "schema": {
              "generatedName": "resourceUpdateAttributes",
              "nameOverride": "ResourceUpdate",
              "title": "ResourceUpdate",
              "value": {
                "description": "Attributes that each resource of this type defines, and can be used in your ABAC policies.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ResourceUpdateAttributesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ResourceUpdateAttributesValue",
                  "schema": "AttributeBlockEditable",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResourceUpdateAttributes",
                "title": "Attributes",
                "nameOverride": "Attributes",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResourceUpdate",
        "nameOverride": "ResourceUpdate",
        "title": "ResourceUpdate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "RoleAssignmentCreate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "roleAssignmentCreateRole",
            "key": "role",
            "schema": {
              "description": "the role that will be assigned (accepts either the role id or the role key)",
              "schema": {
                "type": "string"
              },
              "generatedName": "RoleAssignmentCreateRole",
              "nameOverride": "Role",
              "title": "Role",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleAssignmentCreateTenant",
            "key": "tenant",
            "schema": {
              "description": "the tenant the role is associated with (accepts either the tenant id or the tenant key)",
              "schema": {
                "type": "string"
              },
              "generatedName": "RoleAssignmentCreateTenant",
              "nameOverride": "Tenant",
              "title": "Tenant",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleAssignmentCreateUser",
            "key": "user",
            "schema": {
              "description": "the user the role will be assigned to (accepts either the user id or the user key)",
              "schema": {
                "type": "string"
              },
              "generatedName": "RoleAssignmentCreateUser",
              "nameOverride": "User",
              "title": "User",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RoleAssignmentCreate",
        "nameOverride": "RoleAssignmentCreate",
        "title": "RoleAssignmentCreate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "RoleAssignmentRead": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "roleAssignmentReadId",
            "key": "id",
            "schema": {
              "description": "Unique id of the role assignment",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "RoleAssignmentReadId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleAssignmentReadUser",
            "key": "user",
            "schema": {
              "description": "the user the role is assigned to",
              "schema": {
                "type": "string"
              },
              "generatedName": "RoleAssignmentReadUser",
              "nameOverride": "User",
              "title": "User",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleAssignmentReadRole",
            "key": "role",
            "schema": {
              "description": "the role that is assigned",
              "schema": {
                "type": "string"
              },
              "generatedName": "RoleAssignmentReadRole",
              "nameOverride": "Role",
              "title": "Role",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleAssignmentReadTenant",
            "key": "tenant",
            "schema": {
              "description": "the tenant the role is associated with",
              "schema": {
                "type": "string"
              },
              "generatedName": "RoleAssignmentReadTenant",
              "nameOverride": "Tenant",
              "title": "Tenant",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleAssignmentReadUserId",
            "key": "user_id",
            "schema": {
              "description": "Unique id of the user",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "RoleAssignmentReadUserId",
              "title": "User Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleAssignmentReadRoleId",
            "key": "role_id",
            "schema": {
              "description": "Unique id of the role",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "RoleAssignmentReadRoleId",
              "title": "Role Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleAssignmentReadTenantId",
            "key": "tenant_id",
            "schema": {
              "description": "Unique id of the tenant",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "RoleAssignmentReadTenantId",
              "title": "Tenant Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleAssignmentReadOrganizationId",
            "key": "organization_id",
            "schema": {
              "description": "Unique id of the organization that the role assignment belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "RoleAssignmentReadOrganizationId",
              "title": "Organization Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleAssignmentReadProjectId",
            "key": "project_id",
            "schema": {
              "description": "Unique id of the project that the role assignment belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "RoleAssignmentReadProjectId",
              "title": "Project Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleAssignmentReadEnvironmentId",
            "key": "environment_id",
            "schema": {
              "description": "Unique id of the environment that the role assignment belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "RoleAssignmentReadEnvironmentId",
              "title": "Environment Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleAssignmentReadCreatedAt",
            "key": "created_at",
            "schema": {
              "description": "Date and time when the role assignment was created (ISO_8601 format).",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "RoleAssignmentReadCreatedAt",
              "title": "Created At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RoleAssignmentRead",
        "nameOverride": "RoleAssignmentRead",
        "title": "RoleAssignmentRead",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "RoleAssignmentRemove": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "roleAssignmentRemoveRole",
            "key": "role",
            "schema": {
              "description": "the role that will be unassigned (accepts either the role id or the role key)",
              "schema": {
                "type": "string"
              },
              "generatedName": "RoleAssignmentRemoveRole",
              "nameOverride": "Role",
              "title": "Role",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleAssignmentRemoveTenant",
            "key": "tenant",
            "schema": {
              "description": "the tenant the role is associated with (accepts either the tenant id or the tenant key)",
              "schema": {
                "type": "string"
              },
              "generatedName": "RoleAssignmentRemoveTenant",
              "nameOverride": "Tenant",
              "title": "Tenant",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleAssignmentRemoveUser",
            "key": "user",
            "schema": {
              "description": "the user the role will be unassigned from (accepts either the user id or the user key)",
              "schema": {
                "type": "string"
              },
              "generatedName": "RoleAssignmentRemoveUser",
              "nameOverride": "User",
              "title": "User",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RoleAssignmentRemove",
        "nameOverride": "RoleAssignmentRemove",
        "title": "RoleAssignmentRemove",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "RoleBlock": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "roleBlockDescription",
            "key": "description",
            "schema": {
              "generatedName": "roleBlockDescription",
              "nameOverride": "RoleBlock",
              "title": "RoleBlock",
              "value": {
                "description": "optional description string explaining what this role represents, or what permissions are granted to it.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "RoleBlockDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleBlockPermissions",
            "key": "permissions",
            "schema": {
              "generatedName": "roleBlockPermissions",
              "nameOverride": "RoleBlock",
              "title": "RoleBlock",
              "value": {
                "description": "list of action keys that define what actions this resource role is permitted to do",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "RoleBlockPermissionsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "RoleBlockPermissions",
                "nameOverride": "Permissions",
                "title": "Permissions",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RoleBlock",
        "nameOverride": "RoleBlock",
        "title": "RoleBlock",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "RoleCreate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "roleCreateKey",
            "key": "key",
            "schema": {
              "description": "A URL-friendly name of the role (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the role.",
              "schema": {
                "pattern": "^[A-Za-z0-9\\-_]+$",
                "type": "string"
              },
              "generatedName": "RoleCreateKey",
              "nameOverride": "Key",
              "title": "Key",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleCreateName",
            "key": "name",
            "schema": {
              "description": "The name of the role",
              "schema": {
                "type": "string"
              },
              "generatedName": "RoleCreateName",
              "nameOverride": "Name",
              "title": "Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleCreateDescription",
            "key": "description",
            "schema": {
              "generatedName": "roleCreateDescription",
              "nameOverride": "RoleCreate",
              "title": "RoleCreate",
              "value": {
                "description": "optional description string explaining what this role represents, or what permissions are granted to it.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "RoleCreateDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleCreatePermissions",
            "key": "permissions",
            "schema": {
              "generatedName": "roleCreatePermissions",
              "nameOverride": "RoleCreate",
              "title": "RoleCreate",
              "value": {
                "description": "list of action keys that define what actions this resource role is permitted to do",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "RoleCreatePermissionsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "RoleCreatePermissions",
                "nameOverride": "Permissions",
                "title": "Permissions",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleCreateAttributes",
            "key": "attributes",
            "schema": {
              "generatedName": "roleCreateAttributes",
              "nameOverride": "RoleCreate",
              "title": "RoleCreate",
              "value": {
                "description": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this role. This metadata can be used to filter role using query parameters with attr_ prefix, currently supports only 'equals' operator",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "RoleCreateAttributesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "RoleCreateAttributesValue",
                  "type": "unknown"
                },
                "generatedName": "RoleCreateAttributes",
                "title": "Attributes",
                "nameOverride": "Attributes",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleCreateExtends",
            "key": "extends",
            "schema": {
              "generatedName": "roleCreateExtends",
              "nameOverride": "RoleCreate",
              "title": "RoleCreate",
              "value": {
                "description": "list of role keys that define what roles this role extends. In other words: this role will automatically inherit all the permissions of the given roles in this list.",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "RoleCreateExtendsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "RoleCreateExtends",
                "nameOverride": "Extends",
                "title": "Extends",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RoleCreate",
        "nameOverride": "RoleCreate",
        "title": "RoleCreate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "RoleList": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "roleListRoles",
            "key": "roles",
            "schema": {
              "value": {
                "generatedName": "RoleListRoles",
                "title": "Roles",
                "nameOverride": "Roles",
                "schemas": [
                  {
                    "value": {
                      "generatedName": "RoleListRolesItem",
                      "schema": "RoleRead",
                      "source": {
                        "file": "../openapi.json",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "generatedName": "RoleListRoles",
                    "groupName": [],
                    "type": "array"
                  },
                  {
                    "generatedName": "RoleListRolesOne",
                    "schema": "PaginatedResult_RoleRead_",
                    "source": {
                      "file": "../openapi.json",
                      "type": "openapi"
                    },
                    "type": "reference"
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "undiscriminated"
              },
              "type": "oneOf"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RoleList",
        "nameOverride": "RoleList",
        "title": "RoleList",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "RoleRead": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "roleReadName",
            "key": "name",
            "schema": {
              "description": "The name of the role",
              "schema": {
                "type": "string"
              },
              "generatedName": "RoleReadName",
              "nameOverride": "Name",
              "title": "Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleReadDescription",
            "key": "description",
            "schema": {
              "generatedName": "roleReadDescription",
              "nameOverride": "RoleRead",
              "title": "RoleRead",
              "value": {
                "description": "optional description string explaining what this role represents, or what permissions are granted to it.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "RoleReadDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleReadPermissions",
            "key": "permissions",
            "schema": {
              "generatedName": "roleReadPermissions",
              "nameOverride": "RoleRead",
              "title": "RoleRead",
              "value": {
                "description": "list of action keys that define what actions this resource role is permitted to do",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "RoleReadPermissionsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "RoleReadPermissions",
                "nameOverride": "Permissions",
                "title": "Permissions",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleReadAttributes",
            "key": "attributes",
            "schema": {
              "generatedName": "roleReadAttributes",
              "nameOverride": "RoleRead",
              "title": "RoleRead",
              "value": {
                "description": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this role. This metadata can be used to filter role using query parameters with attr_ prefix, currently supports only 'equals' operator",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "RoleReadAttributesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "RoleReadAttributesValue",
                  "type": "unknown"
                },
                "generatedName": "RoleReadAttributes",
                "title": "Attributes",
                "nameOverride": "Attributes",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleReadExtends",
            "key": "extends",
            "schema": {
              "generatedName": "roleReadExtends",
              "nameOverride": "RoleRead",
              "title": "RoleRead",
              "value": {
                "description": "list of role keys that define what roles this role extends. In other words: this role will automatically inherit all the permissions of the given roles in this list.",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "RoleReadExtendsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "RoleReadExtends",
                "nameOverride": "Extends",
                "title": "Extends",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleReadKey",
            "key": "key",
            "schema": {
              "description": "A URL-friendly name of the role (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the role.",
              "schema": {
                "type": "string"
              },
              "generatedName": "RoleReadKey",
              "nameOverride": "Key",
              "title": "Key",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleReadId",
            "key": "id",
            "schema": {
              "description": "Unique id of the role",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "RoleReadId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleReadOrganizationId",
            "key": "organization_id",
            "schema": {
              "description": "Unique id of the organization that the role belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "RoleReadOrganizationId",
              "title": "Organization Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleReadProjectId",
            "key": "project_id",
            "schema": {
              "description": "Unique id of the project that the role belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "RoleReadProjectId",
              "title": "Project Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleReadEnvironmentId",
            "key": "environment_id",
            "schema": {
              "description": "Unique id of the environment that the role belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "RoleReadEnvironmentId",
              "title": "Environment Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleReadCreatedAt",
            "key": "created_at",
            "schema": {
              "description": "Date and time when the role was created (ISO_8601 format).",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "RoleReadCreatedAt",
              "title": "Created At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleReadUpdatedAt",
            "key": "updated_at",
            "schema": {
              "description": "Date and time when the role was last updated/modified (ISO_8601 format).",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "RoleReadUpdatedAt",
              "title": "Updated At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RoleRead",
        "nameOverride": "RoleRead",
        "title": "RoleRead",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "RoleUpdate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "roleUpdateName",
            "key": "name",
            "schema": {
              "generatedName": "roleUpdateName",
              "nameOverride": "RoleUpdate",
              "title": "RoleUpdate",
              "value": {
                "description": "The name of the role",
                "schema": {
                  "type": "string"
                },
                "generatedName": "RoleUpdateName",
                "nameOverride": "Name",
                "title": "Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleUpdateDescription",
            "key": "description",
            "schema": {
              "generatedName": "roleUpdateDescription",
              "nameOverride": "RoleUpdate",
              "title": "RoleUpdate",
              "value": {
                "description": "optional description string explaining what this role represents, or what permissions are granted to it.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "RoleUpdateDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleUpdatePermissions",
            "key": "permissions",
            "schema": {
              "generatedName": "roleUpdatePermissions",
              "nameOverride": "RoleUpdate",
              "title": "RoleUpdate",
              "value": {
                "description": "list of action keys that define what actions this resource role is permitted to do",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "RoleUpdatePermissionsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "RoleUpdatePermissions",
                "nameOverride": "Permissions",
                "title": "Permissions",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleUpdateAttributes",
            "key": "attributes",
            "schema": {
              "generatedName": "roleUpdateAttributes",
              "nameOverride": "RoleUpdate",
              "title": "RoleUpdate",
              "value": {
                "description": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this role. This metadata can be used to filter role using query parameters with attr_ prefix, currently supports only 'equals' operator",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "RoleUpdateAttributesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "RoleUpdateAttributesValue",
                  "type": "unknown"
                },
                "generatedName": "RoleUpdateAttributes",
                "title": "Attributes",
                "nameOverride": "Attributes",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleUpdateExtends",
            "key": "extends",
            "schema": {
              "generatedName": "roleUpdateExtends",
              "nameOverride": "RoleUpdate",
              "title": "RoleUpdate",
              "value": {
                "description": "list of role keys that define what roles this role extends. In other words: this role will automatically inherit all the permissions of the given roles in this list.",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "RoleUpdateExtendsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "RoleUpdateExtends",
                "nameOverride": "Extends",
                "title": "Extends",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RoleUpdate",
        "nameOverride": "RoleUpdate",
        "title": "RoleUpdate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "RolesBlock": {
        "description": "Resource roles definition block, defines all the roles on the resource.",
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "RolesBlockKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "RolesBlockValue",
          "type": "unknown"
        },
        "generatedName": "RolesBlock",
        "title": "RolesBlock",
        "nameOverride": "RolesBlock",
        "groupName": [],
        "type": "map"
      },
      "Statistics": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "statisticsRoles",
            "key": "roles",
            "schema": {
              "schema": {
                "minimum": 0,
                "type": "int"
              },
              "generatedName": "StatisticsRoles",
              "nameOverride": "Roles",
              "title": "Roles",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "statisticsUsers",
            "key": "users",
            "schema": {
              "schema": {
                "minimum": 0,
                "type": "int"
              },
              "generatedName": "StatisticsUsers",
              "nameOverride": "Users",
              "title": "Users",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "statisticsPolicies",
            "key": "policies",
            "schema": {
              "schema": {
                "minimum": 0,
                "type": "int"
              },
              "generatedName": "StatisticsPolicies",
              "nameOverride": "Policies",
              "title": "Policies",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "statisticsResources",
            "key": "resources",
            "schema": {
              "schema": {
                "minimum": 0,
                "type": "int"
              },
              "generatedName": "StatisticsResources",
              "nameOverride": "Resources",
              "title": "Resources",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "statisticsTenants",
            "key": "tenants",
            "schema": {
              "schema": {
                "minimum": 0,
                "type": "int"
              },
              "generatedName": "StatisticsTenants",
              "nameOverride": "Tenants",
              "title": "Tenants",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "statisticsHasDecisionLogs",
            "key": "has_decision_logs",
            "schema": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "StatisticsHasDecisionLogs",
              "title": "Has Decision Logs",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "statisticsMembers",
            "key": "members",
            "schema": {
              "value": {
                "generatedName": "StatisticsMembersItem",
                "schema": "OrgMemberReadWithGrants",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "StatisticsMembers",
              "nameOverride": "Members",
              "title": "Members",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Statistics",
        "nameOverride": "Statistics",
        "title": "Statistics",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "TenantCreate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "tenantCreateKey",
            "key": "key",
            "schema": {
              "description": "A unique id by which Permit will identify the tenant. The tenant key must be url-friendly (slugified).",
              "schema": {
                "pattern": "^[A-Za-z0-9\\-_]+$",
                "type": "string"
              },
              "generatedName": "TenantCreateKey",
              "nameOverride": "Key",
              "title": "Key",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tenantCreateName",
            "key": "name",
            "schema": {
              "description": "A descriptive name for the tenant",
              "schema": {
                "type": "string"
              },
              "generatedName": "TenantCreateName",
              "nameOverride": "Name",
              "title": "Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tenantCreateDescription",
            "key": "description",
            "schema": {
              "generatedName": "tenantCreateDescription",
              "nameOverride": "TenantCreate",
              "title": "TenantCreate",
              "value": {
                "description": "an optional longer description of the tenant",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TenantCreateDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tenantCreateAttributes",
            "key": "attributes",
            "schema": {
              "generatedName": "tenantCreateAttributes",
              "nameOverride": "TenantCreate",
              "title": "TenantCreate",
              "value": {
                "description": "Arbitraty tenant attributes that will be used to enforce attribute-based access control policies.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "TenantCreateAttributesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "TenantCreateAttributesValue",
                  "type": "unknown"
                },
                "generatedName": "TenantCreateAttributes",
                "title": "Attributes",
                "nameOverride": "Attributes",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TenantCreate",
        "nameOverride": "TenantCreate",
        "title": "TenantCreate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "TenantCreateBulkOperation": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "tenantCreateBulkOperationOperations",
            "key": "operations",
            "schema": {
              "value": {
                "generatedName": "TenantCreateBulkOperationOperationsItem",
                "schema": "TenantCreate",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "TenantCreateBulkOperationOperations",
              "nameOverride": "Operations",
              "title": "Operations",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TenantCreateBulkOperation",
        "nameOverride": "TenantCreateBulkOperation",
        "title": "TenantCreateBulkOperation",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "TenantCreateBulkOperationResult": {
        "allOf": [],
        "properties": [],
        "allOfPropertyConflicts": [],
        "generatedName": "TenantCreateBulkOperationResult",
        "nameOverride": "TenantCreateBulkOperationResult",
        "title": "TenantCreateBulkOperationResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "TenantDeleteBulkOperation": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "tenantDeleteBulkOperationIdents",
            "key": "idents",
            "schema": {
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "TenantDeleteBulkOperationIdentsItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "TenantDeleteBulkOperationIdents",
              "nameOverride": "Idents",
              "title": "Idents",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TenantDeleteBulkOperation",
        "nameOverride": "TenantDeleteBulkOperation",
        "title": "TenantDeleteBulkOperation",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "TenantDeleteBulkOperationResult": {
        "allOf": [],
        "properties": [],
        "allOfPropertyConflicts": [],
        "generatedName": "TenantDeleteBulkOperationResult",
        "nameOverride": "TenantDeleteBulkOperationResult",
        "title": "TenantDeleteBulkOperationResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "TenantRead": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "tenantReadKey",
            "key": "key",
            "schema": {
              "description": "A unique id by which Permit will identify the tenant. The tenant key must be url-friendly (slugified).",
              "schema": {
                "type": "string"
              },
              "generatedName": "TenantReadKey",
              "nameOverride": "Key",
              "title": "Key",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tenantReadId",
            "key": "id",
            "schema": {
              "description": "Unique id of the tenant",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "TenantReadId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tenantReadOrganizationId",
            "key": "organization_id",
            "schema": {
              "description": "Unique id of the organization that the tenant belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "TenantReadOrganizationId",
              "title": "Organization Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tenantReadProjectId",
            "key": "project_id",
            "schema": {
              "description": "Unique id of the project that the tenant belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "TenantReadProjectId",
              "title": "Project Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tenantReadEnvironmentId",
            "key": "environment_id",
            "schema": {
              "description": "Unique id of the environment that the tenant belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "TenantReadEnvironmentId",
              "title": "Environment Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tenantReadCreatedAt",
            "key": "created_at",
            "schema": {
              "description": "Date and time when the tenant was created (ISO_8601 format).",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "TenantReadCreatedAt",
              "title": "Created At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tenantReadUpdatedAt",
            "key": "updated_at",
            "schema": {
              "description": "Date and time when the tenant was last updated/modified (ISO_8601 format).",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "TenantReadUpdatedAt",
              "title": "Updated At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tenantReadLastActionAt",
            "key": "last_action_at",
            "schema": {
              "description": "Date and time when the tenant was last active (ISO_8601 format). In other words, this is the last time a permission check was done on a resource belonging to this tenant.",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "TenantReadLastActionAt",
              "title": "Last Action At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tenantReadName",
            "key": "name",
            "schema": {
              "description": "A descriptive name for the tenant",
              "schema": {
                "type": "string"
              },
              "generatedName": "TenantReadName",
              "nameOverride": "Name",
              "title": "Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tenantReadDescription",
            "key": "description",
            "schema": {
              "generatedName": "tenantReadDescription",
              "nameOverride": "TenantRead",
              "title": "TenantRead",
              "value": {
                "description": "an optional longer description of the tenant",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TenantReadDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tenantReadAttributes",
            "key": "attributes",
            "schema": {
              "generatedName": "tenantReadAttributes",
              "nameOverride": "TenantRead",
              "title": "TenantRead",
              "value": {
                "description": "Arbitraty tenant attributes that will be used to enforce attribute-based access control policies.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "TenantReadAttributesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "TenantReadAttributesValue",
                  "type": "unknown"
                },
                "generatedName": "TenantReadAttributes",
                "title": "Attributes",
                "nameOverride": "Attributes",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TenantRead",
        "nameOverride": "TenantRead",
        "title": "TenantRead",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "TenantUpdate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "tenantUpdateName",
            "key": "name",
            "schema": {
              "generatedName": "tenantUpdateName",
              "nameOverride": "TenantUpdate",
              "title": "TenantUpdate",
              "value": {
                "description": "A descriptive name for the tenant",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TenantUpdateName",
                "nameOverride": "Name",
                "title": "Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tenantUpdateDescription",
            "key": "description",
            "schema": {
              "generatedName": "tenantUpdateDescription",
              "nameOverride": "TenantUpdate",
              "title": "TenantUpdate",
              "value": {
                "description": "an optional longer description of the tenant",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TenantUpdateDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tenantUpdateAttributes",
            "key": "attributes",
            "schema": {
              "generatedName": "tenantUpdateAttributes",
              "nameOverride": "TenantUpdate",
              "title": "TenantUpdate",
              "value": {
                "description": "Arbitraty tenant attributes that will be used to enforce attribute-based access control policies.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "TenantUpdateAttributesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "TenantUpdateAttributesValue",
                  "type": "unknown"
                },
                "generatedName": "TenantUpdateAttributes",
                "title": "Attributes",
                "nameOverride": "Attributes",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TenantUpdate",
        "nameOverride": "TenantUpdate",
        "title": "TenantUpdate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UserCreate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "userCreateKey",
            "key": "key",
            "schema": {
              "description": "A unique id by which Permit will identify the user for permission checks.",
              "schema": {
                "pattern": "^[A-Za-z0-9|@+\\-\\._]+$",
                "type": "string"
              },
              "generatedName": "UserCreateKey",
              "nameOverride": "Key",
              "title": "Key",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userCreateEmail",
            "key": "email",
            "schema": {
              "generatedName": "userCreateEmail",
              "nameOverride": "UserCreate",
              "title": "UserCreate",
              "value": {
                "description": "The email of the user. If synced, will be unique inside the environment.",
                "schema": {
                  "format": "email",
                  "type": "string"
                },
                "generatedName": "UserCreateEmail",
                "nameOverride": "Email",
                "title": "Email",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userCreateFirstName",
            "key": "first_name",
            "schema": {
              "generatedName": "userCreateFirstName",
              "nameOverride": "UserCreate",
              "title": "UserCreate",
              "value": {
                "description": "First name of the user.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "UserCreateFirstName",
                "title": "First Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userCreateLastName",
            "key": "last_name",
            "schema": {
              "generatedName": "userCreateLastName",
              "nameOverride": "UserCreate",
              "title": "UserCreate",
              "value": {
                "description": "Last name of the user.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "UserCreateLastName",
                "title": "Last Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userCreateAttributes",
            "key": "attributes",
            "schema": {
              "generatedName": "userCreateAttributes",
              "nameOverride": "UserCreate",
              "title": "UserCreate",
              "value": {
                "description": "Arbitrary user attributes that will be used to enforce attribute-based access control policies.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "UserCreateAttributesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "UserCreateAttributesValue",
                  "type": "unknown"
                },
                "generatedName": "UserCreateAttributes",
                "title": "Attributes",
                "nameOverride": "Attributes",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UserCreate",
        "nameOverride": "UserCreate",
        "title": "UserCreate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UserCreateBulkOperation": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "userCreateBulkOperationOperations",
            "key": "operations",
            "schema": {
              "value": {
                "generatedName": "UserCreateBulkOperationOperationsItem",
                "schema": "UserCreate",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "UserCreateBulkOperationOperations",
              "nameOverride": "Operations",
              "title": "Operations",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UserCreateBulkOperation",
        "nameOverride": "UserCreateBulkOperation",
        "title": "UserCreateBulkOperation",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UserCreateBulkOperationResult": {
        "allOf": [],
        "properties": [],
        "allOfPropertyConflicts": [],
        "generatedName": "UserCreateBulkOperationResult",
        "nameOverride": "UserCreateBulkOperationResult",
        "title": "UserCreateBulkOperationResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UserDeleteBulkOperation": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "userDeleteBulkOperationIdents",
            "key": "idents",
            "schema": {
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "UserDeleteBulkOperationIdentsItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "UserDeleteBulkOperationIdents",
              "nameOverride": "Idents",
              "title": "Idents",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UserDeleteBulkOperation",
        "nameOverride": "UserDeleteBulkOperation",
        "title": "UserDeleteBulkOperation",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UserDeleteBulkOperationResult": {
        "allOf": [],
        "properties": [],
        "allOfPropertyConflicts": [],
        "generatedName": "UserDeleteBulkOperationResult",
        "nameOverride": "UserDeleteBulkOperationResult",
        "title": "UserDeleteBulkOperationResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UserInTenant": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "userInTenantTenant",
            "key": "tenant",
            "schema": {
              "description": "The tenant key which the user is associated with",
              "schema": {
                "type": "string"
              },
              "generatedName": "UserInTenantTenant",
              "nameOverride": "Tenant",
              "title": "Tenant",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userInTenantRoles",
            "key": "roles",
            "schema": {
              "description": "List of roles assigned to the user in that tenant",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "UserInTenantRolesItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "UserInTenantRoles",
              "nameOverride": "Roles",
              "title": "Roles",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userInTenantStatus",
            "key": "status",
            "schema": {
              "description": "Whether the user has signed in or not",
              "generatedName": "UserInTenantStatus",
              "schema": "UserStatus",
              "groupName": [],
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UserInTenant",
        "nameOverride": "UserInTenant",
        "title": "UserInTenant",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UserRead": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "userReadKey",
            "key": "key",
            "schema": {
              "description": "A unique id by which Permit will identify the user for permission checks.",
              "schema": {
                "type": "string"
              },
              "generatedName": "UserReadKey",
              "nameOverride": "Key",
              "title": "Key",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userReadId",
            "key": "id",
            "schema": {
              "description": "Unique id of the user",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "UserReadId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userReadOrganizationId",
            "key": "organization_id",
            "schema": {
              "description": "Unique id of the organization that the user belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "UserReadOrganizationId",
              "title": "Organization Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userReadProjectId",
            "key": "project_id",
            "schema": {
              "description": "Unique id of the project that the user belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "UserReadProjectId",
              "title": "Project Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userReadEnvironmentId",
            "key": "environment_id",
            "schema": {
              "description": "Unique id of the environment that the user belongs to.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "UserReadEnvironmentId",
              "title": "Environment Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userReadAssociatedTenants",
            "key": "associated_tenants",
            "schema": {
              "generatedName": "userReadAssociatedTenants",
              "nameOverride": "UserRead",
              "title": "UserRead",
              "value": {
                "value": {
                  "generatedName": "UserReadAssociatedTenantsItem",
                  "schema": "UserInTenant",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "UserReadAssociatedTenants",
                "title": "Associated Tenants",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userReadRoles",
            "key": "roles",
            "schema": {
              "generatedName": "userReadRoles",
              "nameOverride": "UserRead",
              "title": "UserRead",
              "availability": "Deprecated",
              "value": {
                "availability": "Deprecated",
                "value": {
                  "generatedName": "UserReadRolesItem",
                  "schema": "UserRole",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "UserReadRoles",
                "nameOverride": "Roles",
                "title": "Roles",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "availability": "Deprecated"
          },
          {
            "conflict": {},
            "generatedName": "userReadEmail",
            "key": "email",
            "schema": {
              "generatedName": "userReadEmail",
              "nameOverride": "UserRead",
              "title": "UserRead",
              "value": {
                "description": "The email of the user. If synced, will be unique inside the environment.",
                "schema": {
                  "format": "email",
                  "type": "string"
                },
                "generatedName": "UserReadEmail",
                "nameOverride": "Email",
                "title": "Email",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userReadFirstName",
            "key": "first_name",
            "schema": {
              "generatedName": "userReadFirstName",
              "nameOverride": "UserRead",
              "title": "UserRead",
              "value": {
                "description": "First name of the user.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "UserReadFirstName",
                "title": "First Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userReadLastName",
            "key": "last_name",
            "schema": {
              "generatedName": "userReadLastName",
              "nameOverride": "UserRead",
              "title": "UserRead",
              "value": {
                "description": "Last name of the user.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "UserReadLastName",
                "title": "Last Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userReadAttributes",
            "key": "attributes",
            "schema": {
              "generatedName": "userReadAttributes",
              "nameOverride": "UserRead",
              "title": "UserRead",
              "value": {
                "description": "Arbitrary user attributes that will be used to enforce attribute-based access control policies.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "UserReadAttributesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "UserReadAttributesValue",
                  "type": "unknown"
                },
                "generatedName": "UserReadAttributes",
                "title": "Attributes",
                "nameOverride": "Attributes",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UserRead",
        "nameOverride": "UserRead",
        "title": "UserRead",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UserReplaceBulkOperation": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "userReplaceBulkOperationOperations",
            "key": "operations",
            "schema": {
              "value": {
                "generatedName": "UserReplaceBulkOperationOperationsItem",
                "schema": "UserCreate",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "UserReplaceBulkOperationOperations",
              "nameOverride": "Operations",
              "title": "Operations",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UserReplaceBulkOperation",
        "nameOverride": "UserReplaceBulkOperation",
        "title": "UserReplaceBulkOperation",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UserReplaceBulkOperationResult": {
        "allOf": [],
        "properties": [],
        "allOfPropertyConflicts": [],
        "generatedName": "UserReplaceBulkOperationResult",
        "nameOverride": "UserReplaceBulkOperationResult",
        "title": "UserReplaceBulkOperationResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UserRole": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "userRoleRole",
            "key": "role",
            "schema": {
              "description": "the role that is assigned",
              "schema": {
                "type": "string"
              },
              "generatedName": "UserRoleRole",
              "nameOverride": "Role",
              "title": "Role",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userRoleTenant",
            "key": "tenant",
            "schema": {
              "description": "the tenant the role is associated with",
              "schema": {
                "type": "string"
              },
              "generatedName": "UserRoleTenant",
              "nameOverride": "Tenant",
              "title": "Tenant",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UserRole",
        "nameOverride": "UserRole",
        "title": "UserRole",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UserRoleCreate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "userRoleCreateRole",
            "key": "role",
            "schema": {
              "description": "the role that will be assigned (accepts either the role id or the role key)",
              "schema": {
                "type": "string"
              },
              "generatedName": "UserRoleCreateRole",
              "nameOverride": "Role",
              "title": "Role",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userRoleCreateTenant",
            "key": "tenant",
            "schema": {
              "description": "the tenant the role is associated with (accepts either the tenant id or the tenant key)",
              "schema": {
                "type": "string"
              },
              "generatedName": "UserRoleCreateTenant",
              "nameOverride": "Tenant",
              "title": "Tenant",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UserRoleCreate",
        "nameOverride": "UserRoleCreate",
        "title": "UserRoleCreate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UserRoleRemove": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "userRoleRemoveRole",
            "key": "role",
            "schema": {
              "description": "the role that will be unassigned (accepts either the role id or the role key)",
              "schema": {
                "type": "string"
              },
              "generatedName": "UserRoleRemoveRole",
              "nameOverride": "Role",
              "title": "Role",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userRoleRemoveTenant",
            "key": "tenant",
            "schema": {
              "description": "the tenant the role is associated with (accepts either the tenant id or the tenant key)",
              "schema": {
                "type": "string"
              },
              "generatedName": "UserRoleRemoveTenant",
              "nameOverride": "Tenant",
              "title": "Tenant",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UserRoleRemove",
        "nameOverride": "UserRoleRemove",
        "title": "UserRoleRemove",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UserStatus": {
        "description": "An enumeration.",
        "generatedName": "UserStatus",
        "nameOverride": "UserStatus",
        "title": "UserStatus",
        "values": [
          {
            "generatedName": "active",
            "value": "active",
            "casing": {}
          },
          {
            "generatedName": "pending",
            "value": "pending",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "UserUpdate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "userUpdateEmail",
            "key": "email",
            "schema": {
              "generatedName": "userUpdateEmail",
              "nameOverride": "UserUpdate",
              "title": "UserUpdate",
              "value": {
                "description": "The email of the user. If synced, will be unique inside the environment.",
                "schema": {
                  "format": "email",
                  "type": "string"
                },
                "generatedName": "UserUpdateEmail",
                "nameOverride": "Email",
                "title": "Email",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userUpdateFirstName",
            "key": "first_name",
            "schema": {
              "generatedName": "userUpdateFirstName",
              "nameOverride": "UserUpdate",
              "title": "UserUpdate",
              "value": {
                "description": "First name of the user.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "UserUpdateFirstName",
                "title": "First Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userUpdateLastName",
            "key": "last_name",
            "schema": {
              "generatedName": "userUpdateLastName",
              "nameOverride": "UserUpdate",
              "title": "UserUpdate",
              "value": {
                "description": "Last name of the user.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "UserUpdateLastName",
                "title": "Last Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userUpdateAttributes",
            "key": "attributes",
            "schema": {
              "generatedName": "userUpdateAttributes",
              "nameOverride": "UserUpdate",
              "title": "UserUpdate",
              "value": {
                "description": "Arbitrary user attributes that will be used to enforce attribute-based access control policies.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "UserUpdateAttributesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "UserUpdateAttributesValue",
                  "type": "unknown"
                },
                "generatedName": "UserUpdateAttributes",
                "title": "Attributes",
                "nameOverride": "Attributes",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UserUpdate",
        "nameOverride": "UserUpdate",
        "title": "UserUpdate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ValidationError": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "validationErrorLoc",
            "key": "loc",
            "schema": {
              "value": {
                "value": {
                  "generatedName": "ValidationErrorLocItem",
                  "schemas": [
                    {
                      "schema": {
                        "type": "string"
                      },
                      "generatedName": "ValidationErrorLocItem",
                      "groupName": [],
                      "type": "primitive"
                    },
                    {
                      "schema": {
                        "type": "int"
                      },
                      "generatedName": "ValidationErrorLocItem",
                      "groupName": [],
                      "type": "primitive"
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "undiscriminated"
                },
                "type": "oneOf"
              },
              "generatedName": "ValidationErrorLoc",
              "nameOverride": "Location",
              "title": "Location",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "validationErrorMsg",
            "key": "msg",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ValidationErrorMsg",
              "nameOverride": "Message",
              "title": "Message",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "validationErrorType",
            "key": "type",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ValidationErrorType",
              "title": "Error Type",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ValidationError",
        "nameOverride": "ValidationError",
        "title": "ValidationError",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      }
    },
    "namespacedSchemas": {}
  },
  "variables": {},
  "nonRequestReferencedSchemas": {},
  "securitySchemes": {
    "HTTPBearer": {
      "type": "bearer"
    }
  },
  "globalHeaders": [],
  "idempotencyHeaders": [],
  "groups": {}
}