{
  "type": "openapi",
  "value": {
    "openapi": "3.0.0",
    "info": {
      "title": "Tree API",
      "version": "1.0.0",
      "description": "API for working with tree data structures"
    },
    "paths": {
      "/tree": {
        "get": {
          "summary": "Get tree",
          "operationId": "getTree",
          "responses": {
            "200": {
              "description": "Successfully retrieved tree",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TreeNode"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "TreeNode": {
          "type": "object",
          "properties": {
            "value": {
              "type": "string",
              "description": "The value stored in this node",
              "example": "root"
            },
            "left": {
              "description": "Child nodes of this tree node",
              "$ref": "#/components/schemas/TreeNode"
            },
            "right": {
              "description": "Child nodes of this tree node",
              "$ref": "#/components/schemas/TreeNode"
            }
          }
        }
      }
    }
  },
  "settings": {
    "disableExamples": false,
    "discriminatedUnionV2": false,
    "useTitlesAsName": true,
    "optionalAdditionalProperties": true,
    "coerceEnumsToLiterals": true,
    "respectReadonlySchemas": false,
    "respectNullableSchemas": false,
    "onlyIncludeReferencedSchemas": false,
    "inlinePathParameters": false,
    "preserveSchemaIds": false,
    "shouldUseUndiscriminatedUnionsWithLiterals": false,
    "shouldUseIdiomaticRequestNames": false,
    "objectQueryParameters": false,
    "asyncApiNaming": "v1",
    "useBytesForBinaryResponse": false,
    "respectForwardCompatibleEnums": false,
    "additionalPropertiesDefaultsTo": false,
    "typeDatesAsStrings": true,
    "preserveSingleSchemaOneOf": false
  }
}