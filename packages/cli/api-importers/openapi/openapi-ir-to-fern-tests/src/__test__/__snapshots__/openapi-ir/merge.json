{
  "title": "Merge HRIS API",
  "description": "The unified API for building rich integrations with multiple HR Information System platforms.",
  "servers": [
    {
      "url": "https://api.merge.dev/api/hris/v1",
      "description": "Production",
      "name": "Production"
    },
    {
      "url": "https://api-sandbox.merge.dev/api/hris/v1",
      "description": "Sandbox",
      "name": "Sandbox"
    }
  ],
  "tags": {
    "tagsById": {}
  },
  "hasEndpointsMarkedInternal": false,
  "endpoints": [
    {
      "audiences": [],
      "operationId": "account_details_retrieve",
      "tags": [
        "account-details"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AccountDetailsRetrieveRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "AccountDetailsRetrieveRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "AccountDetailsRetrieveResponse",
          "schema": "AccountDetails",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Get details for a linked account.",
      "authed": true,
      "method": "GET",
      "path": "/account-details",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "0496d4c2-42e6-4072-80b3-7b69bfdc76fd",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "integration": {
                  "value": {
                    "value": "BambooHR",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "integration_slug": {
                  "value": {
                    "value": "bamboohr",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "category": {
                  "value": "hris",
                  "type": "enum"
                },
                "end_user_origin_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "end_user_organization_name": {
                  "value": {
                    "value": "Waystar Royco",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "end_user_email_address": {
                  "value": {
                    "value": "kendall.roy@waystar-royco.com",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "status": {
                  "value": {
                    "value": "COMPLETE",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "webhook_listener_url": {
                  "value": {
                    "value": "https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "is_duplicate": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "account_token_retrieve",
      "tags": [
        "account-token"
      ],
      "pathParameters": [
        {
          "name": "public_token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AccountTokenRetrieveRequestPublicToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AccountTokenRetrieveRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "AccountTokenRetrieveResponse",
          "schema": "AccountToken",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Returns the account token for the end user with the provided public token.",
      "authed": true,
      "method": "GET",
      "path": "/account-token/{public_token}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "public_token",
              "value": {
                "value": {
                  "value": "public_token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "account_token": {
                  "value": {
                    "value": "T9klMDQrcHdm9jrtHuOS2Nf06BIHwMNjpPXPMB",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "integration": {
                  "properties": {
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "categories": {
                      "value": [
                        {
                          "value": "hris",
                          "type": "enum"
                        }
                      ],
                      "type": "array"
                    },
                    "image": {
                      "value": {
                        "value": "image",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "square_image": {
                      "value": {
                        "value": "square_image",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "color": {
                      "value": {
                        "value": "color",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "slug": {
                      "value": {
                        "value": "slug",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "is_in_beta": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "api_endpoints_to_documentation_urls": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": {
                                "value": "value",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "type": "unknown"
                          }
                        }
                      ],
                      "type": "map"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "available_actions_retrieve",
      "tags": [
        "available-actions"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AvailableActionsRetrieveRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "AvailableActionsRetrieveRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "AvailableActionsRetrieveResponse",
          "schema": "AvailableActions",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Returns a list of models and actions available for an account.",
      "authed": true,
      "method": "GET",
      "path": "/available-actions",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "properties": {
                "integration": {
                  "properties": {
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "categories": {
                      "value": [
                        {
                          "value": "hris",
                          "type": "enum"
                        }
                      ],
                      "type": "array"
                    },
                    "image": {
                      "value": {
                        "value": "image",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "square_image": {
                      "value": {
                        "value": "square_image",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "color": {
                      "value": {
                        "value": "color",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "slug": {
                      "value": {
                        "value": "slug",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "is_in_beta": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "api_endpoints_to_documentation_urls": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": {
                                "value": "value",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "type": "unknown"
                          }
                        }
                      ],
                      "type": "map"
                    }
                  },
                  "type": "object"
                },
                "passthrough_available": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "available_model_operations": {
                  "value": [
                    {
                      "properties": {
                        "model_name": {
                          "value": {
                            "value": "Candidate",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "available_operations": {
                          "value": [
                            {
                              "value": {
                                "value": "FETCH",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            {
                              "value": {
                                "value": "CREATE",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "required_post_parameters": {
                          "value": [
                            {
                              "value": {
                                "value": "remote_user_id",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "supported_fields": {
                          "value": [
                            {
                              "value": {
                                "value": "first_name",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            {
                              "value": {
                                "value": "last_name",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            {
                              "value": {
                                "value": "company",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            {
                              "value": {
                                "value": "title",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "bank_info_list",
      "tags": [
        "bank-info"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "If provided, will only return BankInfo's with this account type. Options: ('SAVINGS', 'CHECKING')\n\n* `SAVINGS` - SAVINGS\n* `CHECKING` - CHECKING",
          "name": "account_type",
          "schema": {
            "generatedName": "BankInfoListRequestAccountType",
            "value": {
              "generatedName": "BankInfoListRequestAccountType",
              "values": [
                {
                  "generatedName": "CHECKING",
                  "value": "CHECKING",
                  "casing": {}
                },
                {
                  "generatedName": "SAVINGS",
                  "value": "SAVINGS",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return BankInfo's with this bank name.",
          "name": "bank_name",
          "schema": {
            "generatedName": "BankInfoListRequestBankName",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "BankInfoListRequestBankName",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return objects created after this datetime.",
          "name": "created_after",
          "schema": {
            "generatedName": "BankInfoListRequestCreatedAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "BankInfoListRequestCreatedAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return objects created before this datetime.",
          "name": "created_before",
          "schema": {
            "generatedName": "BankInfoListRequestCreatedBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "BankInfoListRequestCreatedBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The pagination cursor value.",
          "name": "cursor",
          "schema": {
            "generatedName": "BankInfoListRequestCursor",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "BankInfoListRequestCursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return bank accounts for this employee.",
          "name": "employee_id",
          "schema": {
            "generatedName": "BankInfoListRequestEmployeeId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "BankInfoListRequestEmployeeId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
          "name": "expand",
          "schema": {
            "generatedName": "BankInfoListRequestExpand",
            "value": {
              "value": {
                "value": "employee",
                "type": "string"
              },
              "generatedName": "BankInfoListRequestExpand",
              "groupName": [],
              "type": "literal"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include data that was marked as deleted by third party webhooks.",
          "name": "include_deleted_data",
          "schema": {
            "generatedName": "BankInfoListRequestIncludeDeletedData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "BankInfoListRequestIncludeDeletedData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
          "name": "include_remote_data",
          "schema": {
            "generatedName": "BankInfoListRequestIncludeRemoteData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "BankInfoListRequestIncludeRemoteData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, only objects synced by Merge after this date time will be returned.",
          "name": "modified_after",
          "schema": {
            "generatedName": "BankInfoListRequestModifiedAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "BankInfoListRequestModifiedAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, only objects synced by Merge before this date time will be returned.",
          "name": "modified_before",
          "schema": {
            "generatedName": "BankInfoListRequestModifiedBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "BankInfoListRequestModifiedBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Overrides the default ordering for this endpoint.",
          "name": "order_by",
          "schema": {
            "generatedName": "BankInfoListRequestOrderBy",
            "value": {
              "generatedName": "BankInfoListRequestOrderBy",
              "values": [
                {
                  "nameOverride": "RemoteCreatedAtDescending",
                  "generatedName": "RemoteCreatedAt",
                  "value": "-remote_created_at",
                  "casing": {}
                },
                {
                  "nameOverride": "RemoteCreatedAtAscending",
                  "generatedName": "remote_created_at",
                  "value": "remote_created_at",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Number of results to return per page.",
          "name": "page_size",
          "schema": {
            "generatedName": "BankInfoListRequestPageSize",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "BankInfoListRequestPageSize",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Deprecated. Use show_enum_origins.",
          "name": "remote_fields",
          "schema": {
            "generatedName": "BankInfoListRequestRemoteFields",
            "value": {
              "value": {
                "value": "account_type",
                "type": "string"
              },
              "generatedName": "BankInfoListRequestRemoteFields",
              "groupName": [],
              "type": "literal"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The API provider's ID for the given object.",
          "name": "remote_id",
          "schema": {
            "generatedName": "BankInfoListRequestRemoteId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "BankInfoListRequestRemoteId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Which fields should be returned in non-normalized form.",
          "name": "show_enum_origins",
          "schema": {
            "generatedName": "BankInfoListRequestShowEnumOrigins",
            "value": {
              "value": {
                "value": "account_type",
                "type": "string"
              },
              "generatedName": "BankInfoListRequestShowEnumOrigins",
              "groupName": [],
              "type": "literal"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "BankInfoListRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "BankInfoListRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "BankInfoListResponse",
          "schema": "PaginatedBankInfoList",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Returns a list of `BankInfo` objects.",
      "authed": true,
      "method": "GET",
      "path": "/bank-info",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "properties": {
                "next": {
                  "value": {
                    "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "previous": {
                  "value": {
                    "value": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "results": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "fd1e0fb5-8f92-4ec9-9f32-179cf732867d",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "remote_id": {
                          "value": {
                            "value": "123234",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "employee": {
                          "value": {
                            "value": "a3617eb4-dfe3-426f-921e-a65fc1661e10",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "account_number": {
                          "value": {
                            "value": "439291590",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "routing_number": {
                          "value": {
                            "value": "089690059",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "bank_name": {
                          "value": {
                            "value": "Chase",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "account_type": {
                          "value": "SAVINGS",
                          "type": "enum"
                        },
                        "remote_created_at": {
                          "value": {
                            "value": "2021-12-06T10:11:26Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "remote_was_deleted": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "modified_at": {
                          "value": {
                            "value": "2021-10-16T00:00:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "field_mappings": {
                          "value": [
                            {
                              "key": {
                                "value": "organization_defined_targets",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "custom_key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "custom_value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            },
                            {
                              "key": {
                                "value": "linked_account_defined_targets",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "custom_key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "custom_value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "remote_data": {
                          "value": [
                            {
                              "properties": {
                                "path": {
                                  "value": {
                                    "value": "/bank-info",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "data": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "0",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": {
                                            "value": "Varies by platform",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        },
                                        "type": "unknown"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "bank_info_retrieve",
      "tags": [
        "bank-info"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "BankInfoRetrieveRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
          "name": "expand",
          "schema": {
            "generatedName": "BankInfoRetrieveRequestExpand",
            "value": {
              "value": {
                "value": "employee",
                "type": "string"
              },
              "generatedName": "BankInfoRetrieveRequestExpand",
              "groupName": [],
              "type": "literal"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
          "name": "include_remote_data",
          "schema": {
            "generatedName": "BankInfoRetrieveRequestIncludeRemoteData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "BankInfoRetrieveRequestIncludeRemoteData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Deprecated. Use show_enum_origins.",
          "name": "remote_fields",
          "schema": {
            "generatedName": "BankInfoRetrieveRequestRemoteFields",
            "value": {
              "value": {
                "value": "account_type",
                "type": "string"
              },
              "generatedName": "BankInfoRetrieveRequestRemoteFields",
              "groupName": [],
              "type": "literal"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Which fields should be returned in non-normalized form.",
          "name": "show_enum_origins",
          "schema": {
            "generatedName": "BankInfoRetrieveRequestShowEnumOrigins",
            "value": {
              "value": {
                "value": "account_type",
                "type": "string"
              },
              "generatedName": "BankInfoRetrieveRequestShowEnumOrigins",
              "groupName": [],
              "type": "literal"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "BankInfoRetrieveRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "BankInfoRetrieveRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "BankInfoRetrieveResponse",
          "schema": "BankInfo",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Returns a `BankInfo` object with the given `id`.",
      "authed": true,
      "method": "GET",
      "path": "/bank-info/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "fd1e0fb5-8f92-4ec9-9f32-179cf732867d",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "remote_id": {
                  "value": {
                    "value": "123234",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "employee": {
                  "value": {
                    "value": "a3617eb4-dfe3-426f-921e-a65fc1661e10",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "account_number": {
                  "value": {
                    "value": "439291590",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "routing_number": {
                  "value": {
                    "value": "089690059",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "bank_name": {
                  "value": {
                    "value": "Chase",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "account_type": {
                  "value": "SAVINGS",
                  "type": "enum"
                },
                "remote_created_at": {
                  "value": {
                    "value": "2021-12-06T10:11:26Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "remote_was_deleted": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "modified_at": {
                  "value": {
                    "value": "2021-10-16T00:00:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "field_mappings": {
                  "value": [
                    {
                      "key": {
                        "value": "organization_defined_targets",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "key": {
                                "value": "custom_key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "custom_value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "type": "unknown"
                      }
                    },
                    {
                      "key": {
                        "value": "linked_account_defined_targets",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "key": {
                                "value": "custom_key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "custom_value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "remote_data": {
                  "value": [
                    {
                      "properties": {
                        "path": {
                          "value": {
                            "value": "/bank-info",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "data": {
                          "value": [
                            {
                              "key": {
                                "value": "0",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "Varies by platform",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "benefits_list",
      "tags": [
        "benefits"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "If provided, will only return objects created after this datetime.",
          "name": "created_after",
          "schema": {
            "generatedName": "BenefitsListRequestCreatedAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "BenefitsListRequestCreatedAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return objects created before this datetime.",
          "name": "created_before",
          "schema": {
            "generatedName": "BenefitsListRequestCreatedBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "BenefitsListRequestCreatedBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The pagination cursor value.",
          "name": "cursor",
          "schema": {
            "generatedName": "BenefitsListRequestCursor",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "BenefitsListRequestCursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will return the benefits associated with the employee.",
          "name": "employee_id",
          "schema": {
            "generatedName": "BenefitsListRequestEmployeeId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "BenefitsListRequestEmployeeId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
          "name": "expand",
          "schema": {
            "generatedName": "BenefitsListRequestExpand",
            "value": {
              "value": {
                "value": "employee",
                "type": "string"
              },
              "generatedName": "BenefitsListRequestExpand",
              "groupName": [],
              "type": "literal"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include data that was marked as deleted by third party webhooks.",
          "name": "include_deleted_data",
          "schema": {
            "generatedName": "BenefitsListRequestIncludeDeletedData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "BenefitsListRequestIncludeDeletedData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
          "name": "include_remote_data",
          "schema": {
            "generatedName": "BenefitsListRequestIncludeRemoteData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "BenefitsListRequestIncludeRemoteData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, only objects synced by Merge after this date time will be returned.",
          "name": "modified_after",
          "schema": {
            "generatedName": "BenefitsListRequestModifiedAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "BenefitsListRequestModifiedAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, only objects synced by Merge before this date time will be returned.",
          "name": "modified_before",
          "schema": {
            "generatedName": "BenefitsListRequestModifiedBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "BenefitsListRequestModifiedBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Number of results to return per page.",
          "name": "page_size",
          "schema": {
            "generatedName": "BenefitsListRequestPageSize",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "BenefitsListRequestPageSize",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The API provider's ID for the given object.",
          "name": "remote_id",
          "schema": {
            "generatedName": "BenefitsListRequestRemoteId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "BenefitsListRequestRemoteId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "BenefitsListRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "BenefitsListRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "BenefitsListResponse",
          "schema": "PaginatedBenefitList",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Returns a list of `Benefit` objects.",
      "authed": true,
      "method": "GET",
      "path": "/benefits",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "properties": {
                "next": {
                  "value": {
                    "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "previous": {
                  "value": {
                    "value": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "results": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "3fe5ae7a-f1ba-4529-b7af-84e86dc6d232",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "remote_id": {
                          "value": {
                            "value": "19202938",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "employee": {
                          "value": {
                            "value": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "provider_name": {
                          "value": {
                            "value": "Blue Shield of California",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "benefit_plan_type": {
                          "value": {
                            "value": "benefit_plan_type",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "employee_contribution": {
                          "value": {
                            "value": 23.65,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "company_contribution": {
                          "value": {
                            "value": 150,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "start_date": {
                          "value": {
                            "value": "2020-11-15 00:59:25.309761+00:00",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "end_date": {
                          "value": {
                            "value": "2021-10-15 00:23:25.309761+00:00",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "remote_was_deleted": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "modified_at": {
                          "value": {
                            "value": "2021-10-16T00:00:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "field_mappings": {
                          "value": [
                            {
                              "key": {
                                "value": "organization_defined_targets",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "custom_key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "custom_value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            },
                            {
                              "key": {
                                "value": "linked_account_defined_targets",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "custom_key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "custom_value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "remote_data": {
                          "value": [
                            {
                              "properties": {
                                "path": {
                                  "value": {
                                    "value": "/benefits",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "data": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "0",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": {
                                            "value": "Varies by platform",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        },
                                        "type": "unknown"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "benefits_retrieve",
      "tags": [
        "benefits"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "BenefitsRetrieveRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
          "name": "expand",
          "schema": {
            "generatedName": "BenefitsRetrieveRequestExpand",
            "value": {
              "value": {
                "value": "employee",
                "type": "string"
              },
              "generatedName": "BenefitsRetrieveRequestExpand",
              "groupName": [],
              "type": "literal"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
          "name": "include_remote_data",
          "schema": {
            "generatedName": "BenefitsRetrieveRequestIncludeRemoteData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "BenefitsRetrieveRequestIncludeRemoteData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "BenefitsRetrieveRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "BenefitsRetrieveRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "BenefitsRetrieveResponse",
          "schema": "Benefit",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Returns a `Benefit` object with the given `id`.",
      "authed": true,
      "method": "GET",
      "path": "/benefits/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "3fe5ae7a-f1ba-4529-b7af-84e86dc6d232",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "remote_id": {
                  "value": {
                    "value": "19202938",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "employee": {
                  "value": {
                    "value": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "provider_name": {
                  "value": {
                    "value": "Blue Shield of California",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "benefit_plan_type": {
                  "value": {
                    "value": "benefit_plan_type",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "employee_contribution": {
                  "value": {
                    "value": 23.65,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "company_contribution": {
                  "value": {
                    "value": 150,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "start_date": {
                  "value": {
                    "value": "2020-11-15 00:59:25.309761+00:00",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "end_date": {
                  "value": {
                    "value": "2021-10-15 00:23:25.309761+00:00",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "remote_was_deleted": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "modified_at": {
                  "value": {
                    "value": "2021-10-16T00:00:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "field_mappings": {
                  "value": [
                    {
                      "key": {
                        "value": "organization_defined_targets",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "key": {
                                "value": "custom_key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "custom_value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "type": "unknown"
                      }
                    },
                    {
                      "key": {
                        "value": "linked_account_defined_targets",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "key": {
                                "value": "custom_key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "custom_value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "remote_data": {
                  "value": [
                    {
                      "properties": {
                        "path": {
                          "value": {
                            "value": "/benefits",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "data": {
                          "value": [
                            {
                              "key": {
                                "value": "0",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "Varies by platform",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "companies_list",
      "tags": [
        "companies"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "If provided, will only return objects created after this datetime.",
          "name": "created_after",
          "schema": {
            "generatedName": "CompaniesListRequestCreatedAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "CompaniesListRequestCreatedAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return objects created before this datetime.",
          "name": "created_before",
          "schema": {
            "generatedName": "CompaniesListRequestCreatedBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "CompaniesListRequestCreatedBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The pagination cursor value.",
          "name": "cursor",
          "schema": {
            "generatedName": "CompaniesListRequestCursor",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "CompaniesListRequestCursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include data that was marked as deleted by third party webhooks.",
          "name": "include_deleted_data",
          "schema": {
            "generatedName": "CompaniesListRequestIncludeDeletedData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "CompaniesListRequestIncludeDeletedData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
          "name": "include_remote_data",
          "schema": {
            "generatedName": "CompaniesListRequestIncludeRemoteData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "CompaniesListRequestIncludeRemoteData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, only objects synced by Merge after this date time will be returned.",
          "name": "modified_after",
          "schema": {
            "generatedName": "CompaniesListRequestModifiedAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "CompaniesListRequestModifiedAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, only objects synced by Merge before this date time will be returned.",
          "name": "modified_before",
          "schema": {
            "generatedName": "CompaniesListRequestModifiedBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "CompaniesListRequestModifiedBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Number of results to return per page.",
          "name": "page_size",
          "schema": {
            "generatedName": "CompaniesListRequestPageSize",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "CompaniesListRequestPageSize",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The API provider's ID for the given object.",
          "name": "remote_id",
          "schema": {
            "generatedName": "CompaniesListRequestRemoteId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "CompaniesListRequestRemoteId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "CompaniesListRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "CompaniesListRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "CompaniesListResponse",
          "schema": "PaginatedCompanyList",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Returns a list of `Company` objects.",
      "authed": true,
      "method": "GET",
      "path": "/companies",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "properties": {
                "next": {
                  "value": {
                    "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "previous": {
                  "value": {
                    "value": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "results": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "1b998423-db0a-4037-a4cf-f79c60cb67b3",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "remote_id": {
                          "value": {
                            "value": "19202938",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "legal_name": {
                          "value": {
                            "value": "Waystar Royco, Inc.",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "display_name": {
                          "value": {
                            "value": "Waystar Royco",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "eins": {
                          "value": [
                            {
                              "value": {
                                "value": "12-3456789",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            {
                              "value": {
                                "value": "12-3451111",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            {
                              "value": {
                                "value": "11-0011000",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "remote_was_deleted": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "modified_at": {
                          "value": {
                            "value": "2021-10-16T00:00:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "field_mappings": {
                          "value": [
                            {
                              "key": {
                                "value": "organization_defined_targets",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "custom_key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "custom_value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            },
                            {
                              "key": {
                                "value": "linked_account_defined_targets",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "custom_key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "custom_value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "remote_data": {
                          "value": [
                            {
                              "properties": {
                                "path": {
                                  "value": {
                                    "value": "/companies",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "data": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "0",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": {
                                            "value": "Varies by platform",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        },
                                        "type": "unknown"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "companies_retrieve",
      "tags": [
        "companies"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "CompaniesRetrieveRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
          "name": "include_remote_data",
          "schema": {
            "generatedName": "CompaniesRetrieveRequestIncludeRemoteData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "CompaniesRetrieveRequestIncludeRemoteData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "CompaniesRetrieveRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "CompaniesRetrieveRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "CompaniesRetrieveResponse",
          "schema": "Company",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Returns a `Company` object with the given `id`.",
      "authed": true,
      "method": "GET",
      "path": "/companies/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "1b998423-db0a-4037-a4cf-f79c60cb67b3",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "remote_id": {
                  "value": {
                    "value": "19202938",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "legal_name": {
                  "value": {
                    "value": "Waystar Royco, Inc.",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "display_name": {
                  "value": {
                    "value": "Waystar Royco",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "eins": {
                  "value": [
                    {
                      "value": {
                        "value": "12-3456789",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "12-3451111",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "11-0011000",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "remote_was_deleted": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "modified_at": {
                  "value": {
                    "value": "2021-10-16T00:00:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "field_mappings": {
                  "value": [
                    {
                      "key": {
                        "value": "organization_defined_targets",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "key": {
                                "value": "custom_key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "custom_value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "type": "unknown"
                      }
                    },
                    {
                      "key": {
                        "value": "linked_account_defined_targets",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "key": {
                                "value": "custom_key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "custom_value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "remote_data": {
                  "value": [
                    {
                      "properties": {
                        "path": {
                          "value": {
                            "value": "/companies",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "data": {
                          "value": [
                            {
                              "key": {
                                "value": "0",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "Varies by platform",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "delete_account_create",
      "tags": [
        "delete-account"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteAccountCreateRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "DeleteAccountCreateRequest",
      "errors": {},
      "server": [],
      "description": "Delete a linked account.",
      "authed": true,
      "method": "POST",
      "path": "/delete-account",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "employee_payroll_runs_list",
      "tags": [
        "employee-payroll-runs"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "If provided, will only return objects created after this datetime.",
          "name": "created_after",
          "schema": {
            "generatedName": "EmployeePayrollRunsListRequestCreatedAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "EmployeePayrollRunsListRequestCreatedAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return objects created before this datetime.",
          "name": "created_before",
          "schema": {
            "generatedName": "EmployeePayrollRunsListRequestCreatedBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "EmployeePayrollRunsListRequestCreatedBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The pagination cursor value.",
          "name": "cursor",
          "schema": {
            "generatedName": "EmployeePayrollRunsListRequestCursor",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "EmployeePayrollRunsListRequestCursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return employee payroll runs for this employee.",
          "name": "employee_id",
          "schema": {
            "generatedName": "EmployeePayrollRunsListRequestEmployeeId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "EmployeePayrollRunsListRequestEmployeeId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return employee payroll runs ended after this datetime.",
          "name": "ended_after",
          "schema": {
            "generatedName": "EmployeePayrollRunsListRequestEndedAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "EmployeePayrollRunsListRequestEndedAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return employee payroll runs ended before this datetime.",
          "name": "ended_before",
          "schema": {
            "generatedName": "EmployeePayrollRunsListRequestEndedBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "EmployeePayrollRunsListRequestEndedBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
          "name": "expand",
          "schema": {
            "generatedName": "EmployeePayrollRunsListRequestExpand",
            "value": {
              "generatedName": "EmployeePayrollRunsListRequestExpand",
              "values": [
                {
                  "generatedName": "employee",
                  "value": "employee",
                  "casing": {}
                },
                {
                  "generatedName": "EmployeePayrollRun",
                  "value": "employee,payroll_run",
                  "casing": {}
                },
                {
                  "generatedName": "payroll_run",
                  "value": "payroll_run",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include data that was marked as deleted by third party webhooks.",
          "name": "include_deleted_data",
          "schema": {
            "generatedName": "EmployeePayrollRunsListRequestIncludeDeletedData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "EmployeePayrollRunsListRequestIncludeDeletedData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
          "name": "include_remote_data",
          "schema": {
            "generatedName": "EmployeePayrollRunsListRequestIncludeRemoteData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "EmployeePayrollRunsListRequestIncludeRemoteData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, only objects synced by Merge after this date time will be returned.",
          "name": "modified_after",
          "schema": {
            "generatedName": "EmployeePayrollRunsListRequestModifiedAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "EmployeePayrollRunsListRequestModifiedAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, only objects synced by Merge before this date time will be returned.",
          "name": "modified_before",
          "schema": {
            "generatedName": "EmployeePayrollRunsListRequestModifiedBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "EmployeePayrollRunsListRequestModifiedBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Number of results to return per page.",
          "name": "page_size",
          "schema": {
            "generatedName": "EmployeePayrollRunsListRequestPageSize",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "EmployeePayrollRunsListRequestPageSize",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return employee payroll runs for this employee.",
          "name": "payroll_run_id",
          "schema": {
            "generatedName": "EmployeePayrollRunsListRequestPayrollRunId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "EmployeePayrollRunsListRequestPayrollRunId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The API provider's ID for the given object.",
          "name": "remote_id",
          "schema": {
            "generatedName": "EmployeePayrollRunsListRequestRemoteId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "EmployeePayrollRunsListRequestRemoteId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return employee payroll runs started after this datetime.",
          "name": "started_after",
          "schema": {
            "generatedName": "EmployeePayrollRunsListRequestStartedAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "EmployeePayrollRunsListRequestStartedAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return employee payroll runs started before this datetime.",
          "name": "started_before",
          "schema": {
            "generatedName": "EmployeePayrollRunsListRequestStartedBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "EmployeePayrollRunsListRequestStartedBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "EmployeePayrollRunsListRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "EmployeePayrollRunsListRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "EmployeePayrollRunsListResponse",
          "schema": "PaginatedEmployeePayrollRunList",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Returns a list of `EmployeePayrollRun` objects.",
      "authed": true,
      "method": "GET",
      "path": "/employee-payroll-runs",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "properties": {
                "next": {
                  "value": {
                    "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "previous": {
                  "value": {
                    "value": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "results": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "fb8c55b6-1cb8-4b4c-9fb6-17924231619d",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "remote_id": {
                          "value": {
                            "value": "19202938",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "employee": {
                          "value": {
                            "value": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "payroll_run": {
                          "value": {
                            "value": "35347df1-95e7-46e2-93cc-66f1191edca5",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "gross_pay": {
                          "value": {
                            "value": 1342.67,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "net_pay": {
                          "value": {
                            "value": 865.78,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "start_date": {
                          "value": {
                            "value": "2020-11-08T00:00:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "end_date": {
                          "value": {
                            "value": "2020-11-09T00:00:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "check_date": {
                          "value": {
                            "value": "2020-11-10T00:00:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "earnings": {
                          "value": [
                            {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "babbced6-3a81-4775-8da2-490dc6385259",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "employee_payroll_run": {
                                  "value": {
                                    "value": "35347df1-95e7-46e2-93cc-66f1191edca5",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "amount": {
                                  "value": {
                                    "value": 1002.34,
                                    "type": "double"
                                  },
                                  "type": "primitive"
                                },
                                "type": {
                                  "value": "SALARY",
                                  "type": "enum"
                                },
                                "modified_at": {
                                  "value": {
                                    "value": "2021-10-16T00:00:00Z",
                                    "type": "datetime"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            },
                            {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "babbced6-3a81-4775-8da2-490dc6385259",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "employee_payroll_run": {
                                  "value": {
                                    "value": "35347df1-95e7-46e2-93cc-66f1191edca5",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "amount": {
                                  "value": {
                                    "value": 8342.34,
                                    "type": "double"
                                  },
                                  "type": "primitive"
                                },
                                "type": {
                                  "value": "OVERTIME",
                                  "type": "enum"
                                },
                                "modified_at": {
                                  "value": {
                                    "value": "2021-10-16T00:00:00Z",
                                    "type": "datetime"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "deductions": {
                          "value": [
                            {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "5fd439fc-1b64-4755-b275-64918936c365",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "employee_payroll_run": {
                                  "value": {
                                    "value": "35347df1-95e7-46e2-93cc-66f1191edca5",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "Social Security",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "employee_deduction": {
                                  "value": {
                                    "value": 34.54,
                                    "type": "double"
                                  },
                                  "type": "primitive"
                                },
                                "company_deduction": {
                                  "value": {
                                    "value": 78.78,
                                    "type": "double"
                                  },
                                  "type": "primitive"
                                },
                                "modified_at": {
                                  "value": {
                                    "value": "2021-10-16T00:00:00Z",
                                    "type": "datetime"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "taxes": {
                          "value": [
                            {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "e3a825fd-c38d-4095-a717-df98c4cb9ebc",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "employee_payroll_run": {
                                  "value": {
                                    "value": "35347df1-95e7-46e2-93cc-66f1191edca5",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "California State Income Tax",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "amount": {
                                  "value": {
                                    "value": 100.25,
                                    "type": "double"
                                  },
                                  "type": "primitive"
                                },
                                "employer_tax": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "modified_at": {
                                  "value": {
                                    "value": "2021-10-16T00:00:00Z",
                                    "type": "datetime"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "remote_was_deleted": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "modified_at": {
                          "value": {
                            "value": "2021-10-16T00:00:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "field_mappings": {
                          "value": [
                            {
                              "key": {
                                "value": "organization_defined_targets",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "custom_key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "custom_value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            },
                            {
                              "key": {
                                "value": "linked_account_defined_targets",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "custom_key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "custom_value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "remote_data": {
                          "value": [
                            {
                              "properties": {
                                "path": {
                                  "value": {
                                    "value": "/employee-payroll",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "data": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "0",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": {
                                            "value": "Varies by platform",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        },
                                        "type": "unknown"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "employee_payroll_runs_retrieve",
      "tags": [
        "employee-payroll-runs"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "EmployeePayrollRunsRetrieveRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
          "name": "expand",
          "schema": {
            "generatedName": "EmployeePayrollRunsRetrieveRequestExpand",
            "value": {
              "generatedName": "EmployeePayrollRunsRetrieveRequestExpand",
              "values": [
                {
                  "generatedName": "employee",
                  "value": "employee",
                  "casing": {}
                },
                {
                  "generatedName": "EmployeePayrollRun",
                  "value": "employee,payroll_run",
                  "casing": {}
                },
                {
                  "generatedName": "payroll_run",
                  "value": "payroll_run",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
          "name": "include_remote_data",
          "schema": {
            "generatedName": "EmployeePayrollRunsRetrieveRequestIncludeRemoteData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "EmployeePayrollRunsRetrieveRequestIncludeRemoteData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "EmployeePayrollRunsRetrieveRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "EmployeePayrollRunsRetrieveRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "EmployeePayrollRunsRetrieveResponse",
          "schema": "EmployeePayrollRun",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Returns an `EmployeePayrollRun` object with the given `id`.",
      "authed": true,
      "method": "GET",
      "path": "/employee-payroll-runs/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "fb8c55b6-1cb8-4b4c-9fb6-17924231619d",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "remote_id": {
                  "value": {
                    "value": "19202938",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "employee": {
                  "value": {
                    "value": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "payroll_run": {
                  "value": {
                    "value": "35347df1-95e7-46e2-93cc-66f1191edca5",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "gross_pay": {
                  "value": {
                    "value": 1342.67,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "net_pay": {
                  "value": {
                    "value": 865.78,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "start_date": {
                  "value": {
                    "value": "2020-11-08T00:00:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "end_date": {
                  "value": {
                    "value": "2020-11-09T00:00:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "check_date": {
                  "value": {
                    "value": "2020-11-10T00:00:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "earnings": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "babbced6-3a81-4775-8da2-490dc6385259",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "remote_id": {
                          "value": {
                            "value": "52802",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "employee_payroll_run": {
                          "value": {
                            "value": "35347df1-95e7-46e2-93cc-66f1191edca5",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "amount": {
                          "value": {
                            "value": 1002.34,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "type": {
                          "value": "SALARY",
                          "type": "enum"
                        },
                        "remote_was_deleted": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "modified_at": {
                          "value": {
                            "value": "2021-10-16T00:00:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "field_mappings": {
                          "value": [
                            {
                              "key": {
                                "value": "organization_defined_targets",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "custom_key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "custom_value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            },
                            {
                              "key": {
                                "value": "linked_account_defined_targets",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "custom_key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "custom_value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "remote_data": {
                          "value": [
                            {
                              "properties": {
                                "path": {
                                  "value": {
                                    "value": "path",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "babbced6-3a81-4775-8da2-490dc6385259",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "remote_id": {
                          "value": {
                            "value": "52802",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "employee_payroll_run": {
                          "value": {
                            "value": "35347df1-95e7-46e2-93cc-66f1191edca5",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "amount": {
                          "value": {
                            "value": 8342.34,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "type": {
                          "value": "OVERTIME",
                          "type": "enum"
                        },
                        "remote_was_deleted": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "modified_at": {
                          "value": {
                            "value": "2021-10-16T00:00:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "field_mappings": {
                          "value": [
                            {
                              "key": {
                                "value": "organization_defined_targets",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "custom_key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "custom_value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            },
                            {
                              "key": {
                                "value": "linked_account_defined_targets",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "custom_key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "custom_value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "remote_data": {
                          "value": [
                            {
                              "properties": {
                                "path": {
                                  "value": {
                                    "value": "path",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "deductions": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "5fd439fc-1b64-4755-b275-64918936c365",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "remote_id": {
                          "value": {
                            "value": "93478612",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "employee_payroll_run": {
                          "value": {
                            "value": "35347df1-95e7-46e2-93cc-66f1191edca5",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "Social Security",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "employee_deduction": {
                          "value": {
                            "value": 34.54,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "company_deduction": {
                          "value": {
                            "value": 78.78,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "remote_was_deleted": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "modified_at": {
                          "value": {
                            "value": "2021-10-16T00:00:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "field_mappings": {
                          "value": [
                            {
                              "key": {
                                "value": "organization_defined_targets",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "custom_key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "custom_value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            },
                            {
                              "key": {
                                "value": "linked_account_defined_targets",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "custom_key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "custom_value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "remote_data": {
                          "value": [
                            {
                              "properties": {
                                "path": {
                                  "value": {
                                    "value": "/payroll-deduction",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "data": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "0",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": {
                                            "value": "Varies by platform",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        },
                                        "type": "unknown"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "taxes": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "e3a825fd-c38d-4095-a717-df98c4cb9ebc",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "remote_id": {
                          "value": {
                            "value": "26806834",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "employee_payroll_run": {
                          "value": {
                            "value": "35347df1-95e7-46e2-93cc-66f1191edca5",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "California State Income Tax",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "amount": {
                          "value": {
                            "value": 100.25,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "employer_tax": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "remote_was_deleted": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "modified_at": {
                          "value": {
                            "value": "2021-10-16T00:00:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "field_mappings": {
                          "value": [
                            {
                              "key": {
                                "value": "organization_defined_targets",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "custom_key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "custom_value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            },
                            {
                              "key": {
                                "value": "linked_account_defined_targets",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "custom_key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "custom_value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "remote_data": {
                          "value": [
                            {
                              "properties": {
                                "path": {
                                  "value": {
                                    "value": "path",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "remote_was_deleted": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "modified_at": {
                  "value": {
                    "value": "2021-10-16T00:00:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "field_mappings": {
                  "value": [
                    {
                      "key": {
                        "value": "organization_defined_targets",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "key": {
                                "value": "custom_key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "custom_value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "type": "unknown"
                      }
                    },
                    {
                      "key": {
                        "value": "linked_account_defined_targets",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "key": {
                                "value": "custom_key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "custom_value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "remote_data": {
                  "value": [
                    {
                      "properties": {
                        "path": {
                          "value": {
                            "value": "/employee-payroll",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "data": {
                          "value": [
                            {
                              "key": {
                                "value": "0",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "Varies by platform",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "employees_list",
      "tags": [
        "employees"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "If provided, will only return employees for this company.",
          "name": "company_id",
          "schema": {
            "generatedName": "EmployeesListRequestCompanyId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "EmployeesListRequestCompanyId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return objects created after this datetime.",
          "name": "created_after",
          "schema": {
            "generatedName": "EmployeesListRequestCreatedAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "EmployeesListRequestCreatedAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return objects created before this datetime.",
          "name": "created_before",
          "schema": {
            "generatedName": "EmployeesListRequestCreatedBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "EmployeesListRequestCreatedBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The pagination cursor value.",
          "name": "cursor",
          "schema": {
            "generatedName": "EmployeesListRequestCursor",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "EmployeesListRequestCursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return employees with this display name.",
          "name": "display_full_name",
          "schema": {
            "generatedName": "EmployeesListRequestDisplayFullName",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "EmployeesListRequestDisplayFullName",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return employees with this employment status.\n\n* `ACTIVE` - ACTIVE\n* `PENDING` - PENDING\n* `INACTIVE` - INACTIVE",
          "name": "employment_status",
          "schema": {
            "generatedName": "EmployeesListRequestEmploymentStatus",
            "value": {
              "generatedName": "EmployeesListRequestEmploymentStatus",
              "values": [
                {
                  "generatedName": "ACTIVE",
                  "value": "ACTIVE",
                  "casing": {}
                },
                {
                  "generatedName": "INACTIVE",
                  "value": "INACTIVE",
                  "casing": {}
                },
                {
                  "generatedName": "PENDING",
                  "value": "PENDING",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
          "name": "expand",
          "schema": {
            "generatedName": "EmployeesListRequestExpand",
            "value": {
              "generatedName": "EmployeesListRequestExpand",
              "values": [
                {
                  "generatedName": "company",
                  "value": "company",
                  "casing": {}
                },
                {
                  "generatedName": "CompanyPayGroup",
                  "value": "company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "employments",
                  "value": "employments",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsCompany",
                  "value": "employments,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsCompanyPayGroup",
                  "value": "employments,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroups",
                  "value": "employments,groups",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsCompany",
                  "value": "employments,groups,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsCompanyPayGroup",
                  "value": "employments,groups,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocation",
                  "value": "employments,groups,home_location",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationCompany",
                  "value": "employments,groups,home_location,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationCompanyPayGroup",
                  "value": "employments,groups,home_location,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationManager",
                  "value": "employments,groups,home_location,manager",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationManagerCompany",
                  "value": "employments,groups,home_location,manager,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationManagerCompanyPayGroup",
                  "value": "employments,groups,home_location,manager,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationManagerPayGroup",
                  "value": "employments,groups,home_location,manager,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationManagerTeam",
                  "value": "employments,groups,home_location,manager,team",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationManagerTeamCompany",
                  "value": "employments,groups,home_location,manager,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationManagerTeamCompanyPayGroup",
                  "value": "employments,groups,home_location,manager,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationManagerTeamPayGroup",
                  "value": "employments,groups,home_location,manager,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationPayGroup",
                  "value": "employments,groups,home_location,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationTeam",
                  "value": "employments,groups,home_location,team",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationTeamCompany",
                  "value": "employments,groups,home_location,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationTeamCompanyPayGroup",
                  "value": "employments,groups,home_location,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationTeamPayGroup",
                  "value": "employments,groups,home_location,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationWorkLocation",
                  "value": "employments,groups,home_location,work_location",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationWorkLocationCompany",
                  "value": "employments,groups,home_location,work_location,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationWorkLocationCompanyPayGroup",
                  "value": "employments,groups,home_location,work_location,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationWorkLocationManager",
                  "value": "employments,groups,home_location,work_location,manager",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationWorkLocationManagerCompany",
                  "value": "employments,groups,home_location,work_location,manager,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationWorkLocationManagerCompanyPayGroup",
                  "value": "employments,groups,home_location,work_location,manager,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationWorkLocationManagerPayGroup",
                  "value": "employments,groups,home_location,work_location,manager,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationWorkLocationManagerTeam",
                  "value": "employments,groups,home_location,work_location,manager,team",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationWorkLocationManagerTeamCompany",
                  "value": "employments,groups,home_location,work_location,manager,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationWorkLocationManagerTeamCompanyPayGroup",
                  "value": "employments,groups,home_location,work_location,manager,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationWorkLocationManagerTeamPayGroup",
                  "value": "employments,groups,home_location,work_location,manager,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationWorkLocationPayGroup",
                  "value": "employments,groups,home_location,work_location,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationWorkLocationTeam",
                  "value": "employments,groups,home_location,work_location,team",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationWorkLocationTeamCompany",
                  "value": "employments,groups,home_location,work_location,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationWorkLocationTeamCompanyPayGroup",
                  "value": "employments,groups,home_location,work_location,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationWorkLocationTeamPayGroup",
                  "value": "employments,groups,home_location,work_location,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsManager",
                  "value": "employments,groups,manager",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsManagerCompany",
                  "value": "employments,groups,manager,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsManagerCompanyPayGroup",
                  "value": "employments,groups,manager,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsManagerPayGroup",
                  "value": "employments,groups,manager,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsManagerTeam",
                  "value": "employments,groups,manager,team",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsManagerTeamCompany",
                  "value": "employments,groups,manager,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsManagerTeamCompanyPayGroup",
                  "value": "employments,groups,manager,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsManagerTeamPayGroup",
                  "value": "employments,groups,manager,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsPayGroup",
                  "value": "employments,groups,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsTeam",
                  "value": "employments,groups,team",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsTeamCompany",
                  "value": "employments,groups,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsTeamCompanyPayGroup",
                  "value": "employments,groups,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsTeamPayGroup",
                  "value": "employments,groups,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsWorkLocation",
                  "value": "employments,groups,work_location",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsWorkLocationCompany",
                  "value": "employments,groups,work_location,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsWorkLocationCompanyPayGroup",
                  "value": "employments,groups,work_location,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsWorkLocationManager",
                  "value": "employments,groups,work_location,manager",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsWorkLocationManagerCompany",
                  "value": "employments,groups,work_location,manager,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsWorkLocationManagerCompanyPayGroup",
                  "value": "employments,groups,work_location,manager,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsWorkLocationManagerPayGroup",
                  "value": "employments,groups,work_location,manager,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsWorkLocationManagerTeam",
                  "value": "employments,groups,work_location,manager,team",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsWorkLocationManagerTeamCompany",
                  "value": "employments,groups,work_location,manager,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsWorkLocationManagerTeamCompanyPayGroup",
                  "value": "employments,groups,work_location,manager,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsWorkLocationManagerTeamPayGroup",
                  "value": "employments,groups,work_location,manager,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsWorkLocationPayGroup",
                  "value": "employments,groups,work_location,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsWorkLocationTeam",
                  "value": "employments,groups,work_location,team",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsWorkLocationTeamCompany",
                  "value": "employments,groups,work_location,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsWorkLocationTeamCompanyPayGroup",
                  "value": "employments,groups,work_location,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsWorkLocationTeamPayGroup",
                  "value": "employments,groups,work_location,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocation",
                  "value": "employments,home_location",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationCompany",
                  "value": "employments,home_location,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationCompanyPayGroup",
                  "value": "employments,home_location,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationManager",
                  "value": "employments,home_location,manager",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationManagerCompany",
                  "value": "employments,home_location,manager,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationManagerCompanyPayGroup",
                  "value": "employments,home_location,manager,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationManagerPayGroup",
                  "value": "employments,home_location,manager,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationManagerTeam",
                  "value": "employments,home_location,manager,team",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationManagerTeamCompany",
                  "value": "employments,home_location,manager,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationManagerTeamCompanyPayGroup",
                  "value": "employments,home_location,manager,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationManagerTeamPayGroup",
                  "value": "employments,home_location,manager,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationPayGroup",
                  "value": "employments,home_location,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationTeam",
                  "value": "employments,home_location,team",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationTeamCompany",
                  "value": "employments,home_location,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationTeamCompanyPayGroup",
                  "value": "employments,home_location,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationTeamPayGroup",
                  "value": "employments,home_location,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationWorkLocation",
                  "value": "employments,home_location,work_location",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationWorkLocationCompany",
                  "value": "employments,home_location,work_location,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationWorkLocationCompanyPayGroup",
                  "value": "employments,home_location,work_location,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationWorkLocationManager",
                  "value": "employments,home_location,work_location,manager",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationWorkLocationManagerCompany",
                  "value": "employments,home_location,work_location,manager,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationWorkLocationManagerCompanyPayGroup",
                  "value": "employments,home_location,work_location,manager,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationWorkLocationManagerPayGroup",
                  "value": "employments,home_location,work_location,manager,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationWorkLocationManagerTeam",
                  "value": "employments,home_location,work_location,manager,team",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationWorkLocationManagerTeamCompany",
                  "value": "employments,home_location,work_location,manager,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationWorkLocationManagerTeamCompanyPayGroup",
                  "value": "employments,home_location,work_location,manager,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationWorkLocationManagerTeamPayGroup",
                  "value": "employments,home_location,work_location,manager,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationWorkLocationPayGroup",
                  "value": "employments,home_location,work_location,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationWorkLocationTeam",
                  "value": "employments,home_location,work_location,team",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationWorkLocationTeamCompany",
                  "value": "employments,home_location,work_location,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationWorkLocationTeamCompanyPayGroup",
                  "value": "employments,home_location,work_location,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationWorkLocationTeamPayGroup",
                  "value": "employments,home_location,work_location,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsManager",
                  "value": "employments,manager",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsManagerCompany",
                  "value": "employments,manager,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsManagerCompanyPayGroup",
                  "value": "employments,manager,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsManagerPayGroup",
                  "value": "employments,manager,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsManagerTeam",
                  "value": "employments,manager,team",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsManagerTeamCompany",
                  "value": "employments,manager,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsManagerTeamCompanyPayGroup",
                  "value": "employments,manager,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsManagerTeamPayGroup",
                  "value": "employments,manager,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsPayGroup",
                  "value": "employments,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsTeam",
                  "value": "employments,team",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsTeamCompany",
                  "value": "employments,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsTeamCompanyPayGroup",
                  "value": "employments,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsTeamPayGroup",
                  "value": "employments,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsWorkLocation",
                  "value": "employments,work_location",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsWorkLocationCompany",
                  "value": "employments,work_location,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsWorkLocationCompanyPayGroup",
                  "value": "employments,work_location,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsWorkLocationManager",
                  "value": "employments,work_location,manager",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsWorkLocationManagerCompany",
                  "value": "employments,work_location,manager,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsWorkLocationManagerCompanyPayGroup",
                  "value": "employments,work_location,manager,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsWorkLocationManagerPayGroup",
                  "value": "employments,work_location,manager,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsWorkLocationManagerTeam",
                  "value": "employments,work_location,manager,team",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsWorkLocationManagerTeamCompany",
                  "value": "employments,work_location,manager,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsWorkLocationManagerTeamCompanyPayGroup",
                  "value": "employments,work_location,manager,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsWorkLocationManagerTeamPayGroup",
                  "value": "employments,work_location,manager,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsWorkLocationPayGroup",
                  "value": "employments,work_location,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsWorkLocationTeam",
                  "value": "employments,work_location,team",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsWorkLocationTeamCompany",
                  "value": "employments,work_location,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsWorkLocationTeamCompanyPayGroup",
                  "value": "employments,work_location,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsWorkLocationTeamPayGroup",
                  "value": "employments,work_location,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "groups",
                  "value": "groups",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsCompany",
                  "value": "groups,company",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsCompanyPayGroup",
                  "value": "groups,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocation",
                  "value": "groups,home_location",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationCompany",
                  "value": "groups,home_location,company",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationCompanyPayGroup",
                  "value": "groups,home_location,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationManager",
                  "value": "groups,home_location,manager",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationManagerCompany",
                  "value": "groups,home_location,manager,company",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationManagerCompanyPayGroup",
                  "value": "groups,home_location,manager,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationManagerPayGroup",
                  "value": "groups,home_location,manager,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationManagerTeam",
                  "value": "groups,home_location,manager,team",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationManagerTeamCompany",
                  "value": "groups,home_location,manager,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationManagerTeamCompanyPayGroup",
                  "value": "groups,home_location,manager,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationManagerTeamPayGroup",
                  "value": "groups,home_location,manager,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationPayGroup",
                  "value": "groups,home_location,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationTeam",
                  "value": "groups,home_location,team",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationTeamCompany",
                  "value": "groups,home_location,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationTeamCompanyPayGroup",
                  "value": "groups,home_location,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationTeamPayGroup",
                  "value": "groups,home_location,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationWorkLocation",
                  "value": "groups,home_location,work_location",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationWorkLocationCompany",
                  "value": "groups,home_location,work_location,company",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationWorkLocationCompanyPayGroup",
                  "value": "groups,home_location,work_location,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationWorkLocationManager",
                  "value": "groups,home_location,work_location,manager",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationWorkLocationManagerCompany",
                  "value": "groups,home_location,work_location,manager,company",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationWorkLocationManagerCompanyPayGroup",
                  "value": "groups,home_location,work_location,manager,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationWorkLocationManagerPayGroup",
                  "value": "groups,home_location,work_location,manager,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationWorkLocationManagerTeam",
                  "value": "groups,home_location,work_location,manager,team",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationWorkLocationManagerTeamCompany",
                  "value": "groups,home_location,work_location,manager,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationWorkLocationManagerTeamCompanyPayGroup",
                  "value": "groups,home_location,work_location,manager,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationWorkLocationManagerTeamPayGroup",
                  "value": "groups,home_location,work_location,manager,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationWorkLocationPayGroup",
                  "value": "groups,home_location,work_location,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationWorkLocationTeam",
                  "value": "groups,home_location,work_location,team",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationWorkLocationTeamCompany",
                  "value": "groups,home_location,work_location,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationWorkLocationTeamCompanyPayGroup",
                  "value": "groups,home_location,work_location,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationWorkLocationTeamPayGroup",
                  "value": "groups,home_location,work_location,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsManager",
                  "value": "groups,manager",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsManagerCompany",
                  "value": "groups,manager,company",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsManagerCompanyPayGroup",
                  "value": "groups,manager,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsManagerPayGroup",
                  "value": "groups,manager,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsManagerTeam",
                  "value": "groups,manager,team",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsManagerTeamCompany",
                  "value": "groups,manager,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsManagerTeamCompanyPayGroup",
                  "value": "groups,manager,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsManagerTeamPayGroup",
                  "value": "groups,manager,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsPayGroup",
                  "value": "groups,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsTeam",
                  "value": "groups,team",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsTeamCompany",
                  "value": "groups,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsTeamCompanyPayGroup",
                  "value": "groups,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsTeamPayGroup",
                  "value": "groups,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsWorkLocation",
                  "value": "groups,work_location",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsWorkLocationCompany",
                  "value": "groups,work_location,company",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsWorkLocationCompanyPayGroup",
                  "value": "groups,work_location,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsWorkLocationManager",
                  "value": "groups,work_location,manager",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsWorkLocationManagerCompany",
                  "value": "groups,work_location,manager,company",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsWorkLocationManagerCompanyPayGroup",
                  "value": "groups,work_location,manager,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsWorkLocationManagerPayGroup",
                  "value": "groups,work_location,manager,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsWorkLocationManagerTeam",
                  "value": "groups,work_location,manager,team",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsWorkLocationManagerTeamCompany",
                  "value": "groups,work_location,manager,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsWorkLocationManagerTeamCompanyPayGroup",
                  "value": "groups,work_location,manager,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsWorkLocationManagerTeamPayGroup",
                  "value": "groups,work_location,manager,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsWorkLocationPayGroup",
                  "value": "groups,work_location,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsWorkLocationTeam",
                  "value": "groups,work_location,team",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsWorkLocationTeamCompany",
                  "value": "groups,work_location,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsWorkLocationTeamCompanyPayGroup",
                  "value": "groups,work_location,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsWorkLocationTeamPayGroup",
                  "value": "groups,work_location,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "home_location",
                  "value": "home_location",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationCompany",
                  "value": "home_location,company",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationCompanyPayGroup",
                  "value": "home_location,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationManager",
                  "value": "home_location,manager",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationManagerCompany",
                  "value": "home_location,manager,company",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationManagerCompanyPayGroup",
                  "value": "home_location,manager,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationManagerPayGroup",
                  "value": "home_location,manager,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationManagerTeam",
                  "value": "home_location,manager,team",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationManagerTeamCompany",
                  "value": "home_location,manager,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationManagerTeamCompanyPayGroup",
                  "value": "home_location,manager,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationManagerTeamPayGroup",
                  "value": "home_location,manager,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationPayGroup",
                  "value": "home_location,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationTeam",
                  "value": "home_location,team",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationTeamCompany",
                  "value": "home_location,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationTeamCompanyPayGroup",
                  "value": "home_location,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationTeamPayGroup",
                  "value": "home_location,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationWorkLocation",
                  "value": "home_location,work_location",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationWorkLocationCompany",
                  "value": "home_location,work_location,company",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationWorkLocationCompanyPayGroup",
                  "value": "home_location,work_location,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationWorkLocationManager",
                  "value": "home_location,work_location,manager",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationWorkLocationManagerCompany",
                  "value": "home_location,work_location,manager,company",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationWorkLocationManagerCompanyPayGroup",
                  "value": "home_location,work_location,manager,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationWorkLocationManagerPayGroup",
                  "value": "home_location,work_location,manager,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationWorkLocationManagerTeam",
                  "value": "home_location,work_location,manager,team",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationWorkLocationManagerTeamCompany",
                  "value": "home_location,work_location,manager,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationWorkLocationManagerTeamCompanyPayGroup",
                  "value": "home_location,work_location,manager,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationWorkLocationManagerTeamPayGroup",
                  "value": "home_location,work_location,manager,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationWorkLocationPayGroup",
                  "value": "home_location,work_location,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationWorkLocationTeam",
                  "value": "home_location,work_location,team",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationWorkLocationTeamCompany",
                  "value": "home_location,work_location,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationWorkLocationTeamCompanyPayGroup",
                  "value": "home_location,work_location,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationWorkLocationTeamPayGroup",
                  "value": "home_location,work_location,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "manager",
                  "value": "manager",
                  "casing": {}
                },
                {
                  "generatedName": "ManagerCompany",
                  "value": "manager,company",
                  "casing": {}
                },
                {
                  "generatedName": "ManagerCompanyPayGroup",
                  "value": "manager,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "ManagerPayGroup",
                  "value": "manager,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "ManagerTeam",
                  "value": "manager,team",
                  "casing": {}
                },
                {
                  "generatedName": "ManagerTeamCompany",
                  "value": "manager,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "ManagerTeamCompanyPayGroup",
                  "value": "manager,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "ManagerTeamPayGroup",
                  "value": "manager,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "pay_group",
                  "value": "pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "team",
                  "value": "team",
                  "casing": {}
                },
                {
                  "generatedName": "TeamCompany",
                  "value": "team,company",
                  "casing": {}
                },
                {
                  "generatedName": "TeamCompanyPayGroup",
                  "value": "team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "TeamPayGroup",
                  "value": "team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "work_location",
                  "value": "work_location",
                  "casing": {}
                },
                {
                  "generatedName": "WorkLocationCompany",
                  "value": "work_location,company",
                  "casing": {}
                },
                {
                  "generatedName": "WorkLocationCompanyPayGroup",
                  "value": "work_location,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "WorkLocationManager",
                  "value": "work_location,manager",
                  "casing": {}
                },
                {
                  "generatedName": "WorkLocationManagerCompany",
                  "value": "work_location,manager,company",
                  "casing": {}
                },
                {
                  "generatedName": "WorkLocationManagerCompanyPayGroup",
                  "value": "work_location,manager,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "WorkLocationManagerPayGroup",
                  "value": "work_location,manager,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "WorkLocationManagerTeam",
                  "value": "work_location,manager,team",
                  "casing": {}
                },
                {
                  "generatedName": "WorkLocationManagerTeamCompany",
                  "value": "work_location,manager,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "WorkLocationManagerTeamCompanyPayGroup",
                  "value": "work_location,manager,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "WorkLocationManagerTeamPayGroup",
                  "value": "work_location,manager,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "WorkLocationPayGroup",
                  "value": "work_location,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "WorkLocationTeam",
                  "value": "work_location,team",
                  "casing": {}
                },
                {
                  "generatedName": "WorkLocationTeamCompany",
                  "value": "work_location,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "WorkLocationTeamCompanyPayGroup",
                  "value": "work_location,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "WorkLocationTeamPayGroup",
                  "value": "work_location,team,pay_group",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return employees with this first name.",
          "name": "first_name",
          "schema": {
            "generatedName": "EmployeesListRequestFirstName",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "EmployeesListRequestFirstName",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return employees matching the group ids; multiple groups can be separated by commas.",
          "name": "groups",
          "schema": {
            "generatedName": "EmployeesListRequestGroups",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "EmployeesListRequestGroups",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include data that was marked as deleted by third party webhooks.",
          "name": "include_deleted_data",
          "schema": {
            "generatedName": "EmployeesListRequestIncludeDeletedData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "EmployeesListRequestIncludeDeletedData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
          "name": "include_remote_data",
          "schema": {
            "generatedName": "EmployeesListRequestIncludeRemoteData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "EmployeesListRequestIncludeRemoteData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include sensitive fields (such as social security numbers) in the response.",
          "name": "include_sensitive_fields",
          "schema": {
            "generatedName": "EmployeesListRequestIncludeSensitiveFields",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "EmployeesListRequestIncludeSensitiveFields",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return employees with this last name.",
          "name": "last_name",
          "schema": {
            "generatedName": "EmployeesListRequestLastName",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "EmployeesListRequestLastName",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return employees for this manager.",
          "name": "manager_id",
          "schema": {
            "generatedName": "EmployeesListRequestManagerId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "EmployeesListRequestManagerId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, only objects synced by Merge after this date time will be returned.",
          "name": "modified_after",
          "schema": {
            "generatedName": "EmployeesListRequestModifiedAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "EmployeesListRequestModifiedAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, only objects synced by Merge before this date time will be returned.",
          "name": "modified_before",
          "schema": {
            "generatedName": "EmployeesListRequestModifiedBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "EmployeesListRequestModifiedBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Number of results to return per page.",
          "name": "page_size",
          "schema": {
            "generatedName": "EmployeesListRequestPageSize",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "EmployeesListRequestPageSize",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return employees for this pay group",
          "name": "pay_group_id",
          "schema": {
            "generatedName": "EmployeesListRequestPayGroupId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "EmployeesListRequestPayGroupId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return Employees with this personal email",
          "name": "personal_email",
          "schema": {
            "generatedName": "EmployeesListRequestPersonalEmail",
            "value": {
              "schema": {
                "format": "email",
                "type": "string"
              },
              "generatedName": "EmployeesListRequestPersonalEmail",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Deprecated. Use show_enum_origins.",
          "name": "remote_fields",
          "schema": {
            "generatedName": "EmployeesListRequestRemoteFields",
            "value": {
              "generatedName": "EmployeesListRequestRemoteFields",
              "values": [
                {
                  "generatedName": "employment_status",
                  "value": "employment_status",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentStatusEthnicity",
                  "value": "employment_status,ethnicity",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentStatusEthnicityGender",
                  "value": "employment_status,ethnicity,gender",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentStatusEthnicityGenderMaritalStatus",
                  "value": "employment_status,ethnicity,gender,marital_status",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentStatusEthnicityMaritalStatus",
                  "value": "employment_status,ethnicity,marital_status",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentStatusGender",
                  "value": "employment_status,gender",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentStatusGenderMaritalStatus",
                  "value": "employment_status,gender,marital_status",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentStatusMaritalStatus",
                  "value": "employment_status,marital_status",
                  "casing": {}
                },
                {
                  "generatedName": "ethnicity",
                  "value": "ethnicity",
                  "casing": {}
                },
                {
                  "generatedName": "EthnicityGender",
                  "value": "ethnicity,gender",
                  "casing": {}
                },
                {
                  "generatedName": "EthnicityGenderMaritalStatus",
                  "value": "ethnicity,gender,marital_status",
                  "casing": {}
                },
                {
                  "generatedName": "EthnicityMaritalStatus",
                  "value": "ethnicity,marital_status",
                  "casing": {}
                },
                {
                  "generatedName": "gender",
                  "value": "gender",
                  "casing": {}
                },
                {
                  "generatedName": "GenderMaritalStatus",
                  "value": "gender,marital_status",
                  "casing": {}
                },
                {
                  "generatedName": "marital_status",
                  "value": "marital_status",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The API provider's ID for the given object.",
          "name": "remote_id",
          "schema": {
            "generatedName": "EmployeesListRequestRemoteId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "EmployeesListRequestRemoteId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Which fields should be returned in non-normalized form.",
          "name": "show_enum_origins",
          "schema": {
            "generatedName": "EmployeesListRequestShowEnumOrigins",
            "value": {
              "generatedName": "EmployeesListRequestShowEnumOrigins",
              "values": [
                {
                  "generatedName": "employment_status",
                  "value": "employment_status",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentStatusEthnicity",
                  "value": "employment_status,ethnicity",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentStatusEthnicityGender",
                  "value": "employment_status,ethnicity,gender",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentStatusEthnicityGenderMaritalStatus",
                  "value": "employment_status,ethnicity,gender,marital_status",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentStatusEthnicityMaritalStatus",
                  "value": "employment_status,ethnicity,marital_status",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentStatusGender",
                  "value": "employment_status,gender",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentStatusGenderMaritalStatus",
                  "value": "employment_status,gender,marital_status",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentStatusMaritalStatus",
                  "value": "employment_status,marital_status",
                  "casing": {}
                },
                {
                  "generatedName": "ethnicity",
                  "value": "ethnicity",
                  "casing": {}
                },
                {
                  "generatedName": "EthnicityGender",
                  "value": "ethnicity,gender",
                  "casing": {}
                },
                {
                  "generatedName": "EthnicityGenderMaritalStatus",
                  "value": "ethnicity,gender,marital_status",
                  "casing": {}
                },
                {
                  "generatedName": "EthnicityMaritalStatus",
                  "value": "ethnicity,marital_status",
                  "casing": {}
                },
                {
                  "generatedName": "gender",
                  "value": "gender",
                  "casing": {}
                },
                {
                  "generatedName": "GenderMaritalStatus",
                  "value": "gender,marital_status",
                  "casing": {}
                },
                {
                  "generatedName": "marital_status",
                  "value": "marital_status",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return employees that started after this datetime.",
          "name": "started_after",
          "schema": {
            "generatedName": "EmployeesListRequestStartedAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "EmployeesListRequestStartedAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return employees that started before this datetime.",
          "name": "started_before",
          "schema": {
            "generatedName": "EmployeesListRequestStartedBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "EmployeesListRequestStartedBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return employees for this team.",
          "name": "team_id",
          "schema": {
            "generatedName": "EmployeesListRequestTeamId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "EmployeesListRequestTeamId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return employees that were terminated after this datetime.",
          "name": "terminated_after",
          "schema": {
            "generatedName": "EmployeesListRequestTerminatedAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "EmployeesListRequestTerminatedAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return employees that were terminated before this datetime.",
          "name": "terminated_before",
          "schema": {
            "generatedName": "EmployeesListRequestTerminatedBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "EmployeesListRequestTerminatedBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return Employees with this work email",
          "name": "work_email",
          "schema": {
            "generatedName": "EmployeesListRequestWorkEmail",
            "value": {
              "schema": {
                "format": "email",
                "type": "string"
              },
              "generatedName": "EmployeesListRequestWorkEmail",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return employees for this location.",
          "name": "work_location_id",
          "schema": {
            "generatedName": "EmployeesListRequestWorkLocationId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "EmployeesListRequestWorkLocationId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "EmployeesListRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "EmployeesListRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "EmployeesListResponse",
          "schema": "PaginatedEmployeeList",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Returns a list of `Employee` objects.",
      "authed": true,
      "method": "GET",
      "path": "/employees",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "properties": {
                "next": {
                  "value": {
                    "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "previous": {
                  "value": {
                    "value": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "results": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "remote_id": {
                          "value": {
                            "value": "19202938",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "employee_number": {
                          "value": {
                            "value": "2",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "company": {
                          "value": {
                            "value": "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "first_name": {
                          "value": {
                            "value": "Greg",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "last_name": {
                          "value": {
                            "value": "Hirsch",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "display_full_name": {
                          "value": {
                            "value": "Cousin Greg Hirsch",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "username": {
                          "value": {
                            "value": "cousingreg",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "groups": {
                          "value": [
                            {
                              "value": {
                                "value": "21a54124-397f-494d-985e-3c5b330b8a68",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "work_email": {
                          "value": {
                            "value": "greg@merge.dev",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "personal_email": {
                          "value": {
                            "value": "greg@gmail.com",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "mobile_phone_number": {
                          "value": {
                            "value": "+1234567890",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "employments": {
                          "value": [
                            {
                              "value": {
                                "value": "17a54124-287f-494d-965e-3c5b330c9a68",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "home_location": {
                          "value": {
                            "value": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "work_location": {
                          "value": {
                            "value": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "manager": {
                          "value": {
                            "value": "0048ea5b-911e-4dff-9364-92070dea62ff",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "team": {
                          "value": {
                            "value": "249c9faa-3045-4a31-953b-8f22d3613301",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "pay_group": {
                          "value": {
                            "value": "ad1264e2-39be-4787-b749-f1aade9e3405",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ssn": {
                          "value": {
                            "value": "1234567890",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "gender": {
                          "value": "MALE",
                          "type": "enum"
                        },
                        "ethnicity": {
                          "value": "AMERICAN_INDIAN_OR_ALASKA_NATIVE",
                          "type": "enum"
                        },
                        "marital_status": {
                          "value": "SINGLE",
                          "type": "enum"
                        },
                        "date_of_birth": {
                          "value": {
                            "value": "1990-11-10T00:00:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "hire_date": {
                          "value": {
                            "value": "2020-10-10T00:00:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "start_date": {
                          "value": {
                            "value": "2020-10-11T00:00:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "remote_created_at": {
                          "value": {
                            "value": "2020-10-11T00:00:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "employment_status": {
                          "value": "ACTIVE",
                          "type": "enum"
                        },
                        "termination_date": {
                          "value": {
                            "value": "2021-10-12T00:00:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "avatar": {
                          "value": {
                            "value": "http://alturl.com/h2h8m",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "custom_fields": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "remote_was_deleted": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "modified_at": {
                          "value": {
                            "value": "2021-10-16T00:00:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "field_mappings": {
                          "value": [
                            {
                              "key": {
                                "value": "organization_defined_targets",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "custom_key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "custom_value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            },
                            {
                              "key": {
                                "value": "linked_account_defined_targets",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "custom_key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "custom_value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "remote_data": {
                          "value": [
                            {
                              "properties": {
                                "path": {
                                  "value": {
                                    "value": "/people",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "data": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "0",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": {
                                            "value": "Varies by platform",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        },
                                        "type": "unknown"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "employees_create",
      "tags": [
        "employees"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Whether to include debug fields (such as log file links) in the response.",
          "name": "is_debug_mode",
          "schema": {
            "generatedName": "EmployeesCreateRequestIsDebugMode",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "EmployeesCreateRequestIsDebugMode",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether or not third-party updates should be run asynchronously.",
          "name": "run_async",
          "schema": {
            "generatedName": "EmployeesCreateRequestRunAsync",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "EmployeesCreateRequestRunAsync",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "EmployeesCreateRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "EmployeesCreateRequest",
      "request": {
        "schema": {
          "generatedName": "EmployeesCreateRequestBody",
          "schema": "EmployeeEndpointRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/x-www-form-urlencoded",
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "fullExamples": [],
        "additionalProperties": false,
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "EmployeesCreateResponse",
          "schema": "EmployeeResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Creates an `Employee` object with the given values.",
      "authed": true,
      "method": "POST",
      "path": "/employees",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "request": {
            "properties": {
              "model": {
                "properties": {},
                "type": "object"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "model": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "remote_id": {
                      "value": {
                        "value": "19202938",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "employee_number": {
                      "value": {
                        "value": "2",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "company": {
                      "value": {
                        "value": "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "first_name": {
                      "value": {
                        "value": "Greg",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "last_name": {
                      "value": {
                        "value": "Hirsch",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "display_full_name": {
                      "value": {
                        "value": "Cousin Greg Hirsch",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "username": {
                      "value": {
                        "value": "cousingreg",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "groups": {
                      "value": [
                        {
                          "value": {
                            "value": "21a54124-397f-494d-985e-3c5b330b8a68",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "work_email": {
                      "value": {
                        "value": "greg@merge.dev",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "personal_email": {
                      "value": {
                        "value": "greg@gmail.com",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "mobile_phone_number": {
                      "value": {
                        "value": "+1234567890",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "employments": {
                      "value": [
                        {
                          "value": {
                            "value": "17a54124-287f-494d-965e-3c5b330c9a68",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "home_location": {
                      "value": {
                        "value": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "work_location": {
                      "value": {
                        "value": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "manager": {
                      "value": {
                        "value": "0048ea5b-911e-4dff-9364-92070dea62ff",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "team": {
                      "value": {
                        "value": "249c9faa-3045-4a31-953b-8f22d3613301",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "pay_group": {
                      "value": {
                        "value": "ad1264e2-39be-4787-b749-f1aade9e3405",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "ssn": {
                      "value": {
                        "value": "1234567890",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "gender": {
                      "value": "MALE",
                      "type": "enum"
                    },
                    "ethnicity": {
                      "value": "AMERICAN_INDIAN_OR_ALASKA_NATIVE",
                      "type": "enum"
                    },
                    "marital_status": {
                      "value": "SINGLE",
                      "type": "enum"
                    },
                    "date_of_birth": {
                      "value": {
                        "value": "1990-11-10T00:00:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "hire_date": {
                      "value": {
                        "value": "2020-10-10T00:00:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "start_date": {
                      "value": {
                        "value": "2020-10-11T00:00:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "remote_created_at": {
                      "value": {
                        "value": "2020-10-11T00:00:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "employment_status": {
                      "value": "ACTIVE",
                      "type": "enum"
                    },
                    "termination_date": {
                      "value": {
                        "value": "2021-10-12T00:00:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "avatar": {
                      "value": {
                        "value": "http://alturl.com/h2h8m",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "custom_fields": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": {
                                "value": "value",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "type": "unknown"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    "remote_was_deleted": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "modified_at": {
                      "value": {
                        "value": "2021-10-16T00:00:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "field_mappings": {
                      "value": [
                        {
                          "key": {
                            "value": "organization_defined_targets",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": [
                                {
                                  "key": {
                                    "value": "custom_key",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": {
                                      "value": "custom_value",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                }
                              ],
                              "type": "map"
                            },
                            "type": "unknown"
                          }
                        },
                        {
                          "key": {
                            "value": "linked_account_defined_targets",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": [
                                {
                                  "key": {
                                    "value": "custom_key",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": {
                                      "value": "custom_value",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                }
                              ],
                              "type": "map"
                            },
                            "type": "unknown"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    "remote_data": {
                      "value": [
                        {
                          "properties": {
                            "path": {
                              "value": {
                                "value": "/people",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "data": {
                              "value": [
                                {
                                  "key": {
                                    "value": "0",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": {
                                      "value": {
                                        "value": "Varies by platform",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "type": "unknown"
                                  }
                                }
                              ],
                              "type": "map"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "warnings": {
                  "value": [
                    {
                      "properties": {
                        "source": {
                          "properties": {
                            "pointer": {
                              "value": {
                                "value": "pointer",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "title": {
                          "value": {
                            "value": "Unrecognized Field",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "detail": {
                          "value": {
                            "value": "An unrecognized field, age, was passed in with request data.",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "problem_type": {
                          "value": {
                            "value": "UNRECOGNIZED_FIELD",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "errors": {
                  "value": [
                    {
                      "properties": {
                        "source": {
                          "properties": {
                            "pointer": {
                              "value": {
                                "value": "pointer",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "title": {
                          "value": {
                            "value": "Missing Required Field",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "detail": {
                          "value": {
                            "value": "custom_fields is a required field on model.",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "problem_type": {
                          "value": {
                            "value": "MISSING_REQUIRED_FIELD",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "logs": {
                  "value": [
                    {
                      "properties": {
                        "log_id": {
                          "value": {
                            "value": "99433219-8017-4acd-bb3c-ceb23d663832",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "dashboard_view": {
                          "value": {
                            "value": "https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "log_summary": {
                          "properties": {
                            "url": {
                              "value": {
                                "value": "https://harvest.greenhouse.io/v1/candidates/",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "method": {
                              "value": {
                                "value": "POST",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "status_code": {
                              "value": {
                                "value": 200,
                                "type": "int"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "employees_retrieve",
      "tags": [
        "employees"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "EmployeesRetrieveRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
          "name": "expand",
          "schema": {
            "generatedName": "EmployeesRetrieveRequestExpand",
            "value": {
              "generatedName": "EmployeesRetrieveRequestExpand",
              "values": [
                {
                  "generatedName": "company",
                  "value": "company",
                  "casing": {}
                },
                {
                  "generatedName": "CompanyPayGroup",
                  "value": "company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "employments",
                  "value": "employments",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsCompany",
                  "value": "employments,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsCompanyPayGroup",
                  "value": "employments,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroups",
                  "value": "employments,groups",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsCompany",
                  "value": "employments,groups,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsCompanyPayGroup",
                  "value": "employments,groups,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocation",
                  "value": "employments,groups,home_location",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationCompany",
                  "value": "employments,groups,home_location,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationCompanyPayGroup",
                  "value": "employments,groups,home_location,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationManager",
                  "value": "employments,groups,home_location,manager",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationManagerCompany",
                  "value": "employments,groups,home_location,manager,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationManagerCompanyPayGroup",
                  "value": "employments,groups,home_location,manager,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationManagerPayGroup",
                  "value": "employments,groups,home_location,manager,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationManagerTeam",
                  "value": "employments,groups,home_location,manager,team",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationManagerTeamCompany",
                  "value": "employments,groups,home_location,manager,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationManagerTeamCompanyPayGroup",
                  "value": "employments,groups,home_location,manager,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationManagerTeamPayGroup",
                  "value": "employments,groups,home_location,manager,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationPayGroup",
                  "value": "employments,groups,home_location,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationTeam",
                  "value": "employments,groups,home_location,team",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationTeamCompany",
                  "value": "employments,groups,home_location,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationTeamCompanyPayGroup",
                  "value": "employments,groups,home_location,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationTeamPayGroup",
                  "value": "employments,groups,home_location,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationWorkLocation",
                  "value": "employments,groups,home_location,work_location",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationWorkLocationCompany",
                  "value": "employments,groups,home_location,work_location,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationWorkLocationCompanyPayGroup",
                  "value": "employments,groups,home_location,work_location,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationWorkLocationManager",
                  "value": "employments,groups,home_location,work_location,manager",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationWorkLocationManagerCompany",
                  "value": "employments,groups,home_location,work_location,manager,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationWorkLocationManagerCompanyPayGroup",
                  "value": "employments,groups,home_location,work_location,manager,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationWorkLocationManagerPayGroup",
                  "value": "employments,groups,home_location,work_location,manager,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationWorkLocationManagerTeam",
                  "value": "employments,groups,home_location,work_location,manager,team",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationWorkLocationManagerTeamCompany",
                  "value": "employments,groups,home_location,work_location,manager,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationWorkLocationManagerTeamCompanyPayGroup",
                  "value": "employments,groups,home_location,work_location,manager,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationWorkLocationManagerTeamPayGroup",
                  "value": "employments,groups,home_location,work_location,manager,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationWorkLocationPayGroup",
                  "value": "employments,groups,home_location,work_location,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationWorkLocationTeam",
                  "value": "employments,groups,home_location,work_location,team",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationWorkLocationTeamCompany",
                  "value": "employments,groups,home_location,work_location,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationWorkLocationTeamCompanyPayGroup",
                  "value": "employments,groups,home_location,work_location,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsHomeLocationWorkLocationTeamPayGroup",
                  "value": "employments,groups,home_location,work_location,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsManager",
                  "value": "employments,groups,manager",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsManagerCompany",
                  "value": "employments,groups,manager,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsManagerCompanyPayGroup",
                  "value": "employments,groups,manager,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsManagerPayGroup",
                  "value": "employments,groups,manager,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsManagerTeam",
                  "value": "employments,groups,manager,team",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsManagerTeamCompany",
                  "value": "employments,groups,manager,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsManagerTeamCompanyPayGroup",
                  "value": "employments,groups,manager,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsManagerTeamPayGroup",
                  "value": "employments,groups,manager,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsPayGroup",
                  "value": "employments,groups,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsTeam",
                  "value": "employments,groups,team",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsTeamCompany",
                  "value": "employments,groups,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsTeamCompanyPayGroup",
                  "value": "employments,groups,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsTeamPayGroup",
                  "value": "employments,groups,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsWorkLocation",
                  "value": "employments,groups,work_location",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsWorkLocationCompany",
                  "value": "employments,groups,work_location,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsWorkLocationCompanyPayGroup",
                  "value": "employments,groups,work_location,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsWorkLocationManager",
                  "value": "employments,groups,work_location,manager",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsWorkLocationManagerCompany",
                  "value": "employments,groups,work_location,manager,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsWorkLocationManagerCompanyPayGroup",
                  "value": "employments,groups,work_location,manager,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsWorkLocationManagerPayGroup",
                  "value": "employments,groups,work_location,manager,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsWorkLocationManagerTeam",
                  "value": "employments,groups,work_location,manager,team",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsWorkLocationManagerTeamCompany",
                  "value": "employments,groups,work_location,manager,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsWorkLocationManagerTeamCompanyPayGroup",
                  "value": "employments,groups,work_location,manager,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsWorkLocationManagerTeamPayGroup",
                  "value": "employments,groups,work_location,manager,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsWorkLocationPayGroup",
                  "value": "employments,groups,work_location,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsWorkLocationTeam",
                  "value": "employments,groups,work_location,team",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsWorkLocationTeamCompany",
                  "value": "employments,groups,work_location,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsWorkLocationTeamCompanyPayGroup",
                  "value": "employments,groups,work_location,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsGroupsWorkLocationTeamPayGroup",
                  "value": "employments,groups,work_location,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocation",
                  "value": "employments,home_location",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationCompany",
                  "value": "employments,home_location,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationCompanyPayGroup",
                  "value": "employments,home_location,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationManager",
                  "value": "employments,home_location,manager",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationManagerCompany",
                  "value": "employments,home_location,manager,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationManagerCompanyPayGroup",
                  "value": "employments,home_location,manager,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationManagerPayGroup",
                  "value": "employments,home_location,manager,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationManagerTeam",
                  "value": "employments,home_location,manager,team",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationManagerTeamCompany",
                  "value": "employments,home_location,manager,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationManagerTeamCompanyPayGroup",
                  "value": "employments,home_location,manager,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationManagerTeamPayGroup",
                  "value": "employments,home_location,manager,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationPayGroup",
                  "value": "employments,home_location,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationTeam",
                  "value": "employments,home_location,team",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationTeamCompany",
                  "value": "employments,home_location,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationTeamCompanyPayGroup",
                  "value": "employments,home_location,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationTeamPayGroup",
                  "value": "employments,home_location,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationWorkLocation",
                  "value": "employments,home_location,work_location",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationWorkLocationCompany",
                  "value": "employments,home_location,work_location,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationWorkLocationCompanyPayGroup",
                  "value": "employments,home_location,work_location,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationWorkLocationManager",
                  "value": "employments,home_location,work_location,manager",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationWorkLocationManagerCompany",
                  "value": "employments,home_location,work_location,manager,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationWorkLocationManagerCompanyPayGroup",
                  "value": "employments,home_location,work_location,manager,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationWorkLocationManagerPayGroup",
                  "value": "employments,home_location,work_location,manager,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationWorkLocationManagerTeam",
                  "value": "employments,home_location,work_location,manager,team",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationWorkLocationManagerTeamCompany",
                  "value": "employments,home_location,work_location,manager,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationWorkLocationManagerTeamCompanyPayGroup",
                  "value": "employments,home_location,work_location,manager,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationWorkLocationManagerTeamPayGroup",
                  "value": "employments,home_location,work_location,manager,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationWorkLocationPayGroup",
                  "value": "employments,home_location,work_location,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationWorkLocationTeam",
                  "value": "employments,home_location,work_location,team",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationWorkLocationTeamCompany",
                  "value": "employments,home_location,work_location,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationWorkLocationTeamCompanyPayGroup",
                  "value": "employments,home_location,work_location,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsHomeLocationWorkLocationTeamPayGroup",
                  "value": "employments,home_location,work_location,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsManager",
                  "value": "employments,manager",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsManagerCompany",
                  "value": "employments,manager,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsManagerCompanyPayGroup",
                  "value": "employments,manager,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsManagerPayGroup",
                  "value": "employments,manager,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsManagerTeam",
                  "value": "employments,manager,team",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsManagerTeamCompany",
                  "value": "employments,manager,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsManagerTeamCompanyPayGroup",
                  "value": "employments,manager,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsManagerTeamPayGroup",
                  "value": "employments,manager,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsPayGroup",
                  "value": "employments,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsTeam",
                  "value": "employments,team",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsTeamCompany",
                  "value": "employments,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsTeamCompanyPayGroup",
                  "value": "employments,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsTeamPayGroup",
                  "value": "employments,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsWorkLocation",
                  "value": "employments,work_location",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsWorkLocationCompany",
                  "value": "employments,work_location,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsWorkLocationCompanyPayGroup",
                  "value": "employments,work_location,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsWorkLocationManager",
                  "value": "employments,work_location,manager",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsWorkLocationManagerCompany",
                  "value": "employments,work_location,manager,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsWorkLocationManagerCompanyPayGroup",
                  "value": "employments,work_location,manager,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsWorkLocationManagerPayGroup",
                  "value": "employments,work_location,manager,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsWorkLocationManagerTeam",
                  "value": "employments,work_location,manager,team",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsWorkLocationManagerTeamCompany",
                  "value": "employments,work_location,manager,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsWorkLocationManagerTeamCompanyPayGroup",
                  "value": "employments,work_location,manager,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsWorkLocationManagerTeamPayGroup",
                  "value": "employments,work_location,manager,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsWorkLocationPayGroup",
                  "value": "employments,work_location,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsWorkLocationTeam",
                  "value": "employments,work_location,team",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsWorkLocationTeamCompany",
                  "value": "employments,work_location,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsWorkLocationTeamCompanyPayGroup",
                  "value": "employments,work_location,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentsWorkLocationTeamPayGroup",
                  "value": "employments,work_location,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "groups",
                  "value": "groups",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsCompany",
                  "value": "groups,company",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsCompanyPayGroup",
                  "value": "groups,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocation",
                  "value": "groups,home_location",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationCompany",
                  "value": "groups,home_location,company",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationCompanyPayGroup",
                  "value": "groups,home_location,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationManager",
                  "value": "groups,home_location,manager",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationManagerCompany",
                  "value": "groups,home_location,manager,company",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationManagerCompanyPayGroup",
                  "value": "groups,home_location,manager,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationManagerPayGroup",
                  "value": "groups,home_location,manager,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationManagerTeam",
                  "value": "groups,home_location,manager,team",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationManagerTeamCompany",
                  "value": "groups,home_location,manager,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationManagerTeamCompanyPayGroup",
                  "value": "groups,home_location,manager,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationManagerTeamPayGroup",
                  "value": "groups,home_location,manager,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationPayGroup",
                  "value": "groups,home_location,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationTeam",
                  "value": "groups,home_location,team",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationTeamCompany",
                  "value": "groups,home_location,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationTeamCompanyPayGroup",
                  "value": "groups,home_location,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationTeamPayGroup",
                  "value": "groups,home_location,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationWorkLocation",
                  "value": "groups,home_location,work_location",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationWorkLocationCompany",
                  "value": "groups,home_location,work_location,company",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationWorkLocationCompanyPayGroup",
                  "value": "groups,home_location,work_location,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationWorkLocationManager",
                  "value": "groups,home_location,work_location,manager",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationWorkLocationManagerCompany",
                  "value": "groups,home_location,work_location,manager,company",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationWorkLocationManagerCompanyPayGroup",
                  "value": "groups,home_location,work_location,manager,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationWorkLocationManagerPayGroup",
                  "value": "groups,home_location,work_location,manager,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationWorkLocationManagerTeam",
                  "value": "groups,home_location,work_location,manager,team",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationWorkLocationManagerTeamCompany",
                  "value": "groups,home_location,work_location,manager,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationWorkLocationManagerTeamCompanyPayGroup",
                  "value": "groups,home_location,work_location,manager,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationWorkLocationManagerTeamPayGroup",
                  "value": "groups,home_location,work_location,manager,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationWorkLocationPayGroup",
                  "value": "groups,home_location,work_location,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationWorkLocationTeam",
                  "value": "groups,home_location,work_location,team",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationWorkLocationTeamCompany",
                  "value": "groups,home_location,work_location,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationWorkLocationTeamCompanyPayGroup",
                  "value": "groups,home_location,work_location,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsHomeLocationWorkLocationTeamPayGroup",
                  "value": "groups,home_location,work_location,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsManager",
                  "value": "groups,manager",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsManagerCompany",
                  "value": "groups,manager,company",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsManagerCompanyPayGroup",
                  "value": "groups,manager,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsManagerPayGroup",
                  "value": "groups,manager,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsManagerTeam",
                  "value": "groups,manager,team",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsManagerTeamCompany",
                  "value": "groups,manager,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsManagerTeamCompanyPayGroup",
                  "value": "groups,manager,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsManagerTeamPayGroup",
                  "value": "groups,manager,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsPayGroup",
                  "value": "groups,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsTeam",
                  "value": "groups,team",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsTeamCompany",
                  "value": "groups,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsTeamCompanyPayGroup",
                  "value": "groups,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsTeamPayGroup",
                  "value": "groups,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsWorkLocation",
                  "value": "groups,work_location",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsWorkLocationCompany",
                  "value": "groups,work_location,company",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsWorkLocationCompanyPayGroup",
                  "value": "groups,work_location,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsWorkLocationManager",
                  "value": "groups,work_location,manager",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsWorkLocationManagerCompany",
                  "value": "groups,work_location,manager,company",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsWorkLocationManagerCompanyPayGroup",
                  "value": "groups,work_location,manager,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsWorkLocationManagerPayGroup",
                  "value": "groups,work_location,manager,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsWorkLocationManagerTeam",
                  "value": "groups,work_location,manager,team",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsWorkLocationManagerTeamCompany",
                  "value": "groups,work_location,manager,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsWorkLocationManagerTeamCompanyPayGroup",
                  "value": "groups,work_location,manager,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsWorkLocationManagerTeamPayGroup",
                  "value": "groups,work_location,manager,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsWorkLocationPayGroup",
                  "value": "groups,work_location,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsWorkLocationTeam",
                  "value": "groups,work_location,team",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsWorkLocationTeamCompany",
                  "value": "groups,work_location,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsWorkLocationTeamCompanyPayGroup",
                  "value": "groups,work_location,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "GroupsWorkLocationTeamPayGroup",
                  "value": "groups,work_location,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "home_location",
                  "value": "home_location",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationCompany",
                  "value": "home_location,company",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationCompanyPayGroup",
                  "value": "home_location,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationManager",
                  "value": "home_location,manager",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationManagerCompany",
                  "value": "home_location,manager,company",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationManagerCompanyPayGroup",
                  "value": "home_location,manager,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationManagerPayGroup",
                  "value": "home_location,manager,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationManagerTeam",
                  "value": "home_location,manager,team",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationManagerTeamCompany",
                  "value": "home_location,manager,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationManagerTeamCompanyPayGroup",
                  "value": "home_location,manager,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationManagerTeamPayGroup",
                  "value": "home_location,manager,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationPayGroup",
                  "value": "home_location,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationTeam",
                  "value": "home_location,team",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationTeamCompany",
                  "value": "home_location,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationTeamCompanyPayGroup",
                  "value": "home_location,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationTeamPayGroup",
                  "value": "home_location,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationWorkLocation",
                  "value": "home_location,work_location",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationWorkLocationCompany",
                  "value": "home_location,work_location,company",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationWorkLocationCompanyPayGroup",
                  "value": "home_location,work_location,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationWorkLocationManager",
                  "value": "home_location,work_location,manager",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationWorkLocationManagerCompany",
                  "value": "home_location,work_location,manager,company",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationWorkLocationManagerCompanyPayGroup",
                  "value": "home_location,work_location,manager,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationWorkLocationManagerPayGroup",
                  "value": "home_location,work_location,manager,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationWorkLocationManagerTeam",
                  "value": "home_location,work_location,manager,team",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationWorkLocationManagerTeamCompany",
                  "value": "home_location,work_location,manager,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationWorkLocationManagerTeamCompanyPayGroup",
                  "value": "home_location,work_location,manager,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationWorkLocationManagerTeamPayGroup",
                  "value": "home_location,work_location,manager,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationWorkLocationPayGroup",
                  "value": "home_location,work_location,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationWorkLocationTeam",
                  "value": "home_location,work_location,team",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationWorkLocationTeamCompany",
                  "value": "home_location,work_location,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationWorkLocationTeamCompanyPayGroup",
                  "value": "home_location,work_location,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "HomeLocationWorkLocationTeamPayGroup",
                  "value": "home_location,work_location,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "manager",
                  "value": "manager",
                  "casing": {}
                },
                {
                  "generatedName": "ManagerCompany",
                  "value": "manager,company",
                  "casing": {}
                },
                {
                  "generatedName": "ManagerCompanyPayGroup",
                  "value": "manager,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "ManagerPayGroup",
                  "value": "manager,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "ManagerTeam",
                  "value": "manager,team",
                  "casing": {}
                },
                {
                  "generatedName": "ManagerTeamCompany",
                  "value": "manager,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "ManagerTeamCompanyPayGroup",
                  "value": "manager,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "ManagerTeamPayGroup",
                  "value": "manager,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "pay_group",
                  "value": "pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "team",
                  "value": "team",
                  "casing": {}
                },
                {
                  "generatedName": "TeamCompany",
                  "value": "team,company",
                  "casing": {}
                },
                {
                  "generatedName": "TeamCompanyPayGroup",
                  "value": "team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "TeamPayGroup",
                  "value": "team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "work_location",
                  "value": "work_location",
                  "casing": {}
                },
                {
                  "generatedName": "WorkLocationCompany",
                  "value": "work_location,company",
                  "casing": {}
                },
                {
                  "generatedName": "WorkLocationCompanyPayGroup",
                  "value": "work_location,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "WorkLocationManager",
                  "value": "work_location,manager",
                  "casing": {}
                },
                {
                  "generatedName": "WorkLocationManagerCompany",
                  "value": "work_location,manager,company",
                  "casing": {}
                },
                {
                  "generatedName": "WorkLocationManagerCompanyPayGroup",
                  "value": "work_location,manager,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "WorkLocationManagerPayGroup",
                  "value": "work_location,manager,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "WorkLocationManagerTeam",
                  "value": "work_location,manager,team",
                  "casing": {}
                },
                {
                  "generatedName": "WorkLocationManagerTeamCompany",
                  "value": "work_location,manager,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "WorkLocationManagerTeamCompanyPayGroup",
                  "value": "work_location,manager,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "WorkLocationManagerTeamPayGroup",
                  "value": "work_location,manager,team,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "WorkLocationPayGroup",
                  "value": "work_location,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "WorkLocationTeam",
                  "value": "work_location,team",
                  "casing": {}
                },
                {
                  "generatedName": "WorkLocationTeamCompany",
                  "value": "work_location,team,company",
                  "casing": {}
                },
                {
                  "generatedName": "WorkLocationTeamCompanyPayGroup",
                  "value": "work_location,team,company,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "WorkLocationTeamPayGroup",
                  "value": "work_location,team,pay_group",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
          "name": "include_remote_data",
          "schema": {
            "generatedName": "EmployeesRetrieveRequestIncludeRemoteData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "EmployeesRetrieveRequestIncludeRemoteData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include sensitive fields (such as social security numbers) in the response.",
          "name": "include_sensitive_fields",
          "schema": {
            "generatedName": "EmployeesRetrieveRequestIncludeSensitiveFields",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "EmployeesRetrieveRequestIncludeSensitiveFields",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Deprecated. Use show_enum_origins.",
          "name": "remote_fields",
          "schema": {
            "generatedName": "EmployeesRetrieveRequestRemoteFields",
            "value": {
              "generatedName": "EmployeesRetrieveRequestRemoteFields",
              "values": [
                {
                  "generatedName": "employment_status",
                  "value": "employment_status",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentStatusEthnicity",
                  "value": "employment_status,ethnicity",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentStatusEthnicityGender",
                  "value": "employment_status,ethnicity,gender",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentStatusEthnicityGenderMaritalStatus",
                  "value": "employment_status,ethnicity,gender,marital_status",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentStatusEthnicityMaritalStatus",
                  "value": "employment_status,ethnicity,marital_status",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentStatusGender",
                  "value": "employment_status,gender",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentStatusGenderMaritalStatus",
                  "value": "employment_status,gender,marital_status",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentStatusMaritalStatus",
                  "value": "employment_status,marital_status",
                  "casing": {}
                },
                {
                  "generatedName": "ethnicity",
                  "value": "ethnicity",
                  "casing": {}
                },
                {
                  "generatedName": "EthnicityGender",
                  "value": "ethnicity,gender",
                  "casing": {}
                },
                {
                  "generatedName": "EthnicityGenderMaritalStatus",
                  "value": "ethnicity,gender,marital_status",
                  "casing": {}
                },
                {
                  "generatedName": "EthnicityMaritalStatus",
                  "value": "ethnicity,marital_status",
                  "casing": {}
                },
                {
                  "generatedName": "gender",
                  "value": "gender",
                  "casing": {}
                },
                {
                  "generatedName": "GenderMaritalStatus",
                  "value": "gender,marital_status",
                  "casing": {}
                },
                {
                  "generatedName": "marital_status",
                  "value": "marital_status",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Which fields should be returned in non-normalized form.",
          "name": "show_enum_origins",
          "schema": {
            "generatedName": "EmployeesRetrieveRequestShowEnumOrigins",
            "value": {
              "generatedName": "EmployeesRetrieveRequestShowEnumOrigins",
              "values": [
                {
                  "generatedName": "employment_status",
                  "value": "employment_status",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentStatusEthnicity",
                  "value": "employment_status,ethnicity",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentStatusEthnicityGender",
                  "value": "employment_status,ethnicity,gender",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentStatusEthnicityGenderMaritalStatus",
                  "value": "employment_status,ethnicity,gender,marital_status",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentStatusEthnicityMaritalStatus",
                  "value": "employment_status,ethnicity,marital_status",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentStatusGender",
                  "value": "employment_status,gender",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentStatusGenderMaritalStatus",
                  "value": "employment_status,gender,marital_status",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentStatusMaritalStatus",
                  "value": "employment_status,marital_status",
                  "casing": {}
                },
                {
                  "generatedName": "ethnicity",
                  "value": "ethnicity",
                  "casing": {}
                },
                {
                  "generatedName": "EthnicityGender",
                  "value": "ethnicity,gender",
                  "casing": {}
                },
                {
                  "generatedName": "EthnicityGenderMaritalStatus",
                  "value": "ethnicity,gender,marital_status",
                  "casing": {}
                },
                {
                  "generatedName": "EthnicityMaritalStatus",
                  "value": "ethnicity,marital_status",
                  "casing": {}
                },
                {
                  "generatedName": "gender",
                  "value": "gender",
                  "casing": {}
                },
                {
                  "generatedName": "GenderMaritalStatus",
                  "value": "gender,marital_status",
                  "casing": {}
                },
                {
                  "generatedName": "marital_status",
                  "value": "marital_status",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "EmployeesRetrieveRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "EmployeesRetrieveRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "EmployeesRetrieveResponse",
          "schema": "Employee",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Returns an `Employee` object with the given `id`.",
      "authed": true,
      "method": "GET",
      "path": "/employees/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "remote_id": {
                  "value": {
                    "value": "19202938",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "employee_number": {
                  "value": {
                    "value": "2",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "company": {
                  "value": {
                    "value": "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "first_name": {
                  "value": {
                    "value": "Greg",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "last_name": {
                  "value": {
                    "value": "Hirsch",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "display_full_name": {
                  "value": {
                    "value": "Cousin Greg Hirsch",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "username": {
                  "value": {
                    "value": "cousingreg",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "groups": {
                  "value": [
                    {
                      "value": {
                        "value": "21a54124-397f-494d-985e-3c5b330b8a68",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "work_email": {
                  "value": {
                    "value": "greg@merge.dev",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "personal_email": {
                  "value": {
                    "value": "greg@gmail.com",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "mobile_phone_number": {
                  "value": {
                    "value": "+1234567890",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "employments": {
                  "value": [
                    {
                      "value": {
                        "value": "17a54124-287f-494d-965e-3c5b330c9a68",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "home_location": {
                  "value": {
                    "value": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "work_location": {
                  "value": {
                    "value": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "manager": {
                  "value": {
                    "value": "0048ea5b-911e-4dff-9364-92070dea62ff",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "team": {
                  "value": {
                    "value": "249c9faa-3045-4a31-953b-8f22d3613301",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "pay_group": {
                  "value": {
                    "value": "ad1264e2-39be-4787-b749-f1aade9e3405",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "ssn": {
                  "value": {
                    "value": "1234567890",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "gender": {
                  "value": "MALE",
                  "type": "enum"
                },
                "ethnicity": {
                  "value": "AMERICAN_INDIAN_OR_ALASKA_NATIVE",
                  "type": "enum"
                },
                "marital_status": {
                  "value": "SINGLE",
                  "type": "enum"
                },
                "date_of_birth": {
                  "value": {
                    "value": "1990-11-10T00:00:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "hire_date": {
                  "value": {
                    "value": "2020-10-10T00:00:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "start_date": {
                  "value": {
                    "value": "2020-10-11T00:00:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "remote_created_at": {
                  "value": {
                    "value": "2020-10-11T00:00:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "employment_status": {
                  "value": "ACTIVE",
                  "type": "enum"
                },
                "termination_date": {
                  "value": {
                    "value": "2021-10-12T00:00:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "avatar": {
                  "value": {
                    "value": "http://alturl.com/h2h8m",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "custom_fields": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "remote_was_deleted": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "modified_at": {
                  "value": {
                    "value": "2021-10-16T00:00:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "field_mappings": {
                  "value": [
                    {
                      "key": {
                        "value": "organization_defined_targets",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "key": {
                                "value": "custom_key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "custom_value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "type": "unknown"
                      }
                    },
                    {
                      "key": {
                        "value": "linked_account_defined_targets",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "key": {
                                "value": "custom_key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "custom_value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "remote_data": {
                  "value": [
                    {
                      "properties": {
                        "path": {
                          "value": {
                            "value": "/people",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "data": {
                          "value": [
                            {
                              "key": {
                                "value": "0",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "Varies by platform",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "employees_ignore_create",
      "tags": [
        "employees"
      ],
      "pathParameters": [
        {
          "name": "model_id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "EmployeesIgnoreCreateRequestModelId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "EmployeesIgnoreCreateRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "EmployeesIgnoreCreateRequest",
      "request": {
        "schema": {
          "generatedName": "EmployeesIgnoreCreateRequestBody",
          "schema": "IgnoreCommonModelRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/x-www-form-urlencoded",
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "fullExamples": [],
        "additionalProperties": false,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Ignores a specific row based on the `model_id` in the url. These records will have their properties set to null, and will not be updated in future syncs. The \"reason\" and \"message\" fields in the request body will be stored for audit purposes.",
      "authed": true,
      "method": "POST",
      "path": "/employees/ignore/{model_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "model_id",
              "value": {
                "value": {
                  "value": "model_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "request": {
            "properties": {
              "reason": {
                "value": "GENERAL_CUSTOMER_REQUEST",
                "type": "enum"
              }
            },
            "type": "object"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "employees_meta_post_retrieve",
      "tags": [
        "employees"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "EmployeesMetaPostRetrieveRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "EmployeesMetaPostRetrieveRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "EmployeesMetaPostRetrieveResponse",
          "schema": "MetaResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Returns metadata for `Employee` POSTs.",
      "authed": true,
      "method": "GET",
      "path": "/employees/meta/post",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "properties": {
                "request_schema": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "remote_field_classes": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "status": {
                  "properties": {
                    "linked_account_status": {
                      "value": {
                        "value": "linked_account_status",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "can_make_request": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "has_conditional_params": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "has_required_linked_account_params": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "employments_list",
      "tags": [
        "employments"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "If provided, will only return objects created after this datetime.",
          "name": "created_after",
          "schema": {
            "generatedName": "EmploymentsListRequestCreatedAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "EmploymentsListRequestCreatedAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return objects created before this datetime.",
          "name": "created_before",
          "schema": {
            "generatedName": "EmploymentsListRequestCreatedBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "EmploymentsListRequestCreatedBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The pagination cursor value.",
          "name": "cursor",
          "schema": {
            "generatedName": "EmploymentsListRequestCursor",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "EmploymentsListRequestCursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return employments for this employee.",
          "name": "employee_id",
          "schema": {
            "generatedName": "EmploymentsListRequestEmployeeId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "EmploymentsListRequestEmployeeId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
          "name": "expand",
          "schema": {
            "generatedName": "EmploymentsListRequestExpand",
            "value": {
              "generatedName": "EmploymentsListRequestExpand",
              "values": [
                {
                  "generatedName": "employee",
                  "value": "employee",
                  "casing": {}
                },
                {
                  "generatedName": "EmployeePayGroup",
                  "value": "employee,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "pay_group",
                  "value": "pay_group",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include data that was marked as deleted by third party webhooks.",
          "name": "include_deleted_data",
          "schema": {
            "generatedName": "EmploymentsListRequestIncludeDeletedData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "EmploymentsListRequestIncludeDeletedData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
          "name": "include_remote_data",
          "schema": {
            "generatedName": "EmploymentsListRequestIncludeRemoteData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "EmploymentsListRequestIncludeRemoteData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, only objects synced by Merge after this date time will be returned.",
          "name": "modified_after",
          "schema": {
            "generatedName": "EmploymentsListRequestModifiedAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "EmploymentsListRequestModifiedAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, only objects synced by Merge before this date time will be returned.",
          "name": "modified_before",
          "schema": {
            "generatedName": "EmploymentsListRequestModifiedBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "EmploymentsListRequestModifiedBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Overrides the default ordering for this endpoint.",
          "name": "order_by",
          "schema": {
            "generatedName": "EmploymentsListRequestOrderBy",
            "value": {
              "generatedName": "EmploymentsListRequestOrderBy",
              "values": [
                {
                  "nameOverride": "EffectiveDateDescending",
                  "generatedName": "EffectiveDate",
                  "value": "-effective_date",
                  "casing": {}
                },
                {
                  "nameOverride": "EffectiveDateAscending",
                  "generatedName": "effective_date",
                  "value": "effective_date",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Number of results to return per page.",
          "name": "page_size",
          "schema": {
            "generatedName": "EmploymentsListRequestPageSize",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "EmploymentsListRequestPageSize",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Deprecated. Use show_enum_origins.",
          "name": "remote_fields",
          "schema": {
            "generatedName": "EmploymentsListRequestRemoteFields",
            "value": {
              "generatedName": "EmploymentsListRequestRemoteFields",
              "values": [
                {
                  "generatedName": "employment_type",
                  "value": "employment_type",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentTypeFlsaStatus",
                  "value": "employment_type,flsa_status",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentTypeFlsaStatusPayFrequency",
                  "value": "employment_type,flsa_status,pay_frequency",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentTypeFlsaStatusPayFrequencyPayPeriod",
                  "value": "employment_type,flsa_status,pay_frequency,pay_period",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentTypeFlsaStatusPayPeriod",
                  "value": "employment_type,flsa_status,pay_period",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentTypePayFrequency",
                  "value": "employment_type,pay_frequency",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentTypePayFrequencyPayPeriod",
                  "value": "employment_type,pay_frequency,pay_period",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentTypePayPeriod",
                  "value": "employment_type,pay_period",
                  "casing": {}
                },
                {
                  "generatedName": "flsa_status",
                  "value": "flsa_status",
                  "casing": {}
                },
                {
                  "generatedName": "FlsaStatusPayFrequency",
                  "value": "flsa_status,pay_frequency",
                  "casing": {}
                },
                {
                  "generatedName": "FlsaStatusPayFrequencyPayPeriod",
                  "value": "flsa_status,pay_frequency,pay_period",
                  "casing": {}
                },
                {
                  "generatedName": "FlsaStatusPayPeriod",
                  "value": "flsa_status,pay_period",
                  "casing": {}
                },
                {
                  "generatedName": "pay_frequency",
                  "value": "pay_frequency",
                  "casing": {}
                },
                {
                  "generatedName": "PayFrequencyPayPeriod",
                  "value": "pay_frequency,pay_period",
                  "casing": {}
                },
                {
                  "generatedName": "pay_period",
                  "value": "pay_period",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The API provider's ID for the given object.",
          "name": "remote_id",
          "schema": {
            "generatedName": "EmploymentsListRequestRemoteId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "EmploymentsListRequestRemoteId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Which fields should be returned in non-normalized form.",
          "name": "show_enum_origins",
          "schema": {
            "generatedName": "EmploymentsListRequestShowEnumOrigins",
            "value": {
              "generatedName": "EmploymentsListRequestShowEnumOrigins",
              "values": [
                {
                  "generatedName": "employment_type",
                  "value": "employment_type",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentTypeFlsaStatus",
                  "value": "employment_type,flsa_status",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentTypeFlsaStatusPayFrequency",
                  "value": "employment_type,flsa_status,pay_frequency",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentTypeFlsaStatusPayFrequencyPayPeriod",
                  "value": "employment_type,flsa_status,pay_frequency,pay_period",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentTypeFlsaStatusPayPeriod",
                  "value": "employment_type,flsa_status,pay_period",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentTypePayFrequency",
                  "value": "employment_type,pay_frequency",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentTypePayFrequencyPayPeriod",
                  "value": "employment_type,pay_frequency,pay_period",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentTypePayPeriod",
                  "value": "employment_type,pay_period",
                  "casing": {}
                },
                {
                  "generatedName": "flsa_status",
                  "value": "flsa_status",
                  "casing": {}
                },
                {
                  "generatedName": "FlsaStatusPayFrequency",
                  "value": "flsa_status,pay_frequency",
                  "casing": {}
                },
                {
                  "generatedName": "FlsaStatusPayFrequencyPayPeriod",
                  "value": "flsa_status,pay_frequency,pay_period",
                  "casing": {}
                },
                {
                  "generatedName": "FlsaStatusPayPeriod",
                  "value": "flsa_status,pay_period",
                  "casing": {}
                },
                {
                  "generatedName": "pay_frequency",
                  "value": "pay_frequency",
                  "casing": {}
                },
                {
                  "generatedName": "PayFrequencyPayPeriod",
                  "value": "pay_frequency,pay_period",
                  "casing": {}
                },
                {
                  "generatedName": "pay_period",
                  "value": "pay_period",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "EmploymentsListRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "EmploymentsListRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "EmploymentsListResponse",
          "schema": "PaginatedEmploymentList",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Returns a list of `Employment` objects.",
      "authed": true,
      "method": "GET",
      "path": "/employments",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "properties": {
                "next": {
                  "value": {
                    "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "previous": {
                  "value": {
                    "value": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "results": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "65d8ffd0-211b-4ba4-b85a-fbe2ce220982",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "remote_id": {
                          "value": {
                            "value": "19202938",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "employee": {
                          "value": {
                            "value": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "job_title": {
                          "value": {
                            "value": "Executive Assistant to Tom Wambsgans",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "pay_rate": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "pay_period": {
                          "value": "HOUR",
                          "type": "enum"
                        },
                        "pay_frequency": {
                          "value": "WEEKLY",
                          "type": "enum"
                        },
                        "pay_currency": {
                          "value": "XUA",
                          "type": "enum"
                        },
                        "pay_group": {
                          "value": {
                            "value": "d4e4837f-9900-484c-ac40-528365bb08ef",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "flsa_status": {
                          "value": "EXEMPT",
                          "type": "enum"
                        },
                        "effective_date": {
                          "value": {
                            "value": "2023-10-06T18:42:34Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "employment_type": {
                          "value": "FULL_TIME",
                          "type": "enum"
                        },
                        "remote_was_deleted": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "modified_at": {
                          "value": {
                            "value": "2021-10-16T00:00:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "field_mappings": {
                          "value": [
                            {
                              "key": {
                                "value": "organization_defined_targets",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "custom_key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "custom_value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            },
                            {
                              "key": {
                                "value": "linked_account_defined_targets",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "custom_key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "custom_value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "remote_data": {
                          "value": [
                            {
                              "properties": {
                                "path": {
                                  "value": {
                                    "value": "/jobs",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "data": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "0",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": {
                                            "value": "Varies by platform",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        },
                                        "type": "unknown"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "employments_retrieve",
      "tags": [
        "employments"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "EmploymentsRetrieveRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
          "name": "expand",
          "schema": {
            "generatedName": "EmploymentsRetrieveRequestExpand",
            "value": {
              "generatedName": "EmploymentsRetrieveRequestExpand",
              "values": [
                {
                  "generatedName": "employee",
                  "value": "employee",
                  "casing": {}
                },
                {
                  "generatedName": "EmployeePayGroup",
                  "value": "employee,pay_group",
                  "casing": {}
                },
                {
                  "generatedName": "pay_group",
                  "value": "pay_group",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
          "name": "include_remote_data",
          "schema": {
            "generatedName": "EmploymentsRetrieveRequestIncludeRemoteData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "EmploymentsRetrieveRequestIncludeRemoteData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Deprecated. Use show_enum_origins.",
          "name": "remote_fields",
          "schema": {
            "generatedName": "EmploymentsRetrieveRequestRemoteFields",
            "value": {
              "generatedName": "EmploymentsRetrieveRequestRemoteFields",
              "values": [
                {
                  "generatedName": "employment_type",
                  "value": "employment_type",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentTypeFlsaStatus",
                  "value": "employment_type,flsa_status",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentTypeFlsaStatusPayFrequency",
                  "value": "employment_type,flsa_status,pay_frequency",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentTypeFlsaStatusPayFrequencyPayPeriod",
                  "value": "employment_type,flsa_status,pay_frequency,pay_period",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentTypeFlsaStatusPayPeriod",
                  "value": "employment_type,flsa_status,pay_period",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentTypePayFrequency",
                  "value": "employment_type,pay_frequency",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentTypePayFrequencyPayPeriod",
                  "value": "employment_type,pay_frequency,pay_period",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentTypePayPeriod",
                  "value": "employment_type,pay_period",
                  "casing": {}
                },
                {
                  "generatedName": "flsa_status",
                  "value": "flsa_status",
                  "casing": {}
                },
                {
                  "generatedName": "FlsaStatusPayFrequency",
                  "value": "flsa_status,pay_frequency",
                  "casing": {}
                },
                {
                  "generatedName": "FlsaStatusPayFrequencyPayPeriod",
                  "value": "flsa_status,pay_frequency,pay_period",
                  "casing": {}
                },
                {
                  "generatedName": "FlsaStatusPayPeriod",
                  "value": "flsa_status,pay_period",
                  "casing": {}
                },
                {
                  "generatedName": "pay_frequency",
                  "value": "pay_frequency",
                  "casing": {}
                },
                {
                  "generatedName": "PayFrequencyPayPeriod",
                  "value": "pay_frequency,pay_period",
                  "casing": {}
                },
                {
                  "generatedName": "pay_period",
                  "value": "pay_period",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Which fields should be returned in non-normalized form.",
          "name": "show_enum_origins",
          "schema": {
            "generatedName": "EmploymentsRetrieveRequestShowEnumOrigins",
            "value": {
              "generatedName": "EmploymentsRetrieveRequestShowEnumOrigins",
              "values": [
                {
                  "generatedName": "employment_type",
                  "value": "employment_type",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentTypeFlsaStatus",
                  "value": "employment_type,flsa_status",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentTypeFlsaStatusPayFrequency",
                  "value": "employment_type,flsa_status,pay_frequency",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentTypeFlsaStatusPayFrequencyPayPeriod",
                  "value": "employment_type,flsa_status,pay_frequency,pay_period",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentTypeFlsaStatusPayPeriod",
                  "value": "employment_type,flsa_status,pay_period",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentTypePayFrequency",
                  "value": "employment_type,pay_frequency",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentTypePayFrequencyPayPeriod",
                  "value": "employment_type,pay_frequency,pay_period",
                  "casing": {}
                },
                {
                  "generatedName": "EmploymentTypePayPeriod",
                  "value": "employment_type,pay_period",
                  "casing": {}
                },
                {
                  "generatedName": "flsa_status",
                  "value": "flsa_status",
                  "casing": {}
                },
                {
                  "generatedName": "FlsaStatusPayFrequency",
                  "value": "flsa_status,pay_frequency",
                  "casing": {}
                },
                {
                  "generatedName": "FlsaStatusPayFrequencyPayPeriod",
                  "value": "flsa_status,pay_frequency,pay_period",
                  "casing": {}
                },
                {
                  "generatedName": "FlsaStatusPayPeriod",
                  "value": "flsa_status,pay_period",
                  "casing": {}
                },
                {
                  "generatedName": "pay_frequency",
                  "value": "pay_frequency",
                  "casing": {}
                },
                {
                  "generatedName": "PayFrequencyPayPeriod",
                  "value": "pay_frequency,pay_period",
                  "casing": {}
                },
                {
                  "generatedName": "pay_period",
                  "value": "pay_period",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "EmploymentsRetrieveRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "EmploymentsRetrieveRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "EmploymentsRetrieveResponse",
          "schema": "Employment",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Returns an `Employment` object with the given `id`.",
      "authed": true,
      "method": "GET",
      "path": "/employments/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "65d8ffd0-211b-4ba4-b85a-fbe2ce220982",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "remote_id": {
                  "value": {
                    "value": "19202938",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "employee": {
                  "value": {
                    "value": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "job_title": {
                  "value": {
                    "value": "Executive Assistant to Tom Wambsgans",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "pay_rate": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "pay_period": {
                  "value": "HOUR",
                  "type": "enum"
                },
                "pay_frequency": {
                  "value": "WEEKLY",
                  "type": "enum"
                },
                "pay_currency": {
                  "value": "XUA",
                  "type": "enum"
                },
                "pay_group": {
                  "value": {
                    "value": "d4e4837f-9900-484c-ac40-528365bb08ef",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "flsa_status": {
                  "value": "EXEMPT",
                  "type": "enum"
                },
                "effective_date": {
                  "value": {
                    "value": "2023-10-06T18:42:34Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "employment_type": {
                  "value": "FULL_TIME",
                  "type": "enum"
                },
                "remote_was_deleted": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "modified_at": {
                  "value": {
                    "value": "2021-10-16T00:00:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "field_mappings": {
                  "value": [
                    {
                      "key": {
                        "value": "organization_defined_targets",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "key": {
                                "value": "custom_key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "custom_value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "type": "unknown"
                      }
                    },
                    {
                      "key": {
                        "value": "linked_account_defined_targets",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "key": {
                                "value": "custom_key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "custom_value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "remote_data": {
                  "value": [
                    {
                      "properties": {
                        "path": {
                          "value": {
                            "value": "/jobs",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "data": {
                          "value": [
                            {
                              "key": {
                                "value": "0",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "Varies by platform",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "generate_key_create",
      "tags": [
        "generate-key"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GenerateKeyCreateRequest",
      "request": {
        "schema": {
          "generatedName": "GenerateKeyCreateRequest",
          "schema": "GenerateRemoteKeyRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/x-www-form-urlencoded",
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "fullExamples": [],
        "additionalProperties": false,
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GenerateKeyCreateResponse",
          "schema": "RemoteKey",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Create a remote key.",
      "authed": true,
      "method": "POST",
      "path": "/generate-key",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "name": {
                "value": {
                  "value": "Remote Deployment Key 1",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "name": {
                  "value": {
                    "value": "Remote Deployment Key 1",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "key": {
                  "value": {
                    "value": "hXY57W0g0WkdRHjCaPvwijK63fwfN-o_Wh7f30SLTq_uPCOLo-WFcA",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "groups_list",
      "tags": [
        "groups"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "If provided, will only return objects created after this datetime.",
          "name": "created_after",
          "schema": {
            "generatedName": "GroupsListRequestCreatedAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "GroupsListRequestCreatedAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return objects created before this datetime.",
          "name": "created_before",
          "schema": {
            "generatedName": "GroupsListRequestCreatedBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "GroupsListRequestCreatedBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The pagination cursor value.",
          "name": "cursor",
          "schema": {
            "generatedName": "GroupsListRequestCursor",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "GroupsListRequestCursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include data that was marked as deleted by third party webhooks.",
          "name": "include_deleted_data",
          "schema": {
            "generatedName": "GroupsListRequestIncludeDeletedData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "GroupsListRequestIncludeDeletedData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
          "name": "include_remote_data",
          "schema": {
            "generatedName": "GroupsListRequestIncludeRemoteData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "GroupsListRequestIncludeRemoteData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, only objects synced by Merge after this date time will be returned.",
          "name": "modified_after",
          "schema": {
            "generatedName": "GroupsListRequestModifiedAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "GroupsListRequestModifiedAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, only objects synced by Merge before this date time will be returned.",
          "name": "modified_before",
          "schema": {
            "generatedName": "GroupsListRequestModifiedBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "GroupsListRequestModifiedBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Number of results to return per page.",
          "name": "page_size",
          "schema": {
            "generatedName": "GroupsListRequestPageSize",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "GroupsListRequestPageSize",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Deprecated. Use show_enum_origins.",
          "name": "remote_fields",
          "schema": {
            "generatedName": "GroupsListRequestRemoteFields",
            "value": {
              "value": {
                "value": "type",
                "type": "string"
              },
              "generatedName": "GroupsListRequestRemoteFields",
              "groupName": [],
              "type": "literal"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The API provider's ID for the given object.",
          "name": "remote_id",
          "schema": {
            "generatedName": "GroupsListRequestRemoteId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "GroupsListRequestRemoteId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Which fields should be returned in non-normalized form.",
          "name": "show_enum_origins",
          "schema": {
            "generatedName": "GroupsListRequestShowEnumOrigins",
            "value": {
              "value": {
                "value": "type",
                "type": "string"
              },
              "generatedName": "GroupsListRequestShowEnumOrigins",
              "groupName": [],
              "type": "literal"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return groups of these types. Multiple values can be separated by commas.",
          "name": "types",
          "schema": {
            "generatedName": "GroupsListRequestTypes",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "GroupsListRequestTypes",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GroupsListRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "GroupsListRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GroupsListResponse",
          "schema": "PaginatedGroupList",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Returns a list of `Group` objects.",
      "authed": true,
      "method": "GET",
      "path": "/groups",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "properties": {
                "next": {
                  "value": {
                    "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "previous": {
                  "value": {
                    "value": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "results": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "134e0111-0f67-44f6-98f0-597000290bb3",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "remote_id": {
                          "value": {
                            "value": "800293",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "parent_group": {
                          "value": {
                            "value": "2ef51b11-2c4e-4b02-8d1d-50592d9e96ef",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "COST_CENTER_US",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": {
                          "value": "TEAM",
                          "type": "enum"
                        },
                        "remote_was_deleted": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "modified_at": {
                          "value": {
                            "value": "2021-10-16T00:00:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "field_mappings": {
                          "value": [
                            {
                              "key": {
                                "value": "organization_defined_targets",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "custom_key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "custom_value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            },
                            {
                              "key": {
                                "value": "linked_account_defined_targets",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "custom_key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "custom_value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "remote_data": {
                          "value": [
                            {
                              "properties": {
                                "path": {
                                  "value": {
                                    "value": "/group",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "data": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "0",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": {
                                            "value": "Varies by platform",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        },
                                        "type": "unknown"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "groups_retrieve",
      "tags": [
        "groups"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "GroupsRetrieveRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
          "name": "include_remote_data",
          "schema": {
            "generatedName": "GroupsRetrieveRequestIncludeRemoteData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "GroupsRetrieveRequestIncludeRemoteData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Deprecated. Use show_enum_origins.",
          "name": "remote_fields",
          "schema": {
            "generatedName": "GroupsRetrieveRequestRemoteFields",
            "value": {
              "value": {
                "value": "type",
                "type": "string"
              },
              "generatedName": "GroupsRetrieveRequestRemoteFields",
              "groupName": [],
              "type": "literal"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Which fields should be returned in non-normalized form.",
          "name": "show_enum_origins",
          "schema": {
            "generatedName": "GroupsRetrieveRequestShowEnumOrigins",
            "value": {
              "value": {
                "value": "type",
                "type": "string"
              },
              "generatedName": "GroupsRetrieveRequestShowEnumOrigins",
              "groupName": [],
              "type": "literal"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GroupsRetrieveRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "GroupsRetrieveRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GroupsRetrieveResponse",
          "schema": "Group",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Returns a `Group` object with the given `id`.",
      "authed": true,
      "method": "GET",
      "path": "/groups/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "134e0111-0f67-44f6-98f0-597000290bb3",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "remote_id": {
                  "value": {
                    "value": "800293",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "parent_group": {
                  "value": {
                    "value": "2ef51b11-2c4e-4b02-8d1d-50592d9e96ef",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "COST_CENTER_US",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "TEAM",
                  "type": "enum"
                },
                "remote_was_deleted": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "modified_at": {
                  "value": {
                    "value": "2021-10-16T00:00:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "field_mappings": {
                  "value": [
                    {
                      "key": {
                        "value": "organization_defined_targets",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "key": {
                                "value": "custom_key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "custom_value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "type": "unknown"
                      }
                    },
                    {
                      "key": {
                        "value": "linked_account_defined_targets",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "key": {
                                "value": "custom_key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "custom_value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "remote_data": {
                  "value": [
                    {
                      "properties": {
                        "path": {
                          "value": {
                            "value": "/group",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "data": {
                          "value": [
                            {
                              "key": {
                                "value": "0",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "Varies by platform",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "issues_list",
      "tags": [
        "issues"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "name": "account_token",
          "schema": {
            "generatedName": "IssuesListRequestAccountToken",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "IssuesListRequestAccountToken",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The pagination cursor value.",
          "name": "cursor",
          "schema": {
            "generatedName": "IssuesListRequestCursor",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "IssuesListRequestCursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If included, will only include issues whose most recent action occurred before this time",
          "name": "end_date",
          "schema": {
            "generatedName": "IssuesListRequestEndDate",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "IssuesListRequestEndDate",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "name": "end_user_organization_name",
          "schema": {
            "generatedName": "IssuesListRequestEndUserOrganizationName",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "IssuesListRequestEndUserOrganizationName",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return issues whose first incident time was after this datetime.",
          "name": "first_incident_time_after",
          "schema": {
            "generatedName": "IssuesListRequestFirstIncidentTimeAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "IssuesListRequestFirstIncidentTimeAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return issues whose first incident time was before this datetime.",
          "name": "first_incident_time_before",
          "schema": {
            "generatedName": "IssuesListRequestFirstIncidentTimeBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "IssuesListRequestFirstIncidentTimeBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If True, will include muted issues",
          "name": "include_muted",
          "schema": {
            "generatedName": "IssuesListRequestIncludeMuted",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "IssuesListRequestIncludeMuted",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "name": "integration_name",
          "schema": {
            "generatedName": "IssuesListRequestIntegrationName",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "IssuesListRequestIntegrationName",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return issues whose last incident time was after this datetime.",
          "name": "last_incident_time_after",
          "schema": {
            "generatedName": "IssuesListRequestLastIncidentTimeAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "IssuesListRequestLastIncidentTimeAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return issues whose last incident time was before this datetime.",
          "name": "last_incident_time_before",
          "schema": {
            "generatedName": "IssuesListRequestLastIncidentTimeBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "IssuesListRequestLastIncidentTimeBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Number of results to return per page.",
          "name": "page_size",
          "schema": {
            "generatedName": "IssuesListRequestPageSize",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "IssuesListRequestPageSize",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If included, will only include issues whose most recent action occurred after this time",
          "name": "start_date",
          "schema": {
            "generatedName": "IssuesListRequestStartDate",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "IssuesListRequestStartDate",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Status of the issue. Options: ('ONGOING', 'RESOLVED')\n\n* `ONGOING` - ONGOING\n* `RESOLVED` - RESOLVED",
          "name": "status",
          "schema": {
            "generatedName": "IssuesListRequestStatus",
            "value": {
              "generatedName": "IssuesListRequestStatus",
              "values": [
                {
                  "generatedName": "ONGOING",
                  "value": "ONGOING",
                  "casing": {}
                },
                {
                  "generatedName": "RESOLVED",
                  "value": "RESOLVED",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "IssuesListRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "IssuesListResponse",
          "schema": "PaginatedIssueList",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Gets issues.",
      "authed": true,
      "method": "GET",
      "path": "/issues",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "next": {
                  "value": {
                    "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "previous": {
                  "value": {
                    "value": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "results": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "status": {
                          "value": "ONGOING",
                          "type": "enum"
                        },
                        "error_description": {
                          "value": {
                            "value": "string",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "end_user": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "first_incident_time": {
                          "value": {
                            "value": "2022-12-05T16:19:15.161Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "last_incident_time": {
                          "value": {
                            "value": "2022-12-05T16:19:15.161Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "is_muted": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "error_details": {
                          "value": [
                            {
                              "value": {
                                "value": "Missing employee permissions.",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            {
                              "value": {
                                "value": "Missing time off permissions.",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "issues_retrieve",
      "tags": [
        "issues"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "IssuesRetrieveRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "IssuesRetrieveRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "IssuesRetrieveResponse",
          "schema": "Issue",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Get a specific issue.",
      "authed": true,
      "method": "GET",
      "path": "/issues/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "status": {
                  "value": "ONGOING",
                  "type": "enum"
                },
                "error_description": {
                  "value": {
                    "value": "string",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "end_user": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "first_incident_time": {
                  "value": {
                    "value": "2022-12-05T16:19:15.161Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "last_incident_time": {
                  "value": {
                    "value": "2022-12-05T16:19:15.161Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "is_muted": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "error_details": {
                  "value": [
                    {
                      "value": {
                        "value": "Missing employee permissions.",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "Missing time off permissions.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "link_token_create",
      "tags": [
        "link-token"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "LinkTokenCreateRequest",
      "request": {
        "schema": {
          "generatedName": "LinkTokenCreateRequest",
          "schema": "EndUserDetailsRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/x-www-form-urlencoded",
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "fullExamples": [],
        "additionalProperties": false,
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "LinkTokenCreateResponse",
          "schema": "LinkToken",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Creates a link token to be used when linking a new end user.",
      "authed": true,
      "method": "POST",
      "path": "/link-token",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "end_user_email_address": {
                "value": {
                  "value": "end_user_email_address",
                  "type": "string"
                },
                "type": "primitive"
              },
              "end_user_organization_name": {
                "value": {
                  "value": "end_user_organization_name",
                  "type": "string"
                },
                "type": "primitive"
              },
              "end_user_origin_id": {
                "value": {
                  "value": "end_user_origin_id",
                  "type": "string"
                },
                "type": "primitive"
              },
              "categories": {
                "value": [
                  {
                    "value": "hris",
                    "type": "enum"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "link_token": {
                  "value": {
                    "value": "necdP7FtdASl1fQwm62be2_dM4wBG8_GactqoUV0",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "integration_name": {
                  "value": {
                    "value": "Lever",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "magic_link_url": {
                  "value": {
                    "value": "https://link.merge.dev/asdfjkl12345jsndfgi2i83n",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "linked_accounts_list",
      "tags": [
        "linked-accounts"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Options: ('hris', 'ats', 'accounting', 'ticketing', 'crm', 'mktg', 'filestorage')\n\n* `hris` - hris\n* `ats` - ats\n* `accounting` - accounting\n* `ticketing` - ticketing\n* `crm` - crm\n* `mktg` - mktg\n* `filestorage` - filestorage",
          "name": "category",
          "schema": {
            "generatedName": "LinkedAccountsListRequestCategory",
            "value": {
              "generatedName": "LinkedAccountsListRequestCategory",
              "values": [
                {
                  "generatedName": "accounting",
                  "value": "accounting",
                  "casing": {}
                },
                {
                  "generatedName": "ats",
                  "value": "ats",
                  "casing": {}
                },
                {
                  "generatedName": "crm",
                  "value": "crm",
                  "casing": {}
                },
                {
                  "generatedName": "filestorage",
                  "value": "filestorage",
                  "casing": {}
                },
                {
                  "generatedName": "hris",
                  "value": "hris",
                  "casing": {}
                },
                {
                  "generatedName": "mktg",
                  "value": "mktg",
                  "casing": {}
                },
                {
                  "generatedName": "ticketing",
                  "value": "ticketing",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The pagination cursor value.",
          "name": "cursor",
          "schema": {
            "generatedName": "LinkedAccountsListRequestCursor",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "LinkedAccountsListRequestCursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return linked accounts associated with the given email address.",
          "name": "end_user_email_address",
          "schema": {
            "generatedName": "LinkedAccountsListRequestEndUserEmailAddress",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "LinkedAccountsListRequestEndUserEmailAddress",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return linked accounts associated with the given organization name.",
          "name": "end_user_organization_name",
          "schema": {
            "generatedName": "LinkedAccountsListRequestEndUserOrganizationName",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "LinkedAccountsListRequestEndUserOrganizationName",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return linked accounts associated with the given origin ID.",
          "name": "end_user_origin_id",
          "schema": {
            "generatedName": "LinkedAccountsListRequestEndUserOriginId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "LinkedAccountsListRequestEndUserOriginId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Comma-separated list of EndUser origin IDs, making it possible to specify multiple EndUsers at once.",
          "name": "end_user_origin_ids",
          "schema": {
            "generatedName": "LinkedAccountsListRequestEndUserOriginIds",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "LinkedAccountsListRequestEndUserOriginIds",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "name": "id",
          "schema": {
            "generatedName": "LinkedAccountsListRequestId",
            "value": {
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "LinkedAccountsListRequestId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Comma-separated list of LinkedAccount IDs, making it possible to specify multiple LinkedAccounts at once.",
          "name": "ids",
          "schema": {
            "generatedName": "LinkedAccountsListRequestIds",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "LinkedAccountsListRequestIds",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If `true`, will include complete production duplicates of the account specified by the `id` query parameter in the response. `id` must be for a complete production linked account.",
          "name": "include_duplicates",
          "schema": {
            "generatedName": "LinkedAccountsListRequestIncludeDuplicates",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "LinkedAccountsListRequestIncludeDuplicates",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return linked accounts associated with the given integration name.",
          "name": "integration_name",
          "schema": {
            "generatedName": "LinkedAccountsListRequestIntegrationName",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "LinkedAccountsListRequestIntegrationName",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If included, will only include test linked accounts. If not included, will only include non-test linked accounts.",
          "name": "is_test_account",
          "schema": {
            "generatedName": "LinkedAccountsListRequestIsTestAccount",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "LinkedAccountsListRequestIsTestAccount",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Number of results to return per page.",
          "name": "page_size",
          "schema": {
            "generatedName": "LinkedAccountsListRequestPageSize",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "LinkedAccountsListRequestPageSize",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Filter by status. Options: `COMPLETE`, `INCOMPLETE`, `RELINK_NEEDED`",
          "name": "status",
          "schema": {
            "generatedName": "LinkedAccountsListRequestStatus",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "LinkedAccountsListRequestStatus",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "LinkedAccountsListRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "LinkedAccountsListResponse",
          "schema": "PaginatedAccountDetailsAndActionsList",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "List linked accounts for your organization.",
      "authed": true,
      "method": "GET",
      "path": "/linked-accounts",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "next": {
                  "value": {
                    "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "previous": {
                  "value": {
                    "value": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "results": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "e59b1821-f85c-4e28-a6b3-1804156f3563",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "category": {
                          "value": "hris",
                          "type": "enum"
                        },
                        "status": {
                          "value": "COMPLETE",
                          "type": "enum"
                        },
                        "status_detail": {
                          "value": {
                            "value": "status_detail",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "end_user_origin_id": {
                          "value": {
                            "value": "3ac95cde-6c7f-4eef-afec-be710b42308d",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "end_user_organization_name": {
                          "value": {
                            "value": "Foo Bar, LLC",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "end_user_email_address": {
                          "value": {
                            "value": "hradmin@foobar.dev",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "webhook_listener_url": {
                          "value": {
                            "value": "https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "is_duplicate": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "integration": {
                          "properties": {
                            "name": {
                              "value": {
                                "value": "name",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "categories": {
                              "value": [
                                {
                                  "value": "hris",
                                  "type": "enum"
                                }
                              ],
                              "type": "array"
                            },
                            "color": {
                              "value": {
                                "value": "color",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "slug": {
                              "value": {
                                "value": "slug",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "passthrough_available": {
                              "value": {
                                "value": true,
                                "type": "boolean"
                              },
                              "type": "primitive"
                            },
                            "available_model_operations": {
                              "value": [
                                {
                                  "properties": {
                                    "model_name": {
                                      "value": {
                                        "value": "Candidate",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "available_operations": {
                                      "value": [
                                        {
                                          "value": {
                                            "value": "FETCH",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        },
                                        {
                                          "value": {
                                            "value": "CREATE",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        }
                                      ],
                                      "type": "array"
                                    },
                                    "required_post_parameters": {
                                      "value": [
                                        {
                                          "value": {
                                            "value": "remote_user_id",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        }
                                      ],
                                      "type": "array"
                                    },
                                    "supported_fields": {
                                      "value": [
                                        {
                                          "value": {
                                            "value": "first_name",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        },
                                        {
                                          "value": {
                                            "value": "last_name",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        },
                                        {
                                          "value": {
                                            "value": "company",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        },
                                        {
                                          "value": {
                                            "value": "title",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        }
                                      ],
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                }
                              ],
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "locations_list",
      "tags": [
        "locations"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "If provided, will only return objects created after this datetime.",
          "name": "created_after",
          "schema": {
            "generatedName": "LocationsListRequestCreatedAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "LocationsListRequestCreatedAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return objects created before this datetime.",
          "name": "created_before",
          "schema": {
            "generatedName": "LocationsListRequestCreatedBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "LocationsListRequestCreatedBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The pagination cursor value.",
          "name": "cursor",
          "schema": {
            "generatedName": "LocationsListRequestCursor",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "LocationsListRequestCursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include data that was marked as deleted by third party webhooks.",
          "name": "include_deleted_data",
          "schema": {
            "generatedName": "LocationsListRequestIncludeDeletedData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "LocationsListRequestIncludeDeletedData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
          "name": "include_remote_data",
          "schema": {
            "generatedName": "LocationsListRequestIncludeRemoteData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "LocationsListRequestIncludeRemoteData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, only objects synced by Merge after this date time will be returned.",
          "name": "modified_after",
          "schema": {
            "generatedName": "LocationsListRequestModifiedAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "LocationsListRequestModifiedAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, only objects synced by Merge before this date time will be returned.",
          "name": "modified_before",
          "schema": {
            "generatedName": "LocationsListRequestModifiedBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "LocationsListRequestModifiedBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Number of results to return per page.",
          "name": "page_size",
          "schema": {
            "generatedName": "LocationsListRequestPageSize",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "LocationsListRequestPageSize",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Deprecated. Use show_enum_origins.",
          "name": "remote_fields",
          "schema": {
            "generatedName": "LocationsListRequestRemoteFields",
            "value": {
              "value": {
                "value": "location_type",
                "type": "string"
              },
              "generatedName": "LocationsListRequestRemoteFields",
              "groupName": [],
              "type": "literal"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The API provider's ID for the given object.",
          "name": "remote_id",
          "schema": {
            "generatedName": "LocationsListRequestRemoteId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "LocationsListRequestRemoteId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Which fields should be returned in non-normalized form.",
          "name": "show_enum_origins",
          "schema": {
            "generatedName": "LocationsListRequestShowEnumOrigins",
            "value": {
              "value": {
                "value": "location_type",
                "type": "string"
              },
              "generatedName": "LocationsListRequestShowEnumOrigins",
              "groupName": [],
              "type": "literal"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "LocationsListRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "LocationsListRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "LocationsListResponse",
          "schema": "PaginatedLocationList",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Returns a list of `Location` objects.",
      "authed": true,
      "method": "GET",
      "path": "/locations",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "properties": {
                "next": {
                  "value": {
                    "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "previous": {
                  "value": {
                    "value": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "results": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "f5e6a151-f44e-449a-afb1-8fd781905958",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "remote_id": {
                          "value": {
                            "value": "93018402",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "NYC Office",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "phone_number": {
                          "value": {
                            "value": "+1111111111",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "street_1": {
                          "value": {
                            "value": "2920 Broadway",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "street_2": {
                          "value": {
                            "value": "2nd Floor",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "city": {
                          "value": {
                            "value": "New York ",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "state": {
                          "value": {
                            "value": "NY",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "zip_code": {
                          "value": {
                            "value": "10027",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "country": {
                          "value": "AF",
                          "type": "enum"
                        },
                        "location_type": {
                          "value": "HOME",
                          "type": "enum"
                        },
                        "remote_was_deleted": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "modified_at": {
                          "value": {
                            "value": "2021-10-16T00:00:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "field_mappings": {
                          "value": [
                            {
                              "key": {
                                "value": "organization_defined_targets",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "custom_key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "custom_value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            },
                            {
                              "key": {
                                "value": "linked_account_defined_targets",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "custom_key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "custom_value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "remote_data": {
                          "value": [
                            {
                              "properties": {
                                "path": {
                                  "value": {
                                    "value": "/locations",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "data": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "0",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": {
                                            "value": "Varies by platform",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        },
                                        "type": "unknown"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "locations_retrieve",
      "tags": [
        "locations"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "LocationsRetrieveRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
          "name": "include_remote_data",
          "schema": {
            "generatedName": "LocationsRetrieveRequestIncludeRemoteData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "LocationsRetrieveRequestIncludeRemoteData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Deprecated. Use show_enum_origins.",
          "name": "remote_fields",
          "schema": {
            "generatedName": "LocationsRetrieveRequestRemoteFields",
            "value": {
              "value": {
                "value": "location_type",
                "type": "string"
              },
              "generatedName": "LocationsRetrieveRequestRemoteFields",
              "groupName": [],
              "type": "literal"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Which fields should be returned in non-normalized form.",
          "name": "show_enum_origins",
          "schema": {
            "generatedName": "LocationsRetrieveRequestShowEnumOrigins",
            "value": {
              "value": {
                "value": "location_type",
                "type": "string"
              },
              "generatedName": "LocationsRetrieveRequestShowEnumOrigins",
              "groupName": [],
              "type": "literal"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "LocationsRetrieveRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "LocationsRetrieveRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "LocationsRetrieveResponse",
          "schema": "Location",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Returns a `Location` object with the given `id`.",
      "authed": true,
      "method": "GET",
      "path": "/locations/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "f5e6a151-f44e-449a-afb1-8fd781905958",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "remote_id": {
                  "value": {
                    "value": "93018402",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "NYC Office",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "phone_number": {
                  "value": {
                    "value": "+1111111111",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "street_1": {
                  "value": {
                    "value": "2920 Broadway",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "street_2": {
                  "value": {
                    "value": "2nd Floor",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "city": {
                  "value": {
                    "value": "New York ",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "state": {
                  "value": {
                    "value": "NY",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "zip_code": {
                  "value": {
                    "value": "10027",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "country": {
                  "value": "AF",
                  "type": "enum"
                },
                "location_type": {
                  "value": "HOME",
                  "type": "enum"
                },
                "remote_was_deleted": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "modified_at": {
                  "value": {
                    "value": "2021-10-16T00:00:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "field_mappings": {
                  "value": [
                    {
                      "key": {
                        "value": "organization_defined_targets",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "key": {
                                "value": "custom_key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "custom_value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "type": "unknown"
                      }
                    },
                    {
                      "key": {
                        "value": "linked_account_defined_targets",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "key": {
                                "value": "custom_key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "custom_value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "remote_data": {
                  "value": [
                    {
                      "properties": {
                        "path": {
                          "value": {
                            "value": "/locations",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "data": {
                          "value": [
                            {
                              "key": {
                                "value": "0",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "Varies by platform",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "passthrough_create",
      "tags": [
        "passthrough"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "PassthroughCreateRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "PassthroughCreateRequest",
      "request": {
        "schema": {
          "generatedName": "PassthroughCreateRequestBody",
          "schema": "DataPassthroughRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/x-www-form-urlencoded",
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "fullExamples": [],
        "additionalProperties": false,
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "PassthroughCreateResponse",
          "schema": "RemoteResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Pull data from an endpoint not currently supported by Merge.",
      "authed": true,
      "method": "POST",
      "path": "/passthrough",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "request": {
            "properties": {
              "method": {
                "value": "GET",
                "type": "enum"
              },
              "path": {
                "value": {
                  "value": "/scooters",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "method": {
                  "value": {
                    "value": "GET",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "path": {
                  "value": {
                    "value": "/scooters",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "status": {
                  "value": {
                    "value": 200,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "response": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "value",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "response_headers": {
                  "value": [
                    {
                      "key": {
                        "value": "X-Page-Token",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "response_type": {
                  "value": "JSON",
                  "type": "enum"
                },
                "headers": {
                  "value": [
                    {
                      "key": {
                        "value": "EXTRA-HEADER",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    },
                    {
                      "key": {
                        "value": "Authorization",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "<redacted>",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "pay_groups_list",
      "tags": [
        "pay-groups"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "If provided, will only return objects created after this datetime.",
          "name": "created_after",
          "schema": {
            "generatedName": "PayGroupsListRequestCreatedAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "PayGroupsListRequestCreatedAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return objects created before this datetime.",
          "name": "created_before",
          "schema": {
            "generatedName": "PayGroupsListRequestCreatedBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "PayGroupsListRequestCreatedBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The pagination cursor value.",
          "name": "cursor",
          "schema": {
            "generatedName": "PayGroupsListRequestCursor",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "PayGroupsListRequestCursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include data that was marked as deleted by third party webhooks.",
          "name": "include_deleted_data",
          "schema": {
            "generatedName": "PayGroupsListRequestIncludeDeletedData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "PayGroupsListRequestIncludeDeletedData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
          "name": "include_remote_data",
          "schema": {
            "generatedName": "PayGroupsListRequestIncludeRemoteData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "PayGroupsListRequestIncludeRemoteData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, only objects synced by Merge after this date time will be returned.",
          "name": "modified_after",
          "schema": {
            "generatedName": "PayGroupsListRequestModifiedAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "PayGroupsListRequestModifiedAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, only objects synced by Merge before this date time will be returned.",
          "name": "modified_before",
          "schema": {
            "generatedName": "PayGroupsListRequestModifiedBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "PayGroupsListRequestModifiedBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Number of results to return per page.",
          "name": "page_size",
          "schema": {
            "generatedName": "PayGroupsListRequestPageSize",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "PayGroupsListRequestPageSize",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The API provider's ID for the given object.",
          "name": "remote_id",
          "schema": {
            "generatedName": "PayGroupsListRequestRemoteId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "PayGroupsListRequestRemoteId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "PayGroupsListRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "PayGroupsListRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "PayGroupsListResponse",
          "schema": "PaginatedPayGroupList",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Returns a list of `PayGroup` objects.",
      "authed": true,
      "method": "GET",
      "path": "/pay-groups",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "properties": {
                "next": {
                  "value": {
                    "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "previous": {
                  "value": {
                    "value": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "results": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "fd1e0fb5-8f92-4ec9-9f32-179cf732867d",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "remote_id": {
                          "value": {
                            "value": "800293",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "pay_group_name": {
                          "value": {
                            "value": "contractor",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "remote_was_deleted": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "modified_at": {
                          "value": {
                            "value": "2021-10-16T00:00:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "field_mappings": {
                          "value": [
                            {
                              "key": {
                                "value": "organization_defined_targets",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "custom_key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "custom_value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            },
                            {
                              "key": {
                                "value": "linked_account_defined_targets",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "custom_key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "custom_value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "remote_data": {
                          "value": [
                            {
                              "properties": {
                                "path": {
                                  "value": {
                                    "value": "/pay-group",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "data": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "0",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": {
                                            "value": "Varies by platform",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        },
                                        "type": "unknown"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "pay_groups_retrieve",
      "tags": [
        "pay-groups"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "PayGroupsRetrieveRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
          "name": "include_remote_data",
          "schema": {
            "generatedName": "PayGroupsRetrieveRequestIncludeRemoteData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "PayGroupsRetrieveRequestIncludeRemoteData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "PayGroupsRetrieveRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "PayGroupsRetrieveRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "PayGroupsRetrieveResponse",
          "schema": "PayGroup",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Returns a `PayGroup` object with the given `id`.",
      "authed": true,
      "method": "GET",
      "path": "/pay-groups/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "fd1e0fb5-8f92-4ec9-9f32-179cf732867d",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "remote_id": {
                  "value": {
                    "value": "800293",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "pay_group_name": {
                  "value": {
                    "value": "contractor",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "remote_was_deleted": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "modified_at": {
                  "value": {
                    "value": "2021-10-16T00:00:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "field_mappings": {
                  "value": [
                    {
                      "key": {
                        "value": "organization_defined_targets",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "key": {
                                "value": "custom_key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "custom_value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "type": "unknown"
                      }
                    },
                    {
                      "key": {
                        "value": "linked_account_defined_targets",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "key": {
                                "value": "custom_key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "custom_value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "remote_data": {
                  "value": [
                    {
                      "properties": {
                        "path": {
                          "value": {
                            "value": "/pay-group",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "data": {
                          "value": [
                            {
                              "key": {
                                "value": "0",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "Varies by platform",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "payroll_runs_list",
      "tags": [
        "payroll-runs"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "If provided, will only return objects created after this datetime.",
          "name": "created_after",
          "schema": {
            "generatedName": "PayrollRunsListRequestCreatedAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "PayrollRunsListRequestCreatedAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return objects created before this datetime.",
          "name": "created_before",
          "schema": {
            "generatedName": "PayrollRunsListRequestCreatedBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "PayrollRunsListRequestCreatedBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The pagination cursor value.",
          "name": "cursor",
          "schema": {
            "generatedName": "PayrollRunsListRequestCursor",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "PayrollRunsListRequestCursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return payroll runs ended after this datetime.",
          "name": "ended_after",
          "schema": {
            "generatedName": "PayrollRunsListRequestEndedAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "PayrollRunsListRequestEndedAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return payroll runs ended before this datetime.",
          "name": "ended_before",
          "schema": {
            "generatedName": "PayrollRunsListRequestEndedBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "PayrollRunsListRequestEndedBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include data that was marked as deleted by third party webhooks.",
          "name": "include_deleted_data",
          "schema": {
            "generatedName": "PayrollRunsListRequestIncludeDeletedData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "PayrollRunsListRequestIncludeDeletedData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
          "name": "include_remote_data",
          "schema": {
            "generatedName": "PayrollRunsListRequestIncludeRemoteData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "PayrollRunsListRequestIncludeRemoteData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, only objects synced by Merge after this date time will be returned.",
          "name": "modified_after",
          "schema": {
            "generatedName": "PayrollRunsListRequestModifiedAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "PayrollRunsListRequestModifiedAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, only objects synced by Merge before this date time will be returned.",
          "name": "modified_before",
          "schema": {
            "generatedName": "PayrollRunsListRequestModifiedBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "PayrollRunsListRequestModifiedBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Number of results to return per page.",
          "name": "page_size",
          "schema": {
            "generatedName": "PayrollRunsListRequestPageSize",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "PayrollRunsListRequestPageSize",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Deprecated. Use show_enum_origins.",
          "name": "remote_fields",
          "schema": {
            "generatedName": "PayrollRunsListRequestRemoteFields",
            "value": {
              "generatedName": "PayrollRunsListRequestRemoteFields",
              "values": [
                {
                  "generatedName": "run_state",
                  "value": "run_state",
                  "casing": {}
                },
                {
                  "generatedName": "RunStateRunType",
                  "value": "run_state,run_type",
                  "casing": {}
                },
                {
                  "generatedName": "run_type",
                  "value": "run_type",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The API provider's ID for the given object.",
          "name": "remote_id",
          "schema": {
            "generatedName": "PayrollRunsListRequestRemoteId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "PayrollRunsListRequestRemoteId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return PayrollRun's with this status. Options: ('REGULAR', 'OFF_CYCLE', 'CORRECTION', 'TERMINATION', 'SIGN_ON_BONUS')\n\n* `REGULAR` - REGULAR\n* `OFF_CYCLE` - OFF_CYCLE\n* `CORRECTION` - CORRECTION\n* `TERMINATION` - TERMINATION\n* `SIGN_ON_BONUS` - SIGN_ON_BONUS",
          "name": "run_type",
          "schema": {
            "generatedName": "PayrollRunsListRequestRunType",
            "value": {
              "generatedName": "PayrollRunsListRequestRunType",
              "values": [
                {
                  "generatedName": "CORRECTION",
                  "value": "CORRECTION",
                  "casing": {}
                },
                {
                  "generatedName": "OFF_CYCLE",
                  "value": "OFF_CYCLE",
                  "casing": {}
                },
                {
                  "generatedName": "REGULAR",
                  "value": "REGULAR",
                  "casing": {}
                },
                {
                  "generatedName": "SIGN_ON_BONUS",
                  "value": "SIGN_ON_BONUS",
                  "casing": {}
                },
                {
                  "generatedName": "TERMINATION",
                  "value": "TERMINATION",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Which fields should be returned in non-normalized form.",
          "name": "show_enum_origins",
          "schema": {
            "generatedName": "PayrollRunsListRequestShowEnumOrigins",
            "value": {
              "generatedName": "PayrollRunsListRequestShowEnumOrigins",
              "values": [
                {
                  "generatedName": "run_state",
                  "value": "run_state",
                  "casing": {}
                },
                {
                  "generatedName": "RunStateRunType",
                  "value": "run_state,run_type",
                  "casing": {}
                },
                {
                  "generatedName": "run_type",
                  "value": "run_type",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return payroll runs started after this datetime.",
          "name": "started_after",
          "schema": {
            "generatedName": "PayrollRunsListRequestStartedAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "PayrollRunsListRequestStartedAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return payroll runs started before this datetime.",
          "name": "started_before",
          "schema": {
            "generatedName": "PayrollRunsListRequestStartedBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "PayrollRunsListRequestStartedBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "PayrollRunsListRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "PayrollRunsListRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "PayrollRunsListResponse",
          "schema": "PaginatedPayrollRunList",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Returns a list of `PayrollRun` objects.",
      "authed": true,
      "method": "GET",
      "path": "/payroll-runs",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "properties": {
                "next": {
                  "value": {
                    "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "previous": {
                  "value": {
                    "value": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "results": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "37336947-b3d4-4a4c-a310-ab6ab510e079",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "remote_id": {
                          "value": {
                            "value": "19202938",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "run_state": {
                          "value": "PAID",
                          "type": "enum"
                        },
                        "run_type": {
                          "value": "REGULAR",
                          "type": "enum"
                        },
                        "start_date": {
                          "value": {
                            "value": "2020-11-08T00:00:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "end_date": {
                          "value": {
                            "value": "2020-11-15T00:00:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "check_date": {
                          "value": {
                            "value": "2020-11-15T00:00:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "remote_was_deleted": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "modified_at": {
                          "value": {
                            "value": "2021-10-16T00:00:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "field_mappings": {
                          "value": [
                            {
                              "key": {
                                "value": "organization_defined_targets",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "custom_key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "custom_value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            },
                            {
                              "key": {
                                "value": "linked_account_defined_targets",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "custom_key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "custom_value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "remote_data": {
                          "value": [
                            {
                              "properties": {
                                "path": {
                                  "value": {
                                    "value": "/payroll",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "data": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "0",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": {
                                            "value": "Varies by platform",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        },
                                        "type": "unknown"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "payroll_runs_retrieve",
      "tags": [
        "payroll-runs"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "PayrollRunsRetrieveRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
          "name": "include_remote_data",
          "schema": {
            "generatedName": "PayrollRunsRetrieveRequestIncludeRemoteData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "PayrollRunsRetrieveRequestIncludeRemoteData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Deprecated. Use show_enum_origins.",
          "name": "remote_fields",
          "schema": {
            "generatedName": "PayrollRunsRetrieveRequestRemoteFields",
            "value": {
              "generatedName": "PayrollRunsRetrieveRequestRemoteFields",
              "values": [
                {
                  "generatedName": "run_state",
                  "value": "run_state",
                  "casing": {}
                },
                {
                  "generatedName": "RunStateRunType",
                  "value": "run_state,run_type",
                  "casing": {}
                },
                {
                  "generatedName": "run_type",
                  "value": "run_type",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Which fields should be returned in non-normalized form.",
          "name": "show_enum_origins",
          "schema": {
            "generatedName": "PayrollRunsRetrieveRequestShowEnumOrigins",
            "value": {
              "generatedName": "PayrollRunsRetrieveRequestShowEnumOrigins",
              "values": [
                {
                  "generatedName": "run_state",
                  "value": "run_state",
                  "casing": {}
                },
                {
                  "generatedName": "RunStateRunType",
                  "value": "run_state,run_type",
                  "casing": {}
                },
                {
                  "generatedName": "run_type",
                  "value": "run_type",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "PayrollRunsRetrieveRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "PayrollRunsRetrieveRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "PayrollRunsRetrieveResponse",
          "schema": "PayrollRun",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Returns a `PayrollRun` object with the given `id`.",
      "authed": true,
      "method": "GET",
      "path": "/payroll-runs/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "37336947-b3d4-4a4c-a310-ab6ab510e079",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "remote_id": {
                  "value": {
                    "value": "19202938",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "run_state": {
                  "value": "PAID",
                  "type": "enum"
                },
                "run_type": {
                  "value": "REGULAR",
                  "type": "enum"
                },
                "start_date": {
                  "value": {
                    "value": "2020-11-08T00:00:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "end_date": {
                  "value": {
                    "value": "2020-11-15T00:00:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "check_date": {
                  "value": {
                    "value": "2020-11-15T00:00:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "remote_was_deleted": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "modified_at": {
                  "value": {
                    "value": "2021-10-16T00:00:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "field_mappings": {
                  "value": [
                    {
                      "key": {
                        "value": "organization_defined_targets",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "key": {
                                "value": "custom_key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "custom_value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "type": "unknown"
                      }
                    },
                    {
                      "key": {
                        "value": "linked_account_defined_targets",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "key": {
                                "value": "custom_key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "custom_value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "remote_data": {
                  "value": [
                    {
                      "properties": {
                        "path": {
                          "value": {
                            "value": "/payroll",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "data": {
                          "value": [
                            {
                              "key": {
                                "value": "0",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "Varies by platform",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "regenerate_key_create",
      "tags": [
        "regenerate-key"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "RegenerateKeyCreateRequest",
      "request": {
        "schema": {
          "generatedName": "RegenerateKeyCreateRequest",
          "schema": "RemoteKeyForRegenerationRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/x-www-form-urlencoded",
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "fullExamples": [],
        "additionalProperties": false,
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "RegenerateKeyCreateResponse",
          "schema": "RemoteKey",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Exchange remote keys.",
      "authed": true,
      "method": "POST",
      "path": "/regenerate-key",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "name": {
                "value": {
                  "value": "Remote Deployment Key 1",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "name": {
                  "value": {
                    "value": "Remote Deployment Key 1",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "key": {
                  "value": {
                    "value": "hXY57W0g0WkdRHjCaPvwijK63fwfN-o_Wh7f30SLTq_uPCOLo-WFcA",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "selective_sync_configurations_list",
      "tags": [
        "selective-sync"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SelectiveSyncConfigurationsListRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "SelectiveSyncConfigurationsListRequest",
      "response": {
        "description": "",
        "schema": {
          "value": {
            "generatedName": "SelectiveSyncConfigurationsListResponseItem",
            "schema": "LinkedAccountSelectiveSyncConfiguration",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "SelectiveSyncConfigurationsListResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [
          {
            "name": "Employees that started on or after January 1st, 2022",
            "value": [
              {
                "linked_account_conditions": [
                  {
                    "condition_schema_id": "123e4567-e89b-12d3-a456-426655440000",
                    "common_model": "hris.Employee",
                    "native_name": "Started At",
                    "field_name": "start_date",
                    "operator": "GREATER_THAN_OR_EQUAL",
                    "value": "2022-01-01T00:00:00Z"
                  }
                ]
              }
            ]
          }
        ],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Get a linked account's selective syncs.",
      "authed": true,
      "method": "GET",
      "path": "/selective-sync/configurations",
      "examples": [
        {
          "name": "Employees that started on or after January 1st, 2022",
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "linked_account_conditions": {
                      "value": [
                        {
                          "properties": {
                            "condition_schema_id": {
                              "value": {
                                "value": "123e4567-e89b-12d3-a456-426655440000",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "common_model": {
                              "value": {
                                "value": "hris.Employee",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "native_name": {
                              "value": {
                                "value": "Started At",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "operator": {
                              "value": {
                                "value": "GREATER_THAN_OR_EQUAL",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "value": {
                              "value": {
                                "value": {
                                  "value": "2022-01-01T00:00:00Z",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "type": "unknown"
                            },
                            "field_name": {
                              "value": {
                                "value": "start_date",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "selective_sync_configurations_update",
      "tags": [
        "selective-sync"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SelectiveSyncConfigurationsUpdateRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "SelectiveSyncConfigurationsUpdateRequest",
      "request": {
        "schema": {
          "generatedName": "SelectiveSyncConfigurationsUpdateRequestBody",
          "schema": "LinkedAccountSelectiveSyncConfigurationListRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [
          {
            "name": "Employees that started on or after January 1st, 2022",
            "value": {
              "linked_account_conditons": [
                {
                  "condition_schema_id": "123e4567-e89b-12d3-a456-426655440000",
                  "operator": "GREATER_THAN_OR_EQUAL",
                  "value": "2022-01-01T00:00:00Z"
                }
              ]
            }
          }
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "value": {
            "generatedName": "SelectiveSyncConfigurationsUpdateResponseItem",
            "schema": "LinkedAccountSelectiveSyncConfiguration",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "SelectiveSyncConfigurationsUpdateResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [
          {
            "name": "Employees that started on or after January 1st, 2022",
            "value": [
              {
                "linked_account_conditions": [
                  {
                    "condition_schema_id": "123e4567-e89b-12d3-a456-426655440000",
                    "common_model": "hris.Employee",
                    "native_name": "Started At",
                    "field_name": "start_date",
                    "operator": "GREATER_THAN_OR_EQUAL",
                    "value": "2022-01-01T00:00:00Z"
                  }
                ]
              }
            ]
          }
        ],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Replace a linked account's selective syncs.",
      "authed": true,
      "method": "PUT",
      "path": "/selective-sync/configurations",
      "examples": [
        {
          "name": "Employees that started on or after January 1st, 2022",
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "request": {
            "properties": {
              "sync_configurations": {
                "value": [
                  {
                    "properties": {
                      "linked_account_conditions": {
                        "value": [],
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "linked_account_conditions": {
                      "value": [
                        {
                          "properties": {
                            "condition_schema_id": {
                              "value": {
                                "value": "123e4567-e89b-12d3-a456-426655440000",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "common_model": {
                              "value": {
                                "value": "hris.Employee",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "native_name": {
                              "value": {
                                "value": "Started At",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "operator": {
                              "value": {
                                "value": "GREATER_THAN_OR_EQUAL",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "value": {
                              "value": {
                                "value": {
                                  "value": "2022-01-01T00:00:00Z",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "type": "unknown"
                            },
                            "field_name": {
                              "value": {
                                "value": "start_date",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "selective_sync_meta_list",
      "tags": [
        "selective-sync"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "name": "common_model",
          "schema": {
            "generatedName": "SelectiveSyncMetaListRequestCommonModel",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "SelectiveSyncMetaListRequestCommonModel",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The pagination cursor value.",
          "name": "cursor",
          "schema": {
            "generatedName": "SelectiveSyncMetaListRequestCursor",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "SelectiveSyncMetaListRequestCursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Number of results to return per page.",
          "name": "page_size",
          "schema": {
            "generatedName": "SelectiveSyncMetaListRequestPageSize",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "SelectiveSyncMetaListRequestPageSize",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SelectiveSyncMetaListRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "SelectiveSyncMetaListRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SelectiveSyncMetaListResponse",
          "schema": "PaginatedConditionSchemaList",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [
          {
            "name": "Employees that started on or after January 1st, 2022",
            "value": {
              "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
              "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
              "results": [
                {
                  "id": "123e4567-e89b-12d3-a456-426655440000",
                  "common_model": "hris.Employee",
                  "native_name": "Started At",
                  "field_name": "start_date",
                  "is_unique": true,
                  "condition_type": "DATE_TIME",
                  "operators": [
                    {
                      "operator": "GREATER_THAN_OR_EQUAL",
                      "is_unique": true
                    },
                    {
                      "operator": "LESS_THAN_OR_EQUAL",
                      "is_unique": true
                    }
                  ]
                }
              ]
            }
          }
        ],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Get metadata for the conditions available to a linked account.",
      "authed": true,
      "method": "GET",
      "path": "/selective-sync/meta",
      "examples": [
        {
          "name": "Employees that started on or after January 1st, 2022",
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "properties": {
                "next": {
                  "value": {
                    "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "previous": {
                  "value": {
                    "value": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "results": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "123e4567-e89b-12d3-a456-426655440000",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "common_model": {
                          "value": {
                            "value": "hris.Employee",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "native_name": {
                          "value": {
                            "value": "Started At",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "field_name": {
                          "value": {
                            "value": "start_date",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "is_unique": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "condition_type": {
                          "value": "DATE_TIME",
                          "type": "enum"
                        },
                        "operators": {
                          "value": [
                            {
                              "properties": {
                                "operator": {
                                  "value": {
                                    "value": "GREATER_THAN_OR_EQUAL",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "is_unique": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            },
                            {
                              "properties": {
                                "operator": {
                                  "value": {
                                    "value": "LESS_THAN_OR_EQUAL",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "is_unique": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "sync_status_list",
      "tags": [
        "sync-status"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The pagination cursor value.",
          "name": "cursor",
          "schema": {
            "generatedName": "SyncStatusListRequestCursor",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "SyncStatusListRequestCursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Number of results to return per page.",
          "name": "page_size",
          "schema": {
            "generatedName": "SyncStatusListRequestPageSize",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "SyncStatusListRequestPageSize",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SyncStatusListRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "SyncStatusListRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SyncStatusListResponse",
          "schema": "PaginatedSyncStatusList",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Get syncing status. Possible values: `DISABLED`, `DONE`, `FAILED`, `PARTIALLY_SYNCED`, `PAUSED`, `SYNCING`",
      "authed": true,
      "method": "GET",
      "path": "/sync-status",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "properties": {
                "next": {
                  "value": {
                    "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "previous": {
                  "value": {
                    "value": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "results": {
                  "value": [
                    {
                      "properties": {
                        "model_name": {
                          "value": {
                            "value": "Employee",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "model_id": {
                          "value": {
                            "value": "hris.Employee",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "last_sync_start": {
                          "value": {
                            "value": "2021-03-30T19:44:18.695973Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "next_sync_start": {
                          "value": {
                            "value": "2021-03-30T20:44:18.662942Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "status": {
                          "value": "SYNCING",
                          "type": "enum"
                        },
                        "is_initial_sync": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "selective_sync_configurations_usage": {
                          "value": "IN_NEXT_SYNC",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "sync_status_resync_create",
      "tags": [
        "force-resync"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SyncStatusResyncCreateRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "SyncStatusResyncCreateRequest",
      "response": {
        "description": "",
        "schema": {
          "value": {
            "generatedName": "SyncStatusResyncCreateResponseItem",
            "schema": "SyncStatus",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "SyncStatusResyncCreateResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Force re-sync of all models. This is available for all organizations via the dashboard. Force re-sync is also available programmatically via API for monthly, quarterly, and highest sync frequency customers on the Core, Professional, or Enterprise plans. Doing so will consume a sync credit for the relevant linked account.",
      "authed": true,
      "method": "POST",
      "path": "/sync-status/resync",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "model_name": {
                      "value": {
                        "value": "Employee",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "model_id": {
                      "value": {
                        "value": "hris.Employee",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "last_sync_start": {
                      "value": {
                        "value": "2021-03-30T19:44:18.695973Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "next_sync_start": {
                      "value": {
                        "value": "2021-03-30T20:44:18.662942Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "status": {
                      "value": "SYNCING",
                      "type": "enum"
                    },
                    "is_initial_sync": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "selective_sync_configurations_usage": {
                      "value": "IN_NEXT_SYNC",
                      "type": "enum"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "teams_list",
      "tags": [
        "teams"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "If provided, will only return objects created after this datetime.",
          "name": "created_after",
          "schema": {
            "generatedName": "TeamsListRequestCreatedAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "TeamsListRequestCreatedAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return objects created before this datetime.",
          "name": "created_before",
          "schema": {
            "generatedName": "TeamsListRequestCreatedBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "TeamsListRequestCreatedBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The pagination cursor value.",
          "name": "cursor",
          "schema": {
            "generatedName": "TeamsListRequestCursor",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "TeamsListRequestCursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
          "name": "expand",
          "schema": {
            "generatedName": "TeamsListRequestExpand",
            "value": {
              "value": {
                "value": "parent_team",
                "type": "string"
              },
              "generatedName": "TeamsListRequestExpand",
              "groupName": [],
              "type": "literal"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include data that was marked as deleted by third party webhooks.",
          "name": "include_deleted_data",
          "schema": {
            "generatedName": "TeamsListRequestIncludeDeletedData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "TeamsListRequestIncludeDeletedData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
          "name": "include_remote_data",
          "schema": {
            "generatedName": "TeamsListRequestIncludeRemoteData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "TeamsListRequestIncludeRemoteData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, only objects synced by Merge after this date time will be returned.",
          "name": "modified_after",
          "schema": {
            "generatedName": "TeamsListRequestModifiedAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "TeamsListRequestModifiedAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, only objects synced by Merge before this date time will be returned.",
          "name": "modified_before",
          "schema": {
            "generatedName": "TeamsListRequestModifiedBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "TeamsListRequestModifiedBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Number of results to return per page.",
          "name": "page_size",
          "schema": {
            "generatedName": "TeamsListRequestPageSize",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "TeamsListRequestPageSize",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return teams with this parent team.",
          "name": "parent_team_id",
          "schema": {
            "generatedName": "TeamsListRequestParentTeamId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "TeamsListRequestParentTeamId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The API provider's ID for the given object.",
          "name": "remote_id",
          "schema": {
            "generatedName": "TeamsListRequestRemoteId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "TeamsListRequestRemoteId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "TeamsListRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "TeamsListRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "TeamsListResponse",
          "schema": "PaginatedTeamList",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Returns a list of `Team` objects.",
      "authed": true,
      "method": "GET",
      "path": "/teams",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "properties": {
                "next": {
                  "value": {
                    "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "previous": {
                  "value": {
                    "value": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "results": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "13a72919-9fae-4f54-81ca-ddfd8712a1ba",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "remote_id": {
                          "value": {
                            "value": "19202938",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "Engineering",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "parent_team": {
                          "value": {
                            "value": "1b998423-db0a-4037-a4cf-f79c60cb67b3",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "remote_was_deleted": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "modified_at": {
                          "value": {
                            "value": "2021-10-16T00:00:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "field_mappings": {
                          "value": [
                            {
                              "key": {
                                "value": "organization_defined_targets",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "custom_key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "custom_value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            },
                            {
                              "key": {
                                "value": "linked_account_defined_targets",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "custom_key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "custom_value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "remote_data": {
                          "value": [
                            {
                              "properties": {
                                "path": {
                                  "value": {
                                    "value": "/teams",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "data": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "0",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": {
                                            "value": "Varies by platform",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        },
                                        "type": "unknown"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "teams_retrieve",
      "tags": [
        "teams"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "TeamsRetrieveRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
          "name": "expand",
          "schema": {
            "generatedName": "TeamsRetrieveRequestExpand",
            "value": {
              "value": {
                "value": "parent_team",
                "type": "string"
              },
              "generatedName": "TeamsRetrieveRequestExpand",
              "groupName": [],
              "type": "literal"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
          "name": "include_remote_data",
          "schema": {
            "generatedName": "TeamsRetrieveRequestIncludeRemoteData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "TeamsRetrieveRequestIncludeRemoteData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "TeamsRetrieveRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "TeamsRetrieveRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "TeamsRetrieveResponse",
          "schema": "Team",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Returns a `Team` object with the given `id`.",
      "authed": true,
      "method": "GET",
      "path": "/teams/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "13a72919-9fae-4f54-81ca-ddfd8712a1ba",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "remote_id": {
                  "value": {
                    "value": "19202938",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "Engineering",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "parent_team": {
                  "value": {
                    "value": "1b998423-db0a-4037-a4cf-f79c60cb67b3",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "remote_was_deleted": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "modified_at": {
                  "value": {
                    "value": "2021-10-16T00:00:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "field_mappings": {
                  "value": [
                    {
                      "key": {
                        "value": "organization_defined_targets",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "key": {
                                "value": "custom_key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "custom_value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "type": "unknown"
                      }
                    },
                    {
                      "key": {
                        "value": "linked_account_defined_targets",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "key": {
                                "value": "custom_key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "custom_value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "remote_data": {
                  "value": [
                    {
                      "properties": {
                        "path": {
                          "value": {
                            "value": "/teams",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "data": {
                          "value": [
                            {
                              "key": {
                                "value": "0",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "Varies by platform",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "time_off_list",
      "tags": [
        "time-off"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "If provided, will only return time off for this approver.",
          "name": "approver_id",
          "schema": {
            "generatedName": "TimeOffListRequestApproverId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "TimeOffListRequestApproverId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return objects created after this datetime.",
          "name": "created_after",
          "schema": {
            "generatedName": "TimeOffListRequestCreatedAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "TimeOffListRequestCreatedAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return objects created before this datetime.",
          "name": "created_before",
          "schema": {
            "generatedName": "TimeOffListRequestCreatedBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "TimeOffListRequestCreatedBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The pagination cursor value.",
          "name": "cursor",
          "schema": {
            "generatedName": "TimeOffListRequestCursor",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "TimeOffListRequestCursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return time off for this employee.",
          "name": "employee_id",
          "schema": {
            "generatedName": "TimeOffListRequestEmployeeId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "TimeOffListRequestEmployeeId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
          "name": "expand",
          "schema": {
            "generatedName": "TimeOffListRequestExpand",
            "value": {
              "generatedName": "TimeOffListRequestExpand",
              "values": [
                {
                  "generatedName": "approver",
                  "value": "approver",
                  "casing": {}
                },
                {
                  "generatedName": "employee",
                  "value": "employee",
                  "casing": {}
                },
                {
                  "generatedName": "EmployeeApprover",
                  "value": "employee,approver",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include data that was marked as deleted by third party webhooks.",
          "name": "include_deleted_data",
          "schema": {
            "generatedName": "TimeOffListRequestIncludeDeletedData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "TimeOffListRequestIncludeDeletedData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
          "name": "include_remote_data",
          "schema": {
            "generatedName": "TimeOffListRequestIncludeRemoteData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "TimeOffListRequestIncludeRemoteData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, only objects synced by Merge after this date time will be returned.",
          "name": "modified_after",
          "schema": {
            "generatedName": "TimeOffListRequestModifiedAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "TimeOffListRequestModifiedAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, only objects synced by Merge before this date time will be returned.",
          "name": "modified_before",
          "schema": {
            "generatedName": "TimeOffListRequestModifiedBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "TimeOffListRequestModifiedBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Number of results to return per page.",
          "name": "page_size",
          "schema": {
            "generatedName": "TimeOffListRequestPageSize",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "TimeOffListRequestPageSize",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Deprecated. Use show_enum_origins.",
          "name": "remote_fields",
          "schema": {
            "generatedName": "TimeOffListRequestRemoteFields",
            "value": {
              "generatedName": "TimeOffListRequestRemoteFields",
              "values": [
                {
                  "generatedName": "request_type",
                  "value": "request_type",
                  "casing": {}
                },
                {
                  "generatedName": "RequestTypeStatus",
                  "value": "request_type,status",
                  "casing": {}
                },
                {
                  "generatedName": "RequestTypeStatusUnits",
                  "value": "request_type,status,units",
                  "casing": {}
                },
                {
                  "generatedName": "RequestTypeUnits",
                  "value": "request_type,units",
                  "casing": {}
                },
                {
                  "generatedName": "status",
                  "value": "status",
                  "casing": {}
                },
                {
                  "generatedName": "StatusUnits",
                  "value": "status,units",
                  "casing": {}
                },
                {
                  "generatedName": "units",
                  "value": "units",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The API provider's ID for the given object.",
          "name": "remote_id",
          "schema": {
            "generatedName": "TimeOffListRequestRemoteId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "TimeOffListRequestRemoteId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return TimeOff with this request type. Options: ('VACATION', 'SICK', 'PERSONAL', 'JURY_DUTY', 'VOLUNTEER', 'BEREAVEMENT')\n\n* `VACATION` - VACATION\n* `SICK` - SICK\n* `PERSONAL` - PERSONAL\n* `JURY_DUTY` - JURY_DUTY\n* `VOLUNTEER` - VOLUNTEER\n* `BEREAVEMENT` - BEREAVEMENT",
          "name": "request_type",
          "schema": {
            "generatedName": "TimeOffListRequestRequestType",
            "value": {
              "generatedName": "TimeOffListRequestRequestType",
              "values": [
                {
                  "generatedName": "BEREAVEMENT",
                  "value": "BEREAVEMENT",
                  "casing": {}
                },
                {
                  "generatedName": "JURY_DUTY",
                  "value": "JURY_DUTY",
                  "casing": {}
                },
                {
                  "generatedName": "PERSONAL",
                  "value": "PERSONAL",
                  "casing": {}
                },
                {
                  "generatedName": "SICK",
                  "value": "SICK",
                  "casing": {}
                },
                {
                  "generatedName": "VACATION",
                  "value": "VACATION",
                  "casing": {}
                },
                {
                  "generatedName": "VOLUNTEER",
                  "value": "VOLUNTEER",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Which fields should be returned in non-normalized form.",
          "name": "show_enum_origins",
          "schema": {
            "generatedName": "TimeOffListRequestShowEnumOrigins",
            "value": {
              "generatedName": "TimeOffListRequestShowEnumOrigins",
              "values": [
                {
                  "generatedName": "request_type",
                  "value": "request_type",
                  "casing": {}
                },
                {
                  "generatedName": "RequestTypeStatus",
                  "value": "request_type,status",
                  "casing": {}
                },
                {
                  "generatedName": "RequestTypeStatusUnits",
                  "value": "request_type,status,units",
                  "casing": {}
                },
                {
                  "generatedName": "RequestTypeUnits",
                  "value": "request_type,units",
                  "casing": {}
                },
                {
                  "generatedName": "status",
                  "value": "status",
                  "casing": {}
                },
                {
                  "generatedName": "StatusUnits",
                  "value": "status,units",
                  "casing": {}
                },
                {
                  "generatedName": "units",
                  "value": "units",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return TimeOff with this status. Options: ('REQUESTED', 'APPROVED', 'DECLINED', 'CANCELLED', 'DELETED')\n\n* `REQUESTED` - REQUESTED\n* `APPROVED` - APPROVED\n* `DECLINED` - DECLINED\n* `CANCELLED` - CANCELLED\n* `DELETED` - DELETED",
          "name": "status",
          "schema": {
            "generatedName": "TimeOffListRequestStatus",
            "value": {
              "generatedName": "TimeOffListRequestStatus",
              "values": [
                {
                  "generatedName": "APPROVED",
                  "value": "APPROVED",
                  "casing": {}
                },
                {
                  "generatedName": "CANCELLED",
                  "value": "CANCELLED",
                  "casing": {}
                },
                {
                  "generatedName": "DECLINED",
                  "value": "DECLINED",
                  "casing": {}
                },
                {
                  "generatedName": "DELETED",
                  "value": "DELETED",
                  "casing": {}
                },
                {
                  "generatedName": "REQUESTED",
                  "value": "REQUESTED",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "TimeOffListRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "TimeOffListRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "TimeOffListResponse",
          "schema": "PaginatedTimeOffList",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Returns a list of `TimeOff` objects.",
      "authed": true,
      "method": "GET",
      "path": "/time-off",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "properties": {
                "next": {
                  "value": {
                    "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "previous": {
                  "value": {
                    "value": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "results": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "remote_id": {
                          "value": {
                            "value": "19202938",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "employee": {
                          "value": {
                            "value": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "approver": {
                          "value": {
                            "value": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "status": {
                          "value": "REQUESTED",
                          "type": "enum"
                        },
                        "employee_note": {
                          "value": {
                            "value": "Moving into the new apartment Kendall Roy gave me!",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "units": {
                          "value": "HOURS",
                          "type": "enum"
                        },
                        "amount": {
                          "value": {
                            "value": 3,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "request_type": {
                          "value": "VACATION",
                          "type": "enum"
                        },
                        "start_time": {
                          "value": {
                            "value": "2020-11-10T00:00:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "end_time": {
                          "value": {
                            "value": "2020-11-17T00:00:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "remote_was_deleted": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "modified_at": {
                          "value": {
                            "value": "2021-10-16T00:00:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "field_mappings": {
                          "value": [
                            {
                              "key": {
                                "value": "organization_defined_targets",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "custom_key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "custom_value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            },
                            {
                              "key": {
                                "value": "linked_account_defined_targets",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "custom_key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "custom_value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "remote_data": {
                          "value": [
                            {
                              "properties": {
                                "path": {
                                  "value": {
                                    "value": "/leave",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "data": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "0",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": {
                                            "value": "Varies by platform",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        },
                                        "type": "unknown"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "time_off_create",
      "tags": [
        "time-off"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Whether to include debug fields (such as log file links) in the response.",
          "name": "is_debug_mode",
          "schema": {
            "generatedName": "TimeOffCreateRequestIsDebugMode",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "TimeOffCreateRequestIsDebugMode",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether or not third-party updates should be run asynchronously.",
          "name": "run_async",
          "schema": {
            "generatedName": "TimeOffCreateRequestRunAsync",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "TimeOffCreateRequestRunAsync",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "TimeOffCreateRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "TimeOffCreateRequest",
      "request": {
        "schema": {
          "generatedName": "TimeOffCreateRequestBody",
          "schema": "TimeOffEndpointRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/x-www-form-urlencoded",
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "fullExamples": [],
        "additionalProperties": false,
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "TimeOffCreateResponse",
          "schema": "TimeOffResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Creates a `TimeOff` object with the given values.",
      "authed": true,
      "method": "POST",
      "path": "/time-off",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "request": {
            "properties": {
              "model": {
                "properties": {},
                "type": "object"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "model": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "remote_id": {
                      "value": {
                        "value": "19202938",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "employee": {
                      "value": {
                        "value": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "approver": {
                      "value": {
                        "value": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "status": {
                      "value": "REQUESTED",
                      "type": "enum"
                    },
                    "employee_note": {
                      "value": {
                        "value": "Moving into the new apartment Kendall Roy gave me!",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "units": {
                      "value": "HOURS",
                      "type": "enum"
                    },
                    "amount": {
                      "value": {
                        "value": 3,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "request_type": {
                      "value": "VACATION",
                      "type": "enum"
                    },
                    "start_time": {
                      "value": {
                        "value": "2020-11-10T00:00:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "end_time": {
                      "value": {
                        "value": "2020-11-17T00:00:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "remote_was_deleted": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "modified_at": {
                      "value": {
                        "value": "2021-10-16T00:00:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "field_mappings": {
                      "value": [
                        {
                          "key": {
                            "value": "organization_defined_targets",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": [
                                {
                                  "key": {
                                    "value": "custom_key",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": {
                                      "value": "custom_value",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                }
                              ],
                              "type": "map"
                            },
                            "type": "unknown"
                          }
                        },
                        {
                          "key": {
                            "value": "linked_account_defined_targets",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": [
                                {
                                  "key": {
                                    "value": "custom_key",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": {
                                      "value": "custom_value",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                }
                              ],
                              "type": "map"
                            },
                            "type": "unknown"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    "remote_data": {
                      "value": [
                        {
                          "properties": {
                            "path": {
                              "value": {
                                "value": "/leave",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "data": {
                              "value": [
                                {
                                  "key": {
                                    "value": "0",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": {
                                      "value": {
                                        "value": "Varies by platform",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "type": "unknown"
                                  }
                                }
                              ],
                              "type": "map"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "warnings": {
                  "value": [
                    {
                      "properties": {
                        "source": {
                          "properties": {
                            "pointer": {
                              "value": {
                                "value": "pointer",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "title": {
                          "value": {
                            "value": "Unrecognized Field",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "detail": {
                          "value": {
                            "value": "An unrecognized field, age, was passed in with request data.",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "problem_type": {
                          "value": {
                            "value": "UNRECOGNIZED_FIELD",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "errors": {
                  "value": [
                    {
                      "properties": {
                        "source": {
                          "properties": {
                            "pointer": {
                              "value": {
                                "value": "pointer",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "title": {
                          "value": {
                            "value": "Missing Required Field",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "detail": {
                          "value": {
                            "value": "custom_fields is a required field on model.",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "problem_type": {
                          "value": {
                            "value": "MISSING_REQUIRED_FIELD",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "logs": {
                  "value": [
                    {
                      "properties": {
                        "log_id": {
                          "value": {
                            "value": "99433219-8017-4acd-bb3c-ceb23d663832",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "dashboard_view": {
                          "value": {
                            "value": "https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "log_summary": {
                          "properties": {
                            "url": {
                              "value": {
                                "value": "https://harvest.greenhouse.io/v1/candidates/",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "method": {
                              "value": {
                                "value": "POST",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "status_code": {
                              "value": {
                                "value": 200,
                                "type": "int"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "time_off_balances_list",
      "tags": [
        "time-off-balances"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "If provided, will only return objects created after this datetime.",
          "name": "created_after",
          "schema": {
            "generatedName": "TimeOffBalancesListRequestCreatedAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "TimeOffBalancesListRequestCreatedAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return objects created before this datetime.",
          "name": "created_before",
          "schema": {
            "generatedName": "TimeOffBalancesListRequestCreatedBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "TimeOffBalancesListRequestCreatedBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The pagination cursor value.",
          "name": "cursor",
          "schema": {
            "generatedName": "TimeOffBalancesListRequestCursor",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "TimeOffBalancesListRequestCursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return time off balances for this employee.",
          "name": "employee_id",
          "schema": {
            "generatedName": "TimeOffBalancesListRequestEmployeeId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "TimeOffBalancesListRequestEmployeeId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
          "name": "expand",
          "schema": {
            "generatedName": "TimeOffBalancesListRequestExpand",
            "value": {
              "value": {
                "value": "employee",
                "type": "string"
              },
              "generatedName": "TimeOffBalancesListRequestExpand",
              "groupName": [],
              "type": "literal"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include data that was marked as deleted by third party webhooks.",
          "name": "include_deleted_data",
          "schema": {
            "generatedName": "TimeOffBalancesListRequestIncludeDeletedData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "TimeOffBalancesListRequestIncludeDeletedData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
          "name": "include_remote_data",
          "schema": {
            "generatedName": "TimeOffBalancesListRequestIncludeRemoteData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "TimeOffBalancesListRequestIncludeRemoteData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, only objects synced by Merge after this date time will be returned.",
          "name": "modified_after",
          "schema": {
            "generatedName": "TimeOffBalancesListRequestModifiedAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "TimeOffBalancesListRequestModifiedAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, only objects synced by Merge before this date time will be returned.",
          "name": "modified_before",
          "schema": {
            "generatedName": "TimeOffBalancesListRequestModifiedBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "TimeOffBalancesListRequestModifiedBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Number of results to return per page.",
          "name": "page_size",
          "schema": {
            "generatedName": "TimeOffBalancesListRequestPageSize",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "TimeOffBalancesListRequestPageSize",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, will only return TimeOffBalance with this policy type. Options: ('VACATION', 'SICK', 'PERSONAL', 'JURY_DUTY', 'VOLUNTEER', 'BEREAVEMENT')\n\n* `VACATION` - VACATION\n* `SICK` - SICK\n* `PERSONAL` - PERSONAL\n* `JURY_DUTY` - JURY_DUTY\n* `VOLUNTEER` - VOLUNTEER\n* `BEREAVEMENT` - BEREAVEMENT",
          "name": "policy_type",
          "schema": {
            "generatedName": "TimeOffBalancesListRequestPolicyType",
            "value": {
              "generatedName": "TimeOffBalancesListRequestPolicyType",
              "values": [
                {
                  "generatedName": "BEREAVEMENT",
                  "value": "BEREAVEMENT",
                  "casing": {}
                },
                {
                  "generatedName": "JURY_DUTY",
                  "value": "JURY_DUTY",
                  "casing": {}
                },
                {
                  "generatedName": "PERSONAL",
                  "value": "PERSONAL",
                  "casing": {}
                },
                {
                  "generatedName": "SICK",
                  "value": "SICK",
                  "casing": {}
                },
                {
                  "generatedName": "VACATION",
                  "value": "VACATION",
                  "casing": {}
                },
                {
                  "generatedName": "VOLUNTEER",
                  "value": "VOLUNTEER",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Deprecated. Use show_enum_origins.",
          "name": "remote_fields",
          "schema": {
            "generatedName": "TimeOffBalancesListRequestRemoteFields",
            "value": {
              "value": {
                "value": "policy_type",
                "type": "string"
              },
              "generatedName": "TimeOffBalancesListRequestRemoteFields",
              "groupName": [],
              "type": "literal"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The API provider's ID for the given object.",
          "name": "remote_id",
          "schema": {
            "generatedName": "TimeOffBalancesListRequestRemoteId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "TimeOffBalancesListRequestRemoteId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Which fields should be returned in non-normalized form.",
          "name": "show_enum_origins",
          "schema": {
            "generatedName": "TimeOffBalancesListRequestShowEnumOrigins",
            "value": {
              "value": {
                "value": "policy_type",
                "type": "string"
              },
              "generatedName": "TimeOffBalancesListRequestShowEnumOrigins",
              "groupName": [],
              "type": "literal"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "TimeOffBalancesListRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "TimeOffBalancesListRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "TimeOffBalancesListResponse",
          "schema": "PaginatedTimeOffBalanceList",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Returns a list of `TimeOffBalance` objects.",
      "authed": true,
      "method": "GET",
      "path": "/time-off-balances",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "properties": {
                "next": {
                  "value": {
                    "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "previous": {
                  "value": {
                    "value": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "results": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "remote_id": {
                          "value": {
                            "value": "19202938",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "employee": {
                          "value": {
                            "value": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "balance": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "used": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "policy_type": {
                          "value": "VACATION",
                          "type": "enum"
                        },
                        "remote_was_deleted": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "modified_at": {
                          "value": {
                            "value": "2021-10-16T00:00:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "field_mappings": {
                          "value": [
                            {
                              "key": {
                                "value": "organization_defined_targets",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "custom_key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "custom_value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            },
                            {
                              "key": {
                                "value": "linked_account_defined_targets",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "custom_key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "custom_value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "remote_data": {
                          "value": [
                            {
                              "properties": {
                                "path": {
                                  "value": {
                                    "value": "/leave",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "data": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "0",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": {
                                            "value": "Varies by platform",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        },
                                        "type": "unknown"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "time_off_balances_retrieve",
      "tags": [
        "time-off-balances"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "TimeOffBalancesRetrieveRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
          "name": "expand",
          "schema": {
            "generatedName": "TimeOffBalancesRetrieveRequestExpand",
            "value": {
              "value": {
                "value": "employee",
                "type": "string"
              },
              "generatedName": "TimeOffBalancesRetrieveRequestExpand",
              "groupName": [],
              "type": "literal"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
          "name": "include_remote_data",
          "schema": {
            "generatedName": "TimeOffBalancesRetrieveRequestIncludeRemoteData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "TimeOffBalancesRetrieveRequestIncludeRemoteData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Deprecated. Use show_enum_origins.",
          "name": "remote_fields",
          "schema": {
            "generatedName": "TimeOffBalancesRetrieveRequestRemoteFields",
            "value": {
              "value": {
                "value": "policy_type",
                "type": "string"
              },
              "generatedName": "TimeOffBalancesRetrieveRequestRemoteFields",
              "groupName": [],
              "type": "literal"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Which fields should be returned in non-normalized form.",
          "name": "show_enum_origins",
          "schema": {
            "generatedName": "TimeOffBalancesRetrieveRequestShowEnumOrigins",
            "value": {
              "value": {
                "value": "policy_type",
                "type": "string"
              },
              "generatedName": "TimeOffBalancesRetrieveRequestShowEnumOrigins",
              "groupName": [],
              "type": "literal"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "TimeOffBalancesRetrieveRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "TimeOffBalancesRetrieveRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "TimeOffBalancesRetrieveResponse",
          "schema": "TimeOffBalance",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Returns a `TimeOffBalance` object with the given `id`.",
      "authed": true,
      "method": "GET",
      "path": "/time-off-balances/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "remote_id": {
                  "value": {
                    "value": "19202938",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "employee": {
                  "value": {
                    "value": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "balance": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "used": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "policy_type": {
                  "value": "VACATION",
                  "type": "enum"
                },
                "remote_was_deleted": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "modified_at": {
                  "value": {
                    "value": "2021-10-16T00:00:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "field_mappings": {
                  "value": [
                    {
                      "key": {
                        "value": "organization_defined_targets",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "key": {
                                "value": "custom_key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "custom_value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "type": "unknown"
                      }
                    },
                    {
                      "key": {
                        "value": "linked_account_defined_targets",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "key": {
                                "value": "custom_key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "custom_value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "remote_data": {
                  "value": [
                    {
                      "properties": {
                        "path": {
                          "value": {
                            "value": "/leave",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "data": {
                          "value": [
                            {
                              "key": {
                                "value": "0",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "Varies by platform",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "time_off_retrieve",
      "tags": [
        "time-off"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "TimeOffRetrieveRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
          "name": "expand",
          "schema": {
            "generatedName": "TimeOffRetrieveRequestExpand",
            "value": {
              "generatedName": "TimeOffRetrieveRequestExpand",
              "values": [
                {
                  "generatedName": "approver",
                  "value": "approver",
                  "casing": {}
                },
                {
                  "generatedName": "employee",
                  "value": "employee",
                  "casing": {}
                },
                {
                  "generatedName": "EmployeeApprover",
                  "value": "employee,approver",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
          "name": "include_remote_data",
          "schema": {
            "generatedName": "TimeOffRetrieveRequestIncludeRemoteData",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "TimeOffRetrieveRequestIncludeRemoteData",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Deprecated. Use show_enum_origins.",
          "name": "remote_fields",
          "schema": {
            "generatedName": "TimeOffRetrieveRequestRemoteFields",
            "value": {
              "generatedName": "TimeOffRetrieveRequestRemoteFields",
              "values": [
                {
                  "generatedName": "request_type",
                  "value": "request_type",
                  "casing": {}
                },
                {
                  "generatedName": "RequestTypeStatus",
                  "value": "request_type,status",
                  "casing": {}
                },
                {
                  "generatedName": "RequestTypeStatusUnits",
                  "value": "request_type,status,units",
                  "casing": {}
                },
                {
                  "generatedName": "RequestTypeUnits",
                  "value": "request_type,units",
                  "casing": {}
                },
                {
                  "generatedName": "status",
                  "value": "status",
                  "casing": {}
                },
                {
                  "generatedName": "StatusUnits",
                  "value": "status,units",
                  "casing": {}
                },
                {
                  "generatedName": "units",
                  "value": "units",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Which fields should be returned in non-normalized form.",
          "name": "show_enum_origins",
          "schema": {
            "generatedName": "TimeOffRetrieveRequestShowEnumOrigins",
            "value": {
              "generatedName": "TimeOffRetrieveRequestShowEnumOrigins",
              "values": [
                {
                  "generatedName": "request_type",
                  "value": "request_type",
                  "casing": {}
                },
                {
                  "generatedName": "RequestTypeStatus",
                  "value": "request_type,status",
                  "casing": {}
                },
                {
                  "generatedName": "RequestTypeStatusUnits",
                  "value": "request_type,status,units",
                  "casing": {}
                },
                {
                  "generatedName": "RequestTypeUnits",
                  "value": "request_type,units",
                  "casing": {}
                },
                {
                  "generatedName": "status",
                  "value": "status",
                  "casing": {}
                },
                {
                  "generatedName": "StatusUnits",
                  "value": "status,units",
                  "casing": {}
                },
                {
                  "generatedName": "units",
                  "value": "units",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "TimeOffRetrieveRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "TimeOffRetrieveRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "TimeOffRetrieveResponse",
          "schema": "TimeOff",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Returns a `TimeOff` object with the given `id`.",
      "authed": true,
      "method": "GET",
      "path": "/time-off/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "remote_id": {
                  "value": {
                    "value": "19202938",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "employee": {
                  "value": {
                    "value": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "approver": {
                  "value": {
                    "value": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "status": {
                  "value": "REQUESTED",
                  "type": "enum"
                },
                "employee_note": {
                  "value": {
                    "value": "Moving into the new apartment Kendall Roy gave me!",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "units": {
                  "value": "HOURS",
                  "type": "enum"
                },
                "amount": {
                  "value": {
                    "value": 3,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "request_type": {
                  "value": "VACATION",
                  "type": "enum"
                },
                "start_time": {
                  "value": {
                    "value": "2020-11-10T00:00:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "end_time": {
                  "value": {
                    "value": "2020-11-17T00:00:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "remote_was_deleted": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "modified_at": {
                  "value": {
                    "value": "2021-10-16T00:00:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "field_mappings": {
                  "value": [
                    {
                      "key": {
                        "value": "organization_defined_targets",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "key": {
                                "value": "custom_key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "custom_value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "type": "unknown"
                      }
                    },
                    {
                      "key": {
                        "value": "linked_account_defined_targets",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": [
                            {
                              "key": {
                                "value": "custom_key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "custom_value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "remote_data": {
                  "value": [
                    {
                      "properties": {
                        "path": {
                          "value": {
                            "value": "/leave",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "data": {
                          "value": [
                            {
                              "key": {
                                "value": "0",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "Varies by platform",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "time_off_meta_post_retrieve",
      "tags": [
        "time-off"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "TimeOffMetaPostRetrieveRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "TimeOffMetaPostRetrieveRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "TimeOffMetaPostRetrieveResponse",
          "schema": "MetaResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Returns metadata for `TimeOff` POSTs.",
      "authed": true,
      "method": "GET",
      "path": "/time-off/meta/post",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "properties": {
                "request_schema": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "remote_field_classes": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "status": {
                  "properties": {
                    "linked_account_status": {
                      "value": {
                        "value": "linked_account_status",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "can_make_request": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "has_conditional_params": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "has_required_linked_account_params": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "webhook_receivers_list",
      "tags": [
        "webhook-receivers"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "WebhookReceiversListRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "WebhookReceiversListRequest",
      "response": {
        "description": "",
        "schema": {
          "value": {
            "generatedName": "WebhookReceiversListResponseItem",
            "schema": "WebhookReceiver",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "WebhookReceiversListResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Returns a list of `WebhookReceiver` objects.",
      "authed": true,
      "method": "GET",
      "path": "/webhook-receivers",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "event": {
                      "value": {
                        "value": "event",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "is_active": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "key": {
                      "value": {
                        "value": "key",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "webhook_receivers_create",
      "tags": [
        "webhook-receivers"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [
        {
          "description": "Token identifying the end user.",
          "name": "X-Account-Token",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "WebhookReceiversCreateRequestXAccountToken",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "WebhookReceiversCreateRequest",
      "request": {
        "schema": {
          "generatedName": "WebhookReceiversCreateRequestBody",
          "schema": "WebhookReceiverRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/x-www-form-urlencoded",
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "fullExamples": [],
        "additionalProperties": false,
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "WebhookReceiversCreateResponse",
          "schema": "WebhookReceiver",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Creates a `WebhookReceiver` object with the given values.",
      "authed": true,
      "method": "POST",
      "path": "/webhook-receivers",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": "X-Account-Token",
              "value": {
                "value": {
                  "value": "X-Account-Token",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "request": {
            "properties": {
              "event": {
                "value": {
                  "value": "event",
                  "type": "string"
                },
                "type": "primitive"
              },
              "is_active": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "event": {
                  "value": {
                    "value": "event",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "is_active": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "key": {
                  "value": {
                    "value": "key",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    }
  ],
  "webhooks": [],
  "channel": [],
  "groupedSchemas": {
    "rootSchemas": {
      "AccountDetails": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "accountDetailsId",
            "key": "id",
            "schema": {
              "generatedName": "accountDetailsId",
              "value": {
                "schema": {
                  "format": "uuid",
                  "example": "0496d4c2-42e6-4072-80b3-7b69bfdc76fd",
                  "type": "string"
                },
                "generatedName": "AccountDetailsId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "accountDetailsIntegration",
            "key": "integration",
            "schema": {
              "generatedName": "accountDetailsIntegration",
              "value": {
                "schema": {
                  "example": "BambooHR",
                  "type": "string"
                },
                "generatedName": "AccountDetailsIntegration",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "accountDetailsIntegrationSlug",
            "key": "integration_slug",
            "schema": {
              "generatedName": "accountDetailsIntegrationSlug",
              "value": {
                "schema": {
                  "example": "bamboohr",
                  "type": "string"
                },
                "generatedName": "AccountDetailsIntegrationSlug",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "accountDetailsCategory",
            "key": "category",
            "schema": {
              "generatedName": "accountDetailsCategory",
              "value": {
                "generatedName": "AccountDetailsCategory",
                "value": {
                  "generatedName": "AccountDetailsCategory",
                  "schema": "CategoryEnum",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "accountDetailsEndUserOriginId",
            "key": "end_user_origin_id",
            "schema": {
              "generatedName": "accountDetailsEndUserOriginId",
              "value": {
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "AccountDetailsEndUserOriginId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "accountDetailsEndUserOrganizationName",
            "key": "end_user_organization_name",
            "schema": {
              "generatedName": "accountDetailsEndUserOrganizationName",
              "value": {
                "schema": {
                  "example": "Waystar Royco",
                  "type": "string"
                },
                "generatedName": "AccountDetailsEndUserOrganizationName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "accountDetailsEndUserEmailAddress",
            "key": "end_user_email_address",
            "schema": {
              "generatedName": "accountDetailsEndUserEmailAddress",
              "value": {
                "schema": {
                  "format": "email",
                  "example": "kendall.roy@waystar-royco.com",
                  "type": "string"
                },
                "generatedName": "AccountDetailsEndUserEmailAddress",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "accountDetailsStatus",
            "key": "status",
            "schema": {
              "generatedName": "accountDetailsStatus",
              "value": {
                "schema": {
                  "example": "COMPLETE",
                  "type": "string"
                },
                "generatedName": "AccountDetailsStatus",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "accountDetailsWebhookListenerUrl",
            "key": "webhook_listener_url",
            "schema": {
              "generatedName": "accountDetailsWebhookListenerUrl",
              "value": {
                "schema": {
                  "format": "uri",
                  "example": "https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4",
                  "type": "string"
                },
                "generatedName": "AccountDetailsWebhookListenerUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "accountDetailsIsDuplicate",
            "key": "is_duplicate",
            "schema": {
              "generatedName": "accountDetailsIsDuplicate",
              "value": {
                "generatedName": "AccountDetailsIsDuplicate",
                "description": "Whether a Production Linked Account's credentials match another existing Production Linked Account. This field is `null` for Test Linked Accounts, incomplete Production Linked Accounts, and ignored duplicate Production Linked Account sets.",
                "value": {
                  "description": "Whether a Production Linked Account's credentials match another existing Production Linked Account. This field is `null` for Test Linked Accounts, incomplete Production Linked Accounts, and ignored duplicate Production Linked Account sets.",
                  "schema": {
                    "example": true,
                    "type": "boolean"
                  },
                  "generatedName": "AccountDetailsIsDuplicate",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AccountDetails",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "AccountDetailsAndActions": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "accountDetailsAndActionsId",
            "key": "id",
            "schema": {
              "schema": {
                "example": "e59b1821-f85c-4e28-a6b3-1804156f3563",
                "type": "string"
              },
              "generatedName": "AccountDetailsAndActionsId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "accountDetailsAndActionsCategory",
            "key": "category",
            "schema": {
              "generatedName": "accountDetailsAndActionsCategory",
              "value": {
                "generatedName": "AccountDetailsAndActionsCategory",
                "schema": "CategoryEnum",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "accountDetailsAndActionsStatus",
            "key": "status",
            "schema": {
              "generatedName": "AccountDetailsAndActionsStatus",
              "schema": "AccountDetailsAndActionsStatusEnum",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "accountDetailsAndActionsStatusDetail",
            "key": "status_detail",
            "schema": {
              "generatedName": "accountDetailsAndActionsStatusDetail",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AccountDetailsAndActionsStatusDetail",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "accountDetailsAndActionsEndUserOriginId",
            "key": "end_user_origin_id",
            "schema": {
              "generatedName": "accountDetailsAndActionsEndUserOriginId",
              "value": {
                "schema": {
                  "example": "3ac95cde-6c7f-4eef-afec-be710b42308d",
                  "type": "string"
                },
                "generatedName": "AccountDetailsAndActionsEndUserOriginId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "accountDetailsAndActionsEndUserOrganizationName",
            "key": "end_user_organization_name",
            "schema": {
              "schema": {
                "example": "Foo Bar, LLC",
                "type": "string"
              },
              "generatedName": "AccountDetailsAndActionsEndUserOrganizationName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "accountDetailsAndActionsEndUserEmailAddress",
            "key": "end_user_email_address",
            "schema": {
              "schema": {
                "example": "hradmin@foobar.dev",
                "type": "string"
              },
              "generatedName": "AccountDetailsAndActionsEndUserEmailAddress",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "accountDetailsAndActionsWebhookListenerUrl",
            "key": "webhook_listener_url",
            "schema": {
              "schema": {
                "example": "https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4",
                "type": "string"
              },
              "generatedName": "AccountDetailsAndActionsWebhookListenerUrl",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "accountDetailsAndActionsIsDuplicate",
            "key": "is_duplicate",
            "schema": {
              "generatedName": "accountDetailsAndActionsIsDuplicate",
              "value": {
                "generatedName": "AccountDetailsAndActionsIsDuplicate",
                "description": "Whether a Production Linked Account's credentials match another existing Production Linked Account. This field is `null` for Test Linked Accounts, incomplete Production Linked Accounts, and ignored duplicate Production Linked Account sets.",
                "value": {
                  "description": "Whether a Production Linked Account's credentials match another existing Production Linked Account. This field is `null` for Test Linked Accounts, incomplete Production Linked Accounts, and ignored duplicate Production Linked Account sets.",
                  "schema": {
                    "example": true,
                    "type": "boolean"
                  },
                  "generatedName": "AccountDetailsAndActionsIsDuplicate",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "accountDetailsAndActionsIntegration",
            "key": "integration",
            "schema": {
              "generatedName": "accountDetailsAndActionsIntegration",
              "value": {
                "generatedName": "AccountDetailsAndActionsIntegration",
                "schema": "AccountDetailsAndActionsIntegration",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "# The LinkedAccount Object\n### Description\nThe `LinkedAccount` object is used to represent an end user's link with a specific integration.\n\n### Usage Example\nView a list of your organization's `LinkedAccount` objects.",
        "generatedName": "AccountDetailsAndActions",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "AccountDetailsAndActionsIntegration": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "accountDetailsAndActionsIntegrationName",
            "key": "name",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "AccountDetailsAndActionsIntegrationName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "accountDetailsAndActionsIntegrationCategories",
            "key": "categories",
            "schema": {
              "value": {
                "generatedName": "AccountDetailsAndActionsIntegrationCategoriesItem",
                "schema": "CategoriesEnum",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "AccountDetailsAndActionsIntegrationCategories",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "accountDetailsAndActionsIntegrationImage",
            "key": "image",
            "schema": {
              "generatedName": "accountDetailsAndActionsIntegrationImage",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AccountDetailsAndActionsIntegrationImage",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "accountDetailsAndActionsIntegrationSquareImage",
            "key": "square_image",
            "schema": {
              "generatedName": "accountDetailsAndActionsIntegrationSquareImage",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AccountDetailsAndActionsIntegrationSquareImage",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "accountDetailsAndActionsIntegrationColor",
            "key": "color",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "AccountDetailsAndActionsIntegrationColor",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "accountDetailsAndActionsIntegrationSlug",
            "key": "slug",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "AccountDetailsAndActionsIntegrationSlug",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "accountDetailsAndActionsIntegrationPassthroughAvailable",
            "key": "passthrough_available",
            "schema": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "AccountDetailsAndActionsIntegrationPassthroughAvailable",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "accountDetailsAndActionsIntegrationAvailableModelOperations",
            "key": "available_model_operations",
            "schema": {
              "generatedName": "accountDetailsAndActionsIntegrationAvailableModelOperations",
              "value": {
                "value": {
                  "generatedName": "AccountDetailsAndActionsIntegrationAvailableModelOperationsItem",
                  "schema": "ModelOperation",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AccountDetailsAndActionsIntegrationAvailableModelOperations",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AccountDetailsAndActionsIntegration",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "AccountDetailsAndActionsStatusEnum": {
        "description": "* `COMPLETE` - COMPLETE\n* `INCOMPLETE` - INCOMPLETE\n* `RELINK_NEEDED` - RELINK_NEEDED",
        "generatedName": "AccountDetailsAndActionsStatusEnum",
        "values": [
          {
            "generatedName": "COMPLETE",
            "value": "COMPLETE",
            "casing": {}
          },
          {
            "generatedName": "INCOMPLETE",
            "value": "INCOMPLETE",
            "casing": {}
          },
          {
            "generatedName": "RELINK_NEEDED",
            "value": "RELINK_NEEDED",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "AccountIntegration": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "accountIntegrationName",
            "key": "name",
            "schema": {
              "description": "Company name.",
              "schema": {
                "type": "string"
              },
              "generatedName": "AccountIntegrationName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "accountIntegrationCategories",
            "key": "categories",
            "schema": {
              "generatedName": "accountIntegrationCategories",
              "value": {
                "description": "Category or categories this integration belongs to. Multiple categories should be comma separated, i.e. [ats, hris].",
                "value": {
                  "generatedName": "AccountIntegrationCategoriesItem",
                  "schema": "CategoriesEnum",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AccountIntegrationCategories",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "accountIntegrationImage",
            "key": "image",
            "schema": {
              "generatedName": "accountIntegrationImage",
              "value": {
                "generatedName": "AccountIntegrationImage",
                "description": "Company logo in rectangular shape. <b>Upload an image with a clear background.</b>",
                "value": {
                  "description": "Company logo in rectangular shape. <b>Upload an image with a clear background.</b>",
                  "schema": {
                    "format": "uri",
                    "type": "string"
                  },
                  "generatedName": "AccountIntegrationImage",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "accountIntegrationSquareImage",
            "key": "square_image",
            "schema": {
              "generatedName": "accountIntegrationSquareImage",
              "value": {
                "generatedName": "AccountIntegrationSquareImage",
                "description": "Company logo in square shape. <b>Upload an image with a white background.</b>",
                "value": {
                  "description": "Company logo in square shape. <b>Upload an image with a white background.</b>",
                  "schema": {
                    "format": "uri",
                    "type": "string"
                  },
                  "generatedName": "AccountIntegrationSquareImage",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "accountIntegrationColor",
            "key": "color",
            "schema": {
              "generatedName": "accountIntegrationColor",
              "value": {
                "description": "The color of this integration used for buttons and text throughout the app and landing pages. <b>Choose a darker, saturated color.</b>",
                "schema": {
                  "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
                  "maxLength": 18,
                  "type": "string"
                },
                "generatedName": "AccountIntegrationColor",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "accountIntegrationSlug",
            "key": "slug",
            "schema": {
              "generatedName": "accountIntegrationSlug",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AccountIntegrationSlug",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "accountIntegrationIsInBeta",
            "key": "is_in_beta",
            "schema": {
              "generatedName": "accountIntegrationIsInBeta",
              "value": {
                "description": "If checked, this integration will not appear in the linking flow, and will appear elsewhere with a Beta tag.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "AccountIntegrationIsInBeta",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "accountIntegrationApiEndpointsToDocumentationUrls",
            "key": "api_endpoints_to_documentation_urls",
            "schema": {
              "generatedName": "accountIntegrationApiEndpointsToDocumentationUrls",
              "value": {
                "description": "Mapping of API endpoints to documentation urls for support. Example: {'GET': [['/common-model-scopes', 'https://docs.merge.dev/accounting/common-model-scopes/#common_model_scopes_retrieve'],['/common-model-actions', 'https://docs.merge.dev/accounting/common-model-actions/#common_model_actions_retrieve']], 'POST': []}",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AccountIntegrationApiEndpointsToDocumentationUrlsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "AccountIntegrationApiEndpointsToDocumentationUrlsValue",
                  "type": "unknown"
                },
                "generatedName": "AccountIntegrationApiEndpointsToDocumentationUrls",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AccountIntegration",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "AccountToken": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "accountTokenAccountToken",
            "key": "account_token",
            "schema": {
              "schema": {
                "example": "T9klMDQrcHdm9jrtHuOS2Nf06BIHwMNjpPXPMB",
                "type": "string"
              },
              "generatedName": "AccountTokenAccountToken",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "accountTokenIntegration",
            "key": "integration",
            "schema": {
              "generatedName": "AccountTokenIntegration",
              "schema": "AccountIntegration",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AccountToken",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "AccountTypeEnum": {
        "description": "* `SAVINGS` - SAVINGS\n* `CHECKING` - CHECKING",
        "generatedName": "AccountTypeEnum",
        "values": [
          {
            "generatedName": "SAVINGS",
            "value": "SAVINGS",
            "casing": {}
          },
          {
            "generatedName": "CHECKING",
            "value": "CHECKING",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "AvailableActions": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "availableActionsIntegration",
            "key": "integration",
            "schema": {
              "generatedName": "AvailableActionsIntegration",
              "schema": "AccountIntegration",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "availableActionsPassthroughAvailable",
            "key": "passthrough_available",
            "schema": {
              "schema": {
                "example": true,
                "type": "boolean"
              },
              "generatedName": "AvailableActionsPassthroughAvailable",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "availableActionsAvailableModelOperations",
            "key": "available_model_operations",
            "schema": {
              "generatedName": "availableActionsAvailableModelOperations",
              "value": {
                "value": {
                  "generatedName": "AvailableActionsAvailableModelOperationsItem",
                  "schema": "ModelOperation",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AvailableActionsAvailableModelOperations",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "# The AvailableActions Object\n### Description\nThe `Activity` object is used to see all available model/operation combinations for an integration.\n\n### Usage Example\nFetch all the actions available for the `Zenefits` integration.",
        "generatedName": "AvailableActions",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "BankInfo": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "bankInfoId",
            "key": "id",
            "schema": {
              "generatedName": "bankInfoId",
              "value": {
                "schema": {
                  "format": "uuid",
                  "example": "fd1e0fb5-8f92-4ec9-9f32-179cf732867d",
                  "type": "string"
                },
                "generatedName": "BankInfoId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "bankInfoRemoteId",
            "key": "remote_id",
            "schema": {
              "generatedName": "bankInfoRemoteId",
              "value": {
                "generatedName": "BankInfoRemoteId",
                "description": "The third-party API ID of the matching object.",
                "value": {
                  "description": "The third-party API ID of the matching object.",
                  "schema": {
                    "example": "123234",
                    "type": "string"
                  },
                  "generatedName": "BankInfoRemoteId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bankInfoEmployee",
            "key": "employee",
            "schema": {
              "generatedName": "bankInfoEmployee",
              "value": {
                "generatedName": "BankInfoEmployee",
                "description": "The employee with this bank account.",
                "value": {
                  "description": "The employee with this bank account.",
                  "schema": {
                    "format": "uuid",
                    "example": "a3617eb4-dfe3-426f-921e-a65fc1661e10",
                    "type": "string"
                  },
                  "generatedName": "BankInfoEmployee",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bankInfoAccountNumber",
            "key": "account_number",
            "schema": {
              "generatedName": "bankInfoAccountNumber",
              "value": {
                "generatedName": "BankInfoAccountNumber",
                "description": "The account number.",
                "value": {
                  "description": "The account number.",
                  "schema": {
                    "maxLength": 100,
                    "example": "439291590",
                    "type": "string"
                  },
                  "generatedName": "BankInfoAccountNumber",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bankInfoRoutingNumber",
            "key": "routing_number",
            "schema": {
              "generatedName": "bankInfoRoutingNumber",
              "value": {
                "generatedName": "BankInfoRoutingNumber",
                "description": "The routing number.",
                "value": {
                  "description": "The routing number.",
                  "schema": {
                    "example": "089690059",
                    "type": "string"
                  },
                  "generatedName": "BankInfoRoutingNumber",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bankInfoBankName",
            "key": "bank_name",
            "schema": {
              "generatedName": "bankInfoBankName",
              "value": {
                "generatedName": "BankInfoBankName",
                "description": "The bank name.",
                "value": {
                  "description": "The bank name.",
                  "schema": {
                    "example": "Chase",
                    "type": "string"
                  },
                  "generatedName": "BankInfoBankName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bankInfoAccountType",
            "key": "account_type",
            "schema": {
              "generatedName": "bankInfoAccountType",
              "value": {
                "generatedName": "BankInfoAccountType",
                "description": "The bank account type\n\n* `SAVINGS` - SAVINGS\n* `CHECKING` - CHECKING",
                "value": {
                  "generatedName": "BankInfoAccountType",
                  "schema": "AccountTypeEnum",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bankInfoRemoteCreatedAt",
            "key": "remote_created_at",
            "schema": {
              "generatedName": "bankInfoRemoteCreatedAt",
              "value": {
                "generatedName": "BankInfoRemoteCreatedAt",
                "description": "When the matching bank object was created in the third party system.",
                "value": {
                  "description": "When the matching bank object was created in the third party system.",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "BankInfoRemoteCreatedAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bankInfoRemoteWasDeleted",
            "key": "remote_was_deleted",
            "schema": {
              "generatedName": "bankInfoRemoteWasDeleted",
              "value": {
                "description": "Indicates whether or not this object has been deleted by third party webhooks.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "BankInfoRemoteWasDeleted",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "bankInfoModifiedAt",
            "key": "modified_at",
            "schema": {
              "generatedName": "bankInfoModifiedAt",
              "value": {
                "description": "This is the datetime that this object was last updated by Merge",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "BankInfoModifiedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "bankInfoFieldMappings",
            "key": "field_mappings",
            "schema": {
              "generatedName": "bankInfoFieldMappings",
              "value": {
                "generatedName": "BankInfoFieldMappings",
                "value": {
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BankInfoFieldMappingsKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "BankInfoFieldMappingsValue",
                    "type": "unknown"
                  },
                  "generatedName": "BankInfoFieldMappings",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "bankInfoRemoteData",
            "key": "remote_data",
            "schema": {
              "generatedName": "bankInfoRemoteData",
              "value": {
                "generatedName": "BankInfoRemoteData",
                "value": {
                  "value": {
                    "generatedName": "BankInfoRemoteDataItem",
                    "schema": "RemoteData",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "BankInfoRemoteData",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "# The BankInfo Object\n### Description\nThe `BankInfo` object is used to represent the Bank Account information for an Employee.\n\n### Usage Example\nFetch from the `LIST BankInfo` endpoint and filter by `ID` to show all bank information.",
        "generatedName": "BankInfo",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Benefit": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "benefitId",
            "key": "id",
            "schema": {
              "generatedName": "benefitId",
              "value": {
                "schema": {
                  "format": "uuid",
                  "example": "3fe5ae7a-f1ba-4529-b7af-84e86dc6d232",
                  "type": "string"
                },
                "generatedName": "BenefitId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "benefitRemoteId",
            "key": "remote_id",
            "schema": {
              "generatedName": "benefitRemoteId",
              "value": {
                "generatedName": "BenefitRemoteId",
                "description": "The third-party API ID of the matching object.",
                "value": {
                  "description": "The third-party API ID of the matching object.",
                  "schema": {
                    "example": "19202938",
                    "type": "string"
                  },
                  "generatedName": "BenefitRemoteId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "benefitEmployee",
            "key": "employee",
            "schema": {
              "generatedName": "benefitEmployee",
              "value": {
                "generatedName": "BenefitEmployee",
                "description": "The employee on the plan.",
                "value": {
                  "description": "The employee on the plan.",
                  "schema": {
                    "format": "uuid",
                    "example": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                    "type": "string"
                  },
                  "generatedName": "BenefitEmployee",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "benefitProviderName",
            "key": "provider_name",
            "schema": {
              "generatedName": "benefitProviderName",
              "value": {
                "generatedName": "BenefitProviderName",
                "description": "The name of the benefit provider.",
                "value": {
                  "description": "The name of the benefit provider.",
                  "schema": {
                    "example": "Blue Shield of California",
                    "type": "string"
                  },
                  "generatedName": "BenefitProviderName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "benefitBenefitPlanType",
            "key": "benefit_plan_type",
            "schema": {
              "generatedName": "benefitBenefitPlanType",
              "value": {
                "generatedName": "BenefitBenefitPlanType",
                "description": "The type of benefit plan",
                "value": {
                  "description": "The type of benefit plan",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "BenefitBenefitPlanType",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "benefitEmployeeContribution",
            "key": "employee_contribution",
            "schema": {
              "generatedName": "benefitEmployeeContribution",
              "value": {
                "generatedName": "BenefitEmployeeContribution",
                "description": "The employee's contribution.",
                "value": {
                  "description": "The employee's contribution.",
                  "schema": {
                    "example": 23.65,
                    "type": "double"
                  },
                  "generatedName": "BenefitEmployeeContribution",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "benefitCompanyContribution",
            "key": "company_contribution",
            "schema": {
              "generatedName": "benefitCompanyContribution",
              "value": {
                "generatedName": "BenefitCompanyContribution",
                "description": "The company's contribution.",
                "value": {
                  "description": "The company's contribution.",
                  "schema": {
                    "example": 150,
                    "type": "double"
                  },
                  "generatedName": "BenefitCompanyContribution",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "benefitStartDate",
            "key": "start_date",
            "schema": {
              "generatedName": "benefitStartDate",
              "value": {
                "generatedName": "BenefitStartDate",
                "description": "The day and time the benefit started.",
                "value": {
                  "description": "The day and time the benefit started.",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "BenefitStartDate",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "benefitEndDate",
            "key": "end_date",
            "schema": {
              "generatedName": "benefitEndDate",
              "value": {
                "generatedName": "BenefitEndDate",
                "description": "The day and time the benefit ended.",
                "value": {
                  "description": "The day and time the benefit ended.",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "BenefitEndDate",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "benefitRemoteWasDeleted",
            "key": "remote_was_deleted",
            "schema": {
              "generatedName": "benefitRemoteWasDeleted",
              "value": {
                "description": "Indicates whether or not this object has been deleted by third party webhooks.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "BenefitRemoteWasDeleted",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "benefitModifiedAt",
            "key": "modified_at",
            "schema": {
              "generatedName": "benefitModifiedAt",
              "value": {
                "description": "This is the datetime that this object was last updated by Merge",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "BenefitModifiedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "benefitFieldMappings",
            "key": "field_mappings",
            "schema": {
              "generatedName": "benefitFieldMappings",
              "value": {
                "generatedName": "BenefitFieldMappings",
                "value": {
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BenefitFieldMappingsKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "BenefitFieldMappingsValue",
                    "type": "unknown"
                  },
                  "generatedName": "BenefitFieldMappings",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "benefitRemoteData",
            "key": "remote_data",
            "schema": {
              "generatedName": "benefitRemoteData",
              "value": {
                "generatedName": "BenefitRemoteData",
                "value": {
                  "value": {
                    "generatedName": "BenefitRemoteDataItem",
                    "schema": "RemoteData",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "BenefitRemoteData",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "# The Benefit Object\n### Description\nThe `Benefit` object is used to represent a benefit that an employee has enrolled in.\n\n### Usage Example\nFetch from the `LIST Benefits` endpoint and filter by `ID` to show all benefits.",
        "generatedName": "Benefit",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CategoriesEnum": {
        "description": "* `hris` - hris\n* `ats` - ats\n* `accounting` - accounting\n* `ticketing` - ticketing\n* `crm` - crm\n* `mktg` - mktg\n* `filestorage` - filestorage",
        "generatedName": "CategoriesEnum",
        "values": [
          {
            "generatedName": "hris",
            "value": "hris",
            "casing": {}
          },
          {
            "generatedName": "ats",
            "value": "ats",
            "casing": {}
          },
          {
            "generatedName": "accounting",
            "value": "accounting",
            "casing": {}
          },
          {
            "generatedName": "ticketing",
            "value": "ticketing",
            "casing": {}
          },
          {
            "generatedName": "crm",
            "value": "crm",
            "casing": {}
          },
          {
            "generatedName": "mktg",
            "value": "mktg",
            "casing": {}
          },
          {
            "generatedName": "filestorage",
            "value": "filestorage",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "CategoryEnum": {
        "description": "* `hris` - hris\n* `ats` - ats\n* `accounting` - accounting\n* `ticketing` - ticketing\n* `crm` - crm\n* `mktg` - mktg\n* `filestorage` - filestorage",
        "generatedName": "CategoryEnum",
        "values": [
          {
            "generatedName": "hris",
            "value": "hris",
            "casing": {}
          },
          {
            "generatedName": "ats",
            "value": "ats",
            "casing": {}
          },
          {
            "generatedName": "accounting",
            "value": "accounting",
            "casing": {}
          },
          {
            "generatedName": "ticketing",
            "value": "ticketing",
            "casing": {}
          },
          {
            "generatedName": "crm",
            "value": "crm",
            "casing": {}
          },
          {
            "generatedName": "mktg",
            "value": "mktg",
            "casing": {}
          },
          {
            "generatedName": "filestorage",
            "value": "filestorage",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "CommonModelScopesBodyRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "commonModelScopesBodyRequestModelId",
            "key": "model_id",
            "schema": {
              "schema": {
                "minLength": 1,
                "example": "hris.Employee",
                "type": "string"
              },
              "generatedName": "CommonModelScopesBodyRequestModelId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "commonModelScopesBodyRequestEnabledActions",
            "key": "enabled_actions",
            "schema": {
              "value": {
                "generatedName": "CommonModelScopesBodyRequestEnabledActionsItem",
                "schema": "EnabledActionsEnum",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "CommonModelScopesBodyRequestEnabledActions",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "commonModelScopesBodyRequestDisabledFields",
            "key": "disabled_fields",
            "schema": {
              "value": {
                "schema": {
                  "minLength": 1,
                  "type": "string"
                },
                "generatedName": "CommonModelScopesBodyRequestDisabledFieldsItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "CommonModelScopesBodyRequestDisabledFields",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CommonModelScopesBodyRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Company": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "companyId",
            "key": "id",
            "schema": {
              "generatedName": "companyId",
              "value": {
                "schema": {
                  "format": "uuid",
                  "example": "1b998423-db0a-4037-a4cf-f79c60cb67b3",
                  "type": "string"
                },
                "generatedName": "CompanyId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "companyRemoteId",
            "key": "remote_id",
            "schema": {
              "generatedName": "companyRemoteId",
              "value": {
                "generatedName": "CompanyRemoteId",
                "description": "The third-party API ID of the matching object.",
                "value": {
                  "description": "The third-party API ID of the matching object.",
                  "schema": {
                    "example": "19202938",
                    "type": "string"
                  },
                  "generatedName": "CompanyRemoteId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companyLegalName",
            "key": "legal_name",
            "schema": {
              "generatedName": "companyLegalName",
              "value": {
                "generatedName": "CompanyLegalName",
                "description": "The company's legal name.",
                "value": {
                  "description": "The company's legal name.",
                  "schema": {
                    "example": "Waystar Royco, Inc.",
                    "type": "string"
                  },
                  "generatedName": "CompanyLegalName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companyDisplayName",
            "key": "display_name",
            "schema": {
              "generatedName": "companyDisplayName",
              "value": {
                "generatedName": "CompanyDisplayName",
                "description": "The company's display name.",
                "value": {
                  "description": "The company's display name.",
                  "schema": {
                    "example": "Waystar Royco",
                    "type": "string"
                  },
                  "generatedName": "CompanyDisplayName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companyEins",
            "key": "eins",
            "schema": {
              "generatedName": "companyEins",
              "value": {
                "generatedName": "CompanyEins",
                "description": "The company's Employer Identification Numbers.",
                "value": {
                  "description": "The company's Employer Identification Numbers.",
                  "value": {
                    "generatedName": "CompanyEinsItem",
                    "value": {
                      "schema": {
                        "type": "string"
                      },
                      "generatedName": "CompanyEinsItem",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "groupName": [],
                    "type": "nullable"
                  },
                  "generatedName": "CompanyEins",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companyRemoteWasDeleted",
            "key": "remote_was_deleted",
            "schema": {
              "generatedName": "companyRemoteWasDeleted",
              "value": {
                "description": "Indicates whether or not this object has been deleted by third party webhooks.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "CompanyRemoteWasDeleted",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "companyModifiedAt",
            "key": "modified_at",
            "schema": {
              "generatedName": "companyModifiedAt",
              "value": {
                "description": "This is the datetime that this object was last updated by Merge",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "CompanyModifiedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "companyFieldMappings",
            "key": "field_mappings",
            "schema": {
              "generatedName": "companyFieldMappings",
              "value": {
                "generatedName": "CompanyFieldMappings",
                "value": {
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "CompanyFieldMappingsKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "CompanyFieldMappingsValue",
                    "type": "unknown"
                  },
                  "generatedName": "CompanyFieldMappings",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "companyRemoteData",
            "key": "remote_data",
            "schema": {
              "generatedName": "companyRemoteData",
              "value": {
                "generatedName": "CompanyRemoteData",
                "value": {
                  "value": {
                    "generatedName": "CompanyRemoteDataItem",
                    "schema": "RemoteData",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "CompanyRemoteData",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "# The Company Object\n### Description\nThe `Company` object is used to represent a company within the HRIS / Payroll system.\n\n### Usage Example\nFetch from the `LIST Companies` endpoint and filter by `ID` to show all companies.",
        "generatedName": "Company",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ConditionSchema": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "conditionSchemaId",
            "key": "id",
            "schema": {
              "description": "The ID of the condition schema. This ID is used when updating selective syncs for a linked account.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ConditionSchemaId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSchemaCommonModel",
            "key": "common_model",
            "schema": {
              "generatedName": "conditionSchemaCommonModel",
              "value": {
                "description": "The common model for which a condition schema is defined.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ConditionSchemaCommonModel",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "conditionSchemaNativeName",
            "key": "native_name",
            "schema": {
              "generatedName": "ConditionSchemaNativeName",
              "description": "User-facing *native condition* name. e.g. \"Skip Manager\".",
              "value": {
                "description": "User-facing *native condition* name. e.g. \"Skip Manager\".",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ConditionSchemaNativeName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "nullable"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSchemaFieldName",
            "key": "field_name",
            "schema": {
              "generatedName": "ConditionSchemaFieldName",
              "description": "The name of the field on the common model that this condition corresponds to, if they conceptually match. e.g. \"location_type\".",
              "value": {
                "description": "The name of the field on the common model that this condition corresponds to, if they conceptually match. e.g. \"location_type\".",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ConditionSchemaFieldName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "nullable"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSchemaIsUnique",
            "key": "is_unique",
            "schema": {
              "generatedName": "conditionSchemaIsUnique",
              "value": {
                "description": "Whether this condition can only be applied once. If false, the condition can be AND'd together multiple times.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "ConditionSchemaIsUnique",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSchemaConditionType",
            "key": "condition_type",
            "schema": {
              "description": "The type of value(s) that can be set for this condition.\n\n* `BOOLEAN` - BOOLEAN\n* `DATE` - DATE\n* `DATE_TIME` - DATE_TIME\n* `INTEGER` - INTEGER\n* `FLOAT` - FLOAT\n* `STRING` - STRING\n* `LIST_OF_STRINGS` - LIST_OF_STRINGS",
              "generatedName": "ConditionSchemaConditionType",
              "schema": "ConditionTypeEnum",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conditionSchemaOperators",
            "key": "operators",
            "schema": {
              "description": "The schemas for the operators that can be used on a condition.",
              "value": {
                "generatedName": "ConditionSchemaOperatorsItem",
                "schema": "OperatorSchema",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "ConditionSchemaOperators",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ConditionSchema",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ConditionTypeEnum": {
        "description": "* `BOOLEAN` - BOOLEAN\n* `DATE` - DATE\n* `DATE_TIME` - DATE_TIME\n* `INTEGER` - INTEGER\n* `FLOAT` - FLOAT\n* `STRING` - STRING\n* `LIST_OF_STRINGS` - LIST_OF_STRINGS",
        "generatedName": "ConditionTypeEnum",
        "values": [
          {
            "generatedName": "BOOLEAN",
            "value": "BOOLEAN",
            "casing": {}
          },
          {
            "generatedName": "DATE",
            "value": "DATE",
            "casing": {}
          },
          {
            "generatedName": "DATE_TIME",
            "value": "DATE_TIME",
            "casing": {}
          },
          {
            "generatedName": "INTEGER",
            "value": "INTEGER",
            "casing": {}
          },
          {
            "generatedName": "FLOAT",
            "value": "FLOAT",
            "casing": {}
          },
          {
            "generatedName": "STRING",
            "value": "STRING",
            "casing": {}
          },
          {
            "generatedName": "LIST_OF_STRINGS",
            "value": "LIST_OF_STRINGS",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "CountryEnum": {
        "description": "* `AF` - Afghanistan\n* `AX` - Åland Islands\n* `AL` - Albania\n* `DZ` - Algeria\n* `AS` - American Samoa\n* `AD` - Andorra\n* `AO` - Angola\n* `AI` - Anguilla\n* `AQ` - Antarctica\n* `AG` - Antigua and Barbuda\n* `AR` - Argentina\n* `AM` - Armenia\n* `AW` - Aruba\n* `AU` - Australia\n* `AT` - Austria\n* `AZ` - Azerbaijan\n* `BS` - Bahamas\n* `BH` - Bahrain\n* `BD` - Bangladesh\n* `BB` - Barbados\n* `BY` - Belarus\n* `BE` - Belgium\n* `BZ` - Belize\n* `BJ` - Benin\n* `BM` - Bermuda\n* `BT` - Bhutan\n* `BO` - Bolivia\n* `BQ` - Bonaire, Sint Eustatius and Saba\n* `BA` - Bosnia and Herzegovina\n* `BW` - Botswana\n* `BV` - Bouvet Island\n* `BR` - Brazil\n* `IO` - British Indian Ocean Territory\n* `BN` - Brunei\n* `BG` - Bulgaria\n* `BF` - Burkina Faso\n* `BI` - Burundi\n* `CV` - Cabo Verde\n* `KH` - Cambodia\n* `CM` - Cameroon\n* `CA` - Canada\n* `KY` - Cayman Islands\n* `CF` - Central African Republic\n* `TD` - Chad\n* `CL` - Chile\n* `CN` - China\n* `CX` - Christmas Island\n* `CC` - Cocos (Keeling) Islands\n* `CO` - Colombia\n* `KM` - Comoros\n* `CG` - Congo\n* `CD` - Congo (the Democratic Republic of the)\n* `CK` - Cook Islands\n* `CR` - Costa Rica\n* `CI` - Côte d'Ivoire\n* `HR` - Croatia\n* `CU` - Cuba\n* `CW` - Curaçao\n* `CY` - Cyprus\n* `CZ` - Czechia\n* `DK` - Denmark\n* `DJ` - Djibouti\n* `DM` - Dominica\n* `DO` - Dominican Republic\n* `EC` - Ecuador\n* `EG` - Egypt\n* `SV` - El Salvador\n* `GQ` - Equatorial Guinea\n* `ER` - Eritrea\n* `EE` - Estonia\n* `SZ` - Eswatini\n* `ET` - Ethiopia\n* `FK` - Falkland Islands (Malvinas)\n* `FO` - Faroe Islands\n* `FJ` - Fiji\n* `FI` - Finland\n* `FR` - France\n* `GF` - French Guiana\n* `PF` - French Polynesia\n* `TF` - French Southern Territories\n* `GA` - Gabon\n* `GM` - Gambia\n* `GE` - Georgia\n* `DE` - Germany\n* `GH` - Ghana\n* `GI` - Gibraltar\n* `GR` - Greece\n* `GL` - Greenland\n* `GD` - Grenada\n* `GP` - Guadeloupe\n* `GU` - Guam\n* `GT` - Guatemala\n* `GG` - Guernsey\n* `GN` - Guinea\n* `GW` - Guinea-Bissau\n* `GY` - Guyana\n* `HT` - Haiti\n* `HM` - Heard Island and McDonald Islands\n* `VA` - Holy See\n* `HN` - Honduras\n* `HK` - Hong Kong\n* `HU` - Hungary\n* `IS` - Iceland\n* `IN` - India\n* `ID` - Indonesia\n* `IR` - Iran\n* `IQ` - Iraq\n* `IE` - Ireland\n* `IM` - Isle of Man\n* `IL` - Israel\n* `IT` - Italy\n* `JM` - Jamaica\n* `JP` - Japan\n* `JE` - Jersey\n* `JO` - Jordan\n* `KZ` - Kazakhstan\n* `KE` - Kenya\n* `KI` - Kiribati\n* `KW` - Kuwait\n* `KG` - Kyrgyzstan\n* `LA` - Laos\n* `LV` - Latvia\n* `LB` - Lebanon\n* `LS` - Lesotho\n* `LR` - Liberia\n* `LY` - Libya\n* `LI` - Liechtenstein\n* `LT` - Lithuania\n* `LU` - Luxembourg\n* `MO` - Macao\n* `MG` - Madagascar\n* `MW` - Malawi\n* `MY` - Malaysia\n* `MV` - Maldives\n* `ML` - Mali\n* `MT` - Malta\n* `MH` - Marshall Islands\n* `MQ` - Martinique\n* `MR` - Mauritania\n* `MU` - Mauritius\n* `YT` - Mayotte\n* `MX` - Mexico\n* `FM` - Micronesia (Federated States of)\n* `MD` - Moldova\n* `MC` - Monaco\n* `MN` - Mongolia\n* `ME` - Montenegro\n* `MS` - Montserrat\n* `MA` - Morocco\n* `MZ` - Mozambique\n* `MM` - Myanmar\n* `NA` - Namibia\n* `NR` - Nauru\n* `NP` - Nepal\n* `NL` - Netherlands\n* `NC` - New Caledonia\n* `NZ` - New Zealand\n* `NI` - Nicaragua\n* `NE` - Niger\n* `NG` - Nigeria\n* `NU` - Niue\n* `NF` - Norfolk Island\n* `KP` - North Korea\n* `MK` - North Macedonia\n* `MP` - Northern Mariana Islands\n* `NO` - Norway\n* `OM` - Oman\n* `PK` - Pakistan\n* `PW` - Palau\n* `PS` - Palestine, State of\n* `PA` - Panama\n* `PG` - Papua New Guinea\n* `PY` - Paraguay\n* `PE` - Peru\n* `PH` - Philippines\n* `PN` - Pitcairn\n* `PL` - Poland\n* `PT` - Portugal\n* `PR` - Puerto Rico\n* `QA` - Qatar\n* `RE` - Réunion\n* `RO` - Romania\n* `RU` - Russia\n* `RW` - Rwanda\n* `BL` - Saint Barthélemy\n* `SH` - Saint Helena, Ascension and Tristan da Cunha\n* `KN` - Saint Kitts and Nevis\n* `LC` - Saint Lucia\n* `MF` - Saint Martin (French part)\n* `PM` - Saint Pierre and Miquelon\n* `VC` - Saint Vincent and the Grenadines\n* `WS` - Samoa\n* `SM` - San Marino\n* `ST` - Sao Tome and Principe\n* `SA` - Saudi Arabia\n* `SN` - Senegal\n* `RS` - Serbia\n* `SC` - Seychelles\n* `SL` - Sierra Leone\n* `SG` - Singapore\n* `SX` - Sint Maarten (Dutch part)\n* `SK` - Slovakia\n* `SI` - Slovenia\n* `SB` - Solomon Islands\n* `SO` - Somalia\n* `ZA` - South Africa\n* `GS` - South Georgia and the South Sandwich Islands\n* `KR` - South Korea\n* `SS` - South Sudan\n* `ES` - Spain\n* `LK` - Sri Lanka\n* `SD` - Sudan\n* `SR` - Suriname\n* `SJ` - Svalbard and Jan Mayen\n* `SE` - Sweden\n* `CH` - Switzerland\n* `SY` - Syria\n* `TW` - Taiwan\n* `TJ` - Tajikistan\n* `TZ` - Tanzania\n* `TH` - Thailand\n* `TL` - Timor-Leste\n* `TG` - Togo\n* `TK` - Tokelau\n* `TO` - Tonga\n* `TT` - Trinidad and Tobago\n* `TN` - Tunisia\n* `TR` - Turkey\n* `TM` - Turkmenistan\n* `TC` - Turks and Caicos Islands\n* `TV` - Tuvalu\n* `UG` - Uganda\n* `UA` - Ukraine\n* `AE` - United Arab Emirates\n* `GB` - United Kingdom\n* `UM` - United States Minor Outlying Islands\n* `US` - United States of America\n* `UY` - Uruguay\n* `UZ` - Uzbekistan\n* `VU` - Vanuatu\n* `VE` - Venezuela\n* `VN` - Vietnam\n* `VG` - Virgin Islands (British)\n* `VI` - Virgin Islands (U.S.)\n* `WF` - Wallis and Futuna\n* `EH` - Western Sahara\n* `YE` - Yemen\n* `ZM` - Zambia\n* `ZW` - Zimbabwe",
        "generatedName": "CountryEnum",
        "values": [
          {
            "generatedName": "AF",
            "value": "AF",
            "casing": {}
          },
          {
            "generatedName": "AX",
            "value": "AX",
            "casing": {}
          },
          {
            "generatedName": "AL",
            "value": "AL",
            "casing": {}
          },
          {
            "generatedName": "DZ",
            "value": "DZ",
            "casing": {}
          },
          {
            "generatedName": "AS",
            "value": "AS",
            "casing": {}
          },
          {
            "generatedName": "AD",
            "value": "AD",
            "casing": {}
          },
          {
            "generatedName": "AO",
            "value": "AO",
            "casing": {}
          },
          {
            "generatedName": "AI",
            "value": "AI",
            "casing": {}
          },
          {
            "generatedName": "AQ",
            "value": "AQ",
            "casing": {}
          },
          {
            "generatedName": "AG",
            "value": "AG",
            "casing": {}
          },
          {
            "generatedName": "AR",
            "value": "AR",
            "casing": {}
          },
          {
            "generatedName": "AM",
            "value": "AM",
            "casing": {}
          },
          {
            "generatedName": "AW",
            "value": "AW",
            "casing": {}
          },
          {
            "generatedName": "AU",
            "value": "AU",
            "casing": {}
          },
          {
            "generatedName": "AT",
            "value": "AT",
            "casing": {}
          },
          {
            "generatedName": "AZ",
            "value": "AZ",
            "casing": {}
          },
          {
            "generatedName": "BS",
            "value": "BS",
            "casing": {}
          },
          {
            "generatedName": "BH",
            "value": "BH",
            "casing": {}
          },
          {
            "generatedName": "BD",
            "value": "BD",
            "casing": {}
          },
          {
            "generatedName": "BB",
            "value": "BB",
            "casing": {}
          },
          {
            "generatedName": "BY",
            "value": "BY",
            "casing": {}
          },
          {
            "generatedName": "BE",
            "value": "BE",
            "casing": {}
          },
          {
            "generatedName": "BZ",
            "value": "BZ",
            "casing": {}
          },
          {
            "generatedName": "BJ",
            "value": "BJ",
            "casing": {}
          },
          {
            "generatedName": "BM",
            "value": "BM",
            "casing": {}
          },
          {
            "generatedName": "BT",
            "value": "BT",
            "casing": {}
          },
          {
            "generatedName": "BO",
            "value": "BO",
            "casing": {}
          },
          {
            "generatedName": "BQ",
            "value": "BQ",
            "casing": {}
          },
          {
            "generatedName": "BA",
            "value": "BA",
            "casing": {}
          },
          {
            "generatedName": "BW",
            "value": "BW",
            "casing": {}
          },
          {
            "generatedName": "BV",
            "value": "BV",
            "casing": {}
          },
          {
            "generatedName": "BR",
            "value": "BR",
            "casing": {}
          },
          {
            "generatedName": "IO",
            "value": "IO",
            "casing": {}
          },
          {
            "generatedName": "BN",
            "value": "BN",
            "casing": {}
          },
          {
            "generatedName": "BG",
            "value": "BG",
            "casing": {}
          },
          {
            "generatedName": "BF",
            "value": "BF",
            "casing": {}
          },
          {
            "generatedName": "BI",
            "value": "BI",
            "casing": {}
          },
          {
            "generatedName": "CV",
            "value": "CV",
            "casing": {}
          },
          {
            "generatedName": "KH",
            "value": "KH",
            "casing": {}
          },
          {
            "generatedName": "CM",
            "value": "CM",
            "casing": {}
          },
          {
            "generatedName": "CA",
            "value": "CA",
            "casing": {}
          },
          {
            "generatedName": "KY",
            "value": "KY",
            "casing": {}
          },
          {
            "generatedName": "CF",
            "value": "CF",
            "casing": {}
          },
          {
            "generatedName": "TD",
            "value": "TD",
            "casing": {}
          },
          {
            "generatedName": "CL",
            "value": "CL",
            "casing": {}
          },
          {
            "generatedName": "CN",
            "value": "CN",
            "casing": {}
          },
          {
            "generatedName": "CX",
            "value": "CX",
            "casing": {}
          },
          {
            "generatedName": "CC",
            "value": "CC",
            "casing": {}
          },
          {
            "generatedName": "CO",
            "value": "CO",
            "casing": {}
          },
          {
            "generatedName": "KM",
            "value": "KM",
            "casing": {}
          },
          {
            "generatedName": "CG",
            "value": "CG",
            "casing": {}
          },
          {
            "generatedName": "CD",
            "value": "CD",
            "casing": {}
          },
          {
            "generatedName": "CK",
            "value": "CK",
            "casing": {}
          },
          {
            "generatedName": "CR",
            "value": "CR",
            "casing": {}
          },
          {
            "generatedName": "CI",
            "value": "CI",
            "casing": {}
          },
          {
            "generatedName": "HR",
            "value": "HR",
            "casing": {}
          },
          {
            "generatedName": "CU",
            "value": "CU",
            "casing": {}
          },
          {
            "generatedName": "CW",
            "value": "CW",
            "casing": {}
          },
          {
            "generatedName": "CY",
            "value": "CY",
            "casing": {}
          },
          {
            "generatedName": "CZ",
            "value": "CZ",
            "casing": {}
          },
          {
            "generatedName": "DK",
            "value": "DK",
            "casing": {}
          },
          {
            "generatedName": "DJ",
            "value": "DJ",
            "casing": {}
          },
          {
            "generatedName": "DM",
            "value": "DM",
            "casing": {}
          },
          {
            "generatedName": "DO",
            "value": "DO",
            "casing": {}
          },
          {
            "generatedName": "EC",
            "value": "EC",
            "casing": {}
          },
          {
            "generatedName": "EG",
            "value": "EG",
            "casing": {}
          },
          {
            "generatedName": "SV",
            "value": "SV",
            "casing": {}
          },
          {
            "generatedName": "GQ",
            "value": "GQ",
            "casing": {}
          },
          {
            "generatedName": "ER",
            "value": "ER",
            "casing": {}
          },
          {
            "generatedName": "EE",
            "value": "EE",
            "casing": {}
          },
          {
            "generatedName": "SZ",
            "value": "SZ",
            "casing": {}
          },
          {
            "generatedName": "ET",
            "value": "ET",
            "casing": {}
          },
          {
            "generatedName": "FK",
            "value": "FK",
            "casing": {}
          },
          {
            "generatedName": "FO",
            "value": "FO",
            "casing": {}
          },
          {
            "generatedName": "FJ",
            "value": "FJ",
            "casing": {}
          },
          {
            "generatedName": "FI",
            "value": "FI",
            "casing": {}
          },
          {
            "generatedName": "FR",
            "value": "FR",
            "casing": {}
          },
          {
            "generatedName": "GF",
            "value": "GF",
            "casing": {}
          },
          {
            "generatedName": "PF",
            "value": "PF",
            "casing": {}
          },
          {
            "generatedName": "TF",
            "value": "TF",
            "casing": {}
          },
          {
            "generatedName": "GA",
            "value": "GA",
            "casing": {}
          },
          {
            "generatedName": "GM",
            "value": "GM",
            "casing": {}
          },
          {
            "generatedName": "GE",
            "value": "GE",
            "casing": {}
          },
          {
            "generatedName": "DE",
            "value": "DE",
            "casing": {}
          },
          {
            "generatedName": "GH",
            "value": "GH",
            "casing": {}
          },
          {
            "generatedName": "GI",
            "value": "GI",
            "casing": {}
          },
          {
            "generatedName": "GR",
            "value": "GR",
            "casing": {}
          },
          {
            "generatedName": "GL",
            "value": "GL",
            "casing": {}
          },
          {
            "generatedName": "GD",
            "value": "GD",
            "casing": {}
          },
          {
            "generatedName": "GP",
            "value": "GP",
            "casing": {}
          },
          {
            "generatedName": "GU",
            "value": "GU",
            "casing": {}
          },
          {
            "generatedName": "GT",
            "value": "GT",
            "casing": {}
          },
          {
            "generatedName": "GG",
            "value": "GG",
            "casing": {}
          },
          {
            "generatedName": "GN",
            "value": "GN",
            "casing": {}
          },
          {
            "generatedName": "GW",
            "value": "GW",
            "casing": {}
          },
          {
            "generatedName": "GY",
            "value": "GY",
            "casing": {}
          },
          {
            "generatedName": "HT",
            "value": "HT",
            "casing": {}
          },
          {
            "generatedName": "HM",
            "value": "HM",
            "casing": {}
          },
          {
            "generatedName": "VA",
            "value": "VA",
            "casing": {}
          },
          {
            "generatedName": "HN",
            "value": "HN",
            "casing": {}
          },
          {
            "generatedName": "HK",
            "value": "HK",
            "casing": {}
          },
          {
            "generatedName": "HU",
            "value": "HU",
            "casing": {}
          },
          {
            "generatedName": "IS",
            "value": "IS",
            "casing": {}
          },
          {
            "generatedName": "IN",
            "value": "IN",
            "casing": {}
          },
          {
            "generatedName": "ID",
            "value": "ID",
            "casing": {}
          },
          {
            "generatedName": "IR",
            "value": "IR",
            "casing": {}
          },
          {
            "generatedName": "IQ",
            "value": "IQ",
            "casing": {}
          },
          {
            "generatedName": "IE",
            "value": "IE",
            "casing": {}
          },
          {
            "generatedName": "IM",
            "value": "IM",
            "casing": {}
          },
          {
            "generatedName": "IL",
            "value": "IL",
            "casing": {}
          },
          {
            "generatedName": "IT",
            "value": "IT",
            "casing": {}
          },
          {
            "generatedName": "JM",
            "value": "JM",
            "casing": {}
          },
          {
            "generatedName": "JP",
            "value": "JP",
            "casing": {}
          },
          {
            "generatedName": "JE",
            "value": "JE",
            "casing": {}
          },
          {
            "generatedName": "JO",
            "value": "JO",
            "casing": {}
          },
          {
            "generatedName": "KZ",
            "value": "KZ",
            "casing": {}
          },
          {
            "generatedName": "KE",
            "value": "KE",
            "casing": {}
          },
          {
            "generatedName": "KI",
            "value": "KI",
            "casing": {}
          },
          {
            "generatedName": "KW",
            "value": "KW",
            "casing": {}
          },
          {
            "generatedName": "KG",
            "value": "KG",
            "casing": {}
          },
          {
            "generatedName": "LA",
            "value": "LA",
            "casing": {}
          },
          {
            "generatedName": "LV",
            "value": "LV",
            "casing": {}
          },
          {
            "generatedName": "LB",
            "value": "LB",
            "casing": {}
          },
          {
            "generatedName": "LS",
            "value": "LS",
            "casing": {}
          },
          {
            "generatedName": "LR",
            "value": "LR",
            "casing": {}
          },
          {
            "generatedName": "LY",
            "value": "LY",
            "casing": {}
          },
          {
            "generatedName": "LI",
            "value": "LI",
            "casing": {}
          },
          {
            "generatedName": "LT",
            "value": "LT",
            "casing": {}
          },
          {
            "generatedName": "LU",
            "value": "LU",
            "casing": {}
          },
          {
            "generatedName": "MO",
            "value": "MO",
            "casing": {}
          },
          {
            "generatedName": "MG",
            "value": "MG",
            "casing": {}
          },
          {
            "generatedName": "MW",
            "value": "MW",
            "casing": {}
          },
          {
            "generatedName": "MY",
            "value": "MY",
            "casing": {}
          },
          {
            "generatedName": "MV",
            "value": "MV",
            "casing": {}
          },
          {
            "generatedName": "ML",
            "value": "ML",
            "casing": {}
          },
          {
            "generatedName": "MT",
            "value": "MT",
            "casing": {}
          },
          {
            "generatedName": "MH",
            "value": "MH",
            "casing": {}
          },
          {
            "generatedName": "MQ",
            "value": "MQ",
            "casing": {}
          },
          {
            "generatedName": "MR",
            "value": "MR",
            "casing": {}
          },
          {
            "generatedName": "MU",
            "value": "MU",
            "casing": {}
          },
          {
            "generatedName": "YT",
            "value": "YT",
            "casing": {}
          },
          {
            "generatedName": "MX",
            "value": "MX",
            "casing": {}
          },
          {
            "generatedName": "FM",
            "value": "FM",
            "casing": {}
          },
          {
            "generatedName": "MD",
            "value": "MD",
            "casing": {}
          },
          {
            "generatedName": "MC",
            "value": "MC",
            "casing": {}
          },
          {
            "generatedName": "MN",
            "value": "MN",
            "casing": {}
          },
          {
            "generatedName": "ME",
            "value": "ME",
            "casing": {}
          },
          {
            "generatedName": "MS",
            "value": "MS",
            "casing": {}
          },
          {
            "generatedName": "MA",
            "value": "MA",
            "casing": {}
          },
          {
            "generatedName": "MZ",
            "value": "MZ",
            "casing": {}
          },
          {
            "generatedName": "MM",
            "value": "MM",
            "casing": {}
          },
          {
            "generatedName": "NA",
            "value": "NA",
            "casing": {}
          },
          {
            "generatedName": "NR",
            "value": "NR",
            "casing": {}
          },
          {
            "generatedName": "NP",
            "value": "NP",
            "casing": {}
          },
          {
            "generatedName": "NL",
            "value": "NL",
            "casing": {}
          },
          {
            "generatedName": "NC",
            "value": "NC",
            "casing": {}
          },
          {
            "generatedName": "NZ",
            "value": "NZ",
            "casing": {}
          },
          {
            "generatedName": "NI",
            "value": "NI",
            "casing": {}
          },
          {
            "generatedName": "NE",
            "value": "NE",
            "casing": {}
          },
          {
            "generatedName": "NG",
            "value": "NG",
            "casing": {}
          },
          {
            "generatedName": "NU",
            "value": "NU",
            "casing": {}
          },
          {
            "generatedName": "NF",
            "value": "NF",
            "casing": {}
          },
          {
            "generatedName": "KP",
            "value": "KP",
            "casing": {}
          },
          {
            "generatedName": "MK",
            "value": "MK",
            "casing": {}
          },
          {
            "generatedName": "MP",
            "value": "MP",
            "casing": {}
          },
          {
            "generatedName": "NO",
            "value": "NO",
            "casing": {}
          },
          {
            "generatedName": "OM",
            "value": "OM",
            "casing": {}
          },
          {
            "generatedName": "PK",
            "value": "PK",
            "casing": {}
          },
          {
            "generatedName": "PW",
            "value": "PW",
            "casing": {}
          },
          {
            "generatedName": "PS",
            "value": "PS",
            "casing": {}
          },
          {
            "generatedName": "PA",
            "value": "PA",
            "casing": {}
          },
          {
            "generatedName": "PG",
            "value": "PG",
            "casing": {}
          },
          {
            "generatedName": "PY",
            "value": "PY",
            "casing": {}
          },
          {
            "generatedName": "PE",
            "value": "PE",
            "casing": {}
          },
          {
            "generatedName": "PH",
            "value": "PH",
            "casing": {}
          },
          {
            "generatedName": "PN",
            "value": "PN",
            "casing": {}
          },
          {
            "generatedName": "PL",
            "value": "PL",
            "casing": {}
          },
          {
            "generatedName": "PT",
            "value": "PT",
            "casing": {}
          },
          {
            "generatedName": "PR",
            "value": "PR",
            "casing": {}
          },
          {
            "generatedName": "QA",
            "value": "QA",
            "casing": {}
          },
          {
            "generatedName": "RE",
            "value": "RE",
            "casing": {}
          },
          {
            "generatedName": "RO",
            "value": "RO",
            "casing": {}
          },
          {
            "generatedName": "RU",
            "value": "RU",
            "casing": {}
          },
          {
            "generatedName": "RW",
            "value": "RW",
            "casing": {}
          },
          {
            "generatedName": "BL",
            "value": "BL",
            "casing": {}
          },
          {
            "generatedName": "SH",
            "value": "SH",
            "casing": {}
          },
          {
            "generatedName": "KN",
            "value": "KN",
            "casing": {}
          },
          {
            "generatedName": "LC",
            "value": "LC",
            "casing": {}
          },
          {
            "generatedName": "MF",
            "value": "MF",
            "casing": {}
          },
          {
            "generatedName": "PM",
            "value": "PM",
            "casing": {}
          },
          {
            "generatedName": "VC",
            "value": "VC",
            "casing": {}
          },
          {
            "generatedName": "WS",
            "value": "WS",
            "casing": {}
          },
          {
            "generatedName": "SM",
            "value": "SM",
            "casing": {}
          },
          {
            "generatedName": "ST",
            "value": "ST",
            "casing": {}
          },
          {
            "generatedName": "SA",
            "value": "SA",
            "casing": {}
          },
          {
            "generatedName": "SN",
            "value": "SN",
            "casing": {}
          },
          {
            "generatedName": "RS",
            "value": "RS",
            "casing": {}
          },
          {
            "generatedName": "SC",
            "value": "SC",
            "casing": {}
          },
          {
            "generatedName": "SL",
            "value": "SL",
            "casing": {}
          },
          {
            "generatedName": "SG",
            "value": "SG",
            "casing": {}
          },
          {
            "generatedName": "SX",
            "value": "SX",
            "casing": {}
          },
          {
            "generatedName": "SK",
            "value": "SK",
            "casing": {}
          },
          {
            "generatedName": "SI",
            "value": "SI",
            "casing": {}
          },
          {
            "generatedName": "SB",
            "value": "SB",
            "casing": {}
          },
          {
            "generatedName": "SO",
            "value": "SO",
            "casing": {}
          },
          {
            "generatedName": "ZA",
            "value": "ZA",
            "casing": {}
          },
          {
            "generatedName": "GS",
            "value": "GS",
            "casing": {}
          },
          {
            "generatedName": "KR",
            "value": "KR",
            "casing": {}
          },
          {
            "generatedName": "SS",
            "value": "SS",
            "casing": {}
          },
          {
            "generatedName": "ES",
            "value": "ES",
            "casing": {}
          },
          {
            "generatedName": "LK",
            "value": "LK",
            "casing": {}
          },
          {
            "generatedName": "SD",
            "value": "SD",
            "casing": {}
          },
          {
            "generatedName": "SR",
            "value": "SR",
            "casing": {}
          },
          {
            "generatedName": "SJ",
            "value": "SJ",
            "casing": {}
          },
          {
            "generatedName": "SE",
            "value": "SE",
            "casing": {}
          },
          {
            "generatedName": "CH",
            "value": "CH",
            "casing": {}
          },
          {
            "generatedName": "SY",
            "value": "SY",
            "casing": {}
          },
          {
            "generatedName": "TW",
            "value": "TW",
            "casing": {}
          },
          {
            "generatedName": "TJ",
            "value": "TJ",
            "casing": {}
          },
          {
            "generatedName": "TZ",
            "value": "TZ",
            "casing": {}
          },
          {
            "generatedName": "TH",
            "value": "TH",
            "casing": {}
          },
          {
            "generatedName": "TL",
            "value": "TL",
            "casing": {}
          },
          {
            "generatedName": "TG",
            "value": "TG",
            "casing": {}
          },
          {
            "generatedName": "TK",
            "value": "TK",
            "casing": {}
          },
          {
            "generatedName": "TO",
            "value": "TO",
            "casing": {}
          },
          {
            "generatedName": "TT",
            "value": "TT",
            "casing": {}
          },
          {
            "generatedName": "TN",
            "value": "TN",
            "casing": {}
          },
          {
            "generatedName": "TR",
            "value": "TR",
            "casing": {}
          },
          {
            "generatedName": "TM",
            "value": "TM",
            "casing": {}
          },
          {
            "generatedName": "TC",
            "value": "TC",
            "casing": {}
          },
          {
            "generatedName": "TV",
            "value": "TV",
            "casing": {}
          },
          {
            "generatedName": "UG",
            "value": "UG",
            "casing": {}
          },
          {
            "generatedName": "UA",
            "value": "UA",
            "casing": {}
          },
          {
            "generatedName": "AE",
            "value": "AE",
            "casing": {}
          },
          {
            "generatedName": "GB",
            "value": "GB",
            "casing": {}
          },
          {
            "generatedName": "UM",
            "value": "UM",
            "casing": {}
          },
          {
            "generatedName": "US",
            "value": "US",
            "casing": {}
          },
          {
            "generatedName": "UY",
            "value": "UY",
            "casing": {}
          },
          {
            "generatedName": "UZ",
            "value": "UZ",
            "casing": {}
          },
          {
            "generatedName": "VU",
            "value": "VU",
            "casing": {}
          },
          {
            "generatedName": "VE",
            "value": "VE",
            "casing": {}
          },
          {
            "generatedName": "VN",
            "value": "VN",
            "casing": {}
          },
          {
            "generatedName": "VG",
            "value": "VG",
            "casing": {}
          },
          {
            "generatedName": "VI",
            "value": "VI",
            "casing": {}
          },
          {
            "generatedName": "WF",
            "value": "WF",
            "casing": {}
          },
          {
            "generatedName": "EH",
            "value": "EH",
            "casing": {}
          },
          {
            "generatedName": "YE",
            "value": "YE",
            "casing": {}
          },
          {
            "generatedName": "ZM",
            "value": "ZM",
            "casing": {}
          },
          {
            "generatedName": "ZW",
            "value": "ZW",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "DataPassthroughRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "dataPassthroughRequestMethod",
            "key": "method",
            "schema": {
              "generatedName": "DataPassthroughRequestMethod",
              "schema": "MethodEnum",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataPassthroughRequestPath",
            "key": "path",
            "schema": {
              "schema": {
                "minLength": 1,
                "example": "/scooters",
                "type": "string"
              },
              "generatedName": "DataPassthroughRequestPath",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataPassthroughRequestBaseUrlOverride",
            "key": "base_url_override",
            "schema": {
              "generatedName": "dataPassthroughRequestBaseUrlOverride",
              "value": {
                "generatedName": "DataPassthroughRequestBaseUrlOverride",
                "value": {
                  "schema": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "generatedName": "DataPassthroughRequestBaseUrlOverride",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataPassthroughRequestData",
            "key": "data",
            "schema": {
              "generatedName": "dataPassthroughRequestData",
              "value": {
                "generatedName": "DataPassthroughRequestData",
                "value": {
                  "schema": {
                    "minLength": 1,
                    "example": "{\"company\": \"Lime\", \"model\": \"Gen 2.5\"}",
                    "type": "string"
                  },
                  "generatedName": "DataPassthroughRequestData",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataPassthroughRequestMultipartFormData",
            "key": "multipart_form_data",
            "schema": {
              "generatedName": "dataPassthroughRequestMultipartFormData",
              "value": {
                "generatedName": "DataPassthroughRequestMultipartFormData",
                "description": "Pass an array of `MultipartFormField` objects in here instead of using the `data` param if `request_format` is set to `MULTIPART`.",
                "value": {
                  "description": "Pass an array of `MultipartFormField` objects in here instead of using the `data` param if `request_format` is set to `MULTIPART`.",
                  "value": {
                    "generatedName": "DataPassthroughRequestMultipartFormDataItem",
                    "schema": "MultipartFormFieldRequest",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "DataPassthroughRequestMultipartFormData",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataPassthroughRequestHeaders",
            "key": "headers",
            "schema": {
              "generatedName": "dataPassthroughRequestHeaders",
              "value": {
                "generatedName": "DataPassthroughRequestHeaders",
                "description": "The headers to use for the request (Merge will handle the account's authorization headers). `Content-Type` header is required for passthrough. Choose content type corresponding to expected format of receiving server.",
                "value": {
                  "description": "The headers to use for the request (Merge will handle the account's authorization headers). `Content-Type` header is required for passthrough. Choose content type corresponding to expected format of receiving server.",
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "DataPassthroughRequestHeadersKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "DataPassthroughRequestHeadersValue",
                    "type": "unknown"
                  },
                  "generatedName": "DataPassthroughRequestHeaders",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataPassthroughRequestRequestFormat",
            "key": "request_format",
            "schema": {
              "generatedName": "dataPassthroughRequestRequestFormat",
              "value": {
                "generatedName": "DataPassthroughRequestRequestFormat",
                "value": {
                  "generatedName": "DataPassthroughRequestRequestFormat",
                  "schema": "RequestFormatEnum",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataPassthroughRequestNormalizeResponse",
            "key": "normalize_response",
            "schema": {
              "generatedName": "dataPassthroughRequestNormalizeResponse",
              "value": {
                "description": "Optional. If true, the response will always be an object of the form `{\"type\": T, \"value\": ...}` where `T` will be one of `string, boolean, number, null, array, object`.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "DataPassthroughRequestNormalizeResponse",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "# The DataPassthrough Object\n### Description\nThe `DataPassthrough` object is used to send information to an otherwise-unsupported third-party endpoint.\n\n### Usage Example\nCreate a `DataPassthrough` to get team hierarchies from your Rippling integration.",
        "generatedName": "DataPassthroughRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "DebugModeLog": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "debugModeLogLogId",
            "key": "log_id",
            "schema": {
              "schema": {
                "example": "99433219-8017-4acd-bb3c-ceb23d663832",
                "type": "string"
              },
              "generatedName": "DebugModeLogLogId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "debugModeLogDashboardView",
            "key": "dashboard_view",
            "schema": {
              "schema": {
                "example": "https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832",
                "type": "string"
              },
              "generatedName": "DebugModeLogDashboardView",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "debugModeLogLogSummary",
            "key": "log_summary",
            "schema": {
              "generatedName": "DebugModeLogLogSummary",
              "schema": "DebugModelLogSummary",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "DebugModeLog",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "DebugModelLogSummary": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "debugModelLogSummaryUrl",
            "key": "url",
            "schema": {
              "schema": {
                "example": "https://harvest.greenhouse.io/v1/candidates/",
                "type": "string"
              },
              "generatedName": "DebugModelLogSummaryUrl",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "debugModelLogSummaryMethod",
            "key": "method",
            "schema": {
              "schema": {
                "example": "POST",
                "type": "string"
              },
              "generatedName": "DebugModelLogSummaryMethod",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "debugModelLogSummaryStatusCode",
            "key": "status_code",
            "schema": {
              "schema": {
                "example": 200,
                "type": "int"
              },
              "generatedName": "DebugModelLogSummaryStatusCode",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "DebugModelLogSummary",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Deduction": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "deductionId",
            "key": "id",
            "schema": {
              "generatedName": "deductionId",
              "value": {
                "schema": {
                  "format": "uuid",
                  "example": "5fd439fc-1b64-4755-b275-64918936c365",
                  "type": "string"
                },
                "generatedName": "DeductionId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "deductionRemoteId",
            "key": "remote_id",
            "schema": {
              "generatedName": "deductionRemoteId",
              "value": {
                "generatedName": "DeductionRemoteId",
                "description": "The third-party API ID of the matching object.",
                "value": {
                  "description": "The third-party API ID of the matching object.",
                  "schema": {
                    "example": "93478612",
                    "type": "string"
                  },
                  "generatedName": "DeductionRemoteId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "deductionEmployeePayrollRun",
            "key": "employee_payroll_run",
            "schema": {
              "generatedName": "deductionEmployeePayrollRun",
              "value": {
                "generatedName": "DeductionEmployeePayrollRun",
                "value": {
                  "schema": {
                    "format": "uuid",
                    "example": "35347df1-95e7-46e2-93cc-66f1191edca5",
                    "type": "string"
                  },
                  "generatedName": "DeductionEmployeePayrollRun",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "deductionName",
            "key": "name",
            "schema": {
              "generatedName": "deductionName",
              "value": {
                "generatedName": "DeductionName",
                "description": "The deduction's name.",
                "value": {
                  "description": "The deduction's name.",
                  "schema": {
                    "example": "Social Security",
                    "type": "string"
                  },
                  "generatedName": "DeductionName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "deductionEmployeeDeduction",
            "key": "employee_deduction",
            "schema": {
              "generatedName": "deductionEmployeeDeduction",
              "value": {
                "generatedName": "DeductionEmployeeDeduction",
                "description": "The amount of money that is withheld from an employee's gross pay by the employee.",
                "value": {
                  "description": "The amount of money that is withheld from an employee's gross pay by the employee.",
                  "schema": {
                    "example": 34.54,
                    "type": "double"
                  },
                  "generatedName": "DeductionEmployeeDeduction",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "deductionCompanyDeduction",
            "key": "company_deduction",
            "schema": {
              "generatedName": "deductionCompanyDeduction",
              "value": {
                "generatedName": "DeductionCompanyDeduction",
                "description": "The amount of money that is withheld on behalf of an employee by the company.",
                "value": {
                  "description": "The amount of money that is withheld on behalf of an employee by the company.",
                  "schema": {
                    "example": 78.78,
                    "type": "double"
                  },
                  "generatedName": "DeductionCompanyDeduction",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "deductionRemoteWasDeleted",
            "key": "remote_was_deleted",
            "schema": {
              "generatedName": "deductionRemoteWasDeleted",
              "value": {
                "description": "Indicates whether or not this object has been deleted by third party webhooks.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "DeductionRemoteWasDeleted",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "deductionModifiedAt",
            "key": "modified_at",
            "schema": {
              "generatedName": "deductionModifiedAt",
              "value": {
                "description": "This is the datetime that this object was last updated by Merge",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "DeductionModifiedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "deductionFieldMappings",
            "key": "field_mappings",
            "schema": {
              "generatedName": "deductionFieldMappings",
              "value": {
                "generatedName": "DeductionFieldMappings",
                "value": {
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "DeductionFieldMappingsKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "DeductionFieldMappingsValue",
                    "type": "unknown"
                  },
                  "generatedName": "DeductionFieldMappings",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "deductionRemoteData",
            "key": "remote_data",
            "schema": {
              "generatedName": "deductionRemoteData",
              "value": {
                "generatedName": "DeductionRemoteData",
                "value": {
                  "value": {
                    "generatedName": "DeductionRemoteDataItem",
                    "schema": "RemoteData",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "DeductionRemoteData",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "# The Deduction Object\n### Description\nThe `Deduction` object is used to represent an array of the wages withheld from total earnings for the purpose of paying taxes.\n\n### Usage Example\nFetch from the `LIST Deductions` endpoint and filter by `ID` to show all deductions.",
        "generatedName": "Deduction",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Earning": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "earningId",
            "key": "id",
            "schema": {
              "generatedName": "earningId",
              "value": {
                "schema": {
                  "format": "uuid",
                  "example": "babbced6-3a81-4775-8da2-490dc6385259",
                  "type": "string"
                },
                "generatedName": "EarningId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "earningRemoteId",
            "key": "remote_id",
            "schema": {
              "generatedName": "earningRemoteId",
              "value": {
                "generatedName": "EarningRemoteId",
                "description": "The third-party API ID of the matching object.",
                "value": {
                  "description": "The third-party API ID of the matching object.",
                  "schema": {
                    "example": "52802",
                    "type": "string"
                  },
                  "generatedName": "EarningRemoteId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "earningEmployeePayrollRun",
            "key": "employee_payroll_run",
            "schema": {
              "generatedName": "earningEmployeePayrollRun",
              "value": {
                "generatedName": "EarningEmployeePayrollRun",
                "value": {
                  "schema": {
                    "format": "uuid",
                    "example": "35347df1-95e7-46e2-93cc-66f1191edca5",
                    "type": "string"
                  },
                  "generatedName": "EarningEmployeePayrollRun",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "earningAmount",
            "key": "amount",
            "schema": {
              "generatedName": "earningAmount",
              "value": {
                "generatedName": "EarningAmount",
                "description": "The amount earned.",
                "value": {
                  "description": "The amount earned.",
                  "schema": {
                    "example": 1002.34,
                    "type": "double"
                  },
                  "generatedName": "EarningAmount",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "earningType",
            "key": "type",
            "schema": {
              "generatedName": "earningType",
              "value": {
                "generatedName": "EarningType",
                "description": "The type of earning.\n\n* `SALARY` - SALARY\n* `REIMBURSEMENT` - REIMBURSEMENT\n* `OVERTIME` - OVERTIME\n* `BONUS` - BONUS",
                "value": {
                  "generatedName": "EarningType",
                  "schema": "EarningTypeEnum",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "earningRemoteWasDeleted",
            "key": "remote_was_deleted",
            "schema": {
              "generatedName": "earningRemoteWasDeleted",
              "value": {
                "description": "Indicates whether or not this object has been deleted by third party webhooks.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "EarningRemoteWasDeleted",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "earningModifiedAt",
            "key": "modified_at",
            "schema": {
              "generatedName": "earningModifiedAt",
              "value": {
                "description": "This is the datetime that this object was last updated by Merge",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "EarningModifiedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "earningFieldMappings",
            "key": "field_mappings",
            "schema": {
              "generatedName": "earningFieldMappings",
              "value": {
                "generatedName": "EarningFieldMappings",
                "value": {
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "EarningFieldMappingsKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "EarningFieldMappingsValue",
                    "type": "unknown"
                  },
                  "generatedName": "EarningFieldMappings",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "earningRemoteData",
            "key": "remote_data",
            "schema": {
              "generatedName": "earningRemoteData",
              "value": {
                "generatedName": "EarningRemoteData",
                "value": {
                  "value": {
                    "generatedName": "EarningRemoteDataItem",
                    "schema": "RemoteData",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "EarningRemoteData",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "# The Earning Object\n### Description\nThe `Earning` object is used to represent an array of different compensations that an employee receives within specific wage categories.\n\n### Usage Example\nFetch from the `LIST Earnings` endpoint and filter by `ID` to show all earnings.",
        "generatedName": "Earning",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "EarningTypeEnum": {
        "description": "* `SALARY` - SALARY\n* `REIMBURSEMENT` - REIMBURSEMENT\n* `OVERTIME` - OVERTIME\n* `BONUS` - BONUS",
        "generatedName": "EarningTypeEnum",
        "values": [
          {
            "generatedName": "SALARY",
            "value": "SALARY",
            "casing": {}
          },
          {
            "generatedName": "REIMBURSEMENT",
            "value": "REIMBURSEMENT",
            "casing": {}
          },
          {
            "generatedName": "OVERTIME",
            "value": "OVERTIME",
            "casing": {}
          },
          {
            "generatedName": "BONUS",
            "value": "BONUS",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "Employee": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "employeeId",
            "key": "id",
            "schema": {
              "generatedName": "employeeId",
              "value": {
                "schema": {
                  "format": "uuid",
                  "example": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                  "type": "string"
                },
                "generatedName": "EmployeeId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "employeeRemoteId",
            "key": "remote_id",
            "schema": {
              "generatedName": "employeeRemoteId",
              "value": {
                "generatedName": "EmployeeRemoteId",
                "description": "The third-party API ID of the matching object.",
                "value": {
                  "description": "The third-party API ID of the matching object.",
                  "schema": {
                    "example": "19202938",
                    "type": "string"
                  },
                  "generatedName": "EmployeeRemoteId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeEmployeeNumber",
            "key": "employee_number",
            "schema": {
              "generatedName": "employeeEmployeeNumber",
              "value": {
                "generatedName": "EmployeeEmployeeNumber",
                "description": "The employee's number that appears in the third-party integration's UI.",
                "value": {
                  "description": "The employee's number that appears in the third-party integration's UI.",
                  "schema": {
                    "example": "2",
                    "type": "string"
                  },
                  "generatedName": "EmployeeEmployeeNumber",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeCompany",
            "key": "company",
            "schema": {
              "generatedName": "employeeCompany",
              "value": {
                "generatedName": "EmployeeCompany",
                "description": "The ID of the employee's company.",
                "value": {
                  "description": "The ID of the employee's company.",
                  "schema": {
                    "format": "uuid",
                    "example": "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                    "type": "string"
                  },
                  "generatedName": "EmployeeCompany",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeFirstName",
            "key": "first_name",
            "schema": {
              "generatedName": "employeeFirstName",
              "value": {
                "generatedName": "EmployeeFirstName",
                "description": "The employee's first name.",
                "value": {
                  "description": "The employee's first name.",
                  "schema": {
                    "example": "Greg",
                    "type": "string"
                  },
                  "generatedName": "EmployeeFirstName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeLastName",
            "key": "last_name",
            "schema": {
              "generatedName": "employeeLastName",
              "value": {
                "generatedName": "EmployeeLastName",
                "description": "The employee's last name.",
                "value": {
                  "description": "The employee's last name.",
                  "schema": {
                    "example": "Hirsch",
                    "type": "string"
                  },
                  "generatedName": "EmployeeLastName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeDisplayFullName",
            "key": "display_full_name",
            "schema": {
              "generatedName": "employeeDisplayFullName",
              "value": {
                "generatedName": "EmployeeDisplayFullName",
                "description": "The employee's full name, to use for display purposes. If a preferred first name is available, the full name will include the preferred first name.",
                "value": {
                  "description": "The employee's full name, to use for display purposes. If a preferred first name is available, the full name will include the preferred first name.",
                  "schema": {
                    "example": "Cousin Greg Hirsch",
                    "type": "string"
                  },
                  "generatedName": "EmployeeDisplayFullName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeUsername",
            "key": "username",
            "schema": {
              "generatedName": "employeeUsername",
              "value": {
                "generatedName": "EmployeeUsername",
                "description": "The employee's username that appears in the remote UI.",
                "value": {
                  "description": "The employee's username that appears in the remote UI.",
                  "schema": {
                    "example": "cousingreg",
                    "type": "string"
                  },
                  "generatedName": "EmployeeUsername",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeGroups",
            "key": "groups",
            "schema": {
              "generatedName": "employeeGroups",
              "value": {
                "value": {
                  "generatedName": "EmployeeGroupsItem",
                  "value": {
                    "schema": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "generatedName": "EmployeeGroupsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "generatedName": "EmployeeGroups",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeWorkEmail",
            "key": "work_email",
            "schema": {
              "generatedName": "employeeWorkEmail",
              "value": {
                "generatedName": "EmployeeWorkEmail",
                "description": "The employee's work email.",
                "value": {
                  "description": "The employee's work email.",
                  "schema": {
                    "format": "email",
                    "maxLength": 254,
                    "example": "greg@merge.dev",
                    "type": "string"
                  },
                  "generatedName": "EmployeeWorkEmail",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeePersonalEmail",
            "key": "personal_email",
            "schema": {
              "generatedName": "employeePersonalEmail",
              "value": {
                "generatedName": "EmployeePersonalEmail",
                "description": "The employee's personal email.",
                "value": {
                  "description": "The employee's personal email.",
                  "schema": {
                    "format": "email",
                    "maxLength": 254,
                    "example": "greg@gmail.com",
                    "type": "string"
                  },
                  "generatedName": "EmployeePersonalEmail",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeMobilePhoneNumber",
            "key": "mobile_phone_number",
            "schema": {
              "generatedName": "employeeMobilePhoneNumber",
              "value": {
                "generatedName": "EmployeeMobilePhoneNumber",
                "description": "The employee's mobile phone number.",
                "value": {
                  "description": "The employee's mobile phone number.",
                  "schema": {
                    "example": "+1234567890",
                    "type": "string"
                  },
                  "generatedName": "EmployeeMobilePhoneNumber",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeEmployments",
            "key": "employments",
            "schema": {
              "generatedName": "employeeEmployments",
              "value": {
                "description": "Array of `Employment` IDs for this Employee.",
                "value": {
                  "generatedName": "EmployeeEmploymentsItem",
                  "value": {
                    "schema": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "generatedName": "EmployeeEmploymentsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "generatedName": "EmployeeEmployments",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeHomeLocation",
            "key": "home_location",
            "schema": {
              "generatedName": "employeeHomeLocation",
              "value": {
                "generatedName": "EmployeeHomeLocation",
                "description": "The employee's home address.",
                "value": {
                  "description": "The employee's home address.",
                  "schema": {
                    "format": "uuid",
                    "example": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                    "type": "string"
                  },
                  "generatedName": "EmployeeHomeLocation",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeWorkLocation",
            "key": "work_location",
            "schema": {
              "generatedName": "employeeWorkLocation",
              "value": {
                "generatedName": "EmployeeWorkLocation",
                "description": "The employee's work address.",
                "value": {
                  "description": "The employee's work address.",
                  "schema": {
                    "format": "uuid",
                    "example": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                    "type": "string"
                  },
                  "generatedName": "EmployeeWorkLocation",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeManager",
            "key": "manager",
            "schema": {
              "generatedName": "employeeManager",
              "value": {
                "generatedName": "EmployeeManager",
                "description": "The employee ID of the employee's manager.",
                "value": {
                  "description": "The employee ID of the employee's manager.",
                  "schema": {
                    "format": "uuid",
                    "example": "0048ea5b-911e-4dff-9364-92070dea62ff",
                    "type": "string"
                  },
                  "generatedName": "EmployeeManager",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeTeam",
            "key": "team",
            "schema": {
              "generatedName": "employeeTeam",
              "value": {
                "generatedName": "EmployeeTeam",
                "description": "The employee's team.",
                "value": {
                  "description": "The employee's team.",
                  "schema": {
                    "format": "uuid",
                    "example": "249c9faa-3045-4a31-953b-8f22d3613301",
                    "type": "string"
                  },
                  "generatedName": "EmployeeTeam",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeePayGroup",
            "key": "pay_group",
            "schema": {
              "generatedName": "employeePayGroup",
              "value": {
                "generatedName": "EmployeePayGroup",
                "description": "The employee's pay group",
                "value": {
                  "description": "The employee's pay group",
                  "schema": {
                    "format": "uuid",
                    "example": "ad1264e2-39be-4787-b749-f1aade9e3405",
                    "type": "string"
                  },
                  "generatedName": "EmployeePayGroup",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeSsn",
            "key": "ssn",
            "schema": {
              "generatedName": "employeeSsn",
              "value": {
                "generatedName": "EmployeeSsn",
                "description": "The employee's social security number.",
                "value": {
                  "description": "The employee's social security number.",
                  "schema": {
                    "maxLength": 100,
                    "example": "1234567890",
                    "type": "string"
                  },
                  "generatedName": "EmployeeSsn",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeGender",
            "key": "gender",
            "schema": {
              "generatedName": "employeeGender",
              "value": {
                "generatedName": "EmployeeGender",
                "description": "The employee's gender.\n\n* `MALE` - MALE\n* `FEMALE` - FEMALE\n* `NON-BINARY` - NON-BINARY\n* `OTHER` - OTHER\n* `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE",
                "value": {
                  "generatedName": "EmployeeGender",
                  "schema": "GenderEnum",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeEthnicity",
            "key": "ethnicity",
            "schema": {
              "generatedName": "employeeEthnicity",
              "value": {
                "generatedName": "EmployeeEthnicity",
                "description": "The employee's ethnicity.\n\n* `AMERICAN_INDIAN_OR_ALASKA_NATIVE` - AMERICAN_INDIAN_OR_ALASKA_NATIVE\n* `ASIAN_OR_INDIAN_SUBCONTINENT` - ASIAN_OR_INDIAN_SUBCONTINENT\n* `BLACK_OR_AFRICAN_AMERICAN` - BLACK_OR_AFRICAN_AMERICAN\n* `HISPANIC_OR_LATINO` - HISPANIC_OR_LATINO\n* `NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER` - NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER\n* `TWO_OR_MORE_RACES` - TWO_OR_MORE_RACES\n* `WHITE` - WHITE\n* `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE",
                "value": {
                  "generatedName": "EmployeeEthnicity",
                  "schema": "EthnicityEnum",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeMaritalStatus",
            "key": "marital_status",
            "schema": {
              "generatedName": "employeeMaritalStatus",
              "value": {
                "generatedName": "EmployeeMaritalStatus",
                "description": "The employee's filing status as related to marital status.\n\n* `SINGLE` - SINGLE\n* `MARRIED_FILING_JOINTLY` - MARRIED_FILING_JOINTLY\n* `MARRIED_FILING_SEPARATELY` - MARRIED_FILING_SEPARATELY\n* `HEAD_OF_HOUSEHOLD` - HEAD_OF_HOUSEHOLD\n* `QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD` - QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD",
                "value": {
                  "generatedName": "EmployeeMaritalStatus",
                  "schema": "MaritalStatusEnum",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeDateOfBirth",
            "key": "date_of_birth",
            "schema": {
              "generatedName": "employeeDateOfBirth",
              "value": {
                "generatedName": "EmployeeDateOfBirth",
                "description": "The employee's date of birth.",
                "value": {
                  "description": "The employee's date of birth.",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "EmployeeDateOfBirth",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeHireDate",
            "key": "hire_date",
            "schema": {
              "generatedName": "employeeHireDate",
              "availability": "Deprecated",
              "value": {
                "generatedName": "EmployeeHireDate",
                "description": "The date that the employee was hired, usually the day that an offer letter is signed. If an employee has multiple hire dates from previous employments, this represents the most recent hire date. Note: If you're looking for the employee's start date, refer to the start_date field.",
                "availability": "Deprecated",
                "value": {
                  "description": "The date that the employee was hired, usually the day that an offer letter is signed. If an employee has multiple hire dates from previous employments, this represents the most recent hire date. Note: If you're looking for the employee's start date, refer to the start_date field.",
                  "availability": "Deprecated",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "EmployeeHireDate",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "availability": "Deprecated"
          },
          {
            "conflict": {},
            "generatedName": "employeeStartDate",
            "key": "start_date",
            "schema": {
              "generatedName": "employeeStartDate",
              "value": {
                "generatedName": "EmployeeStartDate",
                "description": "The date that the employee started working. If an employee was rehired, the most recent start date will be returned.",
                "value": {
                  "description": "The date that the employee started working. If an employee was rehired, the most recent start date will be returned.",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "EmployeeStartDate",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeRemoteCreatedAt",
            "key": "remote_created_at",
            "schema": {
              "generatedName": "employeeRemoteCreatedAt",
              "value": {
                "generatedName": "EmployeeRemoteCreatedAt",
                "description": "When the third party's employee was created.",
                "value": {
                  "description": "When the third party's employee was created.",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "EmployeeRemoteCreatedAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeEmploymentStatus",
            "key": "employment_status",
            "schema": {
              "generatedName": "employeeEmploymentStatus",
              "value": {
                "generatedName": "EmployeeEmploymentStatus",
                "description": "The employment status of the employee.\n\n* `ACTIVE` - ACTIVE\n* `PENDING` - PENDING\n* `INACTIVE` - INACTIVE",
                "value": {
                  "generatedName": "EmployeeEmploymentStatus",
                  "schema": "EmploymentStatusEnum",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeTerminationDate",
            "key": "termination_date",
            "schema": {
              "generatedName": "employeeTerminationDate",
              "value": {
                "generatedName": "EmployeeTerminationDate",
                "description": "The employee's termination date.",
                "value": {
                  "description": "The employee's termination date.",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "EmployeeTerminationDate",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeAvatar",
            "key": "avatar",
            "schema": {
              "generatedName": "employeeAvatar",
              "value": {
                "generatedName": "EmployeeAvatar",
                "description": "The URL of the employee's avatar image.",
                "value": {
                  "description": "The URL of the employee's avatar image.",
                  "schema": {
                    "format": "uri",
                    "maxLength": 2000,
                    "example": "http://alturl.com/h2h8m",
                    "type": "string"
                  },
                  "generatedName": "EmployeeAvatar",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeCustomFields",
            "key": "custom_fields",
            "schema": {
              "generatedName": "employeeCustomFields",
              "value": {
                "generatedName": "EmployeeCustomFields",
                "description": "Custom fields configured for a given model.",
                "value": {
                  "description": "Custom fields configured for a given model.",
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "EmployeeCustomFieldsKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "EmployeeCustomFieldsValue",
                    "type": "unknown"
                  },
                  "generatedName": "EmployeeCustomFields",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeRemoteWasDeleted",
            "key": "remote_was_deleted",
            "schema": {
              "generatedName": "employeeRemoteWasDeleted",
              "value": {
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "EmployeeRemoteWasDeleted",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "employeeModifiedAt",
            "key": "modified_at",
            "schema": {
              "generatedName": "employeeModifiedAt",
              "value": {
                "description": "This is the datetime that this object was last updated by Merge",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "EmployeeModifiedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "employeeFieldMappings",
            "key": "field_mappings",
            "schema": {
              "generatedName": "employeeFieldMappings",
              "value": {
                "generatedName": "EmployeeFieldMappings",
                "value": {
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "EmployeeFieldMappingsKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "EmployeeFieldMappingsValue",
                    "type": "unknown"
                  },
                  "generatedName": "EmployeeFieldMappings",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "employeeRemoteData",
            "key": "remote_data",
            "schema": {
              "generatedName": "employeeRemoteData",
              "value": {
                "generatedName": "EmployeeRemoteData",
                "value": {
                  "value": {
                    "generatedName": "EmployeeRemoteDataItem",
                    "schema": "RemoteData",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "EmployeeRemoteData",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "# The Employee Object\n### Description\nThe `Employee` object is used to represent any person who has been employed by a company.\n\n### Usage Example\nFetch from the `LIST Employee` endpoint and filter by `ID` to show all employees.",
        "generatedName": "Employee",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "EmployeeEndpointRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "employeeEndpointRequestModel",
            "key": "model",
            "schema": {
              "generatedName": "EmployeeEndpointRequestModel",
              "schema": "EmployeeRequest",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EmployeeEndpointRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "EmployeePayrollRun": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "employeePayrollRunId",
            "key": "id",
            "schema": {
              "generatedName": "employeePayrollRunId",
              "value": {
                "schema": {
                  "format": "uuid",
                  "example": "fb8c55b6-1cb8-4b4c-9fb6-17924231619d",
                  "type": "string"
                },
                "generatedName": "EmployeePayrollRunId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "employeePayrollRunRemoteId",
            "key": "remote_id",
            "schema": {
              "generatedName": "employeePayrollRunRemoteId",
              "value": {
                "generatedName": "EmployeePayrollRunRemoteId",
                "description": "The third-party API ID of the matching object.",
                "value": {
                  "description": "The third-party API ID of the matching object.",
                  "schema": {
                    "example": "19202938",
                    "type": "string"
                  },
                  "generatedName": "EmployeePayrollRunRemoteId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeePayrollRunEmployee",
            "key": "employee",
            "schema": {
              "generatedName": "employeePayrollRunEmployee",
              "value": {
                "generatedName": "EmployeePayrollRunEmployee",
                "description": "The employee whose payroll is being run.",
                "value": {
                  "description": "The employee whose payroll is being run.",
                  "schema": {
                    "format": "uuid",
                    "example": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                    "type": "string"
                  },
                  "generatedName": "EmployeePayrollRunEmployee",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeePayrollRunPayrollRun",
            "key": "payroll_run",
            "schema": {
              "generatedName": "employeePayrollRunPayrollRun",
              "value": {
                "generatedName": "EmployeePayrollRunPayrollRun",
                "description": "The payroll being run.",
                "value": {
                  "description": "The payroll being run.",
                  "schema": {
                    "format": "uuid",
                    "example": "35347df1-95e7-46e2-93cc-66f1191edca5",
                    "type": "string"
                  },
                  "generatedName": "EmployeePayrollRunPayrollRun",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeePayrollRunGrossPay",
            "key": "gross_pay",
            "schema": {
              "generatedName": "employeePayrollRunGrossPay",
              "value": {
                "generatedName": "EmployeePayrollRunGrossPay",
                "description": "The total earnings throughout a given period for an employee before any deductions are made.",
                "value": {
                  "description": "The total earnings throughout a given period for an employee before any deductions are made.",
                  "schema": {
                    "example": 1342.67,
                    "type": "double"
                  },
                  "generatedName": "EmployeePayrollRunGrossPay",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeePayrollRunNetPay",
            "key": "net_pay",
            "schema": {
              "generatedName": "employeePayrollRunNetPay",
              "value": {
                "generatedName": "EmployeePayrollRunNetPay",
                "description": "The take-home pay throughout a given period for an employee after deductions are made.",
                "value": {
                  "description": "The take-home pay throughout a given period for an employee after deductions are made.",
                  "schema": {
                    "example": 865.78,
                    "type": "double"
                  },
                  "generatedName": "EmployeePayrollRunNetPay",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeePayrollRunStartDate",
            "key": "start_date",
            "schema": {
              "generatedName": "employeePayrollRunStartDate",
              "value": {
                "generatedName": "EmployeePayrollRunStartDate",
                "description": "The day and time the payroll run started.",
                "value": {
                  "description": "The day and time the payroll run started.",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "EmployeePayrollRunStartDate",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeePayrollRunEndDate",
            "key": "end_date",
            "schema": {
              "generatedName": "employeePayrollRunEndDate",
              "value": {
                "generatedName": "EmployeePayrollRunEndDate",
                "description": "The day and time the payroll run ended.",
                "value": {
                  "description": "The day and time the payroll run ended.",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "EmployeePayrollRunEndDate",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeePayrollRunCheckDate",
            "key": "check_date",
            "schema": {
              "generatedName": "employeePayrollRunCheckDate",
              "value": {
                "generatedName": "EmployeePayrollRunCheckDate",
                "description": "The day and time the payroll run was checked.",
                "value": {
                  "description": "The day and time the payroll run was checked.",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "EmployeePayrollRunCheckDate",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeePayrollRunEarnings",
            "key": "earnings",
            "schema": {
              "generatedName": "employeePayrollRunEarnings",
              "value": {
                "value": {
                  "generatedName": "EmployeePayrollRunEarningsItem",
                  "schema": "Earning",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "EmployeePayrollRunEarnings",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "employeePayrollRunDeductions",
            "key": "deductions",
            "schema": {
              "generatedName": "employeePayrollRunDeductions",
              "value": {
                "value": {
                  "generatedName": "EmployeePayrollRunDeductionsItem",
                  "schema": "Deduction",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "EmployeePayrollRunDeductions",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "employeePayrollRunTaxes",
            "key": "taxes",
            "schema": {
              "generatedName": "employeePayrollRunTaxes",
              "value": {
                "value": {
                  "generatedName": "EmployeePayrollRunTaxesItem",
                  "schema": "Tax",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "EmployeePayrollRunTaxes",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "employeePayrollRunRemoteWasDeleted",
            "key": "remote_was_deleted",
            "schema": {
              "generatedName": "employeePayrollRunRemoteWasDeleted",
              "value": {
                "description": "Indicates whether or not this object has been deleted by third party webhooks.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "EmployeePayrollRunRemoteWasDeleted",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "employeePayrollRunModifiedAt",
            "key": "modified_at",
            "schema": {
              "generatedName": "employeePayrollRunModifiedAt",
              "value": {
                "description": "This is the datetime that this object was last updated by Merge",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "EmployeePayrollRunModifiedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "employeePayrollRunFieldMappings",
            "key": "field_mappings",
            "schema": {
              "generatedName": "employeePayrollRunFieldMappings",
              "value": {
                "generatedName": "EmployeePayrollRunFieldMappings",
                "value": {
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "EmployeePayrollRunFieldMappingsKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "EmployeePayrollRunFieldMappingsValue",
                    "type": "unknown"
                  },
                  "generatedName": "EmployeePayrollRunFieldMappings",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "employeePayrollRunRemoteData",
            "key": "remote_data",
            "schema": {
              "generatedName": "employeePayrollRunRemoteData",
              "value": {
                "generatedName": "EmployeePayrollRunRemoteData",
                "value": {
                  "value": {
                    "generatedName": "EmployeePayrollRunRemoteDataItem",
                    "schema": "RemoteData",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "EmployeePayrollRunRemoteData",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "# The EmployeePayrollRun Object\n### Description\nThe `EmployeePayrollRun` object is used to represent an employee's pay statement for a specific payroll run.\n\n### Usage Example\nFetch from the `LIST EmployeePayrollRun` endpoint and filter by `ID` to show all employee payroll runs.",
        "generatedName": "EmployeePayrollRun",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "EmployeeRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "employeeRequestEmployeeNumber",
            "key": "employee_number",
            "schema": {
              "generatedName": "employeeRequestEmployeeNumber",
              "value": {
                "generatedName": "EmployeeRequestEmployeeNumber",
                "description": "The employee's number that appears in the third-party integration's UI.",
                "value": {
                  "description": "The employee's number that appears in the third-party integration's UI.",
                  "schema": {
                    "example": "2",
                    "type": "string"
                  },
                  "generatedName": "EmployeeRequestEmployeeNumber",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeRequestCompany",
            "key": "company",
            "schema": {
              "generatedName": "employeeRequestCompany",
              "value": {
                "generatedName": "EmployeeRequestCompany",
                "description": "The ID of the employee's company.",
                "value": {
                  "description": "The ID of the employee's company.",
                  "schema": {
                    "format": "uuid",
                    "example": "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                    "type": "string"
                  },
                  "generatedName": "EmployeeRequestCompany",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeRequestFirstName",
            "key": "first_name",
            "schema": {
              "generatedName": "employeeRequestFirstName",
              "value": {
                "generatedName": "EmployeeRequestFirstName",
                "description": "The employee's first name.",
                "value": {
                  "description": "The employee's first name.",
                  "schema": {
                    "example": "Greg",
                    "type": "string"
                  },
                  "generatedName": "EmployeeRequestFirstName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeRequestLastName",
            "key": "last_name",
            "schema": {
              "generatedName": "employeeRequestLastName",
              "value": {
                "generatedName": "EmployeeRequestLastName",
                "description": "The employee's last name.",
                "value": {
                  "description": "The employee's last name.",
                  "schema": {
                    "example": "Hirsch",
                    "type": "string"
                  },
                  "generatedName": "EmployeeRequestLastName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeRequestDisplayFullName",
            "key": "display_full_name",
            "schema": {
              "generatedName": "employeeRequestDisplayFullName",
              "value": {
                "generatedName": "EmployeeRequestDisplayFullName",
                "description": "The employee's full name, to use for display purposes. If a preferred first name is available, the full name will include the preferred first name.",
                "value": {
                  "description": "The employee's full name, to use for display purposes. If a preferred first name is available, the full name will include the preferred first name.",
                  "schema": {
                    "example": "Cousin Greg Hirsch",
                    "type": "string"
                  },
                  "generatedName": "EmployeeRequestDisplayFullName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeRequestUsername",
            "key": "username",
            "schema": {
              "generatedName": "employeeRequestUsername",
              "value": {
                "generatedName": "EmployeeRequestUsername",
                "description": "The employee's username that appears in the remote UI.",
                "value": {
                  "description": "The employee's username that appears in the remote UI.",
                  "schema": {
                    "example": "cousingreg",
                    "type": "string"
                  },
                  "generatedName": "EmployeeRequestUsername",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeRequestGroups",
            "key": "groups",
            "schema": {
              "generatedName": "employeeRequestGroups",
              "value": {
                "value": {
                  "generatedName": "EmployeeRequestGroupsItem",
                  "value": {
                    "schema": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "generatedName": "EmployeeRequestGroupsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "generatedName": "EmployeeRequestGroups",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeRequestWorkEmail",
            "key": "work_email",
            "schema": {
              "generatedName": "employeeRequestWorkEmail",
              "value": {
                "generatedName": "EmployeeRequestWorkEmail",
                "description": "The employee's work email.",
                "value": {
                  "description": "The employee's work email.",
                  "schema": {
                    "format": "email",
                    "maxLength": 254,
                    "example": "greg@merge.dev",
                    "type": "string"
                  },
                  "generatedName": "EmployeeRequestWorkEmail",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeRequestPersonalEmail",
            "key": "personal_email",
            "schema": {
              "generatedName": "employeeRequestPersonalEmail",
              "value": {
                "generatedName": "EmployeeRequestPersonalEmail",
                "description": "The employee's personal email.",
                "value": {
                  "description": "The employee's personal email.",
                  "schema": {
                    "format": "email",
                    "maxLength": 254,
                    "example": "greg@gmail.com",
                    "type": "string"
                  },
                  "generatedName": "EmployeeRequestPersonalEmail",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeRequestMobilePhoneNumber",
            "key": "mobile_phone_number",
            "schema": {
              "generatedName": "employeeRequestMobilePhoneNumber",
              "value": {
                "generatedName": "EmployeeRequestMobilePhoneNumber",
                "description": "The employee's mobile phone number.",
                "value": {
                  "description": "The employee's mobile phone number.",
                  "schema": {
                    "example": "+1234567890",
                    "type": "string"
                  },
                  "generatedName": "EmployeeRequestMobilePhoneNumber",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeRequestEmployments",
            "key": "employments",
            "schema": {
              "generatedName": "employeeRequestEmployments",
              "value": {
                "description": "Array of `Employment` IDs for this Employee.",
                "value": {
                  "generatedName": "EmployeeRequestEmploymentsItem",
                  "value": {
                    "schema": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "generatedName": "EmployeeRequestEmploymentsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "generatedName": "EmployeeRequestEmployments",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeRequestHomeLocation",
            "key": "home_location",
            "schema": {
              "generatedName": "employeeRequestHomeLocation",
              "value": {
                "generatedName": "EmployeeRequestHomeLocation",
                "description": "The employee's home address.",
                "value": {
                  "description": "The employee's home address.",
                  "schema": {
                    "format": "uuid",
                    "example": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                    "type": "string"
                  },
                  "generatedName": "EmployeeRequestHomeLocation",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeRequestWorkLocation",
            "key": "work_location",
            "schema": {
              "generatedName": "employeeRequestWorkLocation",
              "value": {
                "generatedName": "EmployeeRequestWorkLocation",
                "description": "The employee's work address.",
                "value": {
                  "description": "The employee's work address.",
                  "schema": {
                    "format": "uuid",
                    "example": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                    "type": "string"
                  },
                  "generatedName": "EmployeeRequestWorkLocation",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeRequestManager",
            "key": "manager",
            "schema": {
              "generatedName": "employeeRequestManager",
              "value": {
                "generatedName": "EmployeeRequestManager",
                "description": "The employee ID of the employee's manager.",
                "value": {
                  "description": "The employee ID of the employee's manager.",
                  "schema": {
                    "format": "uuid",
                    "example": "0048ea5b-911e-4dff-9364-92070dea62ff",
                    "type": "string"
                  },
                  "generatedName": "EmployeeRequestManager",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeRequestTeam",
            "key": "team",
            "schema": {
              "generatedName": "employeeRequestTeam",
              "value": {
                "generatedName": "EmployeeRequestTeam",
                "description": "The employee's team.",
                "value": {
                  "description": "The employee's team.",
                  "schema": {
                    "format": "uuid",
                    "example": "249c9faa-3045-4a31-953b-8f22d3613301",
                    "type": "string"
                  },
                  "generatedName": "EmployeeRequestTeam",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeRequestPayGroup",
            "key": "pay_group",
            "schema": {
              "generatedName": "employeeRequestPayGroup",
              "value": {
                "generatedName": "EmployeeRequestPayGroup",
                "description": "The employee's pay group",
                "value": {
                  "description": "The employee's pay group",
                  "schema": {
                    "format": "uuid",
                    "example": "ad1264e2-39be-4787-b749-f1aade9e3405",
                    "type": "string"
                  },
                  "generatedName": "EmployeeRequestPayGroup",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeRequestSsn",
            "key": "ssn",
            "schema": {
              "generatedName": "employeeRequestSsn",
              "value": {
                "generatedName": "EmployeeRequestSsn",
                "description": "The employee's social security number.",
                "value": {
                  "description": "The employee's social security number.",
                  "schema": {
                    "maxLength": 100,
                    "example": "1234567890",
                    "type": "string"
                  },
                  "generatedName": "EmployeeRequestSsn",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeRequestGender",
            "key": "gender",
            "schema": {
              "generatedName": "employeeRequestGender",
              "value": {
                "generatedName": "EmployeeRequestGender",
                "description": "The employee's gender.\n\n* `MALE` - MALE\n* `FEMALE` - FEMALE\n* `NON-BINARY` - NON-BINARY\n* `OTHER` - OTHER\n* `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE",
                "value": {
                  "generatedName": "EmployeeRequestGender",
                  "schema": "GenderEnum",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeRequestEthnicity",
            "key": "ethnicity",
            "schema": {
              "generatedName": "employeeRequestEthnicity",
              "value": {
                "generatedName": "EmployeeRequestEthnicity",
                "description": "The employee's ethnicity.\n\n* `AMERICAN_INDIAN_OR_ALASKA_NATIVE` - AMERICAN_INDIAN_OR_ALASKA_NATIVE\n* `ASIAN_OR_INDIAN_SUBCONTINENT` - ASIAN_OR_INDIAN_SUBCONTINENT\n* `BLACK_OR_AFRICAN_AMERICAN` - BLACK_OR_AFRICAN_AMERICAN\n* `HISPANIC_OR_LATINO` - HISPANIC_OR_LATINO\n* `NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER` - NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER\n* `TWO_OR_MORE_RACES` - TWO_OR_MORE_RACES\n* `WHITE` - WHITE\n* `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE",
                "value": {
                  "generatedName": "EmployeeRequestEthnicity",
                  "schema": "EthnicityEnum",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeRequestMaritalStatus",
            "key": "marital_status",
            "schema": {
              "generatedName": "employeeRequestMaritalStatus",
              "value": {
                "generatedName": "EmployeeRequestMaritalStatus",
                "description": "The employee's filing status as related to marital status.\n\n* `SINGLE` - SINGLE\n* `MARRIED_FILING_JOINTLY` - MARRIED_FILING_JOINTLY\n* `MARRIED_FILING_SEPARATELY` - MARRIED_FILING_SEPARATELY\n* `HEAD_OF_HOUSEHOLD` - HEAD_OF_HOUSEHOLD\n* `QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD` - QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD",
                "value": {
                  "generatedName": "EmployeeRequestMaritalStatus",
                  "schema": "MaritalStatusEnum",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeRequestDateOfBirth",
            "key": "date_of_birth",
            "schema": {
              "generatedName": "employeeRequestDateOfBirth",
              "value": {
                "generatedName": "EmployeeRequestDateOfBirth",
                "description": "The employee's date of birth.",
                "value": {
                  "description": "The employee's date of birth.",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "EmployeeRequestDateOfBirth",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeRequestHireDate",
            "key": "hire_date",
            "schema": {
              "generatedName": "employeeRequestHireDate",
              "availability": "Deprecated",
              "value": {
                "generatedName": "EmployeeRequestHireDate",
                "description": "The date that the employee was hired, usually the day that an offer letter is signed. If an employee has multiple hire dates from previous employments, this represents the most recent hire date. Note: If you're looking for the employee's start date, refer to the start_date field.",
                "availability": "Deprecated",
                "value": {
                  "description": "The date that the employee was hired, usually the day that an offer letter is signed. If an employee has multiple hire dates from previous employments, this represents the most recent hire date. Note: If you're looking for the employee's start date, refer to the start_date field.",
                  "availability": "Deprecated",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "EmployeeRequestHireDate",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "availability": "Deprecated"
          },
          {
            "conflict": {},
            "generatedName": "employeeRequestStartDate",
            "key": "start_date",
            "schema": {
              "generatedName": "employeeRequestStartDate",
              "value": {
                "generatedName": "EmployeeRequestStartDate",
                "description": "The date that the employee started working. If an employee was rehired, the most recent start date will be returned.",
                "value": {
                  "description": "The date that the employee started working. If an employee was rehired, the most recent start date will be returned.",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "EmployeeRequestStartDate",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeRequestEmploymentStatus",
            "key": "employment_status",
            "schema": {
              "generatedName": "employeeRequestEmploymentStatus",
              "value": {
                "generatedName": "EmployeeRequestEmploymentStatus",
                "description": "The employment status of the employee.\n\n* `ACTIVE` - ACTIVE\n* `PENDING` - PENDING\n* `INACTIVE` - INACTIVE",
                "value": {
                  "generatedName": "EmployeeRequestEmploymentStatus",
                  "schema": "EmploymentStatusEnum",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeRequestTerminationDate",
            "key": "termination_date",
            "schema": {
              "generatedName": "employeeRequestTerminationDate",
              "value": {
                "generatedName": "EmployeeRequestTerminationDate",
                "description": "The employee's termination date.",
                "value": {
                  "description": "The employee's termination date.",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "EmployeeRequestTerminationDate",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeRequestAvatar",
            "key": "avatar",
            "schema": {
              "generatedName": "employeeRequestAvatar",
              "value": {
                "generatedName": "EmployeeRequestAvatar",
                "description": "The URL of the employee's avatar image.",
                "value": {
                  "description": "The URL of the employee's avatar image.",
                  "schema": {
                    "format": "uri",
                    "maxLength": 2000,
                    "example": "http://alturl.com/h2h8m",
                    "type": "string"
                  },
                  "generatedName": "EmployeeRequestAvatar",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeRequestIntegrationParams",
            "key": "integration_params",
            "schema": {
              "generatedName": "employeeRequestIntegrationParams",
              "value": {
                "generatedName": "EmployeeRequestIntegrationParams",
                "value": {
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "EmployeeRequestIntegrationParamsKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "EmployeeRequestIntegrationParamsValue",
                    "type": "unknown"
                  },
                  "generatedName": "EmployeeRequestIntegrationParams",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeRequestLinkedAccountParams",
            "key": "linked_account_params",
            "schema": {
              "generatedName": "employeeRequestLinkedAccountParams",
              "value": {
                "generatedName": "EmployeeRequestLinkedAccountParams",
                "value": {
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "EmployeeRequestLinkedAccountParamsKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "EmployeeRequestLinkedAccountParamsValue",
                    "type": "unknown"
                  },
                  "generatedName": "EmployeeRequestLinkedAccountParams",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "# The Employee Object\n### Description\nThe `Employee` object is used to represent any person who has been employed by a company.\n\n### Usage Example\nFetch from the `LIST Employee` endpoint and filter by `ID` to show all employees.",
        "generatedName": "EmployeeRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "EmployeeResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "employeeResponseModel",
            "key": "model",
            "schema": {
              "generatedName": "EmployeeResponseModel",
              "schema": "Employee",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "employeeResponseWarnings",
            "key": "warnings",
            "schema": {
              "value": {
                "generatedName": "EmployeeResponseWarningsItem",
                "schema": "WarningValidationProblem",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "EmployeeResponseWarnings",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeResponseErrors",
            "key": "errors",
            "schema": {
              "value": {
                "generatedName": "EmployeeResponseErrorsItem",
                "schema": "ErrorValidationProblem",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "EmployeeResponseErrors",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employeeResponseLogs",
            "key": "logs",
            "schema": {
              "generatedName": "employeeResponseLogs",
              "value": {
                "value": {
                  "generatedName": "EmployeeResponseLogsItem",
                  "schema": "DebugModeLog",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "EmployeeResponseLogs",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EmployeeResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Employment": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "employmentId",
            "key": "id",
            "schema": {
              "generatedName": "employmentId",
              "value": {
                "schema": {
                  "format": "uuid",
                  "example": "65d8ffd0-211b-4ba4-b85a-fbe2ce220982",
                  "type": "string"
                },
                "generatedName": "EmploymentId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "employmentRemoteId",
            "key": "remote_id",
            "schema": {
              "generatedName": "employmentRemoteId",
              "value": {
                "generatedName": "EmploymentRemoteId",
                "description": "The third-party API ID of the matching object.",
                "value": {
                  "description": "The third-party API ID of the matching object.",
                  "schema": {
                    "example": "19202938",
                    "type": "string"
                  },
                  "generatedName": "EmploymentRemoteId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employmentEmployee",
            "key": "employee",
            "schema": {
              "generatedName": "employmentEmployee",
              "value": {
                "generatedName": "EmploymentEmployee",
                "description": "The employee holding this position.",
                "value": {
                  "description": "The employee holding this position.",
                  "schema": {
                    "format": "uuid",
                    "example": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                    "type": "string"
                  },
                  "generatedName": "EmploymentEmployee",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employmentJobTitle",
            "key": "job_title",
            "schema": {
              "generatedName": "employmentJobTitle",
              "value": {
                "generatedName": "EmploymentJobTitle",
                "description": "The position's title.",
                "value": {
                  "description": "The position's title.",
                  "schema": {
                    "example": "Executive Assistant to Tom Wambsgans",
                    "type": "string"
                  },
                  "generatedName": "EmploymentJobTitle",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employmentPayRate",
            "key": "pay_rate",
            "schema": {
              "generatedName": "employmentPayRate",
              "value": {
                "generatedName": "EmploymentPayRate",
                "description": "The position's pay rate in dollars.",
                "value": {
                  "description": "The position's pay rate in dollars.",
                  "schema": {
                    "type": "double"
                  },
                  "generatedName": "EmploymentPayRate",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employmentPayPeriod",
            "key": "pay_period",
            "schema": {
              "generatedName": "employmentPayPeriod",
              "value": {
                "generatedName": "EmploymentPayPeriod",
                "description": "The time period this pay rate encompasses.\n\n* `HOUR` - HOUR\n* `DAY` - DAY\n* `WEEK` - WEEK\n* `EVERY_TWO_WEEKS` - EVERY_TWO_WEEKS\n* `SEMIMONTHLY` - SEMIMONTHLY\n* `MONTH` - MONTH\n* `QUARTER` - QUARTER\n* `EVERY_SIX_MONTHS` - EVERY_SIX_MONTHS\n* `YEAR` - YEAR",
                "value": {
                  "generatedName": "EmploymentPayPeriod",
                  "schema": "PayPeriodEnum",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employmentPayFrequency",
            "key": "pay_frequency",
            "schema": {
              "generatedName": "employmentPayFrequency",
              "value": {
                "generatedName": "EmploymentPayFrequency",
                "description": "The position's pay frequency.\n\n* `WEEKLY` - WEEKLY\n* `BIWEEKLY` - BIWEEKLY\n* `MONTHLY` - MONTHLY\n* `QUARTERLY` - QUARTERLY\n* `SEMIANNUALLY` - SEMIANNUALLY\n* `ANNUALLY` - ANNUALLY\n* `THIRTEEN-MONTHLY` - THIRTEEN-MONTHLY\n* `PRO_RATA` - PRO_RATA\n* `SEMIMONTHLY` - SEMIMONTHLY",
                "value": {
                  "generatedName": "EmploymentPayFrequency",
                  "schema": "PayFrequencyEnum",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employmentPayCurrency",
            "key": "pay_currency",
            "schema": {
              "generatedName": "employmentPayCurrency",
              "value": {
                "generatedName": "EmploymentPayCurrency",
                "description": "The position's currency code.\n\n* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)",
                "value": {
                  "generatedName": "EmploymentPayCurrency",
                  "schema": "PayCurrencyEnum",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employmentPayGroup",
            "key": "pay_group",
            "schema": {
              "generatedName": "employmentPayGroup",
              "value": {
                "generatedName": "EmploymentPayGroup",
                "description": "The employment's pay group",
                "value": {
                  "description": "The employment's pay group",
                  "schema": {
                    "format": "uuid",
                    "example": "d4e4837f-9900-484c-ac40-528365bb08ef",
                    "type": "string"
                  },
                  "generatedName": "EmploymentPayGroup",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employmentFlsaStatus",
            "key": "flsa_status",
            "schema": {
              "generatedName": "employmentFlsaStatus",
              "value": {
                "generatedName": "EmploymentFlsaStatus",
                "description": "The position's FLSA status.\n\n* `EXEMPT` - EXEMPT\n* `SALARIED_NONEXEMPT` - SALARIED_NONEXEMPT\n* `NONEXEMPT` - NONEXEMPT\n* `OWNER` - OWNER",
                "value": {
                  "generatedName": "EmploymentFlsaStatus",
                  "schema": "FlsaStatusEnum",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employmentEffectiveDate",
            "key": "effective_date",
            "schema": {
              "generatedName": "employmentEffectiveDate",
              "value": {
                "generatedName": "EmploymentEffectiveDate",
                "description": "The position's effective date.",
                "value": {
                  "description": "The position's effective date.",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "EmploymentEffectiveDate",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employmentEmploymentType",
            "key": "employment_type",
            "schema": {
              "generatedName": "employmentEmploymentType",
              "value": {
                "generatedName": "EmploymentEmploymentType",
                "description": "The position's type of employment.\n\n* `FULL_TIME` - FULL_TIME\n* `PART_TIME` - PART_TIME\n* `INTERN` - INTERN\n* `CONTRACTOR` - CONTRACTOR\n* `FREELANCE` - FREELANCE",
                "value": {
                  "generatedName": "EmploymentEmploymentType",
                  "schema": "EmploymentTypeEnum",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "employmentRemoteWasDeleted",
            "key": "remote_was_deleted",
            "schema": {
              "generatedName": "employmentRemoteWasDeleted",
              "value": {
                "description": "Indicates whether or not this object has been deleted by third party webhooks.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "EmploymentRemoteWasDeleted",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "employmentModifiedAt",
            "key": "modified_at",
            "schema": {
              "generatedName": "employmentModifiedAt",
              "value": {
                "description": "This is the datetime that this object was last updated by Merge",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "EmploymentModifiedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "employmentFieldMappings",
            "key": "field_mappings",
            "schema": {
              "generatedName": "employmentFieldMappings",
              "value": {
                "generatedName": "EmploymentFieldMappings",
                "value": {
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "EmploymentFieldMappingsKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "EmploymentFieldMappingsValue",
                    "type": "unknown"
                  },
                  "generatedName": "EmploymentFieldMappings",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "employmentRemoteData",
            "key": "remote_data",
            "schema": {
              "generatedName": "employmentRemoteData",
              "value": {
                "generatedName": "EmploymentRemoteData",
                "value": {
                  "value": {
                    "generatedName": "EmploymentRemoteDataItem",
                    "schema": "RemoteData",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "EmploymentRemoteData",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "# The Employment Object\n### Description\nThe `Employment` object is used to represent a job position at a company.\n\nPlease note: When there is a change in pay or title, integrations with historical data will create new Employment objects while integrations without historical data will update existing ones.\n\n### Usage Example\nFetch from the `LIST Employments` endpoint and filter by `ID` to show all employees.",
        "generatedName": "Employment",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "EmploymentStatusEnum": {
        "description": "* `ACTIVE` - ACTIVE\n* `PENDING` - PENDING\n* `INACTIVE` - INACTIVE",
        "generatedName": "EmploymentStatusEnum",
        "values": [
          {
            "generatedName": "ACTIVE",
            "value": "ACTIVE",
            "casing": {}
          },
          {
            "generatedName": "PENDING",
            "value": "PENDING",
            "casing": {}
          },
          {
            "generatedName": "INACTIVE",
            "value": "INACTIVE",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "EmploymentTypeEnum": {
        "description": "* `FULL_TIME` - FULL_TIME\n* `PART_TIME` - PART_TIME\n* `INTERN` - INTERN\n* `CONTRACTOR` - CONTRACTOR\n* `FREELANCE` - FREELANCE",
        "generatedName": "EmploymentTypeEnum",
        "values": [
          {
            "generatedName": "FULL_TIME",
            "value": "FULL_TIME",
            "casing": {}
          },
          {
            "generatedName": "PART_TIME",
            "value": "PART_TIME",
            "casing": {}
          },
          {
            "generatedName": "INTERN",
            "value": "INTERN",
            "casing": {}
          },
          {
            "generatedName": "CONTRACTOR",
            "value": "CONTRACTOR",
            "casing": {}
          },
          {
            "generatedName": "FREELANCE",
            "value": "FREELANCE",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "EnabledActionsEnum": {
        "description": "* `READ` - READ\n* `WRITE` - WRITE",
        "generatedName": "EnabledActionsEnum",
        "values": [
          {
            "generatedName": "READ",
            "value": "READ",
            "casing": {}
          },
          {
            "generatedName": "WRITE",
            "value": "WRITE",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "EncodingEnum": {
        "description": "* `RAW` - RAW\n* `BASE64` - BASE64\n* `GZIP_BASE64` - GZIP_BASE64",
        "generatedName": "EncodingEnum",
        "values": [
          {
            "generatedName": "RAW",
            "value": "RAW",
            "casing": {}
          },
          {
            "generatedName": "BASE64",
            "value": "BASE64",
            "casing": {}
          },
          {
            "generatedName": "GZIP_BASE64",
            "value": "GZIP_BASE64",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "EndUserDetailsRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "endUserDetailsRequestEndUserEmailAddress",
            "key": "end_user_email_address",
            "schema": {
              "description": "Your end user's email address. This is purely for identification purposes - setting this value will not cause any emails to be sent.",
              "schema": {
                "minLength": 1,
                "maxLength": 100,
                "type": "string"
              },
              "generatedName": "EndUserDetailsRequestEndUserEmailAddress",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "endUserDetailsRequestEndUserOrganizationName",
            "key": "end_user_organization_name",
            "schema": {
              "description": "Your end user's organization.",
              "schema": {
                "minLength": 1,
                "maxLength": 100,
                "type": "string"
              },
              "generatedName": "EndUserDetailsRequestEndUserOrganizationName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "endUserDetailsRequestEndUserOriginId",
            "key": "end_user_origin_id",
            "schema": {
              "description": "This unique identifier typically represents the ID for your end user in your product's database. This value must be distinct from other Linked Accounts' unique identifiers.",
              "schema": {
                "minLength": 1,
                "maxLength": 100,
                "type": "string"
              },
              "generatedName": "EndUserDetailsRequestEndUserOriginId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "endUserDetailsRequestCategories",
            "key": "categories",
            "schema": {
              "description": "The integration categories to show in Merge Link.",
              "value": {
                "generatedName": "EndUserDetailsRequestCategoriesItem",
                "schema": "CategoriesEnum",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "EndUserDetailsRequestCategories",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "endUserDetailsRequestIntegration",
            "key": "integration",
            "schema": {
              "generatedName": "endUserDetailsRequestIntegration",
              "value": {
                "generatedName": "EndUserDetailsRequestIntegration",
                "description": "The slug of a specific pre-selected integration for this linking flow token. For examples of slugs, see https://www.merge.dev/docs/basics/integration-metadata/.",
                "value": {
                  "description": "The slug of a specific pre-selected integration for this linking flow token. For examples of slugs, see https://www.merge.dev/docs/basics/integration-metadata/.",
                  "schema": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "generatedName": "EndUserDetailsRequestIntegration",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "endUserDetailsRequestLinkExpiryMins",
            "key": "link_expiry_mins",
            "schema": {
              "generatedName": "endUserDetailsRequestLinkExpiryMins",
              "value": {
                "description": "An integer number of minutes between [30, 720 or 10080 if for a Magic Link URL] for how long this token is valid. Defaults to 30.",
                "schema": {
                  "default": 30,
                  "minimum": 30,
                  "maximum": 10080,
                  "type": "int"
                },
                "generatedName": "EndUserDetailsRequestLinkExpiryMins",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "endUserDetailsRequestShouldCreateMagicLinkUrl",
            "key": "should_create_magic_link_url",
            "schema": {
              "generatedName": "endUserDetailsRequestShouldCreateMagicLinkUrl",
              "value": {
                "generatedName": "EndUserDetailsRequestShouldCreateMagicLinkUrl",
                "description": "Whether to generate a Magic Link URL. Defaults to false. For more information on Magic Link, see https://merge.dev/blog/product/integrations,-fast.-say-hello-to-magic-link/.",
                "value": {
                  "description": "Whether to generate a Magic Link URL. Defaults to false. For more information on Magic Link, see https://merge.dev/blog/product/integrations,-fast.-say-hello-to-magic-link/.",
                  "schema": {
                    "default": false,
                    "type": "boolean"
                  },
                  "generatedName": "EndUserDetailsRequestShouldCreateMagicLinkUrl",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "endUserDetailsRequestCommonModels",
            "key": "common_models",
            "schema": {
              "generatedName": "endUserDetailsRequestCommonModels",
              "value": {
                "generatedName": "EndUserDetailsRequestCommonModels",
                "description": "An array of objects to specify the models and fields that will be disabled for a given Linked Account. Each object uses model_id, enabled_actions, and disabled_fields to specify the model, method, and fields that are scoped for a given Linked Account.",
                "value": {
                  "description": "An array of objects to specify the models and fields that will be disabled for a given Linked Account. Each object uses model_id, enabled_actions, and disabled_fields to specify the model, method, and fields that are scoped for a given Linked Account.",
                  "value": {
                    "generatedName": "EndUserDetailsRequestCommonModelsItem",
                    "schema": "CommonModelScopesBodyRequest",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "EndUserDetailsRequestCommonModels",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EndUserDetailsRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ErrorValidationProblem": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "errorValidationProblemSource",
            "key": "source",
            "schema": {
              "generatedName": "errorValidationProblemSource",
              "value": {
                "generatedName": "ErrorValidationProblemSource",
                "schema": "ValidationProblemSource",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "errorValidationProblemTitle",
            "key": "title",
            "schema": {
              "schema": {
                "example": "Missing Required Field",
                "type": "string"
              },
              "generatedName": "ErrorValidationProblemTitle",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "errorValidationProblemDetail",
            "key": "detail",
            "schema": {
              "schema": {
                "example": "custom_fields is a required field on model.",
                "type": "string"
              },
              "generatedName": "ErrorValidationProblemDetail",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "errorValidationProblemProblemType",
            "key": "problem_type",
            "schema": {
              "schema": {
                "example": "MISSING_REQUIRED_FIELD",
                "type": "string"
              },
              "generatedName": "ErrorValidationProblemProblemType",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ErrorValidationProblem",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "EthnicityEnum": {
        "description": "* `AMERICAN_INDIAN_OR_ALASKA_NATIVE` - AMERICAN_INDIAN_OR_ALASKA_NATIVE\n* `ASIAN_OR_INDIAN_SUBCONTINENT` - ASIAN_OR_INDIAN_SUBCONTINENT\n* `BLACK_OR_AFRICAN_AMERICAN` - BLACK_OR_AFRICAN_AMERICAN\n* `HISPANIC_OR_LATINO` - HISPANIC_OR_LATINO\n* `NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER` - NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER\n* `TWO_OR_MORE_RACES` - TWO_OR_MORE_RACES\n* `WHITE` - WHITE\n* `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE",
        "generatedName": "EthnicityEnum",
        "values": [
          {
            "generatedName": "AMERICAN_INDIAN_OR_ALASKA_NATIVE",
            "value": "AMERICAN_INDIAN_OR_ALASKA_NATIVE",
            "casing": {}
          },
          {
            "generatedName": "ASIAN_OR_INDIAN_SUBCONTINENT",
            "value": "ASIAN_OR_INDIAN_SUBCONTINENT",
            "casing": {}
          },
          {
            "generatedName": "BLACK_OR_AFRICAN_AMERICAN",
            "value": "BLACK_OR_AFRICAN_AMERICAN",
            "casing": {}
          },
          {
            "generatedName": "HISPANIC_OR_LATINO",
            "value": "HISPANIC_OR_LATINO",
            "casing": {}
          },
          {
            "generatedName": "NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER",
            "value": "NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER",
            "casing": {}
          },
          {
            "generatedName": "TWO_OR_MORE_RACES",
            "value": "TWO_OR_MORE_RACES",
            "casing": {}
          },
          {
            "generatedName": "WHITE",
            "value": "WHITE",
            "casing": {}
          },
          {
            "generatedName": "PREFER_NOT_TO_DISCLOSE",
            "value": "PREFER_NOT_TO_DISCLOSE",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "FlsaStatusEnum": {
        "description": "* `EXEMPT` - EXEMPT\n* `SALARIED_NONEXEMPT` - SALARIED_NONEXEMPT\n* `NONEXEMPT` - NONEXEMPT\n* `OWNER` - OWNER",
        "generatedName": "FlsaStatusEnum",
        "values": [
          {
            "generatedName": "EXEMPT",
            "value": "EXEMPT",
            "casing": {}
          },
          {
            "generatedName": "SALARIED_NONEXEMPT",
            "value": "SALARIED_NONEXEMPT",
            "casing": {}
          },
          {
            "generatedName": "NONEXEMPT",
            "value": "NONEXEMPT",
            "casing": {}
          },
          {
            "generatedName": "OWNER",
            "value": "OWNER",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "GenderEnum": {
        "description": "* `MALE` - MALE\n* `FEMALE` - FEMALE\n* `NON-BINARY` - NON-BINARY\n* `OTHER` - OTHER\n* `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE",
        "generatedName": "GenderEnum",
        "values": [
          {
            "generatedName": "MALE",
            "value": "MALE",
            "casing": {}
          },
          {
            "generatedName": "FEMALE",
            "value": "FEMALE",
            "casing": {}
          },
          {
            "generatedName": "NonBinary",
            "value": "NON-BINARY",
            "casing": {}
          },
          {
            "generatedName": "OTHER",
            "value": "OTHER",
            "casing": {}
          },
          {
            "generatedName": "PREFER_NOT_TO_DISCLOSE",
            "value": "PREFER_NOT_TO_DISCLOSE",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "GenerateRemoteKeyRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "generateRemoteKeyRequestName",
            "key": "name",
            "schema": {
              "schema": {
                "minLength": 1,
                "example": "Remote Deployment Key 1",
                "type": "string"
              },
              "generatedName": "GenerateRemoteKeyRequestName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "# The GenerateRemoteKey Object\n### Description\nThe `GenerateRemoteKey` object is used to represent a request for a new remote key.\n\n### Usage Example\nPost a `GenerateRemoteKey` to create a new remote key.",
        "generatedName": "GenerateRemoteKeyRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Group": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "groupId",
            "key": "id",
            "schema": {
              "generatedName": "groupId",
              "value": {
                "schema": {
                  "format": "uuid",
                  "example": "134e0111-0f67-44f6-98f0-597000290bb3",
                  "type": "string"
                },
                "generatedName": "GroupId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "groupRemoteId",
            "key": "remote_id",
            "schema": {
              "generatedName": "groupRemoteId",
              "value": {
                "generatedName": "GroupRemoteId",
                "description": "The third-party API ID of the matching object.",
                "value": {
                  "description": "The third-party API ID of the matching object.",
                  "schema": {
                    "example": "800293",
                    "type": "string"
                  },
                  "generatedName": "GroupRemoteId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "groupParentGroup",
            "key": "parent_group",
            "schema": {
              "generatedName": "groupParentGroup",
              "value": {
                "generatedName": "GroupParentGroup",
                "description": "The parent group for this group.",
                "value": {
                  "description": "The parent group for this group.",
                  "schema": {
                    "format": "uuid",
                    "example": "2ef51b11-2c4e-4b02-8d1d-50592d9e96ef",
                    "type": "string"
                  },
                  "generatedName": "GroupParentGroup",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "groupName",
            "key": "name",
            "schema": {
              "generatedName": "groupName",
              "value": {
                "generatedName": "GroupName",
                "description": "The group name.",
                "value": {
                  "description": "The group name.",
                  "schema": {
                    "example": "COST_CENTER_US",
                    "type": "string"
                  },
                  "generatedName": "GroupName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "groupType",
            "key": "type",
            "schema": {
              "generatedName": "groupType",
              "value": {
                "generatedName": "GroupType",
                "description": "The group type\n\n* `TEAM` - TEAM\n* `DEPARTMENT` - DEPARTMENT\n* `COST_CENTER` - COST_CENTER\n* `BUSINESS_UNIT` - BUSINESS_UNIT\n* `GROUP` - GROUP",
                "value": {
                  "generatedName": "GroupType",
                  "schema": "GroupTypeEnum",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "groupRemoteWasDeleted",
            "key": "remote_was_deleted",
            "schema": {
              "generatedName": "groupRemoteWasDeleted",
              "value": {
                "description": "Indicates whether or not this object has been deleted by third party webhooks.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "GroupRemoteWasDeleted",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "groupModifiedAt",
            "key": "modified_at",
            "schema": {
              "generatedName": "groupModifiedAt",
              "value": {
                "description": "This is the datetime that this object was last updated by Merge",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "GroupModifiedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "groupFieldMappings",
            "key": "field_mappings",
            "schema": {
              "generatedName": "groupFieldMappings",
              "value": {
                "generatedName": "GroupFieldMappings",
                "value": {
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "GroupFieldMappingsKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "GroupFieldMappingsValue",
                    "type": "unknown"
                  },
                  "generatedName": "GroupFieldMappings",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "groupRemoteData",
            "key": "remote_data",
            "schema": {
              "generatedName": "groupRemoteData",
              "value": {
                "generatedName": "GroupRemoteData",
                "value": {
                  "value": {
                    "generatedName": "GroupRemoteDataItem",
                    "schema": "RemoteData",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "GroupRemoteData",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "# The Group Object\n### Description\nThe `Group` object is used to represent any subset of employees, such as `PayGroup` or `Team`. Employees can be in multiple Groups.\n\n### Usage Example\nFetch from the `LIST Employee` endpoint and expand groups to view an employee's groups.",
        "generatedName": "Group",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "GroupTypeEnum": {
        "description": "* `TEAM` - TEAM\n* `DEPARTMENT` - DEPARTMENT\n* `COST_CENTER` - COST_CENTER\n* `BUSINESS_UNIT` - BUSINESS_UNIT\n* `GROUP` - GROUP",
        "generatedName": "GroupTypeEnum",
        "values": [
          {
            "generatedName": "TEAM",
            "value": "TEAM",
            "casing": {}
          },
          {
            "generatedName": "DEPARTMENT",
            "value": "DEPARTMENT",
            "casing": {}
          },
          {
            "generatedName": "COST_CENTER",
            "value": "COST_CENTER",
            "casing": {}
          },
          {
            "generatedName": "BUSINESS_UNIT",
            "value": "BUSINESS_UNIT",
            "casing": {}
          },
          {
            "generatedName": "GROUP",
            "value": "GROUP",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "IgnoreCommonModelRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "ignoreCommonModelRequestReason",
            "key": "reason",
            "schema": {
              "generatedName": "IgnoreCommonModelRequestReason",
              "schema": "ReasonEnum",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ignoreCommonModelRequestMessage",
            "key": "message",
            "schema": {
              "generatedName": "ignoreCommonModelRequestMessage",
              "value": {
                "schema": {
                  "minLength": 1,
                  "maxLength": 256,
                  "example": "deletion request by user id 51903790-7dfe-4053-8d63-5a10cc4ffd39",
                  "type": "string"
                },
                "generatedName": "IgnoreCommonModelRequestMessage",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IgnoreCommonModelRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Issue": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "issueId",
            "key": "id",
            "schema": {
              "generatedName": "issueId",
              "value": {
                "schema": {
                  "format": "uuid",
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "IssueId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "issueStatus",
            "key": "status",
            "schema": {
              "generatedName": "issueStatus",
              "value": {
                "description": "Status of the issue. Options: ('ONGOING', 'RESOLVED')\n\n* `ONGOING` - ONGOING\n* `RESOLVED` - RESOLVED",
                "generatedName": "IssueStatus",
                "schema": "IssueStatusEnum",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "issueErrorDescription",
            "key": "error_description",
            "schema": {
              "schema": {
                "example": "string",
                "type": "string"
              },
              "generatedName": "IssueErrorDescription",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "issueEndUser",
            "key": "end_user",
            "schema": {
              "generatedName": "issueEndUser",
              "value": {
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "IssueEndUserKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "IssueEndUserValue",
                  "type": "unknown"
                },
                "generatedName": "IssueEndUser",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "issueFirstIncidentTime",
            "key": "first_incident_time",
            "schema": {
              "generatedName": "issueFirstIncidentTime",
              "value": {
                "generatedName": "IssueFirstIncidentTime",
                "value": {
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "IssueFirstIncidentTime",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "issueLastIncidentTime",
            "key": "last_incident_time",
            "schema": {
              "generatedName": "issueLastIncidentTime",
              "value": {
                "generatedName": "IssueLastIncidentTime",
                "value": {
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "IssueLastIncidentTime",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "issueIsMuted",
            "key": "is_muted",
            "schema": {
              "generatedName": "issueIsMuted",
              "value": {
                "schema": {
                  "example": true,
                  "type": "boolean"
                },
                "generatedName": "IssueIsMuted",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "issueErrorDetails",
            "key": "error_details",
            "schema": {
              "generatedName": "issueErrorDetails",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "IssueErrorDetailsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "IssueErrorDetails",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Issue",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IssueStatusEnum": {
        "description": "* `ONGOING` - ONGOING\n* `RESOLVED` - RESOLVED",
        "generatedName": "IssueStatusEnum",
        "values": [
          {
            "generatedName": "ONGOING",
            "value": "ONGOING",
            "casing": {}
          },
          {
            "generatedName": "RESOLVED",
            "value": "RESOLVED",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "LinkToken": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "linkTokenLinkToken",
            "key": "link_token",
            "schema": {
              "schema": {
                "example": "necdP7FtdASl1fQwm62be2_dM4wBG8_GactqoUV0",
                "type": "string"
              },
              "generatedName": "LinkTokenLinkToken",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "linkTokenIntegrationName",
            "key": "integration_name",
            "schema": {
              "generatedName": "linkTokenIntegrationName",
              "value": {
                "schema": {
                  "example": "Lever",
                  "type": "string"
                },
                "generatedName": "LinkTokenIntegrationName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "linkTokenMagicLinkUrl",
            "key": "magic_link_url",
            "schema": {
              "generatedName": "linkTokenMagicLinkUrl",
              "value": {
                "schema": {
                  "example": "https://link.merge.dev/asdfjkl12345jsndfgi2i83n",
                  "type": "string"
                },
                "generatedName": "LinkTokenMagicLinkUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "LinkToken",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "LinkedAccountCondition": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "linkedAccountConditionConditionSchemaId",
            "key": "condition_schema_id",
            "schema": {
              "description": "The ID indicating which condition schema to use for a specific condition.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "LinkedAccountConditionConditionSchemaId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "linkedAccountConditionCommonModel",
            "key": "common_model",
            "schema": {
              "generatedName": "linkedAccountConditionCommonModel",
              "value": {
                "description": "The common model for a specific condition.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LinkedAccountConditionCommonModel",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "linkedAccountConditionNativeName",
            "key": "native_name",
            "schema": {
              "generatedName": "LinkedAccountConditionNativeName",
              "description": "User-facing *native condition* name. e.g. \"Skip Manager\".",
              "value": {
                "description": "User-facing *native condition* name. e.g. \"Skip Manager\".",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LinkedAccountConditionNativeName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "nullable"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "linkedAccountConditionOperator",
            "key": "operator",
            "schema": {
              "description": "The operator for a specific condition.",
              "schema": {
                "type": "string"
              },
              "generatedName": "LinkedAccountConditionOperator",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "linkedAccountConditionValue",
            "key": "value",
            "schema": {
              "generatedName": "linkedAccountConditionValue",
              "value": {
                "generatedName": "LinkedAccountConditionValue",
                "type": "unknown"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "linkedAccountConditionFieldName",
            "key": "field_name",
            "schema": {
              "generatedName": "LinkedAccountConditionFieldName",
              "description": "The name of the field on the common model that this condition corresponds to, if they conceptually match. e.g. \"location_type\".",
              "value": {
                "description": "The name of the field on the common model that this condition corresponds to, if they conceptually match. e.g. \"location_type\".",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LinkedAccountConditionFieldName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "nullable"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "LinkedAccountCondition",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "LinkedAccountConditionRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "linkedAccountConditionRequestConditionSchemaId",
            "key": "condition_schema_id",
            "schema": {
              "description": "The ID indicating which condition schema to use for a specific condition.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "LinkedAccountConditionRequestConditionSchemaId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "linkedAccountConditionRequestOperator",
            "key": "operator",
            "schema": {
              "description": "The operator for a specific condition.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "LinkedAccountConditionRequestOperator",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "linkedAccountConditionRequestValue",
            "key": "value",
            "schema": {
              "generatedName": "LinkedAccountConditionRequestValue",
              "type": "unknown"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "LinkedAccountConditionRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "LinkedAccountSelectiveSyncConfiguration": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "linkedAccountSelectiveSyncConfigurationLinkedAccountConditions",
            "key": "linked_account_conditions",
            "schema": {
              "generatedName": "linkedAccountSelectiveSyncConfigurationLinkedAccountConditions",
              "value": {
                "description": "The conditions belonging to a selective sync.",
                "value": {
                  "generatedName": "LinkedAccountSelectiveSyncConfigurationLinkedAccountConditionsItem",
                  "schema": "LinkedAccountCondition",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "LinkedAccountSelectiveSyncConfigurationLinkedAccountConditions",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "LinkedAccountSelectiveSyncConfiguration",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "LinkedAccountSelectiveSyncConfigurationListRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "linkedAccountSelectiveSyncConfigurationListRequestSyncConfigurations",
            "key": "sync_configurations",
            "schema": {
              "description": "The selective syncs associated with a linked account.",
              "value": {
                "generatedName": "LinkedAccountSelectiveSyncConfigurationListRequestSyncConfigurationsItem",
                "schema": "LinkedAccountSelectiveSyncConfigurationRequest",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "LinkedAccountSelectiveSyncConfigurationListRequestSyncConfigurations",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "LinkedAccountSelectiveSyncConfigurationListRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "LinkedAccountSelectiveSyncConfigurationRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "linkedAccountSelectiveSyncConfigurationRequestLinkedAccountConditions",
            "key": "linked_account_conditions",
            "schema": {
              "description": "The conditions belonging to a selective sync.",
              "value": {
                "generatedName": "LinkedAccountSelectiveSyncConfigurationRequestLinkedAccountConditionsItem",
                "schema": "LinkedAccountConditionRequest",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "LinkedAccountSelectiveSyncConfigurationRequestLinkedAccountConditions",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "LinkedAccountSelectiveSyncConfigurationRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "LinkedAccountStatus": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "linkedAccountStatusLinkedAccountStatus",
            "key": "linked_account_status",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "LinkedAccountStatusLinkedAccountStatus",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "linkedAccountStatusCanMakeRequest",
            "key": "can_make_request",
            "schema": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "LinkedAccountStatusCanMakeRequest",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "LinkedAccountStatus",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Location": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "locationId",
            "key": "id",
            "schema": {
              "generatedName": "locationId",
              "value": {
                "schema": {
                  "format": "uuid",
                  "example": "f5e6a151-f44e-449a-afb1-8fd781905958",
                  "type": "string"
                },
                "generatedName": "LocationId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "locationRemoteId",
            "key": "remote_id",
            "schema": {
              "generatedName": "locationRemoteId",
              "value": {
                "generatedName": "LocationRemoteId",
                "description": "The third-party API ID of the matching object.",
                "value": {
                  "description": "The third-party API ID of the matching object.",
                  "schema": {
                    "example": "93018402",
                    "type": "string"
                  },
                  "generatedName": "LocationRemoteId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "locationName",
            "key": "name",
            "schema": {
              "generatedName": "locationName",
              "value": {
                "generatedName": "LocationName",
                "description": "The location's name.",
                "value": {
                  "description": "The location's name.",
                  "schema": {
                    "example": "NYC Office",
                    "type": "string"
                  },
                  "generatedName": "LocationName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "locationPhoneNumber",
            "key": "phone_number",
            "schema": {
              "generatedName": "locationPhoneNumber",
              "value": {
                "generatedName": "LocationPhoneNumber",
                "description": "The location's phone number.",
                "value": {
                  "description": "The location's phone number.",
                  "schema": {
                    "example": "+1111111111",
                    "type": "string"
                  },
                  "generatedName": "LocationPhoneNumber",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "locationStreet1",
            "key": "street_1",
            "schema": {
              "generatedName": "locationStreet1",
              "value": {
                "generatedName": "LocationStreet1",
                "description": "Line 1 of the location's street address.",
                "value": {
                  "description": "Line 1 of the location's street address.",
                  "schema": {
                    "example": "2920 Broadway",
                    "type": "string"
                  },
                  "generatedName": "LocationStreet1",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "locationStreet2",
            "key": "street_2",
            "schema": {
              "generatedName": "locationStreet2",
              "value": {
                "generatedName": "LocationStreet2",
                "description": "Line 2 of the location's street address.",
                "value": {
                  "description": "Line 2 of the location's street address.",
                  "schema": {
                    "example": "2nd Floor",
                    "type": "string"
                  },
                  "generatedName": "LocationStreet2",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "locationCity",
            "key": "city",
            "schema": {
              "generatedName": "locationCity",
              "value": {
                "generatedName": "LocationCity",
                "description": "The location's city.",
                "value": {
                  "description": "The location's city.",
                  "schema": {
                    "example": "New York ",
                    "type": "string"
                  },
                  "generatedName": "LocationCity",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "locationState",
            "key": "state",
            "schema": {
              "generatedName": "locationState",
              "value": {
                "generatedName": "LocationState",
                "description": "The location's state. Represents a region if outside of the US.",
                "value": {
                  "description": "The location's state. Represents a region if outside of the US.",
                  "schema": {
                    "example": "NY",
                    "type": "string"
                  },
                  "generatedName": "LocationState",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "locationZipCode",
            "key": "zip_code",
            "schema": {
              "generatedName": "locationZipCode",
              "value": {
                "generatedName": "LocationZipCode",
                "description": "The location's zip code or postal code.",
                "value": {
                  "description": "The location's zip code or postal code.",
                  "schema": {
                    "example": "10027",
                    "type": "string"
                  },
                  "generatedName": "LocationZipCode",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "locationCountry",
            "key": "country",
            "schema": {
              "generatedName": "locationCountry",
              "value": {
                "generatedName": "LocationCountry",
                "description": "The location's country.\n\n* `AF` - Afghanistan\n* `AX` - Åland Islands\n* `AL` - Albania\n* `DZ` - Algeria\n* `AS` - American Samoa\n* `AD` - Andorra\n* `AO` - Angola\n* `AI` - Anguilla\n* `AQ` - Antarctica\n* `AG` - Antigua and Barbuda\n* `AR` - Argentina\n* `AM` - Armenia\n* `AW` - Aruba\n* `AU` - Australia\n* `AT` - Austria\n* `AZ` - Azerbaijan\n* `BS` - Bahamas\n* `BH` - Bahrain\n* `BD` - Bangladesh\n* `BB` - Barbados\n* `BY` - Belarus\n* `BE` - Belgium\n* `BZ` - Belize\n* `BJ` - Benin\n* `BM` - Bermuda\n* `BT` - Bhutan\n* `BO` - Bolivia\n* `BQ` - Bonaire, Sint Eustatius and Saba\n* `BA` - Bosnia and Herzegovina\n* `BW` - Botswana\n* `BV` - Bouvet Island\n* `BR` - Brazil\n* `IO` - British Indian Ocean Territory\n* `BN` - Brunei\n* `BG` - Bulgaria\n* `BF` - Burkina Faso\n* `BI` - Burundi\n* `CV` - Cabo Verde\n* `KH` - Cambodia\n* `CM` - Cameroon\n* `CA` - Canada\n* `KY` - Cayman Islands\n* `CF` - Central African Republic\n* `TD` - Chad\n* `CL` - Chile\n* `CN` - China\n* `CX` - Christmas Island\n* `CC` - Cocos (Keeling) Islands\n* `CO` - Colombia\n* `KM` - Comoros\n* `CG` - Congo\n* `CD` - Congo (the Democratic Republic of the)\n* `CK` - Cook Islands\n* `CR` - Costa Rica\n* `CI` - Côte d'Ivoire\n* `HR` - Croatia\n* `CU` - Cuba\n* `CW` - Curaçao\n* `CY` - Cyprus\n* `CZ` - Czechia\n* `DK` - Denmark\n* `DJ` - Djibouti\n* `DM` - Dominica\n* `DO` - Dominican Republic\n* `EC` - Ecuador\n* `EG` - Egypt\n* `SV` - El Salvador\n* `GQ` - Equatorial Guinea\n* `ER` - Eritrea\n* `EE` - Estonia\n* `SZ` - Eswatini\n* `ET` - Ethiopia\n* `FK` - Falkland Islands (Malvinas)\n* `FO` - Faroe Islands\n* `FJ` - Fiji\n* `FI` - Finland\n* `FR` - France\n* `GF` - French Guiana\n* `PF` - French Polynesia\n* `TF` - French Southern Territories\n* `GA` - Gabon\n* `GM` - Gambia\n* `GE` - Georgia\n* `DE` - Germany\n* `GH` - Ghana\n* `GI` - Gibraltar\n* `GR` - Greece\n* `GL` - Greenland\n* `GD` - Grenada\n* `GP` - Guadeloupe\n* `GU` - Guam\n* `GT` - Guatemala\n* `GG` - Guernsey\n* `GN` - Guinea\n* `GW` - Guinea-Bissau\n* `GY` - Guyana\n* `HT` - Haiti\n* `HM` - Heard Island and McDonald Islands\n* `VA` - Holy See\n* `HN` - Honduras\n* `HK` - Hong Kong\n* `HU` - Hungary\n* `IS` - Iceland\n* `IN` - India\n* `ID` - Indonesia\n* `IR` - Iran\n* `IQ` - Iraq\n* `IE` - Ireland\n* `IM` - Isle of Man\n* `IL` - Israel\n* `IT` - Italy\n* `JM` - Jamaica\n* `JP` - Japan\n* `JE` - Jersey\n* `JO` - Jordan\n* `KZ` - Kazakhstan\n* `KE` - Kenya\n* `KI` - Kiribati\n* `KW` - Kuwait\n* `KG` - Kyrgyzstan\n* `LA` - Laos\n* `LV` - Latvia\n* `LB` - Lebanon\n* `LS` - Lesotho\n* `LR` - Liberia\n* `LY` - Libya\n* `LI` - Liechtenstein\n* `LT` - Lithuania\n* `LU` - Luxembourg\n* `MO` - Macao\n* `MG` - Madagascar\n* `MW` - Malawi\n* `MY` - Malaysia\n* `MV` - Maldives\n* `ML` - Mali\n* `MT` - Malta\n* `MH` - Marshall Islands\n* `MQ` - Martinique\n* `MR` - Mauritania\n* `MU` - Mauritius\n* `YT` - Mayotte\n* `MX` - Mexico\n* `FM` - Micronesia (Federated States of)\n* `MD` - Moldova\n* `MC` - Monaco\n* `MN` - Mongolia\n* `ME` - Montenegro\n* `MS` - Montserrat\n* `MA` - Morocco\n* `MZ` - Mozambique\n* `MM` - Myanmar\n* `NA` - Namibia\n* `NR` - Nauru\n* `NP` - Nepal\n* `NL` - Netherlands\n* `NC` - New Caledonia\n* `NZ` - New Zealand\n* `NI` - Nicaragua\n* `NE` - Niger\n* `NG` - Nigeria\n* `NU` - Niue\n* `NF` - Norfolk Island\n* `KP` - North Korea\n* `MK` - North Macedonia\n* `MP` - Northern Mariana Islands\n* `NO` - Norway\n* `OM` - Oman\n* `PK` - Pakistan\n* `PW` - Palau\n* `PS` - Palestine, State of\n* `PA` - Panama\n* `PG` - Papua New Guinea\n* `PY` - Paraguay\n* `PE` - Peru\n* `PH` - Philippines\n* `PN` - Pitcairn\n* `PL` - Poland\n* `PT` - Portugal\n* `PR` - Puerto Rico\n* `QA` - Qatar\n* `RE` - Réunion\n* `RO` - Romania\n* `RU` - Russia\n* `RW` - Rwanda\n* `BL` - Saint Barthélemy\n* `SH` - Saint Helena, Ascension and Tristan da Cunha\n* `KN` - Saint Kitts and Nevis\n* `LC` - Saint Lucia\n* `MF` - Saint Martin (French part)\n* `PM` - Saint Pierre and Miquelon\n* `VC` - Saint Vincent and the Grenadines\n* `WS` - Samoa\n* `SM` - San Marino\n* `ST` - Sao Tome and Principe\n* `SA` - Saudi Arabia\n* `SN` - Senegal\n* `RS` - Serbia\n* `SC` - Seychelles\n* `SL` - Sierra Leone\n* `SG` - Singapore\n* `SX` - Sint Maarten (Dutch part)\n* `SK` - Slovakia\n* `SI` - Slovenia\n* `SB` - Solomon Islands\n* `SO` - Somalia\n* `ZA` - South Africa\n* `GS` - South Georgia and the South Sandwich Islands\n* `KR` - South Korea\n* `SS` - South Sudan\n* `ES` - Spain\n* `LK` - Sri Lanka\n* `SD` - Sudan\n* `SR` - Suriname\n* `SJ` - Svalbard and Jan Mayen\n* `SE` - Sweden\n* `CH` - Switzerland\n* `SY` - Syria\n* `TW` - Taiwan\n* `TJ` - Tajikistan\n* `TZ` - Tanzania\n* `TH` - Thailand\n* `TL` - Timor-Leste\n* `TG` - Togo\n* `TK` - Tokelau\n* `TO` - Tonga\n* `TT` - Trinidad and Tobago\n* `TN` - Tunisia\n* `TR` - Turkey\n* `TM` - Turkmenistan\n* `TC` - Turks and Caicos Islands\n* `TV` - Tuvalu\n* `UG` - Uganda\n* `UA` - Ukraine\n* `AE` - United Arab Emirates\n* `GB` - United Kingdom\n* `UM` - United States Minor Outlying Islands\n* `US` - United States of America\n* `UY` - Uruguay\n* `UZ` - Uzbekistan\n* `VU` - Vanuatu\n* `VE` - Venezuela\n* `VN` - Vietnam\n* `VG` - Virgin Islands (British)\n* `VI` - Virgin Islands (U.S.)\n* `WF` - Wallis and Futuna\n* `EH` - Western Sahara\n* `YE` - Yemen\n* `ZM` - Zambia\n* `ZW` - Zimbabwe",
                "value": {
                  "generatedName": "LocationCountry",
                  "schema": "CountryEnum",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "locationLocationType",
            "key": "location_type",
            "schema": {
              "generatedName": "locationLocationType",
              "value": {
                "generatedName": "LocationLocationType",
                "description": "The location's type. Can be either WORK or HOME\n\n* `HOME` - HOME\n* `WORK` - WORK",
                "value": {
                  "generatedName": "LocationLocationType",
                  "schema": "LocationTypeEnum",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "locationRemoteWasDeleted",
            "key": "remote_was_deleted",
            "schema": {
              "generatedName": "locationRemoteWasDeleted",
              "value": {
                "description": "Indicates whether or not this object has been deleted by third party webhooks.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "LocationRemoteWasDeleted",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "locationModifiedAt",
            "key": "modified_at",
            "schema": {
              "generatedName": "locationModifiedAt",
              "value": {
                "description": "This is the datetime that this object was last updated by Merge",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "LocationModifiedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "locationFieldMappings",
            "key": "field_mappings",
            "schema": {
              "generatedName": "locationFieldMappings",
              "value": {
                "generatedName": "LocationFieldMappings",
                "value": {
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "LocationFieldMappingsKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "LocationFieldMappingsValue",
                    "type": "unknown"
                  },
                  "generatedName": "LocationFieldMappings",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "locationRemoteData",
            "key": "remote_data",
            "schema": {
              "generatedName": "locationRemoteData",
              "value": {
                "generatedName": "LocationRemoteData",
                "value": {
                  "value": {
                    "generatedName": "LocationRemoteDataItem",
                    "schema": "RemoteData",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "LocationRemoteData",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "# The Location Object\n### Description\nThe `Location` object is used to represent an address that can be associated with an employee.\n\n### Usage Example\nFetch from the `LIST Locations` endpoint and filter by `ID` to show all office locations.",
        "generatedName": "Location",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "LocationTypeEnum": {
        "description": "* `HOME` - HOME\n* `WORK` - WORK",
        "generatedName": "LocationTypeEnum",
        "values": [
          {
            "generatedName": "HOME",
            "value": "HOME",
            "casing": {}
          },
          {
            "generatedName": "WORK",
            "value": "WORK",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "MaritalStatusEnum": {
        "description": "* `SINGLE` - SINGLE\n* `MARRIED_FILING_JOINTLY` - MARRIED_FILING_JOINTLY\n* `MARRIED_FILING_SEPARATELY` - MARRIED_FILING_SEPARATELY\n* `HEAD_OF_HOUSEHOLD` - HEAD_OF_HOUSEHOLD\n* `QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD` - QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD",
        "generatedName": "MaritalStatusEnum",
        "values": [
          {
            "generatedName": "SINGLE",
            "value": "SINGLE",
            "casing": {}
          },
          {
            "generatedName": "MARRIED_FILING_JOINTLY",
            "value": "MARRIED_FILING_JOINTLY",
            "casing": {}
          },
          {
            "generatedName": "MARRIED_FILING_SEPARATELY",
            "value": "MARRIED_FILING_SEPARATELY",
            "casing": {}
          },
          {
            "generatedName": "HEAD_OF_HOUSEHOLD",
            "value": "HEAD_OF_HOUSEHOLD",
            "casing": {}
          },
          {
            "generatedName": "QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD",
            "value": "QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "MetaResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "metaResponseRequestSchema",
            "key": "request_schema",
            "schema": {
              "key": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "MetaResponseRequestSchemaKey",
                "groupName": [],
                "type": "primitive"
              },
              "value": {
                "generatedName": "MetaResponseRequestSchemaValue",
                "type": "unknown"
              },
              "generatedName": "MetaResponseRequestSchema",
              "groupName": [],
              "type": "map"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "metaResponseRemoteFieldClasses",
            "key": "remote_field_classes",
            "schema": {
              "generatedName": "metaResponseRemoteFieldClasses",
              "value": {
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "MetaResponseRemoteFieldClassesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "MetaResponseRemoteFieldClassesValue",
                  "type": "unknown"
                },
                "generatedName": "MetaResponseRemoteFieldClasses",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "metaResponseStatus",
            "key": "status",
            "schema": {
              "generatedName": "metaResponseStatus",
              "value": {
                "generatedName": "MetaResponseStatus",
                "schema": "LinkedAccountStatus",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "metaResponseHasConditionalParams",
            "key": "has_conditional_params",
            "schema": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "MetaResponseHasConditionalParams",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "metaResponseHasRequiredLinkedAccountParams",
            "key": "has_required_linked_account_params",
            "schema": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "MetaResponseHasRequiredLinkedAccountParams",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "MetaResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "MethodEnum": {
        "description": "* `GET` - GET\n* `OPTIONS` - OPTIONS\n* `HEAD` - HEAD\n* `POST` - POST\n* `PUT` - PUT\n* `PATCH` - PATCH\n* `DELETE` - DELETE",
        "generatedName": "MethodEnum",
        "values": [
          {
            "generatedName": "GET",
            "value": "GET",
            "casing": {}
          },
          {
            "generatedName": "OPTIONS",
            "value": "OPTIONS",
            "casing": {}
          },
          {
            "generatedName": "HEAD",
            "value": "HEAD",
            "casing": {}
          },
          {
            "generatedName": "POST",
            "value": "POST",
            "casing": {}
          },
          {
            "generatedName": "PUT",
            "value": "PUT",
            "casing": {}
          },
          {
            "generatedName": "PATCH",
            "value": "PATCH",
            "casing": {}
          },
          {
            "generatedName": "DELETE",
            "value": "DELETE",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "ModelOperation": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "modelOperationModelName",
            "key": "model_name",
            "schema": {
              "schema": {
                "example": "Candidate",
                "type": "string"
              },
              "generatedName": "ModelOperationModelName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelOperationAvailableOperations",
            "key": "available_operations",
            "schema": {
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ModelOperationAvailableOperationsItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "ModelOperationAvailableOperations",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelOperationRequiredPostParameters",
            "key": "required_post_parameters",
            "schema": {
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ModelOperationRequiredPostParametersItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "ModelOperationRequiredPostParameters",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelOperationSupportedFields",
            "key": "supported_fields",
            "schema": {
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ModelOperationSupportedFieldsItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "ModelOperationSupportedFields",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "# The ModelOperation Object\n### Description\nThe `ModelOperation` object is used to represent the operations that are currently supported for a given model.\n\n### Usage Example\nView what operations are supported for the `Candidate` endpoint.",
        "generatedName": "ModelOperation",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "MultipartFormFieldRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "multipartFormFieldRequestName",
            "key": "name",
            "schema": {
              "description": "The name of the form field",
              "schema": {
                "minLength": 1,
                "example": "resume",
                "type": "string"
              },
              "generatedName": "MultipartFormFieldRequestName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "multipartFormFieldRequestData",
            "key": "data",
            "schema": {
              "description": "The data for the form field.",
              "schema": {
                "minLength": 1,
                "example": "SW50ZWdyYXRlIGZhc3QKSW50ZWdyYXRlIG9uY2U=",
                "type": "string"
              },
              "generatedName": "MultipartFormFieldRequestData",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "multipartFormFieldRequestEncoding",
            "key": "encoding",
            "schema": {
              "generatedName": "multipartFormFieldRequestEncoding",
              "value": {
                "generatedName": "MultipartFormFieldRequestEncoding",
                "description": "The encoding of the value of `data`. Defaults to `RAW` if not defined.\n\n* `RAW` - RAW\n* `BASE64` - BASE64\n* `GZIP_BASE64` - GZIP_BASE64",
                "value": {
                  "generatedName": "MultipartFormFieldRequestEncoding",
                  "schema": "EncodingEnum",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "multipartFormFieldRequestFileName",
            "key": "file_name",
            "schema": {
              "generatedName": "multipartFormFieldRequestFileName",
              "value": {
                "generatedName": "MultipartFormFieldRequestFileName",
                "description": "The file name of the form field, if the field is for a file.",
                "value": {
                  "description": "The file name of the form field, if the field is for a file.",
                  "schema": {
                    "minLength": 1,
                    "example": "resume.pdf",
                    "type": "string"
                  },
                  "generatedName": "MultipartFormFieldRequestFileName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "multipartFormFieldRequestContentType",
            "key": "content_type",
            "schema": {
              "generatedName": "multipartFormFieldRequestContentType",
              "value": {
                "generatedName": "MultipartFormFieldRequestContentType",
                "description": "The MIME type of the file, if the field is for a file.",
                "value": {
                  "description": "The MIME type of the file, if the field is for a file.",
                  "schema": {
                    "minLength": 1,
                    "example": "application/pdf",
                    "type": "string"
                  },
                  "generatedName": "MultipartFormFieldRequestContentType",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "# The MultipartFormField Object\n### Description\nThe `MultipartFormField` object is used to represent fields in an HTTP request using `multipart/form-data`.\n\n### Usage Example\nCreate a `MultipartFormField` to define a multipart form entry.",
        "generatedName": "MultipartFormFieldRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "OperatorSchema": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "operatorSchemaOperator",
            "key": "operator",
            "schema": {
              "generatedName": "operatorSchemaOperator",
              "value": {
                "description": "The operator for which an operator schema is defined.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "OperatorSchemaOperator",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "operatorSchemaIsUnique",
            "key": "is_unique",
            "schema": {
              "generatedName": "operatorSchemaIsUnique",
              "value": {
                "description": "Whether the operator can be repeated multiple times.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "OperatorSchemaIsUnique",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "OperatorSchema",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PaginatedAccountDetailsAndActionsList": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "paginatedAccountDetailsAndActionsListNext",
            "key": "next",
            "schema": {
              "generatedName": "paginatedAccountDetailsAndActionsListNext",
              "value": {
                "generatedName": "PaginatedAccountDetailsAndActionsListNext",
                "value": {
                  "schema": {
                    "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "type": "string"
                  },
                  "generatedName": "PaginatedAccountDetailsAndActionsListNext",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedAccountDetailsAndActionsListPrevious",
            "key": "previous",
            "schema": {
              "generatedName": "paginatedAccountDetailsAndActionsListPrevious",
              "value": {
                "generatedName": "PaginatedAccountDetailsAndActionsListPrevious",
                "value": {
                  "schema": {
                    "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                    "type": "string"
                  },
                  "generatedName": "PaginatedAccountDetailsAndActionsListPrevious",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedAccountDetailsAndActionsListResults",
            "key": "results",
            "schema": {
              "generatedName": "paginatedAccountDetailsAndActionsListResults",
              "value": {
                "value": {
                  "generatedName": "PaginatedAccountDetailsAndActionsListResultsItem",
                  "schema": "AccountDetailsAndActions",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "PaginatedAccountDetailsAndActionsListResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PaginatedAccountDetailsAndActionsList",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PaginatedBankInfoList": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "paginatedBankInfoListNext",
            "key": "next",
            "schema": {
              "generatedName": "paginatedBankInfoListNext",
              "value": {
                "generatedName": "PaginatedBankInfoListNext",
                "value": {
                  "schema": {
                    "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "type": "string"
                  },
                  "generatedName": "PaginatedBankInfoListNext",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedBankInfoListPrevious",
            "key": "previous",
            "schema": {
              "generatedName": "paginatedBankInfoListPrevious",
              "value": {
                "generatedName": "PaginatedBankInfoListPrevious",
                "value": {
                  "schema": {
                    "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                    "type": "string"
                  },
                  "generatedName": "PaginatedBankInfoListPrevious",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedBankInfoListResults",
            "key": "results",
            "schema": {
              "generatedName": "paginatedBankInfoListResults",
              "value": {
                "value": {
                  "generatedName": "PaginatedBankInfoListResultsItem",
                  "schema": "BankInfo",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "PaginatedBankInfoListResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PaginatedBankInfoList",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PaginatedBenefitList": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "paginatedBenefitListNext",
            "key": "next",
            "schema": {
              "generatedName": "paginatedBenefitListNext",
              "value": {
                "generatedName": "PaginatedBenefitListNext",
                "value": {
                  "schema": {
                    "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "type": "string"
                  },
                  "generatedName": "PaginatedBenefitListNext",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedBenefitListPrevious",
            "key": "previous",
            "schema": {
              "generatedName": "paginatedBenefitListPrevious",
              "value": {
                "generatedName": "PaginatedBenefitListPrevious",
                "value": {
                  "schema": {
                    "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                    "type": "string"
                  },
                  "generatedName": "PaginatedBenefitListPrevious",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedBenefitListResults",
            "key": "results",
            "schema": {
              "generatedName": "paginatedBenefitListResults",
              "value": {
                "value": {
                  "generatedName": "PaginatedBenefitListResultsItem",
                  "schema": "Benefit",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "PaginatedBenefitListResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PaginatedBenefitList",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PaginatedCompanyList": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "paginatedCompanyListNext",
            "key": "next",
            "schema": {
              "generatedName": "paginatedCompanyListNext",
              "value": {
                "generatedName": "PaginatedCompanyListNext",
                "value": {
                  "schema": {
                    "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "type": "string"
                  },
                  "generatedName": "PaginatedCompanyListNext",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedCompanyListPrevious",
            "key": "previous",
            "schema": {
              "generatedName": "paginatedCompanyListPrevious",
              "value": {
                "generatedName": "PaginatedCompanyListPrevious",
                "value": {
                  "schema": {
                    "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                    "type": "string"
                  },
                  "generatedName": "PaginatedCompanyListPrevious",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedCompanyListResults",
            "key": "results",
            "schema": {
              "generatedName": "paginatedCompanyListResults",
              "value": {
                "value": {
                  "generatedName": "PaginatedCompanyListResultsItem",
                  "schema": "Company",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "PaginatedCompanyListResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PaginatedCompanyList",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PaginatedConditionSchemaList": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "paginatedConditionSchemaListNext",
            "key": "next",
            "schema": {
              "generatedName": "paginatedConditionSchemaListNext",
              "value": {
                "generatedName": "PaginatedConditionSchemaListNext",
                "value": {
                  "schema": {
                    "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "type": "string"
                  },
                  "generatedName": "PaginatedConditionSchemaListNext",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedConditionSchemaListPrevious",
            "key": "previous",
            "schema": {
              "generatedName": "paginatedConditionSchemaListPrevious",
              "value": {
                "generatedName": "PaginatedConditionSchemaListPrevious",
                "value": {
                  "schema": {
                    "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                    "type": "string"
                  },
                  "generatedName": "PaginatedConditionSchemaListPrevious",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedConditionSchemaListResults",
            "key": "results",
            "schema": {
              "generatedName": "paginatedConditionSchemaListResults",
              "value": {
                "value": {
                  "generatedName": "PaginatedConditionSchemaListResultsItem",
                  "schema": "ConditionSchema",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "PaginatedConditionSchemaListResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PaginatedConditionSchemaList",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PaginatedEmployeeList": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "paginatedEmployeeListNext",
            "key": "next",
            "schema": {
              "generatedName": "paginatedEmployeeListNext",
              "value": {
                "generatedName": "PaginatedEmployeeListNext",
                "value": {
                  "schema": {
                    "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "type": "string"
                  },
                  "generatedName": "PaginatedEmployeeListNext",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedEmployeeListPrevious",
            "key": "previous",
            "schema": {
              "generatedName": "paginatedEmployeeListPrevious",
              "value": {
                "generatedName": "PaginatedEmployeeListPrevious",
                "value": {
                  "schema": {
                    "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                    "type": "string"
                  },
                  "generatedName": "PaginatedEmployeeListPrevious",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedEmployeeListResults",
            "key": "results",
            "schema": {
              "generatedName": "paginatedEmployeeListResults",
              "value": {
                "value": {
                  "generatedName": "PaginatedEmployeeListResultsItem",
                  "schema": "Employee",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "PaginatedEmployeeListResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PaginatedEmployeeList",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PaginatedEmployeePayrollRunList": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "paginatedEmployeePayrollRunListNext",
            "key": "next",
            "schema": {
              "generatedName": "paginatedEmployeePayrollRunListNext",
              "value": {
                "generatedName": "PaginatedEmployeePayrollRunListNext",
                "value": {
                  "schema": {
                    "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "type": "string"
                  },
                  "generatedName": "PaginatedEmployeePayrollRunListNext",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedEmployeePayrollRunListPrevious",
            "key": "previous",
            "schema": {
              "generatedName": "paginatedEmployeePayrollRunListPrevious",
              "value": {
                "generatedName": "PaginatedEmployeePayrollRunListPrevious",
                "value": {
                  "schema": {
                    "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                    "type": "string"
                  },
                  "generatedName": "PaginatedEmployeePayrollRunListPrevious",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedEmployeePayrollRunListResults",
            "key": "results",
            "schema": {
              "generatedName": "paginatedEmployeePayrollRunListResults",
              "value": {
                "value": {
                  "generatedName": "PaginatedEmployeePayrollRunListResultsItem",
                  "schema": "EmployeePayrollRun",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "PaginatedEmployeePayrollRunListResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PaginatedEmployeePayrollRunList",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PaginatedEmploymentList": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "paginatedEmploymentListNext",
            "key": "next",
            "schema": {
              "generatedName": "paginatedEmploymentListNext",
              "value": {
                "generatedName": "PaginatedEmploymentListNext",
                "value": {
                  "schema": {
                    "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "type": "string"
                  },
                  "generatedName": "PaginatedEmploymentListNext",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedEmploymentListPrevious",
            "key": "previous",
            "schema": {
              "generatedName": "paginatedEmploymentListPrevious",
              "value": {
                "generatedName": "PaginatedEmploymentListPrevious",
                "value": {
                  "schema": {
                    "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                    "type": "string"
                  },
                  "generatedName": "PaginatedEmploymentListPrevious",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedEmploymentListResults",
            "key": "results",
            "schema": {
              "generatedName": "paginatedEmploymentListResults",
              "value": {
                "value": {
                  "generatedName": "PaginatedEmploymentListResultsItem",
                  "schema": "Employment",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "PaginatedEmploymentListResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PaginatedEmploymentList",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PaginatedGroupList": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "paginatedGroupListNext",
            "key": "next",
            "schema": {
              "generatedName": "paginatedGroupListNext",
              "value": {
                "generatedName": "PaginatedGroupListNext",
                "value": {
                  "schema": {
                    "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "type": "string"
                  },
                  "generatedName": "PaginatedGroupListNext",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedGroupListPrevious",
            "key": "previous",
            "schema": {
              "generatedName": "paginatedGroupListPrevious",
              "value": {
                "generatedName": "PaginatedGroupListPrevious",
                "value": {
                  "schema": {
                    "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                    "type": "string"
                  },
                  "generatedName": "PaginatedGroupListPrevious",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedGroupListResults",
            "key": "results",
            "schema": {
              "generatedName": "paginatedGroupListResults",
              "value": {
                "value": {
                  "generatedName": "PaginatedGroupListResultsItem",
                  "schema": "Group",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "PaginatedGroupListResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PaginatedGroupList",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PaginatedIssueList": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "paginatedIssueListNext",
            "key": "next",
            "schema": {
              "generatedName": "paginatedIssueListNext",
              "value": {
                "generatedName": "PaginatedIssueListNext",
                "value": {
                  "schema": {
                    "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "type": "string"
                  },
                  "generatedName": "PaginatedIssueListNext",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedIssueListPrevious",
            "key": "previous",
            "schema": {
              "generatedName": "paginatedIssueListPrevious",
              "value": {
                "generatedName": "PaginatedIssueListPrevious",
                "value": {
                  "schema": {
                    "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                    "type": "string"
                  },
                  "generatedName": "PaginatedIssueListPrevious",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedIssueListResults",
            "key": "results",
            "schema": {
              "generatedName": "paginatedIssueListResults",
              "value": {
                "value": {
                  "generatedName": "PaginatedIssueListResultsItem",
                  "schema": "Issue",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "PaginatedIssueListResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PaginatedIssueList",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PaginatedLocationList": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "paginatedLocationListNext",
            "key": "next",
            "schema": {
              "generatedName": "paginatedLocationListNext",
              "value": {
                "generatedName": "PaginatedLocationListNext",
                "value": {
                  "schema": {
                    "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "type": "string"
                  },
                  "generatedName": "PaginatedLocationListNext",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedLocationListPrevious",
            "key": "previous",
            "schema": {
              "generatedName": "paginatedLocationListPrevious",
              "value": {
                "generatedName": "PaginatedLocationListPrevious",
                "value": {
                  "schema": {
                    "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                    "type": "string"
                  },
                  "generatedName": "PaginatedLocationListPrevious",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedLocationListResults",
            "key": "results",
            "schema": {
              "generatedName": "paginatedLocationListResults",
              "value": {
                "value": {
                  "generatedName": "PaginatedLocationListResultsItem",
                  "schema": "Location",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "PaginatedLocationListResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PaginatedLocationList",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PaginatedPayGroupList": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "paginatedPayGroupListNext",
            "key": "next",
            "schema": {
              "generatedName": "paginatedPayGroupListNext",
              "value": {
                "generatedName": "PaginatedPayGroupListNext",
                "value": {
                  "schema": {
                    "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "type": "string"
                  },
                  "generatedName": "PaginatedPayGroupListNext",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedPayGroupListPrevious",
            "key": "previous",
            "schema": {
              "generatedName": "paginatedPayGroupListPrevious",
              "value": {
                "generatedName": "PaginatedPayGroupListPrevious",
                "value": {
                  "schema": {
                    "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                    "type": "string"
                  },
                  "generatedName": "PaginatedPayGroupListPrevious",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedPayGroupListResults",
            "key": "results",
            "schema": {
              "generatedName": "paginatedPayGroupListResults",
              "value": {
                "value": {
                  "generatedName": "PaginatedPayGroupListResultsItem",
                  "schema": "PayGroup",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "PaginatedPayGroupListResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PaginatedPayGroupList",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PaginatedPayrollRunList": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "paginatedPayrollRunListNext",
            "key": "next",
            "schema": {
              "generatedName": "paginatedPayrollRunListNext",
              "value": {
                "generatedName": "PaginatedPayrollRunListNext",
                "value": {
                  "schema": {
                    "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "type": "string"
                  },
                  "generatedName": "PaginatedPayrollRunListNext",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedPayrollRunListPrevious",
            "key": "previous",
            "schema": {
              "generatedName": "paginatedPayrollRunListPrevious",
              "value": {
                "generatedName": "PaginatedPayrollRunListPrevious",
                "value": {
                  "schema": {
                    "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                    "type": "string"
                  },
                  "generatedName": "PaginatedPayrollRunListPrevious",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedPayrollRunListResults",
            "key": "results",
            "schema": {
              "generatedName": "paginatedPayrollRunListResults",
              "value": {
                "value": {
                  "generatedName": "PaginatedPayrollRunListResultsItem",
                  "schema": "PayrollRun",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "PaginatedPayrollRunListResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PaginatedPayrollRunList",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PaginatedSyncStatusList": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "paginatedSyncStatusListNext",
            "key": "next",
            "schema": {
              "generatedName": "paginatedSyncStatusListNext",
              "value": {
                "generatedName": "PaginatedSyncStatusListNext",
                "value": {
                  "schema": {
                    "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "type": "string"
                  },
                  "generatedName": "PaginatedSyncStatusListNext",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedSyncStatusListPrevious",
            "key": "previous",
            "schema": {
              "generatedName": "paginatedSyncStatusListPrevious",
              "value": {
                "generatedName": "PaginatedSyncStatusListPrevious",
                "value": {
                  "schema": {
                    "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                    "type": "string"
                  },
                  "generatedName": "PaginatedSyncStatusListPrevious",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedSyncStatusListResults",
            "key": "results",
            "schema": {
              "generatedName": "paginatedSyncStatusListResults",
              "value": {
                "value": {
                  "generatedName": "PaginatedSyncStatusListResultsItem",
                  "schema": "SyncStatus",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "PaginatedSyncStatusListResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PaginatedSyncStatusList",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PaginatedTeamList": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "paginatedTeamListNext",
            "key": "next",
            "schema": {
              "generatedName": "paginatedTeamListNext",
              "value": {
                "generatedName": "PaginatedTeamListNext",
                "value": {
                  "schema": {
                    "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "type": "string"
                  },
                  "generatedName": "PaginatedTeamListNext",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedTeamListPrevious",
            "key": "previous",
            "schema": {
              "generatedName": "paginatedTeamListPrevious",
              "value": {
                "generatedName": "PaginatedTeamListPrevious",
                "value": {
                  "schema": {
                    "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                    "type": "string"
                  },
                  "generatedName": "PaginatedTeamListPrevious",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedTeamListResults",
            "key": "results",
            "schema": {
              "generatedName": "paginatedTeamListResults",
              "value": {
                "value": {
                  "generatedName": "PaginatedTeamListResultsItem",
                  "schema": "Team",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "PaginatedTeamListResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PaginatedTeamList",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PaginatedTimeOffBalanceList": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "paginatedTimeOffBalanceListNext",
            "key": "next",
            "schema": {
              "generatedName": "paginatedTimeOffBalanceListNext",
              "value": {
                "generatedName": "PaginatedTimeOffBalanceListNext",
                "value": {
                  "schema": {
                    "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "type": "string"
                  },
                  "generatedName": "PaginatedTimeOffBalanceListNext",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedTimeOffBalanceListPrevious",
            "key": "previous",
            "schema": {
              "generatedName": "paginatedTimeOffBalanceListPrevious",
              "value": {
                "generatedName": "PaginatedTimeOffBalanceListPrevious",
                "value": {
                  "schema": {
                    "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                    "type": "string"
                  },
                  "generatedName": "PaginatedTimeOffBalanceListPrevious",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedTimeOffBalanceListResults",
            "key": "results",
            "schema": {
              "generatedName": "paginatedTimeOffBalanceListResults",
              "value": {
                "value": {
                  "generatedName": "PaginatedTimeOffBalanceListResultsItem",
                  "schema": "TimeOffBalance",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "PaginatedTimeOffBalanceListResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PaginatedTimeOffBalanceList",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PaginatedTimeOffList": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "paginatedTimeOffListNext",
            "key": "next",
            "schema": {
              "generatedName": "paginatedTimeOffListNext",
              "value": {
                "generatedName": "PaginatedTimeOffListNext",
                "value": {
                  "schema": {
                    "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "type": "string"
                  },
                  "generatedName": "PaginatedTimeOffListNext",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedTimeOffListPrevious",
            "key": "previous",
            "schema": {
              "generatedName": "paginatedTimeOffListPrevious",
              "value": {
                "generatedName": "PaginatedTimeOffListPrevious",
                "value": {
                  "schema": {
                    "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                    "type": "string"
                  },
                  "generatedName": "PaginatedTimeOffListPrevious",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedTimeOffListResults",
            "key": "results",
            "schema": {
              "generatedName": "paginatedTimeOffListResults",
              "value": {
                "value": {
                  "generatedName": "PaginatedTimeOffListResultsItem",
                  "schema": "TimeOff",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "PaginatedTimeOffListResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PaginatedTimeOffList",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PayCurrencyEnum": {
        "description": "* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)",
        "generatedName": "PayCurrencyEnum",
        "values": [
          {
            "generatedName": "XUA",
            "value": "XUA",
            "casing": {}
          },
          {
            "generatedName": "AFN",
            "value": "AFN",
            "casing": {}
          },
          {
            "generatedName": "AFA",
            "value": "AFA",
            "casing": {}
          },
          {
            "generatedName": "ALL",
            "value": "ALL",
            "casing": {}
          },
          {
            "generatedName": "ALK",
            "value": "ALK",
            "casing": {}
          },
          {
            "generatedName": "DZD",
            "value": "DZD",
            "casing": {}
          },
          {
            "generatedName": "ADP",
            "value": "ADP",
            "casing": {}
          },
          {
            "generatedName": "AOA",
            "value": "AOA",
            "casing": {}
          },
          {
            "generatedName": "AOK",
            "value": "AOK",
            "casing": {}
          },
          {
            "generatedName": "AON",
            "value": "AON",
            "casing": {}
          },
          {
            "generatedName": "AOR",
            "value": "AOR",
            "casing": {}
          },
          {
            "generatedName": "ARA",
            "value": "ARA",
            "casing": {}
          },
          {
            "generatedName": "ARS",
            "value": "ARS",
            "casing": {}
          },
          {
            "generatedName": "ARM",
            "value": "ARM",
            "casing": {}
          },
          {
            "generatedName": "ARP",
            "value": "ARP",
            "casing": {}
          },
          {
            "generatedName": "ARL",
            "value": "ARL",
            "casing": {}
          },
          {
            "generatedName": "AMD",
            "value": "AMD",
            "casing": {}
          },
          {
            "generatedName": "AWG",
            "value": "AWG",
            "casing": {}
          },
          {
            "generatedName": "AUD",
            "value": "AUD",
            "casing": {}
          },
          {
            "generatedName": "ATS",
            "value": "ATS",
            "casing": {}
          },
          {
            "generatedName": "AZN",
            "value": "AZN",
            "casing": {}
          },
          {
            "generatedName": "AZM",
            "value": "AZM",
            "casing": {}
          },
          {
            "generatedName": "BSD",
            "value": "BSD",
            "casing": {}
          },
          {
            "generatedName": "BHD",
            "value": "BHD",
            "casing": {}
          },
          {
            "generatedName": "BDT",
            "value": "BDT",
            "casing": {}
          },
          {
            "generatedName": "BBD",
            "value": "BBD",
            "casing": {}
          },
          {
            "generatedName": "BYN",
            "value": "BYN",
            "casing": {}
          },
          {
            "generatedName": "BYB",
            "value": "BYB",
            "casing": {}
          },
          {
            "generatedName": "BYR",
            "value": "BYR",
            "casing": {}
          },
          {
            "generatedName": "BEF",
            "value": "BEF",
            "casing": {}
          },
          {
            "generatedName": "BEC",
            "value": "BEC",
            "casing": {}
          },
          {
            "generatedName": "BEL",
            "value": "BEL",
            "casing": {}
          },
          {
            "generatedName": "BZD",
            "value": "BZD",
            "casing": {}
          },
          {
            "generatedName": "BMD",
            "value": "BMD",
            "casing": {}
          },
          {
            "generatedName": "BTN",
            "value": "BTN",
            "casing": {}
          },
          {
            "generatedName": "BOB",
            "value": "BOB",
            "casing": {}
          },
          {
            "generatedName": "BOL",
            "value": "BOL",
            "casing": {}
          },
          {
            "generatedName": "BOV",
            "value": "BOV",
            "casing": {}
          },
          {
            "generatedName": "BOP",
            "value": "BOP",
            "casing": {}
          },
          {
            "generatedName": "BAM",
            "value": "BAM",
            "casing": {}
          },
          {
            "generatedName": "BAD",
            "value": "BAD",
            "casing": {}
          },
          {
            "generatedName": "BAN",
            "value": "BAN",
            "casing": {}
          },
          {
            "generatedName": "BWP",
            "value": "BWP",
            "casing": {}
          },
          {
            "generatedName": "BRC",
            "value": "BRC",
            "casing": {}
          },
          {
            "generatedName": "BRZ",
            "value": "BRZ",
            "casing": {}
          },
          {
            "generatedName": "BRE",
            "value": "BRE",
            "casing": {}
          },
          {
            "generatedName": "BRR",
            "value": "BRR",
            "casing": {}
          },
          {
            "generatedName": "BRN",
            "value": "BRN",
            "casing": {}
          },
          {
            "generatedName": "BRB",
            "value": "BRB",
            "casing": {}
          },
          {
            "generatedName": "BRL",
            "value": "BRL",
            "casing": {}
          },
          {
            "generatedName": "GBP",
            "value": "GBP",
            "casing": {}
          },
          {
            "generatedName": "BND",
            "value": "BND",
            "casing": {}
          },
          {
            "generatedName": "BGL",
            "value": "BGL",
            "casing": {}
          },
          {
            "generatedName": "BGN",
            "value": "BGN",
            "casing": {}
          },
          {
            "generatedName": "BGO",
            "value": "BGO",
            "casing": {}
          },
          {
            "generatedName": "BGM",
            "value": "BGM",
            "casing": {}
          },
          {
            "generatedName": "BUK",
            "value": "BUK",
            "casing": {}
          },
          {
            "generatedName": "BIF",
            "value": "BIF",
            "casing": {}
          },
          {
            "generatedName": "XPF",
            "value": "XPF",
            "casing": {}
          },
          {
            "generatedName": "KHR",
            "value": "KHR",
            "casing": {}
          },
          {
            "generatedName": "CAD",
            "value": "CAD",
            "casing": {}
          },
          {
            "generatedName": "CVE",
            "value": "CVE",
            "casing": {}
          },
          {
            "generatedName": "KYD",
            "value": "KYD",
            "casing": {}
          },
          {
            "generatedName": "XAF",
            "value": "XAF",
            "casing": {}
          },
          {
            "generatedName": "CLE",
            "value": "CLE",
            "casing": {}
          },
          {
            "generatedName": "CLP",
            "value": "CLP",
            "casing": {}
          },
          {
            "generatedName": "CLF",
            "value": "CLF",
            "casing": {}
          },
          {
            "generatedName": "CNX",
            "value": "CNX",
            "casing": {}
          },
          {
            "generatedName": "CNY",
            "value": "CNY",
            "casing": {}
          },
          {
            "generatedName": "CNH",
            "value": "CNH",
            "casing": {}
          },
          {
            "generatedName": "COP",
            "value": "COP",
            "casing": {}
          },
          {
            "generatedName": "COU",
            "value": "COU",
            "casing": {}
          },
          {
            "generatedName": "KMF",
            "value": "KMF",
            "casing": {}
          },
          {
            "generatedName": "CDF",
            "value": "CDF",
            "casing": {}
          },
          {
            "generatedName": "CRC",
            "value": "CRC",
            "casing": {}
          },
          {
            "generatedName": "HRD",
            "value": "HRD",
            "casing": {}
          },
          {
            "generatedName": "HRK",
            "value": "HRK",
            "casing": {}
          },
          {
            "generatedName": "CUC",
            "value": "CUC",
            "casing": {}
          },
          {
            "generatedName": "CUP",
            "value": "CUP",
            "casing": {}
          },
          {
            "generatedName": "CYP",
            "value": "CYP",
            "casing": {}
          },
          {
            "generatedName": "CZK",
            "value": "CZK",
            "casing": {}
          },
          {
            "generatedName": "CSK",
            "value": "CSK",
            "casing": {}
          },
          {
            "generatedName": "DKK",
            "value": "DKK",
            "casing": {}
          },
          {
            "generatedName": "DJF",
            "value": "DJF",
            "casing": {}
          },
          {
            "generatedName": "DOP",
            "value": "DOP",
            "casing": {}
          },
          {
            "generatedName": "NLG",
            "value": "NLG",
            "casing": {}
          },
          {
            "generatedName": "XCD",
            "value": "XCD",
            "casing": {}
          },
          {
            "generatedName": "DDM",
            "value": "DDM",
            "casing": {}
          },
          {
            "generatedName": "ECS",
            "value": "ECS",
            "casing": {}
          },
          {
            "generatedName": "ECV",
            "value": "ECV",
            "casing": {}
          },
          {
            "generatedName": "EGP",
            "value": "EGP",
            "casing": {}
          },
          {
            "generatedName": "GQE",
            "value": "GQE",
            "casing": {}
          },
          {
            "generatedName": "ERN",
            "value": "ERN",
            "casing": {}
          },
          {
            "generatedName": "EEK",
            "value": "EEK",
            "casing": {}
          },
          {
            "generatedName": "ETB",
            "value": "ETB",
            "casing": {}
          },
          {
            "generatedName": "EUR",
            "value": "EUR",
            "casing": {}
          },
          {
            "generatedName": "XBA",
            "value": "XBA",
            "casing": {}
          },
          {
            "generatedName": "XEU",
            "value": "XEU",
            "casing": {}
          },
          {
            "generatedName": "XBB",
            "value": "XBB",
            "casing": {}
          },
          {
            "generatedName": "XBC",
            "value": "XBC",
            "casing": {}
          },
          {
            "generatedName": "XBD",
            "value": "XBD",
            "casing": {}
          },
          {
            "generatedName": "FKP",
            "value": "FKP",
            "casing": {}
          },
          {
            "generatedName": "FJD",
            "value": "FJD",
            "casing": {}
          },
          {
            "generatedName": "FIM",
            "value": "FIM",
            "casing": {}
          },
          {
            "generatedName": "FRF",
            "value": "FRF",
            "casing": {}
          },
          {
            "generatedName": "XFO",
            "value": "XFO",
            "casing": {}
          },
          {
            "generatedName": "XFU",
            "value": "XFU",
            "casing": {}
          },
          {
            "generatedName": "GMD",
            "value": "GMD",
            "casing": {}
          },
          {
            "generatedName": "GEK",
            "value": "GEK",
            "casing": {}
          },
          {
            "generatedName": "GEL",
            "value": "GEL",
            "casing": {}
          },
          {
            "generatedName": "DEM",
            "value": "DEM",
            "casing": {}
          },
          {
            "generatedName": "GHS",
            "value": "GHS",
            "casing": {}
          },
          {
            "generatedName": "GHC",
            "value": "GHC",
            "casing": {}
          },
          {
            "generatedName": "GIP",
            "value": "GIP",
            "casing": {}
          },
          {
            "generatedName": "XAU",
            "value": "XAU",
            "casing": {}
          },
          {
            "generatedName": "GRD",
            "value": "GRD",
            "casing": {}
          },
          {
            "generatedName": "GTQ",
            "value": "GTQ",
            "casing": {}
          },
          {
            "generatedName": "GWP",
            "value": "GWP",
            "casing": {}
          },
          {
            "generatedName": "GNF",
            "value": "GNF",
            "casing": {}
          },
          {
            "generatedName": "GNS",
            "value": "GNS",
            "casing": {}
          },
          {
            "generatedName": "GYD",
            "value": "GYD",
            "casing": {}
          },
          {
            "generatedName": "HTG",
            "value": "HTG",
            "casing": {}
          },
          {
            "generatedName": "HNL",
            "value": "HNL",
            "casing": {}
          },
          {
            "generatedName": "HKD",
            "value": "HKD",
            "casing": {}
          },
          {
            "generatedName": "HUF",
            "value": "HUF",
            "casing": {}
          },
          {
            "generatedName": "IMP",
            "value": "IMP",
            "casing": {}
          },
          {
            "generatedName": "ISK",
            "value": "ISK",
            "casing": {}
          },
          {
            "generatedName": "ISJ",
            "value": "ISJ",
            "casing": {}
          },
          {
            "generatedName": "INR",
            "value": "INR",
            "casing": {}
          },
          {
            "generatedName": "IDR",
            "value": "IDR",
            "casing": {}
          },
          {
            "generatedName": "IRR",
            "value": "IRR",
            "casing": {}
          },
          {
            "generatedName": "IQD",
            "value": "IQD",
            "casing": {}
          },
          {
            "generatedName": "IEP",
            "value": "IEP",
            "casing": {}
          },
          {
            "generatedName": "ILS",
            "value": "ILS",
            "casing": {}
          },
          {
            "generatedName": "ILP",
            "value": "ILP",
            "casing": {}
          },
          {
            "generatedName": "ILR",
            "value": "ILR",
            "casing": {}
          },
          {
            "generatedName": "ITL",
            "value": "ITL",
            "casing": {}
          },
          {
            "generatedName": "JMD",
            "value": "JMD",
            "casing": {}
          },
          {
            "generatedName": "JPY",
            "value": "JPY",
            "casing": {}
          },
          {
            "generatedName": "JOD",
            "value": "JOD",
            "casing": {}
          },
          {
            "generatedName": "KZT",
            "value": "KZT",
            "casing": {}
          },
          {
            "generatedName": "KES",
            "value": "KES",
            "casing": {}
          },
          {
            "generatedName": "KWD",
            "value": "KWD",
            "casing": {}
          },
          {
            "generatedName": "KGS",
            "value": "KGS",
            "casing": {}
          },
          {
            "generatedName": "LAK",
            "value": "LAK",
            "casing": {}
          },
          {
            "generatedName": "LVL",
            "value": "LVL",
            "casing": {}
          },
          {
            "generatedName": "LVR",
            "value": "LVR",
            "casing": {}
          },
          {
            "generatedName": "LBP",
            "value": "LBP",
            "casing": {}
          },
          {
            "generatedName": "LSL",
            "value": "LSL",
            "casing": {}
          },
          {
            "generatedName": "LRD",
            "value": "LRD",
            "casing": {}
          },
          {
            "generatedName": "LYD",
            "value": "LYD",
            "casing": {}
          },
          {
            "generatedName": "LTL",
            "value": "LTL",
            "casing": {}
          },
          {
            "generatedName": "LTT",
            "value": "LTT",
            "casing": {}
          },
          {
            "generatedName": "LUL",
            "value": "LUL",
            "casing": {}
          },
          {
            "generatedName": "LUC",
            "value": "LUC",
            "casing": {}
          },
          {
            "generatedName": "LUF",
            "value": "LUF",
            "casing": {}
          },
          {
            "generatedName": "MOP",
            "value": "MOP",
            "casing": {}
          },
          {
            "generatedName": "MKD",
            "value": "MKD",
            "casing": {}
          },
          {
            "generatedName": "MKN",
            "value": "MKN",
            "casing": {}
          },
          {
            "generatedName": "MGA",
            "value": "MGA",
            "casing": {}
          },
          {
            "generatedName": "MGF",
            "value": "MGF",
            "casing": {}
          },
          {
            "generatedName": "MWK",
            "value": "MWK",
            "casing": {}
          },
          {
            "generatedName": "MYR",
            "value": "MYR",
            "casing": {}
          },
          {
            "generatedName": "MVR",
            "value": "MVR",
            "casing": {}
          },
          {
            "generatedName": "MVP",
            "value": "MVP",
            "casing": {}
          },
          {
            "generatedName": "MLF",
            "value": "MLF",
            "casing": {}
          },
          {
            "generatedName": "MTL",
            "value": "MTL",
            "casing": {}
          },
          {
            "generatedName": "MTP",
            "value": "MTP",
            "casing": {}
          },
          {
            "generatedName": "MRU",
            "value": "MRU",
            "casing": {}
          },
          {
            "generatedName": "MRO",
            "value": "MRO",
            "casing": {}
          },
          {
            "generatedName": "MUR",
            "value": "MUR",
            "casing": {}
          },
          {
            "generatedName": "MXV",
            "value": "MXV",
            "casing": {}
          },
          {
            "generatedName": "MXN",
            "value": "MXN",
            "casing": {}
          },
          {
            "generatedName": "MXP",
            "value": "MXP",
            "casing": {}
          },
          {
            "generatedName": "MDC",
            "value": "MDC",
            "casing": {}
          },
          {
            "generatedName": "MDL",
            "value": "MDL",
            "casing": {}
          },
          {
            "generatedName": "MCF",
            "value": "MCF",
            "casing": {}
          },
          {
            "generatedName": "MNT",
            "value": "MNT",
            "casing": {}
          },
          {
            "generatedName": "MAD",
            "value": "MAD",
            "casing": {}
          },
          {
            "generatedName": "MAF",
            "value": "MAF",
            "casing": {}
          },
          {
            "generatedName": "MZE",
            "value": "MZE",
            "casing": {}
          },
          {
            "generatedName": "MZN",
            "value": "MZN",
            "casing": {}
          },
          {
            "generatedName": "MZM",
            "value": "MZM",
            "casing": {}
          },
          {
            "generatedName": "MMK",
            "value": "MMK",
            "casing": {}
          },
          {
            "generatedName": "NAD",
            "value": "NAD",
            "casing": {}
          },
          {
            "generatedName": "NPR",
            "value": "NPR",
            "casing": {}
          },
          {
            "generatedName": "ANG",
            "value": "ANG",
            "casing": {}
          },
          {
            "generatedName": "TWD",
            "value": "TWD",
            "casing": {}
          },
          {
            "generatedName": "NZD",
            "value": "NZD",
            "casing": {}
          },
          {
            "generatedName": "NIO",
            "value": "NIO",
            "casing": {}
          },
          {
            "generatedName": "NIC",
            "value": "NIC",
            "casing": {}
          },
          {
            "generatedName": "NGN",
            "value": "NGN",
            "casing": {}
          },
          {
            "generatedName": "KPW",
            "value": "KPW",
            "casing": {}
          },
          {
            "generatedName": "NOK",
            "value": "NOK",
            "casing": {}
          },
          {
            "generatedName": "OMR",
            "value": "OMR",
            "casing": {}
          },
          {
            "generatedName": "PKR",
            "value": "PKR",
            "casing": {}
          },
          {
            "generatedName": "XPD",
            "value": "XPD",
            "casing": {}
          },
          {
            "generatedName": "PAB",
            "value": "PAB",
            "casing": {}
          },
          {
            "generatedName": "PGK",
            "value": "PGK",
            "casing": {}
          },
          {
            "generatedName": "PYG",
            "value": "PYG",
            "casing": {}
          },
          {
            "generatedName": "PEI",
            "value": "PEI",
            "casing": {}
          },
          {
            "generatedName": "PEN",
            "value": "PEN",
            "casing": {}
          },
          {
            "generatedName": "PES",
            "value": "PES",
            "casing": {}
          },
          {
            "generatedName": "PHP",
            "value": "PHP",
            "casing": {}
          },
          {
            "generatedName": "XPT",
            "value": "XPT",
            "casing": {}
          },
          {
            "generatedName": "PLN",
            "value": "PLN",
            "casing": {}
          },
          {
            "generatedName": "PLZ",
            "value": "PLZ",
            "casing": {}
          },
          {
            "generatedName": "PTE",
            "value": "PTE",
            "casing": {}
          },
          {
            "generatedName": "GWE",
            "value": "GWE",
            "casing": {}
          },
          {
            "generatedName": "QAR",
            "value": "QAR",
            "casing": {}
          },
          {
            "generatedName": "XRE",
            "value": "XRE",
            "casing": {}
          },
          {
            "generatedName": "RHD",
            "value": "RHD",
            "casing": {}
          },
          {
            "generatedName": "RON",
            "value": "RON",
            "casing": {}
          },
          {
            "generatedName": "ROL",
            "value": "ROL",
            "casing": {}
          },
          {
            "generatedName": "RUB",
            "value": "RUB",
            "casing": {}
          },
          {
            "generatedName": "RUR",
            "value": "RUR",
            "casing": {}
          },
          {
            "generatedName": "RWF",
            "value": "RWF",
            "casing": {}
          },
          {
            "generatedName": "SVC",
            "value": "SVC",
            "casing": {}
          },
          {
            "generatedName": "WST",
            "value": "WST",
            "casing": {}
          },
          {
            "generatedName": "SAR",
            "value": "SAR",
            "casing": {}
          },
          {
            "generatedName": "RSD",
            "value": "RSD",
            "casing": {}
          },
          {
            "generatedName": "CSD",
            "value": "CSD",
            "casing": {}
          },
          {
            "generatedName": "SCR",
            "value": "SCR",
            "casing": {}
          },
          {
            "generatedName": "SLL",
            "value": "SLL",
            "casing": {}
          },
          {
            "generatedName": "XAG",
            "value": "XAG",
            "casing": {}
          },
          {
            "generatedName": "SGD",
            "value": "SGD",
            "casing": {}
          },
          {
            "generatedName": "SKK",
            "value": "SKK",
            "casing": {}
          },
          {
            "generatedName": "SIT",
            "value": "SIT",
            "casing": {}
          },
          {
            "generatedName": "SBD",
            "value": "SBD",
            "casing": {}
          },
          {
            "generatedName": "SOS",
            "value": "SOS",
            "casing": {}
          },
          {
            "generatedName": "ZAR",
            "value": "ZAR",
            "casing": {}
          },
          {
            "generatedName": "ZAL",
            "value": "ZAL",
            "casing": {}
          },
          {
            "generatedName": "KRH",
            "value": "KRH",
            "casing": {}
          },
          {
            "generatedName": "KRW",
            "value": "KRW",
            "casing": {}
          },
          {
            "generatedName": "KRO",
            "value": "KRO",
            "casing": {}
          },
          {
            "generatedName": "SSP",
            "value": "SSP",
            "casing": {}
          },
          {
            "generatedName": "SUR",
            "value": "SUR",
            "casing": {}
          },
          {
            "generatedName": "ESP",
            "value": "ESP",
            "casing": {}
          },
          {
            "generatedName": "ESA",
            "value": "ESA",
            "casing": {}
          },
          {
            "generatedName": "ESB",
            "value": "ESB",
            "casing": {}
          },
          {
            "generatedName": "XDR",
            "value": "XDR",
            "casing": {}
          },
          {
            "generatedName": "LKR",
            "value": "LKR",
            "casing": {}
          },
          {
            "generatedName": "SHP",
            "value": "SHP",
            "casing": {}
          },
          {
            "generatedName": "XSU",
            "value": "XSU",
            "casing": {}
          },
          {
            "generatedName": "SDD",
            "value": "SDD",
            "casing": {}
          },
          {
            "generatedName": "SDG",
            "value": "SDG",
            "casing": {}
          },
          {
            "generatedName": "SDP",
            "value": "SDP",
            "casing": {}
          },
          {
            "generatedName": "SRD",
            "value": "SRD",
            "casing": {}
          },
          {
            "generatedName": "SRG",
            "value": "SRG",
            "casing": {}
          },
          {
            "generatedName": "SZL",
            "value": "SZL",
            "casing": {}
          },
          {
            "generatedName": "SEK",
            "value": "SEK",
            "casing": {}
          },
          {
            "generatedName": "CHF",
            "value": "CHF",
            "casing": {}
          },
          {
            "generatedName": "SYP",
            "value": "SYP",
            "casing": {}
          },
          {
            "generatedName": "STN",
            "value": "STN",
            "casing": {}
          },
          {
            "generatedName": "STD",
            "value": "STD",
            "casing": {}
          },
          {
            "generatedName": "TVD",
            "value": "TVD",
            "casing": {}
          },
          {
            "generatedName": "TJR",
            "value": "TJR",
            "casing": {}
          },
          {
            "generatedName": "TJS",
            "value": "TJS",
            "casing": {}
          },
          {
            "generatedName": "TZS",
            "value": "TZS",
            "casing": {}
          },
          {
            "generatedName": "XTS",
            "value": "XTS",
            "casing": {}
          },
          {
            "generatedName": "THB",
            "value": "THB",
            "casing": {}
          },
          {
            "generatedName": "XXX",
            "value": "XXX",
            "casing": {}
          },
          {
            "generatedName": "TPE",
            "value": "TPE",
            "casing": {}
          },
          {
            "generatedName": "TOP",
            "value": "TOP",
            "casing": {}
          },
          {
            "generatedName": "TTD",
            "value": "TTD",
            "casing": {}
          },
          {
            "generatedName": "TND",
            "value": "TND",
            "casing": {}
          },
          {
            "generatedName": "TRY",
            "value": "TRY",
            "casing": {}
          },
          {
            "generatedName": "TRL",
            "value": "TRL",
            "casing": {}
          },
          {
            "generatedName": "TMT",
            "value": "TMT",
            "casing": {}
          },
          {
            "generatedName": "TMM",
            "value": "TMM",
            "casing": {}
          },
          {
            "generatedName": "USD",
            "value": "USD",
            "casing": {}
          },
          {
            "generatedName": "USN",
            "value": "USN",
            "casing": {}
          },
          {
            "generatedName": "USS",
            "value": "USS",
            "casing": {}
          },
          {
            "generatedName": "UGX",
            "value": "UGX",
            "casing": {}
          },
          {
            "generatedName": "UGS",
            "value": "UGS",
            "casing": {}
          },
          {
            "generatedName": "UAH",
            "value": "UAH",
            "casing": {}
          },
          {
            "generatedName": "UAK",
            "value": "UAK",
            "casing": {}
          },
          {
            "generatedName": "AED",
            "value": "AED",
            "casing": {}
          },
          {
            "generatedName": "UYW",
            "value": "UYW",
            "casing": {}
          },
          {
            "generatedName": "UYU",
            "value": "UYU",
            "casing": {}
          },
          {
            "generatedName": "UYP",
            "value": "UYP",
            "casing": {}
          },
          {
            "generatedName": "UYI",
            "value": "UYI",
            "casing": {}
          },
          {
            "generatedName": "UZS",
            "value": "UZS",
            "casing": {}
          },
          {
            "generatedName": "VUV",
            "value": "VUV",
            "casing": {}
          },
          {
            "generatedName": "VES",
            "value": "VES",
            "casing": {}
          },
          {
            "generatedName": "VEB",
            "value": "VEB",
            "casing": {}
          },
          {
            "generatedName": "VEF",
            "value": "VEF",
            "casing": {}
          },
          {
            "generatedName": "VND",
            "value": "VND",
            "casing": {}
          },
          {
            "generatedName": "VNN",
            "value": "VNN",
            "casing": {}
          },
          {
            "generatedName": "CHE",
            "value": "CHE",
            "casing": {}
          },
          {
            "generatedName": "CHW",
            "value": "CHW",
            "casing": {}
          },
          {
            "generatedName": "XOF",
            "value": "XOF",
            "casing": {}
          },
          {
            "generatedName": "YDD",
            "value": "YDD",
            "casing": {}
          },
          {
            "generatedName": "YER",
            "value": "YER",
            "casing": {}
          },
          {
            "generatedName": "YUN",
            "value": "YUN",
            "casing": {}
          },
          {
            "generatedName": "YUD",
            "value": "YUD",
            "casing": {}
          },
          {
            "generatedName": "YUM",
            "value": "YUM",
            "casing": {}
          },
          {
            "generatedName": "YUR",
            "value": "YUR",
            "casing": {}
          },
          {
            "generatedName": "ZWN",
            "value": "ZWN",
            "casing": {}
          },
          {
            "generatedName": "ZRN",
            "value": "ZRN",
            "casing": {}
          },
          {
            "generatedName": "ZRZ",
            "value": "ZRZ",
            "casing": {}
          },
          {
            "generatedName": "ZMW",
            "value": "ZMW",
            "casing": {}
          },
          {
            "generatedName": "ZMK",
            "value": "ZMK",
            "casing": {}
          },
          {
            "generatedName": "ZWD",
            "value": "ZWD",
            "casing": {}
          },
          {
            "generatedName": "ZWR",
            "value": "ZWR",
            "casing": {}
          },
          {
            "generatedName": "ZWL",
            "value": "ZWL",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "PayFrequencyEnum": {
        "description": "* `WEEKLY` - WEEKLY\n* `BIWEEKLY` - BIWEEKLY\n* `MONTHLY` - MONTHLY\n* `QUARTERLY` - QUARTERLY\n* `SEMIANNUALLY` - SEMIANNUALLY\n* `ANNUALLY` - ANNUALLY\n* `THIRTEEN-MONTHLY` - THIRTEEN-MONTHLY\n* `PRO_RATA` - PRO_RATA\n* `SEMIMONTHLY` - SEMIMONTHLY",
        "generatedName": "PayFrequencyEnum",
        "values": [
          {
            "generatedName": "WEEKLY",
            "value": "WEEKLY",
            "casing": {}
          },
          {
            "generatedName": "BIWEEKLY",
            "value": "BIWEEKLY",
            "casing": {}
          },
          {
            "generatedName": "MONTHLY",
            "value": "MONTHLY",
            "casing": {}
          },
          {
            "generatedName": "QUARTERLY",
            "value": "QUARTERLY",
            "casing": {}
          },
          {
            "generatedName": "SEMIANNUALLY",
            "value": "SEMIANNUALLY",
            "casing": {}
          },
          {
            "generatedName": "ANNUALLY",
            "value": "ANNUALLY",
            "casing": {}
          },
          {
            "generatedName": "ThirteenMonthly",
            "value": "THIRTEEN-MONTHLY",
            "casing": {}
          },
          {
            "generatedName": "PRO_RATA",
            "value": "PRO_RATA",
            "casing": {}
          },
          {
            "generatedName": "SEMIMONTHLY",
            "value": "SEMIMONTHLY",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "PayGroup": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "payGroupId",
            "key": "id",
            "schema": {
              "generatedName": "payGroupId",
              "value": {
                "schema": {
                  "format": "uuid",
                  "example": "fd1e0fb5-8f92-4ec9-9f32-179cf732867d",
                  "type": "string"
                },
                "generatedName": "PayGroupId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "payGroupRemoteId",
            "key": "remote_id",
            "schema": {
              "generatedName": "payGroupRemoteId",
              "value": {
                "generatedName": "PayGroupRemoteId",
                "description": "The third-party API ID of the matching object.",
                "value": {
                  "description": "The third-party API ID of the matching object.",
                  "schema": {
                    "example": "800293",
                    "type": "string"
                  },
                  "generatedName": "PayGroupRemoteId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "payGroupPayGroupName",
            "key": "pay_group_name",
            "schema": {
              "generatedName": "payGroupPayGroupName",
              "value": {
                "generatedName": "PayGroupPayGroupName",
                "description": "The pay group name.",
                "value": {
                  "description": "The pay group name.",
                  "schema": {
                    "example": "contractor",
                    "type": "string"
                  },
                  "generatedName": "PayGroupPayGroupName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "payGroupRemoteWasDeleted",
            "key": "remote_was_deleted",
            "schema": {
              "generatedName": "payGroupRemoteWasDeleted",
              "value": {
                "description": "Indicates whether or not this object has been deleted by third party webhooks.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "PayGroupRemoteWasDeleted",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "payGroupModifiedAt",
            "key": "modified_at",
            "schema": {
              "generatedName": "payGroupModifiedAt",
              "value": {
                "description": "This is the datetime that this object was last updated by Merge",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "PayGroupModifiedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "payGroupFieldMappings",
            "key": "field_mappings",
            "schema": {
              "generatedName": "payGroupFieldMappings",
              "value": {
                "generatedName": "PayGroupFieldMappings",
                "value": {
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "PayGroupFieldMappingsKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "PayGroupFieldMappingsValue",
                    "type": "unknown"
                  },
                  "generatedName": "PayGroupFieldMappings",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "payGroupRemoteData",
            "key": "remote_data",
            "schema": {
              "generatedName": "payGroupRemoteData",
              "value": {
                "generatedName": "PayGroupRemoteData",
                "value": {
                  "value": {
                    "generatedName": "PayGroupRemoteDataItem",
                    "schema": "RemoteData",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "PayGroupRemoteData",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "# The PayGroup Object\n### Description\nThe `PayGroup` object is used to represent a subset of employees that are put together for payroll processing purposes.\n\n### Usage Example\nFetch from the `LIST PayGroup` endpoint and filter by `ID` to show all pay group information.",
        "generatedName": "PayGroup",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PayPeriodEnum": {
        "description": "* `HOUR` - HOUR\n* `DAY` - DAY\n* `WEEK` - WEEK\n* `EVERY_TWO_WEEKS` - EVERY_TWO_WEEKS\n* `SEMIMONTHLY` - SEMIMONTHLY\n* `MONTH` - MONTH\n* `QUARTER` - QUARTER\n* `EVERY_SIX_MONTHS` - EVERY_SIX_MONTHS\n* `YEAR` - YEAR",
        "generatedName": "PayPeriodEnum",
        "values": [
          {
            "generatedName": "HOUR",
            "value": "HOUR",
            "casing": {}
          },
          {
            "generatedName": "DAY",
            "value": "DAY",
            "casing": {}
          },
          {
            "generatedName": "WEEK",
            "value": "WEEK",
            "casing": {}
          },
          {
            "generatedName": "EVERY_TWO_WEEKS",
            "value": "EVERY_TWO_WEEKS",
            "casing": {}
          },
          {
            "generatedName": "SEMIMONTHLY",
            "value": "SEMIMONTHLY",
            "casing": {}
          },
          {
            "generatedName": "MONTH",
            "value": "MONTH",
            "casing": {}
          },
          {
            "generatedName": "QUARTER",
            "value": "QUARTER",
            "casing": {}
          },
          {
            "generatedName": "EVERY_SIX_MONTHS",
            "value": "EVERY_SIX_MONTHS",
            "casing": {}
          },
          {
            "generatedName": "YEAR",
            "value": "YEAR",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "PayrollRun": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "payrollRunId",
            "key": "id",
            "schema": {
              "generatedName": "payrollRunId",
              "value": {
                "schema": {
                  "format": "uuid",
                  "example": "37336947-b3d4-4a4c-a310-ab6ab510e079",
                  "type": "string"
                },
                "generatedName": "PayrollRunId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "payrollRunRemoteId",
            "key": "remote_id",
            "schema": {
              "generatedName": "payrollRunRemoteId",
              "value": {
                "generatedName": "PayrollRunRemoteId",
                "description": "The third-party API ID of the matching object.",
                "value": {
                  "description": "The third-party API ID of the matching object.",
                  "schema": {
                    "example": "19202938",
                    "type": "string"
                  },
                  "generatedName": "PayrollRunRemoteId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "payrollRunRunState",
            "key": "run_state",
            "schema": {
              "generatedName": "payrollRunRunState",
              "value": {
                "generatedName": "PayrollRunRunState",
                "description": "The state of the payroll run\n\n* `PAID` - PAID\n* `DRAFT` - DRAFT\n* `APPROVED` - APPROVED\n* `FAILED` - FAILED\n* `CLOSED` - CLOSED",
                "value": {
                  "generatedName": "PayrollRunRunState",
                  "schema": "RunStateEnum",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "payrollRunRunType",
            "key": "run_type",
            "schema": {
              "generatedName": "payrollRunRunType",
              "value": {
                "generatedName": "PayrollRunRunType",
                "description": "The type of the payroll run\n\n* `REGULAR` - REGULAR\n* `OFF_CYCLE` - OFF_CYCLE\n* `CORRECTION` - CORRECTION\n* `TERMINATION` - TERMINATION\n* `SIGN_ON_BONUS` - SIGN_ON_BONUS",
                "value": {
                  "generatedName": "PayrollRunRunType",
                  "schema": "RunTypeEnum",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "payrollRunStartDate",
            "key": "start_date",
            "schema": {
              "generatedName": "payrollRunStartDate",
              "value": {
                "generatedName": "PayrollRunStartDate",
                "description": "The day and time the payroll run started.",
                "value": {
                  "description": "The day and time the payroll run started.",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "PayrollRunStartDate",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "payrollRunEndDate",
            "key": "end_date",
            "schema": {
              "generatedName": "payrollRunEndDate",
              "value": {
                "generatedName": "PayrollRunEndDate",
                "description": "The day and time the payroll run ended.",
                "value": {
                  "description": "The day and time the payroll run ended.",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "PayrollRunEndDate",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "payrollRunCheckDate",
            "key": "check_date",
            "schema": {
              "generatedName": "payrollRunCheckDate",
              "value": {
                "generatedName": "PayrollRunCheckDate",
                "description": "The day and time the payroll run was checked.",
                "value": {
                  "description": "The day and time the payroll run was checked.",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "PayrollRunCheckDate",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "payrollRunRemoteWasDeleted",
            "key": "remote_was_deleted",
            "schema": {
              "generatedName": "payrollRunRemoteWasDeleted",
              "value": {
                "description": "Indicates whether or not this object has been deleted by third party webhooks.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "PayrollRunRemoteWasDeleted",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "payrollRunModifiedAt",
            "key": "modified_at",
            "schema": {
              "generatedName": "payrollRunModifiedAt",
              "value": {
                "description": "This is the datetime that this object was last updated by Merge",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "PayrollRunModifiedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "payrollRunFieldMappings",
            "key": "field_mappings",
            "schema": {
              "generatedName": "payrollRunFieldMappings",
              "value": {
                "generatedName": "PayrollRunFieldMappings",
                "value": {
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "PayrollRunFieldMappingsKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "PayrollRunFieldMappingsValue",
                    "type": "unknown"
                  },
                  "generatedName": "PayrollRunFieldMappings",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "payrollRunRemoteData",
            "key": "remote_data",
            "schema": {
              "generatedName": "payrollRunRemoteData",
              "value": {
                "generatedName": "PayrollRunRemoteData",
                "value": {
                  "value": {
                    "generatedName": "PayrollRunRemoteDataItem",
                    "schema": "RemoteData",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "PayrollRunRemoteData",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "# The PayrollRun Object\n### Description\nThe `PayrollRun` object is used to represent a group of pay statements for a specific pay schedule.\n\n### Usage Example\nFetch from the `LIST PayrollRuns` endpoint and filter by `ID` to show all payroll runs.",
        "generatedName": "PayrollRun",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PolicyTypeEnum": {
        "description": "* `VACATION` - VACATION\n* `SICK` - SICK\n* `PERSONAL` - PERSONAL\n* `JURY_DUTY` - JURY_DUTY\n* `VOLUNTEER` - VOLUNTEER\n* `BEREAVEMENT` - BEREAVEMENT",
        "generatedName": "PolicyTypeEnum",
        "values": [
          {
            "generatedName": "VACATION",
            "value": "VACATION",
            "casing": {}
          },
          {
            "generatedName": "SICK",
            "value": "SICK",
            "casing": {}
          },
          {
            "generatedName": "PERSONAL",
            "value": "PERSONAL",
            "casing": {}
          },
          {
            "generatedName": "JURY_DUTY",
            "value": "JURY_DUTY",
            "casing": {}
          },
          {
            "generatedName": "VOLUNTEER",
            "value": "VOLUNTEER",
            "casing": {}
          },
          {
            "generatedName": "BEREAVEMENT",
            "value": "BEREAVEMENT",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "ReasonEnum": {
        "description": "* `GENERAL_CUSTOMER_REQUEST` - GENERAL_CUSTOMER_REQUEST\n* `GDPR` - GDPR\n* `OTHER` - OTHER",
        "generatedName": "ReasonEnum",
        "values": [
          {
            "generatedName": "GENERAL_CUSTOMER_REQUEST",
            "value": "GENERAL_CUSTOMER_REQUEST",
            "casing": {}
          },
          {
            "generatedName": "GDPR",
            "value": "GDPR",
            "casing": {}
          },
          {
            "generatedName": "OTHER",
            "value": "OTHER",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "RemoteData": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "remoteDataPath",
            "key": "path",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "RemoteDataPath",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "remoteDataData",
            "key": "data",
            "schema": {
              "generatedName": "remoteDataData",
              "value": {
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "RemoteDataDataKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "RemoteDataDataValue",
                  "type": "unknown"
                },
                "generatedName": "RemoteDataData",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RemoteData",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "RemoteKey": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "remoteKeyName",
            "key": "name",
            "schema": {
              "schema": {
                "example": "Remote Deployment Key 1",
                "type": "string"
              },
              "generatedName": "RemoteKeyName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "remoteKeyKey",
            "key": "key",
            "schema": {
              "schema": {
                "example": "hXY57W0g0WkdRHjCaPvwijK63fwfN-o_Wh7f30SLTq_uPCOLo-WFcA",
                "type": "string"
              },
              "generatedName": "RemoteKeyKey",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "# The RemoteKey Object\n### Description\nThe `RemoteKey` object is used to represent a request for a new remote key.\n\n### Usage Example\nPost a `GenerateRemoteKey` to receive a new `RemoteKey`.",
        "generatedName": "RemoteKey",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "RemoteKeyForRegenerationRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "remoteKeyForRegenerationRequestName",
            "key": "name",
            "schema": {
              "schema": {
                "minLength": 1,
                "example": "Remote Deployment Key 1",
                "type": "string"
              },
              "generatedName": "RemoteKeyForRegenerationRequestName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "# The RemoteKeyForRegeneration Object\n### Description\nThe `RemoteKeyForRegeneration` object is used to exchange an old remote key for a new one\n\n### Usage Example\nPost a `RemoteKeyForRegeneration` to swap out an old remote key for a new one",
        "generatedName": "RemoteKeyForRegenerationRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "RemoteResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "remoteResponseMethod",
            "key": "method",
            "schema": {
              "schema": {
                "example": "GET",
                "type": "string"
              },
              "generatedName": "RemoteResponseMethod",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "remoteResponsePath",
            "key": "path",
            "schema": {
              "schema": {
                "example": "/scooters",
                "type": "string"
              },
              "generatedName": "RemoteResponsePath",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "remoteResponseStatus",
            "key": "status",
            "schema": {
              "schema": {
                "example": 200,
                "type": "int"
              },
              "generatedName": "RemoteResponseStatus",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "remoteResponseResponse",
            "key": "response",
            "schema": {
              "generatedName": "RemoteResponseResponse",
              "type": "unknown"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "remoteResponseResponseHeaders",
            "key": "response_headers",
            "schema": {
              "generatedName": "remoteResponseResponseHeaders",
              "value": {
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "RemoteResponseResponseHeadersKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "RemoteResponseResponseHeadersValue",
                  "type": "unknown"
                },
                "generatedName": "RemoteResponseResponseHeaders",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "remoteResponseResponseType",
            "key": "response_type",
            "schema": {
              "generatedName": "remoteResponseResponseType",
              "value": {
                "generatedName": "RemoteResponseResponseType",
                "schema": "ResponseTypeEnum",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "remoteResponseHeaders",
            "key": "headers",
            "schema": {
              "generatedName": "remoteResponseHeaders",
              "value": {
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "RemoteResponseHeadersKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "RemoteResponseHeadersValue",
                  "type": "unknown"
                },
                "generatedName": "RemoteResponseHeaders",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "# The RemoteResponse Object\n### Description\nThe `RemoteResponse` object is used to represent information returned from a third-party endpoint.\n\n### Usage Example\nView the `RemoteResponse` returned from your `DataPassthrough`.",
        "generatedName": "RemoteResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "RequestFormatEnum": {
        "description": "* `JSON` - JSON\n* `XML` - XML\n* `MULTIPART` - MULTIPART",
        "generatedName": "RequestFormatEnum",
        "values": [
          {
            "generatedName": "JSON",
            "value": "JSON",
            "casing": {}
          },
          {
            "generatedName": "XML",
            "value": "XML",
            "casing": {}
          },
          {
            "generatedName": "MULTIPART",
            "value": "MULTIPART",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "RequestTypeEnum": {
        "description": "* `VACATION` - VACATION\n* `SICK` - SICK\n* `PERSONAL` - PERSONAL\n* `JURY_DUTY` - JURY_DUTY\n* `VOLUNTEER` - VOLUNTEER\n* `BEREAVEMENT` - BEREAVEMENT",
        "generatedName": "RequestTypeEnum",
        "values": [
          {
            "generatedName": "VACATION",
            "value": "VACATION",
            "casing": {}
          },
          {
            "generatedName": "SICK",
            "value": "SICK",
            "casing": {}
          },
          {
            "generatedName": "PERSONAL",
            "value": "PERSONAL",
            "casing": {}
          },
          {
            "generatedName": "JURY_DUTY",
            "value": "JURY_DUTY",
            "casing": {}
          },
          {
            "generatedName": "VOLUNTEER",
            "value": "VOLUNTEER",
            "casing": {}
          },
          {
            "generatedName": "BEREAVEMENT",
            "value": "BEREAVEMENT",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "ResponseTypeEnum": {
        "description": "* `JSON` - JSON\n* `BASE64_GZIP` - BASE64_GZIP",
        "generatedName": "ResponseTypeEnum",
        "values": [
          {
            "generatedName": "JSON",
            "value": "JSON",
            "casing": {}
          },
          {
            "generatedName": "BASE64_GZIP",
            "value": "BASE64_GZIP",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "RunStateEnum": {
        "description": "* `PAID` - PAID\n* `DRAFT` - DRAFT\n* `APPROVED` - APPROVED\n* `FAILED` - FAILED\n* `CLOSED` - CLOSED",
        "generatedName": "RunStateEnum",
        "values": [
          {
            "generatedName": "PAID",
            "value": "PAID",
            "casing": {}
          },
          {
            "generatedName": "DRAFT",
            "value": "DRAFT",
            "casing": {}
          },
          {
            "generatedName": "APPROVED",
            "value": "APPROVED",
            "casing": {}
          },
          {
            "generatedName": "FAILED",
            "value": "FAILED",
            "casing": {}
          },
          {
            "generatedName": "CLOSED",
            "value": "CLOSED",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "RunTypeEnum": {
        "description": "* `REGULAR` - REGULAR\n* `OFF_CYCLE` - OFF_CYCLE\n* `CORRECTION` - CORRECTION\n* `TERMINATION` - TERMINATION\n* `SIGN_ON_BONUS` - SIGN_ON_BONUS",
        "generatedName": "RunTypeEnum",
        "values": [
          {
            "generatedName": "REGULAR",
            "value": "REGULAR",
            "casing": {}
          },
          {
            "generatedName": "OFF_CYCLE",
            "value": "OFF_CYCLE",
            "casing": {}
          },
          {
            "generatedName": "CORRECTION",
            "value": "CORRECTION",
            "casing": {}
          },
          {
            "generatedName": "TERMINATION",
            "value": "TERMINATION",
            "casing": {}
          },
          {
            "generatedName": "SIGN_ON_BONUS",
            "value": "SIGN_ON_BONUS",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "SelectiveSyncConfigurationsUsageEnum": {
        "description": "* `IN_NEXT_SYNC` - IN_NEXT_SYNC\n* `IN_LAST_SYNC` - IN_LAST_SYNC",
        "generatedName": "SelectiveSyncConfigurationsUsageEnum",
        "values": [
          {
            "generatedName": "IN_NEXT_SYNC",
            "value": "IN_NEXT_SYNC",
            "casing": {}
          },
          {
            "generatedName": "IN_LAST_SYNC",
            "value": "IN_LAST_SYNC",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "SyncStatus": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "syncStatusModelName",
            "key": "model_name",
            "schema": {
              "schema": {
                "example": "Employee",
                "type": "string"
              },
              "generatedName": "SyncStatusModelName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "syncStatusModelId",
            "key": "model_id",
            "schema": {
              "schema": {
                "example": "hris.Employee",
                "type": "string"
              },
              "generatedName": "SyncStatusModelId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "syncStatusLastSyncStart",
            "key": "last_sync_start",
            "schema": {
              "generatedName": "syncStatusLastSyncStart",
              "value": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SyncStatusLastSyncStart",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "syncStatusNextSyncStart",
            "key": "next_sync_start",
            "schema": {
              "generatedName": "syncStatusNextSyncStart",
              "value": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SyncStatusNextSyncStart",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "syncStatusStatus",
            "key": "status",
            "schema": {
              "generatedName": "SyncStatusStatus",
              "schema": "SyncStatusStatusEnum",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "syncStatusIsInitialSync",
            "key": "is_initial_sync",
            "schema": {
              "schema": {
                "example": true,
                "type": "boolean"
              },
              "generatedName": "SyncStatusIsInitialSync",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "syncStatusSelectiveSyncConfigurationsUsage",
            "key": "selective_sync_configurations_usage",
            "schema": {
              "generatedName": "syncStatusSelectiveSyncConfigurationsUsage",
              "value": {
                "generatedName": "SyncStatusSelectiveSyncConfigurationsUsage",
                "schema": "SelectiveSyncConfigurationsUsageEnum",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "# The SyncStatus Object\n### Description\nThe `SyncStatus` object is used to represent the syncing state of an account\n\n### Usage Example\nView the `SyncStatus` for an account to see how recently its models were synced.",
        "generatedName": "SyncStatus",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SyncStatusStatusEnum": {
        "description": "* `SYNCING` - SYNCING\n* `DONE` - DONE\n* `FAILED` - FAILED\n* `DISABLED` - DISABLED\n* `PAUSED` - PAUSED\n* `PARTIALLY_SYNCED` - PARTIALLY_SYNCED",
        "generatedName": "SyncStatusStatusEnum",
        "values": [
          {
            "generatedName": "SYNCING",
            "value": "SYNCING",
            "casing": {}
          },
          {
            "generatedName": "DONE",
            "value": "DONE",
            "casing": {}
          },
          {
            "generatedName": "FAILED",
            "value": "FAILED",
            "casing": {}
          },
          {
            "generatedName": "DISABLED",
            "value": "DISABLED",
            "casing": {}
          },
          {
            "generatedName": "PAUSED",
            "value": "PAUSED",
            "casing": {}
          },
          {
            "generatedName": "PARTIALLY_SYNCED",
            "value": "PARTIALLY_SYNCED",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "Tax": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "taxId",
            "key": "id",
            "schema": {
              "generatedName": "taxId",
              "value": {
                "schema": {
                  "format": "uuid",
                  "example": "e3a825fd-c38d-4095-a717-df98c4cb9ebc",
                  "type": "string"
                },
                "generatedName": "TaxId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "taxRemoteId",
            "key": "remote_id",
            "schema": {
              "generatedName": "taxRemoteId",
              "value": {
                "generatedName": "TaxRemoteId",
                "description": "The third-party API ID of the matching object.",
                "value": {
                  "description": "The third-party API ID of the matching object.",
                  "schema": {
                    "example": "26806834",
                    "type": "string"
                  },
                  "generatedName": "TaxRemoteId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "taxEmployeePayrollRun",
            "key": "employee_payroll_run",
            "schema": {
              "generatedName": "taxEmployeePayrollRun",
              "value": {
                "generatedName": "TaxEmployeePayrollRun",
                "value": {
                  "schema": {
                    "format": "uuid",
                    "example": "35347df1-95e7-46e2-93cc-66f1191edca5",
                    "type": "string"
                  },
                  "generatedName": "TaxEmployeePayrollRun",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "taxName",
            "key": "name",
            "schema": {
              "generatedName": "taxName",
              "value": {
                "generatedName": "TaxName",
                "description": "The tax's name.",
                "value": {
                  "description": "The tax's name.",
                  "schema": {
                    "example": "California State Income Tax",
                    "type": "string"
                  },
                  "generatedName": "TaxName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "taxAmount",
            "key": "amount",
            "schema": {
              "generatedName": "taxAmount",
              "value": {
                "generatedName": "TaxAmount",
                "description": "The tax amount.",
                "value": {
                  "description": "The tax amount.",
                  "schema": {
                    "example": 100.25,
                    "type": "double"
                  },
                  "generatedName": "TaxAmount",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "taxEmployerTax",
            "key": "employer_tax",
            "schema": {
              "generatedName": "taxEmployerTax",
              "value": {
                "generatedName": "TaxEmployerTax",
                "description": "Whether or not the employer is responsible for paying the tax.",
                "value": {
                  "description": "Whether or not the employer is responsible for paying the tax.",
                  "schema": {
                    "type": "boolean"
                  },
                  "generatedName": "TaxEmployerTax",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "taxRemoteWasDeleted",
            "key": "remote_was_deleted",
            "schema": {
              "generatedName": "taxRemoteWasDeleted",
              "value": {
                "description": "Indicates whether or not this object has been deleted by third party webhooks.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "TaxRemoteWasDeleted",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "taxModifiedAt",
            "key": "modified_at",
            "schema": {
              "generatedName": "taxModifiedAt",
              "value": {
                "description": "This is the datetime that this object was last updated by Merge",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "TaxModifiedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "taxFieldMappings",
            "key": "field_mappings",
            "schema": {
              "generatedName": "taxFieldMappings",
              "value": {
                "generatedName": "TaxFieldMappings",
                "value": {
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "TaxFieldMappingsKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "TaxFieldMappingsValue",
                    "type": "unknown"
                  },
                  "generatedName": "TaxFieldMappings",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "taxRemoteData",
            "key": "remote_data",
            "schema": {
              "generatedName": "taxRemoteData",
              "value": {
                "generatedName": "TaxRemoteData",
                "value": {
                  "value": {
                    "generatedName": "TaxRemoteDataItem",
                    "schema": "RemoteData",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "TaxRemoteData",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "# The Tax Object\n### Description\nThe `Tax` object is used to represent an array of the tax deductions for a given employee's payroll run.\n\n### Usage Example\nFetch from the `LIST Taxes` endpoint and filter by `ID` to show all taxes.",
        "generatedName": "Tax",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Team": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "teamId",
            "key": "id",
            "schema": {
              "generatedName": "teamId",
              "value": {
                "schema": {
                  "format": "uuid",
                  "example": "13a72919-9fae-4f54-81ca-ddfd8712a1ba",
                  "type": "string"
                },
                "generatedName": "TeamId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "teamRemoteId",
            "key": "remote_id",
            "schema": {
              "generatedName": "teamRemoteId",
              "value": {
                "generatedName": "TeamRemoteId",
                "description": "The third-party API ID of the matching object.",
                "value": {
                  "description": "The third-party API ID of the matching object.",
                  "schema": {
                    "example": "19202938",
                    "type": "string"
                  },
                  "generatedName": "TeamRemoteId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "teamName",
            "key": "name",
            "schema": {
              "generatedName": "teamName",
              "value": {
                "generatedName": "TeamName",
                "description": "The team's name.",
                "value": {
                  "description": "The team's name.",
                  "schema": {
                    "example": "Engineering",
                    "type": "string"
                  },
                  "generatedName": "TeamName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "teamParentTeam",
            "key": "parent_team",
            "schema": {
              "generatedName": "teamParentTeam",
              "value": {
                "generatedName": "TeamParentTeam",
                "description": "The team's parent team.",
                "value": {
                  "description": "The team's parent team.",
                  "schema": {
                    "format": "uuid",
                    "example": "1b998423-db0a-4037-a4cf-f79c60cb67b3",
                    "type": "string"
                  },
                  "generatedName": "TeamParentTeam",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "teamRemoteWasDeleted",
            "key": "remote_was_deleted",
            "schema": {
              "generatedName": "teamRemoteWasDeleted",
              "value": {
                "description": "Indicates whether or not this object has been deleted by third party webhooks.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "TeamRemoteWasDeleted",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "teamModifiedAt",
            "key": "modified_at",
            "schema": {
              "generatedName": "teamModifiedAt",
              "value": {
                "description": "This is the datetime that this object was last updated by Merge",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "TeamModifiedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "teamFieldMappings",
            "key": "field_mappings",
            "schema": {
              "generatedName": "teamFieldMappings",
              "value": {
                "generatedName": "TeamFieldMappings",
                "value": {
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "TeamFieldMappingsKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "TeamFieldMappingsValue",
                    "type": "unknown"
                  },
                  "generatedName": "TeamFieldMappings",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "teamRemoteData",
            "key": "remote_data",
            "schema": {
              "generatedName": "teamRemoteData",
              "value": {
                "generatedName": "TeamRemoteData",
                "value": {
                  "value": {
                    "generatedName": "TeamRemoteDataItem",
                    "schema": "RemoteData",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "TeamRemoteData",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "# The Team Object\n### Description\nThe `Team` object is used to represent a subdivision of the company, usually a department. Each employee will be grouped into one specific Team.\n\n### Usage Example\nIf you're building a way to filter by `Team`, you'd hit the `GET Teams` endpoint to fetch the `Teams`, and then use the `ID` of the team your user selects to filter the `GET Employees` endpoint.",
        "generatedName": "Team",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TimeOff": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "timeOffId",
            "key": "id",
            "schema": {
              "generatedName": "timeOffId",
              "value": {
                "schema": {
                  "format": "uuid",
                  "example": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                  "type": "string"
                },
                "generatedName": "TimeOffId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "timeOffRemoteId",
            "key": "remote_id",
            "schema": {
              "generatedName": "timeOffRemoteId",
              "value": {
                "generatedName": "TimeOffRemoteId",
                "description": "The third-party API ID of the matching object.",
                "value": {
                  "description": "The third-party API ID of the matching object.",
                  "schema": {
                    "example": "19202938",
                    "type": "string"
                  },
                  "generatedName": "TimeOffRemoteId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timeOffEmployee",
            "key": "employee",
            "schema": {
              "generatedName": "timeOffEmployee",
              "value": {
                "generatedName": "TimeOffEmployee",
                "description": "The employee requesting time off.",
                "value": {
                  "description": "The employee requesting time off.",
                  "schema": {
                    "format": "uuid",
                    "example": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                    "type": "string"
                  },
                  "generatedName": "TimeOffEmployee",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timeOffApprover",
            "key": "approver",
            "schema": {
              "generatedName": "timeOffApprover",
              "value": {
                "generatedName": "TimeOffApprover",
                "description": "The Merge ID of the employee with the ability to approve the time off request.",
                "value": {
                  "description": "The Merge ID of the employee with the ability to approve the time off request.",
                  "schema": {
                    "format": "uuid",
                    "example": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                    "type": "string"
                  },
                  "generatedName": "TimeOffApprover",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timeOffStatus",
            "key": "status",
            "schema": {
              "generatedName": "timeOffStatus",
              "value": {
                "generatedName": "TimeOffStatus",
                "description": "The status of this time off request.\n\n* `REQUESTED` - REQUESTED\n* `APPROVED` - APPROVED\n* `DECLINED` - DECLINED\n* `CANCELLED` - CANCELLED\n* `DELETED` - DELETED",
                "value": {
                  "generatedName": "TimeOffStatus",
                  "schema": "TimeOffStatusEnum",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timeOffEmployeeNote",
            "key": "employee_note",
            "schema": {
              "generatedName": "timeOffEmployeeNote",
              "value": {
                "generatedName": "TimeOffEmployeeNote",
                "description": "The employee note for this time off request.",
                "value": {
                  "description": "The employee note for this time off request.",
                  "schema": {
                    "example": "Moving into the new apartment Kendall Roy gave me!",
                    "type": "string"
                  },
                  "generatedName": "TimeOffEmployeeNote",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timeOffUnits",
            "key": "units",
            "schema": {
              "generatedName": "timeOffUnits",
              "value": {
                "generatedName": "TimeOffUnits",
                "description": "The measurement that the third-party integration uses to count time requested.\n\n* `HOURS` - HOURS\n* `DAYS` - DAYS",
                "value": {
                  "generatedName": "TimeOffUnits",
                  "schema": "UnitsEnum",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timeOffAmount",
            "key": "amount",
            "schema": {
              "generatedName": "timeOffAmount",
              "value": {
                "generatedName": "TimeOffAmount",
                "description": "The time off quantity measured by the prescribed “units”.",
                "value": {
                  "description": "The time off quantity measured by the prescribed “units”.",
                  "schema": {
                    "example": 3,
                    "type": "double"
                  },
                  "generatedName": "TimeOffAmount",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timeOffRequestType",
            "key": "request_type",
            "schema": {
              "generatedName": "timeOffRequestType",
              "value": {
                "generatedName": "TimeOffRequestType",
                "description": "The type of time off request.\n\n* `VACATION` - VACATION\n* `SICK` - SICK\n* `PERSONAL` - PERSONAL\n* `JURY_DUTY` - JURY_DUTY\n* `VOLUNTEER` - VOLUNTEER\n* `BEREAVEMENT` - BEREAVEMENT",
                "value": {
                  "generatedName": "TimeOffRequestType",
                  "schema": "RequestTypeEnum",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timeOffStartTime",
            "key": "start_time",
            "schema": {
              "generatedName": "timeOffStartTime",
              "value": {
                "generatedName": "TimeOffStartTime",
                "description": "The day and time of the start of the time requested off.",
                "value": {
                  "description": "The day and time of the start of the time requested off.",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "TimeOffStartTime",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timeOffEndTime",
            "key": "end_time",
            "schema": {
              "generatedName": "timeOffEndTime",
              "value": {
                "generatedName": "TimeOffEndTime",
                "description": "The day and time of the end of the time requested off.",
                "value": {
                  "description": "The day and time of the end of the time requested off.",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "TimeOffEndTime",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timeOffRemoteWasDeleted",
            "key": "remote_was_deleted",
            "schema": {
              "generatedName": "timeOffRemoteWasDeleted",
              "value": {
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "TimeOffRemoteWasDeleted",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "timeOffModifiedAt",
            "key": "modified_at",
            "schema": {
              "generatedName": "timeOffModifiedAt",
              "value": {
                "description": "This is the datetime that this object was last updated by Merge",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "TimeOffModifiedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "timeOffFieldMappings",
            "key": "field_mappings",
            "schema": {
              "generatedName": "timeOffFieldMappings",
              "value": {
                "generatedName": "TimeOffFieldMappings",
                "value": {
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "TimeOffFieldMappingsKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "TimeOffFieldMappingsValue",
                    "type": "unknown"
                  },
                  "generatedName": "TimeOffFieldMappings",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "timeOffRemoteData",
            "key": "remote_data",
            "schema": {
              "generatedName": "timeOffRemoteData",
              "value": {
                "generatedName": "TimeOffRemoteData",
                "value": {
                  "value": {
                    "generatedName": "TimeOffRemoteDataItem",
                    "schema": "RemoteData",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "TimeOffRemoteData",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "# The TimeOff Object\n### Description\nThe `TimeOff` object is used to represent all employees' Time Off entries.\n\n### Usage Example\nFetch from the `LIST TimeOffs` endpoint and filter by `ID` to show all time off requests.",
        "generatedName": "TimeOff",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TimeOffBalance": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "timeOffBalanceId",
            "key": "id",
            "schema": {
              "generatedName": "timeOffBalanceId",
              "value": {
                "schema": {
                  "format": "uuid",
                  "example": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                  "type": "string"
                },
                "generatedName": "TimeOffBalanceId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "timeOffBalanceRemoteId",
            "key": "remote_id",
            "schema": {
              "generatedName": "timeOffBalanceRemoteId",
              "value": {
                "generatedName": "TimeOffBalanceRemoteId",
                "description": "The third-party API ID of the matching object.",
                "value": {
                  "description": "The third-party API ID of the matching object.",
                  "schema": {
                    "example": "19202938",
                    "type": "string"
                  },
                  "generatedName": "TimeOffBalanceRemoteId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timeOffBalanceEmployee",
            "key": "employee",
            "schema": {
              "generatedName": "timeOffBalanceEmployee",
              "value": {
                "generatedName": "TimeOffBalanceEmployee",
                "description": "The employee the balance belongs to.",
                "value": {
                  "description": "The employee the balance belongs to.",
                  "schema": {
                    "format": "uuid",
                    "example": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                    "type": "string"
                  },
                  "generatedName": "TimeOffBalanceEmployee",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timeOffBalanceBalance",
            "key": "balance",
            "schema": {
              "generatedName": "timeOffBalanceBalance",
              "value": {
                "generatedName": "TimeOffBalanceBalance",
                "description": "The current remaining PTO balance, always measured in terms of hours.",
                "value": {
                  "description": "The current remaining PTO balance, always measured in terms of hours.",
                  "schema": {
                    "type": "double"
                  },
                  "generatedName": "TimeOffBalanceBalance",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timeOffBalanceUsed",
            "key": "used",
            "schema": {
              "generatedName": "timeOffBalanceUsed",
              "value": {
                "generatedName": "TimeOffBalanceUsed",
                "description": "The amount of PTO used in terms of hours.",
                "value": {
                  "description": "The amount of PTO used in terms of hours.",
                  "schema": {
                    "type": "double"
                  },
                  "generatedName": "TimeOffBalanceUsed",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timeOffBalancePolicyType",
            "key": "policy_type",
            "schema": {
              "generatedName": "timeOffBalancePolicyType",
              "value": {
                "generatedName": "TimeOffBalancePolicyType",
                "description": "The policy type of this time off balance.\n\n* `VACATION` - VACATION\n* `SICK` - SICK\n* `PERSONAL` - PERSONAL\n* `JURY_DUTY` - JURY_DUTY\n* `VOLUNTEER` - VOLUNTEER\n* `BEREAVEMENT` - BEREAVEMENT",
                "value": {
                  "generatedName": "TimeOffBalancePolicyType",
                  "schema": "PolicyTypeEnum",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timeOffBalanceRemoteWasDeleted",
            "key": "remote_was_deleted",
            "schema": {
              "generatedName": "timeOffBalanceRemoteWasDeleted",
              "value": {
                "description": "Indicates whether or not this object has been deleted by third party webhooks.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "TimeOffBalanceRemoteWasDeleted",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "timeOffBalanceModifiedAt",
            "key": "modified_at",
            "schema": {
              "generatedName": "timeOffBalanceModifiedAt",
              "value": {
                "description": "This is the datetime that this object was last updated by Merge",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "TimeOffBalanceModifiedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "timeOffBalanceFieldMappings",
            "key": "field_mappings",
            "schema": {
              "generatedName": "timeOffBalanceFieldMappings",
              "value": {
                "generatedName": "TimeOffBalanceFieldMappings",
                "value": {
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "TimeOffBalanceFieldMappingsKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "TimeOffBalanceFieldMappingsValue",
                    "type": "unknown"
                  },
                  "generatedName": "TimeOffBalanceFieldMappings",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "timeOffBalanceRemoteData",
            "key": "remote_data",
            "schema": {
              "generatedName": "timeOffBalanceRemoteData",
              "value": {
                "generatedName": "TimeOffBalanceRemoteData",
                "value": {
                  "value": {
                    "generatedName": "TimeOffBalanceRemoteDataItem",
                    "schema": "RemoteData",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "TimeOffBalanceRemoteData",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "# The TimeOffBalance Object\n### Description\nThe `TimeOffBalance` object is used to represent current balances for an employee's Time Off plan.\n\n### Usage Example\nFetch from the `LIST TimeOffBalances` endpoint and filter by `ID` to show all time off balances.",
        "generatedName": "TimeOffBalance",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TimeOffEndpointRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "timeOffEndpointRequestModel",
            "key": "model",
            "schema": {
              "generatedName": "TimeOffEndpointRequestModel",
              "schema": "TimeOffRequest",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TimeOffEndpointRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TimeOffRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "timeOffRequestEmployee",
            "key": "employee",
            "schema": {
              "generatedName": "timeOffRequestEmployee",
              "value": {
                "generatedName": "TimeOffRequestEmployee",
                "description": "The employee requesting time off.",
                "value": {
                  "description": "The employee requesting time off.",
                  "schema": {
                    "format": "uuid",
                    "example": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                    "type": "string"
                  },
                  "generatedName": "TimeOffRequestEmployee",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timeOffRequestApprover",
            "key": "approver",
            "schema": {
              "generatedName": "timeOffRequestApprover",
              "value": {
                "generatedName": "TimeOffRequestApprover",
                "description": "The Merge ID of the employee with the ability to approve the time off request.",
                "value": {
                  "description": "The Merge ID of the employee with the ability to approve the time off request.",
                  "schema": {
                    "format": "uuid",
                    "example": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                    "type": "string"
                  },
                  "generatedName": "TimeOffRequestApprover",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timeOffRequestStatus",
            "key": "status",
            "schema": {
              "generatedName": "timeOffRequestStatus",
              "value": {
                "generatedName": "TimeOffRequestStatus",
                "description": "The status of this time off request.\n\n* `REQUESTED` - REQUESTED\n* `APPROVED` - APPROVED\n* `DECLINED` - DECLINED\n* `CANCELLED` - CANCELLED\n* `DELETED` - DELETED",
                "value": {
                  "generatedName": "TimeOffRequestStatus",
                  "schema": "TimeOffStatusEnum",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timeOffRequestEmployeeNote",
            "key": "employee_note",
            "schema": {
              "generatedName": "timeOffRequestEmployeeNote",
              "value": {
                "generatedName": "TimeOffRequestEmployeeNote",
                "description": "The employee note for this time off request.",
                "value": {
                  "description": "The employee note for this time off request.",
                  "schema": {
                    "example": "Moving into the new apartment Kendall Roy gave me!",
                    "type": "string"
                  },
                  "generatedName": "TimeOffRequestEmployeeNote",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timeOffRequestUnits",
            "key": "units",
            "schema": {
              "generatedName": "timeOffRequestUnits",
              "value": {
                "generatedName": "TimeOffRequestUnits",
                "description": "The measurement that the third-party integration uses to count time requested.\n\n* `HOURS` - HOURS\n* `DAYS` - DAYS",
                "value": {
                  "generatedName": "TimeOffRequestUnits",
                  "schema": "UnitsEnum",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timeOffRequestAmount",
            "key": "amount",
            "schema": {
              "generatedName": "timeOffRequestAmount",
              "value": {
                "generatedName": "TimeOffRequestAmount",
                "description": "The time off quantity measured by the prescribed “units”.",
                "value": {
                  "description": "The time off quantity measured by the prescribed “units”.",
                  "schema": {
                    "example": 3,
                    "type": "double"
                  },
                  "generatedName": "TimeOffRequestAmount",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timeOffRequestRequestType",
            "key": "request_type",
            "schema": {
              "generatedName": "timeOffRequestRequestType",
              "value": {
                "generatedName": "TimeOffRequestRequestType",
                "description": "The type of time off request.\n\n* `VACATION` - VACATION\n* `SICK` - SICK\n* `PERSONAL` - PERSONAL\n* `JURY_DUTY` - JURY_DUTY\n* `VOLUNTEER` - VOLUNTEER\n* `BEREAVEMENT` - BEREAVEMENT",
                "value": {
                  "generatedName": "TimeOffRequestRequestType",
                  "schema": "RequestTypeEnum",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timeOffRequestStartTime",
            "key": "start_time",
            "schema": {
              "generatedName": "timeOffRequestStartTime",
              "value": {
                "generatedName": "TimeOffRequestStartTime",
                "description": "The day and time of the start of the time requested off.",
                "value": {
                  "description": "The day and time of the start of the time requested off.",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "TimeOffRequestStartTime",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timeOffRequestEndTime",
            "key": "end_time",
            "schema": {
              "generatedName": "timeOffRequestEndTime",
              "value": {
                "generatedName": "TimeOffRequestEndTime",
                "description": "The day and time of the end of the time requested off.",
                "value": {
                  "description": "The day and time of the end of the time requested off.",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "TimeOffRequestEndTime",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timeOffRequestIntegrationParams",
            "key": "integration_params",
            "schema": {
              "generatedName": "timeOffRequestIntegrationParams",
              "value": {
                "generatedName": "TimeOffRequestIntegrationParams",
                "value": {
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "TimeOffRequestIntegrationParamsKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "TimeOffRequestIntegrationParamsValue",
                    "type": "unknown"
                  },
                  "generatedName": "TimeOffRequestIntegrationParams",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timeOffRequestLinkedAccountParams",
            "key": "linked_account_params",
            "schema": {
              "generatedName": "timeOffRequestLinkedAccountParams",
              "value": {
                "generatedName": "TimeOffRequestLinkedAccountParams",
                "value": {
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "TimeOffRequestLinkedAccountParamsKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "TimeOffRequestLinkedAccountParamsValue",
                    "type": "unknown"
                  },
                  "generatedName": "TimeOffRequestLinkedAccountParams",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "# The TimeOff Object\n### Description\nThe `TimeOff` object is used to represent all employees' Time Off entries.\n\n### Usage Example\nFetch from the `LIST TimeOffs` endpoint and filter by `ID` to show all time off requests.",
        "generatedName": "TimeOffRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TimeOffResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "timeOffResponseModel",
            "key": "model",
            "schema": {
              "generatedName": "TimeOffResponseModel",
              "schema": "TimeOff",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "timeOffResponseWarnings",
            "key": "warnings",
            "schema": {
              "value": {
                "generatedName": "TimeOffResponseWarningsItem",
                "schema": "WarningValidationProblem",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "TimeOffResponseWarnings",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timeOffResponseErrors",
            "key": "errors",
            "schema": {
              "value": {
                "generatedName": "TimeOffResponseErrorsItem",
                "schema": "ErrorValidationProblem",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "TimeOffResponseErrors",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timeOffResponseLogs",
            "key": "logs",
            "schema": {
              "generatedName": "timeOffResponseLogs",
              "value": {
                "value": {
                  "generatedName": "TimeOffResponseLogsItem",
                  "schema": "DebugModeLog",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "TimeOffResponseLogs",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TimeOffResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TimeOffStatusEnum": {
        "description": "* `REQUESTED` - REQUESTED\n* `APPROVED` - APPROVED\n* `DECLINED` - DECLINED\n* `CANCELLED` - CANCELLED\n* `DELETED` - DELETED",
        "generatedName": "TimeOffStatusEnum",
        "values": [
          {
            "generatedName": "REQUESTED",
            "value": "REQUESTED",
            "casing": {}
          },
          {
            "generatedName": "APPROVED",
            "value": "APPROVED",
            "casing": {}
          },
          {
            "generatedName": "DECLINED",
            "value": "DECLINED",
            "casing": {}
          },
          {
            "generatedName": "CANCELLED",
            "value": "CANCELLED",
            "casing": {}
          },
          {
            "generatedName": "DELETED",
            "value": "DELETED",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "UnitsEnum": {
        "description": "* `HOURS` - HOURS\n* `DAYS` - DAYS",
        "generatedName": "UnitsEnum",
        "values": [
          {
            "generatedName": "HOURS",
            "value": "HOURS",
            "casing": {}
          },
          {
            "generatedName": "DAYS",
            "value": "DAYS",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "ValidationProblemSource": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "validationProblemSourcePointer",
            "key": "pointer",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ValidationProblemSourcePointer",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ValidationProblemSource",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "WarningValidationProblem": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "warningValidationProblemSource",
            "key": "source",
            "schema": {
              "generatedName": "warningValidationProblemSource",
              "value": {
                "generatedName": "WarningValidationProblemSource",
                "schema": "ValidationProblemSource",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "warningValidationProblemTitle",
            "key": "title",
            "schema": {
              "schema": {
                "example": "Unrecognized Field",
                "type": "string"
              },
              "generatedName": "WarningValidationProblemTitle",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "warningValidationProblemDetail",
            "key": "detail",
            "schema": {
              "schema": {
                "example": "An unrecognized field, age, was passed in with request data.",
                "type": "string"
              },
              "generatedName": "WarningValidationProblemDetail",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "warningValidationProblemProblemType",
            "key": "problem_type",
            "schema": {
              "schema": {
                "example": "UNRECOGNIZED_FIELD",
                "type": "string"
              },
              "generatedName": "WarningValidationProblemProblemType",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WarningValidationProblem",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "WebhookReceiver": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "webhookReceiverEvent",
            "key": "event",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "WebhookReceiverEvent",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "webhookReceiverIsActive",
            "key": "is_active",
            "schema": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "WebhookReceiverIsActive",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "webhookReceiverKey",
            "key": "key",
            "schema": {
              "generatedName": "webhookReceiverKey",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "WebhookReceiverKey",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WebhookReceiver",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "WebhookReceiverRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "webhookReceiverRequestEvent",
            "key": "event",
            "schema": {
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "WebhookReceiverRequestEvent",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "webhookReceiverRequestIsActive",
            "key": "is_active",
            "schema": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "WebhookReceiverRequestIsActive",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "webhookReceiverRequestKey",
            "key": "key",
            "schema": {
              "generatedName": "webhookReceiverRequestKey",
              "value": {
                "schema": {
                  "minLength": 1,
                  "type": "string"
                },
                "generatedName": "WebhookReceiverRequestKey",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WebhookReceiverRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      }
    },
    "namespacedSchemas": {}
  },
  "variables": {},
  "nonRequestReferencedSchemas": {},
  "securitySchemes": {
    "tokenAuth": {
      "headerName": "Authorization",
      "type": "header"
    }
  },
  "globalHeaders": [],
  "idempotencyHeaders": [],
  "groups": {}
}