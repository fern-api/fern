{
  "apiDisplayName": "Test content-type parsing.",
  "headers": [],
  "idempotencyHeaders": [],
  "types": {
    "TestPostRequestBodySchemaFilename": {
      "name": {
        "typeId": "TestPostRequestBodySchemaFilename",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TestPostRequestBodySchemaFilename",
          "camelCase": {
            "unsafeName": "testPostRequestBodySchemaFilename",
            "safeName": "testPostRequestBodySchemaFilename"
          },
          "snakeCase": {
            "unsafeName": "test_post_request_body_schema_filename",
            "safeName": "test_post_request_body_schema_filename"
          },
          "screamingSnakeCase": {
            "unsafeName": "TEST_POST_REQUEST_BODY_SCHEMA_FILENAME",
            "safeName": "TEST_POST_REQUEST_BODY_SCHEMA_FILENAME"
          },
          "pascalCase": {
            "unsafeName": "TestPostRequestBodySchemaFilename",
            "safeName": "TestPostRequestBodySchemaFilename"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Optional multipart section to override the filename.",
      "referencedTypes": {},
      "inline": false
    },
    "TestPostRequestBodySchemaFile": {
      "name": {
        "typeId": "TestPostRequestBodySchemaFile",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TestPostRequestBodySchemaFile",
          "camelCase": {
            "unsafeName": "testPostRequestBodySchemaFile",
            "safeName": "testPostRequestBodySchemaFile"
          },
          "snakeCase": {
            "unsafeName": "test_post_request_body_schema_file",
            "safeName": "test_post_request_body_schema_file"
          },
          "screamingSnakeCase": {
            "unsafeName": "TEST_POST_REQUEST_BODY_SCHEMA_FILE",
            "safeName": "TEST_POST_REQUEST_BODY_SCHEMA_FILE"
          },
          "pascalCase": {
            "unsafeName": "TestPostRequestBodySchemaFile",
            "safeName": "TestPostRequestBodySchemaFile"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "format": "binary"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "format": "binary"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Binary file contents. The file name of the file will be used as the document ID.",
      "referencedTypes": {},
      "inline": false
    }
  },
  "services": {
    "": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "",
              "camelCase": {
                "unsafeName": "",
                "safeName": ""
              },
              "snakeCase": {
                "unsafeName": "",
                "safeName": ""
              },
              "screamingSnakeCase": {
                "unsafeName": "",
                "safeName": ""
              },
              "pascalCase": {
                "unsafeName": "",
                "safeName": ""
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "",
            "camelCase": {
              "unsafeName": "",
              "safeName": ""
            },
            "snakeCase": {
              "unsafeName": "",
              "safeName": ""
            },
            "screamingSnakeCase": {
              "unsafeName": "",
              "safeName": ""
            },
            "pascalCase": {
              "unsafeName": "",
              "safeName": ""
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "id": "",
          "displayName": "Test with dual Content-Type request types",
          "method": "POST",
          "name": {
            "originalName": "testWithDualContentTypeRequestTypes",
            "camelCase": {
              "unsafeName": "testWithDualContentTypeRequestTypes",
              "safeName": "testWithDualContentTypeRequestTypes"
            },
            "snakeCase": {
              "unsafeName": "test_with_dual_content_type_request_types",
              "safeName": "test_with_dual_content_type_request_types"
            },
            "screamingSnakeCase": {
              "unsafeName": "TEST_WITH_DUAL_CONTENT_TYPE_REQUEST_TYPES",
              "safeName": "TEST_WITH_DUAL_CONTENT_TYPE_REQUEST_TYPES"
            },
            "pascalCase": {
              "unsafeName": "TestWithDualContentTypeRequestTypes",
              "safeName": "TestWithDualContentTypeRequestTypes"
            }
          },
          "path": {
            "head": "/example",
            "parts": []
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "corpus_key",
                "camelCase": {
                  "unsafeName": "corpusKey",
                  "safeName": "corpusKey"
                },
                "snakeCase": {
                  "unsafeName": "corpus_key",
                  "safeName": "corpus_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CORPUS_KEY",
                  "safeName": "CORPUS_KEY"
                },
                "pascalCase": {
                  "unsafeName": "CorpusKey",
                  "safeName": "CorpusKey"
                }
              },
              "docs": "The unique key",
              "valueType": {
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "corpus_key",
                  "camelCase": {
                    "unsafeName": "corpusKey",
                    "safeName": "corpusKey"
                  },
                  "snakeCase": {
                    "unsafeName": "corpus_key",
                    "safeName": "corpus_key"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CORPUS_KEY",
                    "safeName": "CORPUS_KEY"
                  },
                  "pascalCase": {
                    "unsafeName": "CorpusKey",
                    "safeName": "CorpusKey"
                  }
                },
                "typeId": "corpus_key",
                "inline": false,
                "type": "named"
              },
              "location": "ENDPOINT"
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": false,
          "docs": "Test request with dual content types.\n",
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/example",
            "parts": []
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "corpus_key",
                "camelCase": {
                  "unsafeName": "corpusKey",
                  "safeName": "corpusKey"
                },
                "snakeCase": {
                  "unsafeName": "corpus_key",
                  "safeName": "corpus_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CORPUS_KEY",
                  "safeName": "CORPUS_KEY"
                },
                "pascalCase": {
                  "unsafeName": "CorpusKey",
                  "safeName": "CorpusKey"
                }
              },
              "docs": "The unique key",
              "valueType": {
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "corpus_key",
                  "camelCase": {
                    "unsafeName": "corpusKey",
                    "safeName": "corpusKey"
                  },
                  "snakeCase": {
                    "unsafeName": "corpus_key",
                    "safeName": "corpus_key"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CORPUS_KEY",
                    "safeName": "CORPUS_KEY"
                  },
                  "pascalCase": {
                    "unsafeName": "CorpusKey",
                    "safeName": "CorpusKey"
                  }
                },
                "typeId": "corpus_key",
                "inline": false,
                "type": "named"
              },
              "location": "ENDPOINT"
            }
          ]
        }
      ]
    }
  },
  "webhookGroups": {},
  "errors": {},
  "pathParameters": [],
  "errorDiscriminationStrategy": {
    "type": "statusCode"
  },
  "variables": [],
  "serviceTypeReferenceInfo": {
    "typesReferencedOnlyByService": {},
    "sharedTypes": []
  }
}