{
  "absoluteFilePath": "/DUMMY_PATH",
  "importedDefinitions": {},
  "namedDefinitionFiles": {
    "__package__.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "errors": {
          "BadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "code",
                  "message": "message",
                  "status": 1.1,
                },
              },
            ],
            "status-code": 400,
            "type": "ApiErrorResponse",
          },
          "NotFoundError": {
            "docs": "Not Found",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "code",
                  "message": "message",
                  "status": 1.1,
                },
              },
            ],
            "status-code": 404,
            "type": "ApiErrorResponse",
          },
          "UnprocessableEntityError": {
            "docs": "Unprocessable Entity",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "code",
                  "message": "message",
                  "status": 1.1,
                },
              },
            ],
            "status-code": 422,
            "type": "ApiErrorResponse",
          },
        },
        "types": {
          "AlertRule": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "strategy": "AlertStrategy",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AlertStrategy": {
            "docs": "Alert strategy to use",
            "enum": [
              "each_attempt",
              "last_attempt",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ApiErrorResponse": {
            "docs": "Error response model",
            "inline": undefined,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "string",
              },
              "data": "optional<nullable<ApiErrorResponseData>>",
              "message": {
                "docs": "Error description",
                "type": "string",
              },
              "status": {
                "docs": "Status code",
                "type": "float",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ApiErrorResponseData": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ApiKeyIntegrationConfigs": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "api_key": "string",
              "header_key": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AttachedIntegrationToSource": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "success": "boolean",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AttemptErrorCodes": {
            "docs": "Attempt could not complete because of an error",
            "enum": [
              "TIMEOUT",
              "NOT_FOUND",
              "CONNECTION_REFUSED",
              "CONNECTION_RESET",
              "MISSING_URL",
              "CLI",
              "CLI_UNAVAILABLE",
              "SELF_SIGNED_CERT",
              "ERR_TLS_CERT_ALTNAME_INVALID",
              "SSL_ERROR_CA_UNKNOWN",
              "TTL_EXPIRED",
              "DATA_ARCHIVED",
              "SSL_CERT_EXPIRED",
              "BULK_RETRY_CANCELLED",
              "DNS_LOOKUP_FAILED",
              "HOST_UNREACHABLE",
              "PROTOCOL_ERROR",
              "SOCKET_CLOSED",
              "UNKNOWN",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AttemptState": {
            "enum": [
              "DELIVERING",
              "QUEUED",
              "PENDING",
              "COMPLETED",
              "HOLD",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AttemptStatus": {
            "docs": "Attempt status",
            "enum": [
              "QUEUED",
              "FAILED",
              "SUCCESSFUL",
              "HOLD",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AttemptTrigger": {
            "docs": "How the attempt was triggered",
            "enum": [
              "INITIAL",
              "MANUAL",
              "BULK_RETRY",
              "UNPAUSE",
              "AUTOMATIC",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "BasicAuthIntegrationConfigs": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "name": "string",
              "password": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "BatchOperation": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "cancelled_at": {
                "docs": "Date the bulk retry was cancelled",
                "type": "optional<nullable<datetime>>",
              },
              "completed_at": {
                "docs": "Date the bulk retry was completed",
                "type": "optional<nullable<datetime>>",
              },
              "completed_count": {
                "docs": "Number of events that were successfully delivered",
                "type": "optional<nullable<integer>>",
              },
              "created_at": {
                "docs": "Date the bulk retry was created",
                "type": "datetime",
              },
              "estimated_batch": {
                "docs": "Number of batches required to complete the bulk retry",
                "type": "optional<nullable<integer>>",
              },
              "estimated_count": {
                "docs": "Number of estimated events to be retried",
                "type": "optional<nullable<integer>>",
              },
              "failed_count": {
                "docs": "Number of events that failed to be delivered",
                "type": "optional<nullable<integer>>",
              },
              "id": {
                "docs": "ID of the bulk retry",
                "type": "string",
              },
              "in_progress": {
                "docs": "Indicates if the bulk retry is currently in progress",
                "type": "boolean",
              },
              "number": "optional<nullable<float>>",
              "processed_batch": {
                "docs": "Number of batches currently processed",
                "type": "optional<nullable<integer>>",
              },
              "progress": {
                "docs": "Progression of the batch operations, values 0 - 1",
                "type": "optional<nullable<float>>",
              },
              "query": {
                "docs": "Query object to filter records",
                "type": "optional<nullable<BatchOperationQuery>>",
              },
              "team_id": {
                "docs": "ID of the workspace",
                "type": "string",
              },
              "updated_at": {
                "docs": "Last time the bulk retry was updated",
                "type": "datetime",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "BatchOperationPaginatedResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "count": "optional<integer>",
              "models": "optional<list<BatchOperation>>",
              "pagination": "optional<SeekPagination>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "BatchOperationPlan": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "estimated_batch": {
                "docs": "Number of batches required to complete the bulk retry",
                "type": "optional<nullable<integer>>",
              },
              "estimated_count": {
                "docs": "Number of estimated events to be retried",
                "type": "optional<nullable<integer>>",
              },
              "progress": {
                "docs": "Progression of the batch operations, values 0 - 1",
                "type": "optional<nullable<float>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "BatchOperationQuery": {
            "discriminated": false,
            "docs": "Query object to filter records",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "map<string, unknown>",
              "nullable<string>",
            ],
          },
          "Bookmark": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "alias": {
                "docs": "Alternate alias for the bookmark",
                "type": "optional<nullable<string>>",
              },
              "created_at": {
                "docs": "Date the bookmark was created",
                "type": "datetime",
              },
              "data": "optional<nullable<ShortEventData>>",
              "event_data_id": {
                "docs": "ID of the bookmarked event data",
                "type": "string",
              },
              "id": {
                "docs": "ID of the bookmark",
                "type": "string",
              },
              "label": {
                "docs": "Descriptive name of the bookmark",
                "type": "string",
              },
              "last_used_at": {
                "docs": "Date the bookmark was last manually triggered",
                "type": "optional<nullable<datetime>>",
              },
              "team_id": {
                "docs": "ID of the workspace",
                "type": "string",
              },
              "updated_at": {
                "docs": "Date the bookmark was last updated",
                "type": "datetime",
              },
              "webhook_id": {
                "docs": "ID of the associated connection",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "BookmarkPaginatedResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "count": "optional<integer>",
              "models": "optional<list<Bookmark>>",
              "pagination": "optional<SeekPagination>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Connection": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "archived_at": {
                "docs": "Date the connection was archived",
                "type": "optional<nullable<datetime>>",
              },
              "created_at": {
                "docs": "Date the connection was created",
                "type": "datetime",
              },
              "destination": "Destination",
              "id": {
                "docs": "ID of the connection",
                "type": "string",
              },
              "name": {
                "docs": "Unique name of the connection for this source",
                "type": "string",
              },
              "paused_at": {
                "docs": "Date the connection was paused",
                "type": "optional<nullable<datetime>>",
              },
              "resolved_rules": {
                "docs": "Array of rules applied to connection after factoring for the ruleset",
                "type": "optional<nullable<list<Rule>>>",
              },
              "rules": {
                "docs": "Array of rules configured on the connection",
                "type": "optional<nullable<list<Rule>>>",
              },
              "ruleset": "optional<nullable<Ruleset>>",
              "source": "Source",
              "team_id": {
                "docs": "ID of the workspace",
                "type": "string",
              },
              "updated_at": {
                "docs": "Date the connection was last updated",
                "type": "datetime",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConnectionFilterProperty": {
            "discriminated": false,
            "docs": "JSON using our filter syntax to filter on request headers",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "nullable<string>",
              "float",
              "boolean",
              "ConnectionFilterPropertyThree",
            ],
          },
          "ConnectionFilterPropertyThree": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConnectionPaginatedResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "count": "optional<integer>",
              "models": "optional<list<Connection>>",
              "pagination": "optional<SeekPagination>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConsoleLine": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "message": "string",
              "type": "ConsoleLineType",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConsoleLineType": {
            "enum": [
              "error",
              "log",
              "warn",
              "info",
              "debug",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DelayRule": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "delay": {
                "docs": "Delay to introduce in MS",
                "type": "integer",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeletedBookmarkResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "id": {
                "docs": "Bookmark ID",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeletedIntegration": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "id": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeletedIssueTriggerResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "id": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeliveryIssue": {
            "docs": "Delivery issue",
            "inline": undefined,
            "properties": {
              "aggregation_keys": "DeliveryIssueAggregationKeys",
              "auto_resolved_at": "optional<nullable<datetime>>",
              "created_at": {
                "docs": "ISO timestamp for when the issue was created",
                "type": "string",
              },
              "dismissed_at": {
                "docs": "ISO timestamp for when the issue was dismissed",
                "type": "optional<nullable<datetime>>",
              },
              "first_seen_at": {
                "docs": "ISO timestamp for when the issue was first opened",
                "type": "datetime",
              },
              "id": {
                "docs": "Issue ID",
                "type": "string",
              },
              "last_seen_at": {
                "docs": "ISO timestamp for when the issue last occured",
                "type": "datetime",
              },
              "last_updated_by": {
                "docs": "ID of the team member who last updated the issue status",
                "type": "optional<nullable<string>>",
              },
              "merged_with": "optional<nullable<string>>",
              "opened_at": {
                "docs": "ISO timestamp for when the issue was last opened",
                "type": "datetime",
              },
              "reference": "DeliveryIssueReference",
              "status": "IssueStatus",
              "team_id": {
                "docs": "ID of the workspace",
                "type": "string",
              },
              "updated_at": {
                "docs": "ISO timestamp for when the issue was last updated",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeliveryIssueAggregationKeys": {
            "docs": "Keys used as the aggregation keys a 'delivery' type issue",
            "inline": undefined,
            "properties": {
              "error_code": "list<AttemptErrorCodes>",
              "response_status": "list<float>",
              "webhook_id": "list<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeliveryIssueData": {
            "docs": "Delivery issue data",
            "inline": undefined,
            "properties": {
              "trigger_attempt": "optional<nullable<EventAttempt>>",
              "trigger_event": "optional<Event>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeliveryIssueReference": {
            "docs": "Reference to the event and attempt an issue is being created for.",
            "inline": undefined,
            "properties": {
              "attempt_id": "string",
              "event_id": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeliveryIssueWithData": {
            "docs": "Delivery issue",
            "inline": undefined,
            "properties": {
              "aggregation_keys": "DeliveryIssueAggregationKeys",
              "auto_resolved_at": "optional<nullable<datetime>>",
              "created_at": {
                "docs": "ISO timestamp for when the issue was created",
                "type": "string",
              },
              "data": "optional<nullable<DeliveryIssueData>>",
              "dismissed_at": {
                "docs": "ISO timestamp for when the issue was dismissed",
                "type": "optional<nullable<datetime>>",
              },
              "first_seen_at": {
                "docs": "ISO timestamp for when the issue was first opened",
                "type": "datetime",
              },
              "id": {
                "docs": "Issue ID",
                "type": "string",
              },
              "last_seen_at": {
                "docs": "ISO timestamp for when the issue last occured",
                "type": "datetime",
              },
              "last_updated_by": {
                "docs": "ID of the team member who last updated the issue status",
                "type": "optional<nullable<string>>",
              },
              "merged_with": "optional<nullable<string>>",
              "opened_at": {
                "docs": "ISO timestamp for when the issue was last opened",
                "type": "datetime",
              },
              "reference": "DeliveryIssueReference",
              "status": "IssueStatus",
              "team_id": {
                "docs": "ID of the workspace",
                "type": "string",
              },
              "updated_at": {
                "docs": "ISO timestamp for when the issue was last updated",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Destination": {
            "docs": "Associated [Destination](#destination-object) object",
            "inline": undefined,
            "properties": {
              "archived_at": {
                "docs": "Date the destination was archived",
                "type": "optional<nullable<datetime>>",
              },
              "cli_path": {
                "docs": "Path for the CLI destination",
                "type": "optional<nullable<string>>",
              },
              "created_at": {
                "docs": "Date the destination was created",
                "type": "datetime",
              },
              "id": {
                "docs": "ID of the destination",
                "type": "string",
              },
              "name": {
                "docs": "A unique, human-friendly name for the destination",
                "type": "string",
              },
              "path_forwarding_disabled": "optional<nullable<boolean>>",
              "rate_limit": {
                "docs": "Limit event attempts to receive per period. Max value is workspace plan's max attempts thoughput.",
                "type": "optional<nullable<integer>>",
              },
              "rate_limit_period": "optional<nullable<DestinationRateLimitPeriod>>",
              "team_id": {
                "docs": "ID of the workspace",
                "type": "string",
              },
              "updated_at": {
                "docs": "Date the destination was last updated",
                "type": "datetime",
              },
              "url": {
                "docs": "HTTP endpoint of the destination",
                "type": "optional<nullable<string>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DestinationPaginatedResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "count": "optional<integer>",
              "models": "optional<list<Destination>>",
              "pagination": "optional<SeekPagination>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DestinationRateLimitPeriod": {
            "default": "second",
            "docs": "Period to rate limit attempts",
            "enum": [
              "second",
              "minute",
              "hour",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DetachedIntegrationFromSource": {
            "docs": undefined,
            "inline": undefined,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Event": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "attempts": {
                "docs": "Number of delivery attempts made",
                "type": "integer",
              },
              "cli_id": {
                "docs": "ID of the CLI the event is sent to",
                "type": "optional<nullable<string>>",
              },
              "created_at": {
                "docs": "Date the event was created",
                "type": "datetime",
              },
              "created_at_id": "optional<string>",
              "data": "optional<nullable<EventData>>",
              "destination_id": {
                "docs": "ID of the associated destination",
                "type": "string",
              },
              "event_data_id": {
                "docs": "ID of the request data",
                "type": "string",
              },
              "id": {
                "docs": "ID of the event",
                "type": "string",
              },
              "last_attempt_at": {
                "docs": "Date of the most recently attempted retry",
                "type": "optional<nullable<datetime>>",
              },
              "last_attempt_at_id": "optional<string>",
              "next_attempt_at": {
                "docs": "Date of the next scheduled retry",
                "type": "optional<nullable<datetime>>",
              },
              "request_id": {
                "docs": "ID of the request that created the event",
                "type": "string",
              },
              "response_status": {
                "docs": "Event status",
                "type": "optional<nullable<integer>>",
              },
              "source_id": {
                "docs": "ID of the associated source",
                "type": "string",
              },
              "status": "EventStatus",
              "successful_at": {
                "docs": "Date of the latest successful attempt",
                "type": "optional<nullable<datetime>>",
              },
              "team_id": {
                "docs": "ID of the workspace",
                "type": "string",
              },
              "updated_at": {
                "docs": "Date the event was last updated",
                "type": "datetime",
              },
              "webhook_id": {
                "docs": "ID of the associated connection",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EventArray": "list<Event>",
          "EventAttempt": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "archived_at": {
                "docs": "Date the attempt was archived",
                "type": "optional<nullable<string>>",
              },
              "attempt_number": {
                "docs": "Sequential number of attempts (up to and including this one) made for the associated event",
                "type": "optional<nullable<integer>>",
              },
              "body": {
                "docs": "Response body from the destination",
                "type": "optional<nullable<EventAttemptBody>>",
              },
              "bulk_retry_id": {
                "docs": "ID of associated bulk retry",
                "type": "optional<nullable<string>>",
              },
              "created_at": {
                "docs": "Date the attempt was created",
                "type": "datetime",
              },
              "delivered_at": {
                "docs": "Date the attempt was delivered",
                "type": "optional<nullable<datetime>>",
              },
              "delivery_latency": {
                "docs": "Time elapsed between attempt initiation and final delivery (in ms)",
                "type": "optional<nullable<integer>>",
              },
              "destination_id": "optional<nullable<string>>",
              "error_code": "optional<AttemptErrorCodes>",
              "event_id": {
                "docs": "Event ID",
                "type": "string",
              },
              "id": {
                "docs": "Attempt ID",
                "type": "string",
              },
              "requested_url": {
                "docs": "URL of the destination where delivery was attempted",
                "type": "optional<nullable<string>>",
              },
              "responded_at": {
                "docs": "Date the destination responded to this attempt",
                "type": "optional<nullable<datetime>>",
              },
              "response_latency": {
                "docs": "Time elapsed between attempt initiation and a response from the destination (in ms)",
                "type": "optional<nullable<integer>>",
              },
              "response_status": {
                "docs": "Attempt's HTTP response code",
                "type": "optional<nullable<integer>>",
              },
              "state": "optional<nullable<AttemptState>>",
              "status": "AttemptStatus",
              "successful_at": {
                "docs": "Date the attempt was successful",
                "type": "optional<nullable<datetime>>",
              },
              "team_id": {
                "docs": "Team ID",
                "type": "string",
              },
              "trigger": "optional<nullable<AttemptTrigger>>",
              "updated_at": {
                "docs": "Date the attempt was last updated",
                "type": "datetime",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EventAttemptBody": {
            "docs": "Response body from the destination",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EventAttemptPaginatedResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "count": "optional<integer>",
              "models": "optional<list<nullable<EventAttempt>>>",
              "pagination": "optional<SeekPagination>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EventData": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "body": "optional<nullable<EventDataBody>>",
              "headers": "optional<nullable<EventDataHeaders>>",
              "is_large_payload": "optional<nullable<boolean>>",
              "parsed_query": "optional<nullable<EventDataParsedQuery>>",
              "path": "string",
              "query": "optional<nullable<string>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EventDataBody": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "EventDataBodyOne",
              "list<unknown>",
            ],
          },
          "EventDataBodyOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EventDataHeaders": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "map<string, nullable<string>>",
            ],
          },
          "EventDataParsedQuery": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "nullable<string>",
              "EventDataParsedQueryOne",
            ],
          },
          "EventDataParsedQueryOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EventPaginatedResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "count": "optional<integer>",
              "models": "optional<list<Event>>",
              "pagination": "optional<SeekPagination>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EventStatus": {
            "enum": [
              "SCHEDULED",
              "QUEUED",
              "HOLD",
              "SUCCESSFUL",
              "FAILED",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FilterRule": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "body": "optional<nullable<ConnectionFilterProperty>>",
              "headers": "optional<nullable<ConnectionFilterProperty>>",
              "path": "optional<nullable<ConnectionFilterProperty>>",
              "query": "optional<nullable<ConnectionFilterProperty>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FilteredMeta": {
            "enum": [
              "body",
              "headers",
              "path",
              "query",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenerateEventBulkRetryPlanRequestQuery": {
            "docs": "Filter properties for the events to be included in the bulk retry",
            "inline": undefined,
            "properties": {
              "attempts": {
                "docs": "Filter by number of attempts",
                "type": "optional<GenerateEventBulkRetryPlanRequestQueryAttempts>",
              },
              "body": {
                "docs": "URL Encoded string of the JSON to match to the data body",
                "type": "optional<GenerateEventBulkRetryPlanRequestQueryBody>",
              },
              "bulk_retry_id": "optional<GenerateEventBulkRetryPlanRequestQueryBulkRetryId>",
              "cli_id": {
                "docs": "Filter by CLI IDs. `?[any]=true` operator for any CLI.",
                "type": "optional<nullable<GenerateEventBulkRetryPlanRequestQueryCliId>>",
              },
              "cli_user_id": "optional<nullable<GenerateEventBulkRetryPlanRequestQueryCliUserId>>",
              "created_at": {
                "docs": "Filter by `created_at` date using a date operator",
                "type": "optional<GenerateEventBulkRetryPlanRequestQueryCreatedAt>",
              },
              "destination_id": {
                "docs": "Filter by destination IDs",
                "type": "optional<GenerateEventBulkRetryPlanRequestQueryDestinationId>",
              },
              "error_code": "optional<GenerateEventBulkRetryPlanRequestQueryErrorCode>",
              "event_data_id": "optional<GenerateEventBulkRetryPlanRequestQueryEventDataId>",
              "headers": {
                "docs": "URL Encoded string of the JSON to match to the data headers",
                "type": "optional<GenerateEventBulkRetryPlanRequestQueryHeaders>",
              },
              "id": {
                "docs": "Filter by event IDs",
                "type": "optional<GenerateEventBulkRetryPlanRequestQueryId>",
              },
              "issue_id": "optional<GenerateEventBulkRetryPlanRequestQueryIssueId>",
              "last_attempt_at": {
                "docs": "Filter by `last_attempt_at` date using a date operator",
                "type": "optional<nullable<GenerateEventBulkRetryPlanRequestQueryLastAttemptAt>>",
              },
              "parsed_query": {
                "docs": "URL Encoded string of the JSON to match to the parsed query (JSON representation of the query)",
                "type": "optional<GenerateEventBulkRetryPlanRequestQueryParsedQuery>",
              },
              "path": {
                "docs": "URL Encoded string of the string to match partially to the path",
                "type": "optional<string>",
              },
              "response_status": {
                "docs": "Filter by HTTP response status code",
                "type": "optional<nullable<GenerateEventBulkRetryPlanRequestQueryResponseStatus>>",
              },
              "source_id": {
                "docs": "Filter by source IDs",
                "type": "optional<GenerateEventBulkRetryPlanRequestQuerySourceId>",
              },
              "status": {
                "docs": "Lifecyle status of the event",
                "type": "optional<GenerateEventBulkRetryPlanRequestQueryStatus>",
              },
              "successful_at": {
                "docs": "Filter by `successful_at` date using a date operator",
                "type": "optional<nullable<GenerateEventBulkRetryPlanRequestQuerySuccessfulAt>>",
              },
              "webhook_id": {
                "docs": "Filter by webhook connection IDs",
                "type": "optional<GenerateEventBulkRetryPlanRequestQueryWebhookId>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenerateEventBulkRetryPlanRequestQueryAttempts": {
            "discriminated": false,
            "docs": "Filter by number of attempts",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "integer",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "GenerateEventBulkRetryPlanRequestQueryAttemptsAny",
            ],
          },
          "GenerateEventBulkRetryPlanRequestQueryAttemptsAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "contains": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "gt": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "gte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "le": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "lte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenerateEventBulkRetryPlanRequestQueryBody": {
            "discriminated": false,
            "docs": "URL Encoded string of the JSON to match to the data body",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "GenerateEventBulkRetryPlanRequestQueryBodyOne",
            ],
          },
          "GenerateEventBulkRetryPlanRequestQueryBodyOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenerateEventBulkRetryPlanRequestQueryBulkRetryId": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "GenerateEventBulkRetryPlanRequestQueryCliId": {
            "discriminated": false,
            "docs": "Filter by CLI IDs. `?[any]=true` operator for any CLI.",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "GenerateEventBulkRetryPlanRequestQueryCliIdAny",
              "list<string>",
            ],
          },
          "GenerateEventBulkRetryPlanRequestQueryCliIdAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenerateEventBulkRetryPlanRequestQueryCliUserId": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "list<string>",
            ],
          },
          "GenerateEventBulkRetryPlanRequestQueryCreatedAt": {
            "discriminated": false,
            "docs": "Filter by `created_at` date using a date operator",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "datetime",
              "GenerateEventBulkRetryPlanRequestQueryCreatedAtAny",
            ],
          },
          "GenerateEventBulkRetryPlanRequestQueryCreatedAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<datetime>",
              "gte": "optional<datetime>",
              "le": "optional<datetime>",
              "lte": "optional<datetime>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenerateEventBulkRetryPlanRequestQueryDestinationId": {
            "discriminated": false,
            "docs": "Filter by destination IDs",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "docs": "Destination ID",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "GenerateEventBulkRetryPlanRequestQueryErrorCode": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "GenerateEventBulkRetryPlanRequestQueryEventDataId": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "GenerateEventBulkRetryPlanRequestQueryHeaders": {
            "discriminated": false,
            "docs": "URL Encoded string of the JSON to match to the data headers",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "GenerateEventBulkRetryPlanRequestQueryHeadersOne",
            ],
          },
          "GenerateEventBulkRetryPlanRequestQueryHeadersOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenerateEventBulkRetryPlanRequestQueryId": {
            "discriminated": false,
            "docs": "Filter by event IDs",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "docs": "Event ID",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "GenerateEventBulkRetryPlanRequestQueryIssueId": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "GenerateEventBulkRetryPlanRequestQueryLastAttemptAt": {
            "discriminated": false,
            "docs": "Filter by `last_attempt_at` date using a date operator",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "datetime",
              "GenerateEventBulkRetryPlanRequestQueryLastAttemptAtAny",
            ],
          },
          "GenerateEventBulkRetryPlanRequestQueryLastAttemptAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<datetime>",
              "gte": "optional<datetime>",
              "le": "optional<datetime>",
              "lte": "optional<datetime>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenerateEventBulkRetryPlanRequestQueryParsedQuery": {
            "discriminated": false,
            "docs": "URL Encoded string of the JSON to match to the parsed query (JSON representation of the query)",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "GenerateEventBulkRetryPlanRequestQueryParsedQueryOne",
            ],
          },
          "GenerateEventBulkRetryPlanRequestQueryParsedQueryOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenerateEventBulkRetryPlanRequestQueryResponseStatus": {
            "discriminated": false,
            "docs": "Filter by HTTP response status code",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "integer",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 600,
                  "min": 200,
                  "multipleOf": undefined,
                },
              },
              "GenerateEventBulkRetryPlanRequestQueryResponseStatusAny",
              "list<integer>",
            ],
          },
          "GenerateEventBulkRetryPlanRequestQueryResponseStatusAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "contains": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 600,
                  "min": 200,
                  "multipleOf": undefined,
                },
              },
              "gt": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 600,
                  "min": 200,
                  "multipleOf": undefined,
                },
              },
              "gte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 600,
                  "min": 200,
                  "multipleOf": undefined,
                },
              },
              "le": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 600,
                  "min": 200,
                  "multipleOf": undefined,
                },
              },
              "lte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 600,
                  "min": 200,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenerateEventBulkRetryPlanRequestQuerySourceId": {
            "discriminated": false,
            "docs": "Filter by source IDs",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "docs": "Source ID",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "GenerateEventBulkRetryPlanRequestQueryStatus": {
            "discriminated": false,
            "docs": "Lifecyle status of the event",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "EventStatus",
              "list<EventStatus>",
            ],
          },
          "GenerateEventBulkRetryPlanRequestQuerySuccessfulAt": {
            "discriminated": false,
            "docs": "Filter by `successful_at` date using a date operator",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "datetime",
              "GenerateEventBulkRetryPlanRequestQuerySuccessfulAtAny",
            ],
          },
          "GenerateEventBulkRetryPlanRequestQuerySuccessfulAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<datetime>",
              "gte": "optional<datetime>",
              "le": "optional<datetime>",
              "lte": "optional<datetime>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenerateEventBulkRetryPlanRequestQueryWebhookId": {
            "discriminated": false,
            "docs": "Filter by webhook connection IDs",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "docs": "Webhook ID",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "GenerateIgnoredEventBulkRetryPlanRequestQuery": {
            "docs": "Filter by the bulk retry ignored event query object",
            "inline": undefined,
            "properties": {
              "cause": {
                "docs": "The cause of the ignored event",
                "type": "optional<GenerateIgnoredEventBulkRetryPlanRequestQueryCause>",
              },
              "transformation_id": {
                "docs": "The associated transformation ID (only applicable to the cause `TRANSFORMATION_FAILED`)",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "webhook_id": {
                "docs": "Connection ID of the ignored event",
                "type": "optional<GenerateIgnoredEventBulkRetryPlanRequestQueryWebhookId>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenerateIgnoredEventBulkRetryPlanRequestQueryCause": {
            "discriminated": false,
            "docs": "The cause of the ignored event",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "GenerateIgnoredEventBulkRetryPlanRequestQueryWebhookId": {
            "discriminated": false,
            "docs": "Connection ID of the ignored event",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "GenerateRequestBulkRetryPlanRequestQuery": {
            "docs": "Filter properties for the events to be included in the bulk retry, use query parameters of [Requests](#requests)",
            "inline": undefined,
            "properties": {
              "body": {
                "docs": "URL Encoded string of the JSON to match to the data body",
                "type": "optional<GenerateRequestBulkRetryPlanRequestQueryBody>",
              },
              "bulk_retry_id": "optional<GenerateRequestBulkRetryPlanRequestQueryBulkRetryId>",
              "created_at": "optional<GenerateRequestBulkRetryPlanRequestQueryCreatedAt>",
              "events_count": "optional<GenerateRequestBulkRetryPlanRequestQueryEventsCount>",
              "headers": {
                "docs": "URL Encoded string of the JSON to match to the data headers",
                "type": "optional<GenerateRequestBulkRetryPlanRequestQueryHeaders>",
              },
              "id": {
                "docs": "Filter by requests IDs",
                "type": "optional<GenerateRequestBulkRetryPlanRequestQueryId>",
              },
              "ignored_count": "optional<GenerateRequestBulkRetryPlanRequestQueryIgnoredCount>",
              "ingested_at": "optional<GenerateRequestBulkRetryPlanRequestQueryIngestedAt>",
              "parsed_query": {
                "docs": "URL Encoded string of the JSON to match to the parsed query (JSON representation of the query)",
                "type": "optional<GenerateRequestBulkRetryPlanRequestQueryParsedQuery>",
              },
              "path": {
                "docs": "URL Encoded string of the string to match partially to the path",
                "type": "optional<string>",
              },
              "rejection_cause": {
                "docs": "Filter by rejection cause",
                "type": "optional<nullable<GenerateRequestBulkRetryPlanRequestQueryRejectionCause>>",
              },
              "source_id": {
                "docs": "Filter by source IDs",
                "type": "optional<GenerateRequestBulkRetryPlanRequestQuerySourceId>",
              },
              "status": "optional<GenerateRequestBulkRetryPlanRequestQueryStatus>",
              "verified": {
                "docs": "Filter by verification status",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenerateRequestBulkRetryPlanRequestQueryBody": {
            "discriminated": false,
            "docs": "URL Encoded string of the JSON to match to the data body",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "GenerateRequestBulkRetryPlanRequestQueryBodyOne",
            ],
          },
          "GenerateRequestBulkRetryPlanRequestQueryBodyOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenerateRequestBulkRetryPlanRequestQueryBulkRetryId": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "GenerateRequestBulkRetryPlanRequestQueryCreatedAt": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "datetime",
              "GenerateRequestBulkRetryPlanRequestQueryCreatedAtAny",
            ],
          },
          "GenerateRequestBulkRetryPlanRequestQueryCreatedAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<datetime>",
              "gte": "optional<datetime>",
              "le": "optional<datetime>",
              "lte": "optional<datetime>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenerateRequestBulkRetryPlanRequestQueryEventsCount": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "integer",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "GenerateRequestBulkRetryPlanRequestQueryEventsCountAny",
              "list<integer>",
            ],
          },
          "GenerateRequestBulkRetryPlanRequestQueryEventsCountAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "contains": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "gt": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "gte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "le": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "lte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenerateRequestBulkRetryPlanRequestQueryHeaders": {
            "discriminated": false,
            "docs": "URL Encoded string of the JSON to match to the data headers",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "GenerateRequestBulkRetryPlanRequestQueryHeadersOne",
            ],
          },
          "GenerateRequestBulkRetryPlanRequestQueryHeadersOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenerateRequestBulkRetryPlanRequestQueryId": {
            "discriminated": false,
            "docs": "Filter by requests IDs",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "docs": "Request ID",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "GenerateRequestBulkRetryPlanRequestQueryIgnoredCount": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "integer",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "GenerateRequestBulkRetryPlanRequestQueryIgnoredCountAny",
              "list<integer>",
            ],
          },
          "GenerateRequestBulkRetryPlanRequestQueryIgnoredCountAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "contains": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "gt": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "gte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "le": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "lte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenerateRequestBulkRetryPlanRequestQueryIngestedAt": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "datetime",
              "GenerateRequestBulkRetryPlanRequestQueryIngestedAtAny",
            ],
          },
          "GenerateRequestBulkRetryPlanRequestQueryIngestedAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<datetime>",
              "gte": "optional<datetime>",
              "le": "optional<datetime>",
              "lte": "optional<datetime>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenerateRequestBulkRetryPlanRequestQueryParsedQuery": {
            "discriminated": false,
            "docs": "URL Encoded string of the JSON to match to the parsed query (JSON representation of the query)",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "GenerateRequestBulkRetryPlanRequestQueryParsedQueryOne",
            ],
          },
          "GenerateRequestBulkRetryPlanRequestQueryParsedQueryOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenerateRequestBulkRetryPlanRequestQueryRejectionCause": {
            "discriminated": false,
            "docs": "Filter by rejection cause",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "RequestRejectionCause",
              "GenerateRequestBulkRetryPlanRequestQueryRejectionCauseAny",
              "list<RequestRejectionCause>",
            ],
          },
          "GenerateRequestBulkRetryPlanRequestQueryRejectionCauseAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "contains": "optional<RequestRejectionCause>",
              "gt": "optional<RequestRejectionCause>",
              "gte": "optional<RequestRejectionCause>",
              "le": "optional<RequestRejectionCause>",
              "lte": "optional<RequestRejectionCause>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenerateRequestBulkRetryPlanRequestQuerySourceId": {
            "discriminated": false,
            "docs": "Filter by source IDs",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "docs": "Source ID",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "GenerateRequestBulkRetryPlanRequestQueryStatus": {
            "enum": [
              "accepted",
              "rejected",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetBookmarksRequestLastUsedAt": {
            "discriminated": false,
            "docs": "Filter by last used date",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "docs": "Last used date",
                "type": "nullable<datetime>",
              },
              "GetBookmarksRequestLastUsedAtAny",
            ],
          },
          "GetBookmarksRequestLastUsedAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": {
                "docs": "Last used date",
                "type": "optional<nullable<datetime>>",
              },
              "gte": {
                "docs": "Last used date",
                "type": "optional<nullable<datetime>>",
              },
              "le": {
                "docs": "Last used date",
                "type": "optional<nullable<datetime>>",
              },
              "lte": {
                "docs": "Last used date",
                "type": "optional<nullable<datetime>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetConnectionsRequestArchivedAt": {
            "discriminated": false,
            "docs": "Date the connection was archived",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "nullable<datetime>",
              "GetConnectionsRequestArchivedAtAny",
            ],
          },
          "GetConnectionsRequestArchivedAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<nullable<datetime>>",
              "gte": "optional<nullable<datetime>>",
              "le": "optional<nullable<datetime>>",
              "lte": "optional<nullable<datetime>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetConnectionsRequestName": {
            "discriminated": false,
            "docs": "Filter by connection name",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 155,
                  "minLength": undefined,
                  "pattern": "^[A-z0-9-_]+$",
                },
              },
              "GetConnectionsRequestNameAny",
            ],
          },
          "GetConnectionsRequestNameAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "contains": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 155,
                  "minLength": undefined,
                  "pattern": "^[A-z0-9-_]+$",
                },
              },
              "gt": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 155,
                  "minLength": undefined,
                  "pattern": "^[A-z0-9-_]+$",
                },
              },
              "gte": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 155,
                  "minLength": undefined,
                  "pattern": "^[A-z0-9-_]+$",
                },
              },
              "le": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 155,
                  "minLength": undefined,
                  "pattern": "^[A-z0-9-_]+$",
                },
              },
              "lte": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 155,
                  "minLength": undefined,
                  "pattern": "^[A-z0-9-_]+$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetConnectionsRequestPausedAt": {
            "discriminated": false,
            "docs": "Date the connection was paused",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "nullable<datetime>",
              "GetConnectionsRequestPausedAtAny",
            ],
          },
          "GetConnectionsRequestPausedAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<nullable<datetime>>",
              "gte": "optional<nullable<datetime>>",
              "le": "optional<nullable<datetime>>",
              "lte": "optional<nullable<datetime>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetDestinationsRequestArchivedAt": {
            "discriminated": false,
            "docs": "Date the destination was archived",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "nullable<datetime>",
              "GetDestinationsRequestArchivedAtAny",
            ],
          },
          "GetDestinationsRequestArchivedAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<nullable<datetime>>",
              "gte": "optional<nullable<datetime>>",
              "le": "optional<nullable<datetime>>",
              "lte": "optional<nullable<datetime>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetDestinationsRequestCliPath": {
            "discriminated": false,
            "docs": "Path for the CLI destination",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "GetDestinationsRequestCliPathAny",
              "list<string>",
            ],
          },
          "GetDestinationsRequestCliPathAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetDestinationsRequestName": {
            "discriminated": false,
            "docs": "The destination name",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 155,
                  "minLength": undefined,
                  "pattern": "^[A-z0-9-_]+$",
                },
              },
              "GetDestinationsRequestNameAny",
            ],
          },
          "GetDestinationsRequestNameAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "contains": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 155,
                  "minLength": undefined,
                  "pattern": "^[A-z0-9-_]+$",
                },
              },
              "gt": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 155,
                  "minLength": undefined,
                  "pattern": "^[A-z0-9-_]+$",
                },
              },
              "gte": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 155,
                  "minLength": undefined,
                  "pattern": "^[A-z0-9-_]+$",
                },
              },
              "le": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 155,
                  "minLength": undefined,
                  "pattern": "^[A-z0-9-_]+$",
                },
              },
              "lte": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 155,
                  "minLength": undefined,
                  "pattern": "^[A-z0-9-_]+$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetEventBulkRetriesRequestCancelledAt": {
            "discriminated": false,
            "docs": "Filter by date the bulk retry was cancelled",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "nullable<datetime>",
              "GetEventBulkRetriesRequestCancelledAtAny",
            ],
          },
          "GetEventBulkRetriesRequestCancelledAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<nullable<datetime>>",
              "gte": "optional<nullable<datetime>>",
              "le": "optional<nullable<datetime>>",
              "lte": "optional<nullable<datetime>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetEventBulkRetriesRequestCompletedAt": {
            "discriminated": false,
            "docs": "Filter by date the bulk retry completed",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "nullable<datetime>",
              "GetEventBulkRetriesRequestCompletedAtAny",
            ],
          },
          "GetEventBulkRetriesRequestCompletedAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<nullable<datetime>>",
              "gte": "optional<nullable<datetime>>",
              "le": "optional<nullable<datetime>>",
              "lte": "optional<nullable<datetime>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetEventBulkRetriesRequestCreatedAt": {
            "discriminated": false,
            "docs": "Filter by date the bulk retry was created",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "nullable<datetime>",
              "GetEventBulkRetriesRequestCreatedAtAny",
            ],
          },
          "GetEventBulkRetriesRequestCreatedAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<nullable<datetime>>",
              "gte": "optional<nullable<datetime>>",
              "le": "optional<nullable<datetime>>",
              "lte": "optional<nullable<datetime>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetEventBulkRetriesRequestQuery": {
            "docs": "Filter for events to be included in the bulk retry, use query parameters of [Event](#events)",
            "inline": undefined,
            "properties": {
              "attempts": {
                "docs": "Filter by number of attempts",
                "type": "optional<GetEventBulkRetriesRequestQueryAttempts>",
              },
              "body": {
                "docs": "URL Encoded string of the JSON to match to the data body",
                "type": "optional<GetEventBulkRetriesRequestQueryBody>",
              },
              "bulk_retry_id": "optional<GetEventBulkRetriesRequestQueryBulkRetryId>",
              "cli_id": {
                "docs": "Filter by CLI IDs. `?[any]=true` operator for any CLI.",
                "type": "optional<nullable<GetEventBulkRetriesRequestQueryCliId>>",
              },
              "cli_user_id": "optional<nullable<GetEventBulkRetriesRequestQueryCliUserId>>",
              "created_at": {
                "docs": "Filter by `created_at` date using a date operator",
                "type": "optional<GetEventBulkRetriesRequestQueryCreatedAt>",
              },
              "destination_id": {
                "docs": "Filter by destination IDs",
                "type": "optional<GetEventBulkRetriesRequestQueryDestinationId>",
              },
              "dir": {
                "docs": "Sort direction",
                "type": "optional<GetEventBulkRetriesRequestQueryDir>",
              },
              "error_code": "optional<GetEventBulkRetriesRequestQueryErrorCode>",
              "event_data_id": "optional<GetEventBulkRetriesRequestQueryEventDataId>",
              "headers": {
                "docs": "URL Encoded string of the JSON to match to the data headers",
                "type": "optional<GetEventBulkRetriesRequestQueryHeaders>",
              },
              "id": {
                "docs": "Filter by event IDs",
                "type": "optional<GetEventBulkRetriesRequestQueryId>",
              },
              "include": {
                "docs": "Include the data object in the event model",
                "type": "optional<literal<"data">>",
              },
              "issue_id": "optional<GetEventBulkRetriesRequestQueryIssueId>",
              "last_attempt_at": {
                "docs": "Filter by `last_attempt_at` date using a date operator",
                "type": "optional<nullable<GetEventBulkRetriesRequestQueryLastAttemptAt>>",
              },
              "limit": {
                "docs": "Result set size",
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 255,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "next": {
                "docs": "The ID to provide in the query to get the next set of results",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "order_by": {
                "docs": "Sort key(s)",
                "type": "optional<GetEventBulkRetriesRequestQueryOrderBy>",
              },
              "parsed_query": {
                "docs": "URL Encoded string of the JSON to match to the parsed query (JSON representation of the query)",
                "type": "optional<GetEventBulkRetriesRequestQueryParsedQuery>",
              },
              "path": {
                "docs": "URL Encoded string of the string to match partially to the path",
                "type": "optional<string>",
              },
              "prev": {
                "docs": "The ID to provide in the query to get the previous set of results",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "response_status": {
                "docs": "Filter by HTTP response status code",
                "type": "optional<nullable<GetEventBulkRetriesRequestQueryResponseStatus>>",
              },
              "source_id": {
                "docs": "Filter by source IDs",
                "type": "optional<GetEventBulkRetriesRequestQuerySourceId>",
              },
              "status": {
                "docs": "Lifecyle status of the event",
                "type": "optional<GetEventBulkRetriesRequestQueryStatus>",
              },
              "successful_at": {
                "docs": "Filter by `successful_at` date using a date operator",
                "type": "optional<nullable<GetEventBulkRetriesRequestQuerySuccessfulAt>>",
              },
              "webhook_id": {
                "docs": "Filter by webhook connection IDs",
                "type": "optional<GetEventBulkRetriesRequestQueryWebhookId>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetEventBulkRetriesRequestQueryAttempts": {
            "discriminated": false,
            "docs": "Filter by number of attempts",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "integer",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "GetEventBulkRetriesRequestQueryAttemptsAny",
            ],
          },
          "GetEventBulkRetriesRequestQueryAttemptsAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "contains": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "gt": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "gte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "le": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "lte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetEventBulkRetriesRequestQueryBody": {
            "discriminated": false,
            "docs": "URL Encoded string of the JSON to match to the data body",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "GetEventBulkRetriesRequestQueryBodyOne",
            ],
          },
          "GetEventBulkRetriesRequestQueryBodyOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetEventBulkRetriesRequestQueryBulkRetryId": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "GetEventBulkRetriesRequestQueryCliId": {
            "discriminated": false,
            "docs": "Filter by CLI IDs. `?[any]=true` operator for any CLI.",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "GetEventBulkRetriesRequestQueryCliIdAny",
              "list<string>",
            ],
          },
          "GetEventBulkRetriesRequestQueryCliIdAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetEventBulkRetriesRequestQueryCliUserId": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "list<string>",
            ],
          },
          "GetEventBulkRetriesRequestQueryCreatedAt": {
            "discriminated": false,
            "docs": "Filter by `created_at` date using a date operator",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "datetime",
              "GetEventBulkRetriesRequestQueryCreatedAtAny",
            ],
          },
          "GetEventBulkRetriesRequestQueryCreatedAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<datetime>",
              "gte": "optional<datetime>",
              "le": "optional<datetime>",
              "lte": "optional<datetime>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetEventBulkRetriesRequestQueryDestinationId": {
            "discriminated": false,
            "docs": "Filter by destination IDs",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "docs": "Destination ID",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "GetEventBulkRetriesRequestQueryDir": {
            "discriminated": false,
            "docs": "Sort direction",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "literal<"asc">",
              "literal<"desc">",
              "list<GetEventBulkRetriesRequestQueryDirItem>",
            ],
          },
          "GetEventBulkRetriesRequestQueryDirItem": {
            "enum": [
              "asc",
              "desc",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetEventBulkRetriesRequestQueryErrorCode": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "GetEventBulkRetriesRequestQueryEventDataId": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "GetEventBulkRetriesRequestQueryHeaders": {
            "discriminated": false,
            "docs": "URL Encoded string of the JSON to match to the data headers",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "GetEventBulkRetriesRequestQueryHeadersOne",
            ],
          },
          "GetEventBulkRetriesRequestQueryHeadersOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetEventBulkRetriesRequestQueryId": {
            "discriminated": false,
            "docs": "Filter by event IDs",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "docs": "Event ID",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "GetEventBulkRetriesRequestQueryIssueId": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "GetEventBulkRetriesRequestQueryLastAttemptAt": {
            "discriminated": false,
            "docs": "Filter by `last_attempt_at` date using a date operator",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "datetime",
              "GetEventBulkRetriesRequestQueryLastAttemptAtAny",
            ],
          },
          "GetEventBulkRetriesRequestQueryLastAttemptAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<datetime>",
              "gte": "optional<datetime>",
              "le": "optional<datetime>",
              "lte": "optional<datetime>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetEventBulkRetriesRequestQueryOrderBy": {
            "discriminated": false,
            "docs": "Sort key(s)",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "literal<"last_attempt_at">",
              "literal<"next_attempt_at">",
              "literal<"created_at">",
              "list<GetEventBulkRetriesRequestQueryOrderByItem>",
            ],
          },
          "GetEventBulkRetriesRequestQueryOrderByItem": {
            "enum": [
              "last_attempt_at",
              "next_attempt_at",
              "created_at",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetEventBulkRetriesRequestQueryParsedQuery": {
            "discriminated": false,
            "docs": "URL Encoded string of the JSON to match to the parsed query (JSON representation of the query)",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "GetEventBulkRetriesRequestQueryParsedQueryOne",
            ],
          },
          "GetEventBulkRetriesRequestQueryParsedQueryOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetEventBulkRetriesRequestQueryResponseStatus": {
            "discriminated": false,
            "docs": "Filter by HTTP response status code",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "integer",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 600,
                  "min": 200,
                  "multipleOf": undefined,
                },
              },
              "GetEventBulkRetriesRequestQueryResponseStatusAny",
              "list<integer>",
            ],
          },
          "GetEventBulkRetriesRequestQueryResponseStatusAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "contains": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 600,
                  "min": 200,
                  "multipleOf": undefined,
                },
              },
              "gt": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 600,
                  "min": 200,
                  "multipleOf": undefined,
                },
              },
              "gte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 600,
                  "min": 200,
                  "multipleOf": undefined,
                },
              },
              "le": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 600,
                  "min": 200,
                  "multipleOf": undefined,
                },
              },
              "lte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 600,
                  "min": 200,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetEventBulkRetriesRequestQuerySourceId": {
            "discriminated": false,
            "docs": "Filter by source IDs",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "docs": "Source ID",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "GetEventBulkRetriesRequestQueryStatus": {
            "discriminated": false,
            "docs": "Lifecyle status of the event",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "EventStatus",
              "list<EventStatus>",
            ],
          },
          "GetEventBulkRetriesRequestQuerySuccessfulAt": {
            "discriminated": false,
            "docs": "Filter by `successful_at` date using a date operator",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "datetime",
              "GetEventBulkRetriesRequestQuerySuccessfulAtAny",
            ],
          },
          "GetEventBulkRetriesRequestQuerySuccessfulAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<datetime>",
              "gte": "optional<datetime>",
              "le": "optional<datetime>",
              "lte": "optional<datetime>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetEventBulkRetriesRequestQueryWebhookId": {
            "discriminated": false,
            "docs": "Filter by webhook connection IDs",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "docs": "Webhook ID",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "GetEventsRequestAttempts": {
            "discriminated": false,
            "docs": "Filter by number of attempts",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "integer",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "GetEventsRequestAttemptsAny",
            ],
          },
          "GetEventsRequestAttemptsAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "contains": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "gt": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "gte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "le": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "lte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetEventsRequestBody": {
            "discriminated": false,
            "docs": "URL Encoded string of the JSON to match to the data body",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "GetEventsRequestBodyOne",
            ],
          },
          "GetEventsRequestBodyOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetEventsRequestCreatedAt": {
            "discriminated": false,
            "docs": "Filter by `created_at` date using a date operator",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "datetime",
              "GetEventsRequestCreatedAtAny",
            ],
          },
          "GetEventsRequestCreatedAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<datetime>",
              "gte": "optional<datetime>",
              "le": "optional<datetime>",
              "lte": "optional<datetime>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetEventsRequestHeaders": {
            "discriminated": false,
            "docs": "URL Encoded string of the JSON to match to the data headers",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "GetEventsRequestHeadersOne",
            ],
          },
          "GetEventsRequestHeadersOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetEventsRequestParsedQuery": {
            "discriminated": false,
            "docs": "URL Encoded string of the JSON to match to the parsed query (JSON representation of the query)",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "GetEventsRequestParsedQueryOne",
            ],
          },
          "GetEventsRequestParsedQueryOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetEventsRequestStatus": {
            "discriminated": false,
            "docs": "Lifecyle status of the event",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "EventStatus",
              "list<EventStatus>",
            ],
          },
          "GetIgnoredEventBulkRetriesRequestCancelledAt": {
            "discriminated": false,
            "docs": "Filter by date the bulk retry was cancelled",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "nullable<datetime>",
              "GetIgnoredEventBulkRetriesRequestCancelledAtAny",
            ],
          },
          "GetIgnoredEventBulkRetriesRequestCancelledAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<nullable<datetime>>",
              "gte": "optional<nullable<datetime>>",
              "le": "optional<nullable<datetime>>",
              "lte": "optional<nullable<datetime>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetIgnoredEventBulkRetriesRequestCompletedAt": {
            "discriminated": false,
            "docs": "Filter by date the bulk retry completed",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "nullable<datetime>",
              "GetIgnoredEventBulkRetriesRequestCompletedAtAny",
            ],
          },
          "GetIgnoredEventBulkRetriesRequestCompletedAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<nullable<datetime>>",
              "gte": "optional<nullable<datetime>>",
              "le": "optional<nullable<datetime>>",
              "lte": "optional<nullable<datetime>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetIgnoredEventBulkRetriesRequestCreatedAt": {
            "discriminated": false,
            "docs": "Filter by date the bulk retry was created",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "nullable<datetime>",
              "GetIgnoredEventBulkRetriesRequestCreatedAtAny",
            ],
          },
          "GetIgnoredEventBulkRetriesRequestCreatedAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<nullable<datetime>>",
              "gte": "optional<nullable<datetime>>",
              "le": "optional<nullable<datetime>>",
              "lte": "optional<nullable<datetime>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetIgnoredEventBulkRetriesRequestQuery": {
            "docs": "Filter by the bulk retry ignored event query object",
            "inline": undefined,
            "properties": {
              "cause": {
                "docs": "The cause of the ignored event",
                "type": "optional<GetIgnoredEventBulkRetriesRequestQueryCause>",
              },
              "transformation_id": {
                "docs": "The associated transformation ID (only applicable to the cause `TRANSFORMATION_FAILED`)",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "webhook_id": {
                "docs": "Connection ID of the ignored event",
                "type": "optional<GetIgnoredEventBulkRetriesRequestQueryWebhookId>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetIgnoredEventBulkRetriesRequestQueryCause": {
            "discriminated": false,
            "docs": "The cause of the ignored event",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "GetIgnoredEventBulkRetriesRequestQueryWebhookId": {
            "discriminated": false,
            "docs": "Connection ID of the ignored event",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "GetIssueCountRequestAggregationKeys": {
            "docs": "Filter by aggregation keys",
            "inline": undefined,
            "properties": {
              "error_code": "optional<GetIssueCountRequestAggregationKeysErrorCode>",
              "response_status": "optional<GetIssueCountRequestAggregationKeysResponseStatus>",
              "webhook_id": "optional<GetIssueCountRequestAggregationKeysWebhookId>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetIssueCountRequestAggregationKeysErrorCode": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "AttemptErrorCodes",
              "list<AttemptErrorCodes>",
            ],
          },
          "GetIssueCountRequestAggregationKeysResponseStatus": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "float",
              "list<float>",
            ],
          },
          "GetIssueCountRequestAggregationKeysWebhookId": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "list<string>",
            ],
          },
          "GetIssueCountRequestCreatedAt": {
            "discriminated": false,
            "docs": "Filter by created dates",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "nullable<datetime>",
              "GetIssueCountRequestCreatedAtAny",
            ],
          },
          "GetIssueCountRequestCreatedAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<nullable<datetime>>",
              "gte": "optional<nullable<datetime>>",
              "le": "optional<nullable<datetime>>",
              "lte": "optional<nullable<datetime>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetIssueCountRequestDismissedAt": {
            "discriminated": false,
            "docs": "Filter by dismissed dates",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "nullable<datetime>",
              "GetIssueCountRequestDismissedAtAny",
            ],
          },
          "GetIssueCountRequestDismissedAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<nullable<datetime>>",
              "gte": "optional<nullable<datetime>>",
              "le": "optional<nullable<datetime>>",
              "lte": "optional<nullable<datetime>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetIssueCountRequestFirstSeenAt": {
            "discriminated": false,
            "docs": "Filter by first seen dates",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "nullable<datetime>",
              "GetIssueCountRequestFirstSeenAtAny",
            ],
          },
          "GetIssueCountRequestFirstSeenAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<nullable<datetime>>",
              "gte": "optional<nullable<datetime>>",
              "le": "optional<nullable<datetime>>",
              "lte": "optional<nullable<datetime>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetIssueCountRequestLastSeenAt": {
            "discriminated": false,
            "docs": "Filter by last seen dates",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "nullable<datetime>",
              "GetIssueCountRequestLastSeenAtAny",
            ],
          },
          "GetIssueCountRequestLastSeenAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<nullable<datetime>>",
              "gte": "optional<nullable<datetime>>",
              "le": "optional<nullable<datetime>>",
              "lte": "optional<nullable<datetime>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetIssueTriggersRequestDisabledAt": {
            "discriminated": false,
            "docs": "Date when the issue trigger was disabled",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "nullable<datetime>",
              "GetIssueTriggersRequestDisabledAtAny",
            ],
          },
          "GetIssueTriggersRequestDisabledAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<nullable<datetime>>",
              "gte": "optional<nullable<datetime>>",
              "le": "optional<nullable<datetime>>",
              "lte": "optional<nullable<datetime>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetIssuesRequestAggregationKeys": {
            "docs": "Filter by aggregation keys",
            "inline": undefined,
            "properties": {
              "error_code": "optional<GetIssuesRequestAggregationKeysErrorCode>",
              "response_status": "optional<GetIssuesRequestAggregationKeysResponseStatus>",
              "webhook_id": "optional<GetIssuesRequestAggregationKeysWebhookId>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetIssuesRequestAggregationKeysErrorCode": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "AttemptErrorCodes",
              "list<AttemptErrorCodes>",
            ],
          },
          "GetIssuesRequestAggregationKeysResponseStatus": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "float",
              "list<float>",
            ],
          },
          "GetIssuesRequestAggregationKeysWebhookId": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "list<string>",
            ],
          },
          "GetIssuesRequestCreatedAt": {
            "discriminated": false,
            "docs": "Filter by created dates",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "nullable<datetime>",
              "GetIssuesRequestCreatedAtAny",
            ],
          },
          "GetIssuesRequestCreatedAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<nullable<datetime>>",
              "gte": "optional<nullable<datetime>>",
              "le": "optional<nullable<datetime>>",
              "lte": "optional<nullable<datetime>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetIssuesRequestDismissedAt": {
            "discriminated": false,
            "docs": "Filter by dismissed dates",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "nullable<datetime>",
              "GetIssuesRequestDismissedAtAny",
            ],
          },
          "GetIssuesRequestDismissedAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<nullable<datetime>>",
              "gte": "optional<nullable<datetime>>",
              "le": "optional<nullable<datetime>>",
              "lte": "optional<nullable<datetime>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetIssuesRequestFirstSeenAt": {
            "discriminated": false,
            "docs": "Filter by first seen dates",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "nullable<datetime>",
              "GetIssuesRequestFirstSeenAtAny",
            ],
          },
          "GetIssuesRequestFirstSeenAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<nullable<datetime>>",
              "gte": "optional<nullable<datetime>>",
              "le": "optional<nullable<datetime>>",
              "lte": "optional<nullable<datetime>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetIssuesRequestLastSeenAt": {
            "discriminated": false,
            "docs": "Filter by last seen dates",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "nullable<datetime>",
              "GetIssuesRequestLastSeenAtAny",
            ],
          },
          "GetIssuesRequestLastSeenAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<nullable<datetime>>",
              "gte": "optional<nullable<datetime>>",
              "le": "optional<nullable<datetime>>",
              "lte": "optional<nullable<datetime>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRequestBulkRetriesRequestCancelledAt": {
            "discriminated": false,
            "docs": "Filter by date the bulk retry was cancelled",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "nullable<datetime>",
              "GetRequestBulkRetriesRequestCancelledAtAny",
            ],
          },
          "GetRequestBulkRetriesRequestCancelledAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<nullable<datetime>>",
              "gte": "optional<nullable<datetime>>",
              "le": "optional<nullable<datetime>>",
              "lte": "optional<nullable<datetime>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRequestBulkRetriesRequestCompletedAt": {
            "discriminated": false,
            "docs": "Filter by date the bulk retry completed",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "nullable<datetime>",
              "GetRequestBulkRetriesRequestCompletedAtAny",
            ],
          },
          "GetRequestBulkRetriesRequestCompletedAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<nullable<datetime>>",
              "gte": "optional<nullable<datetime>>",
              "le": "optional<nullable<datetime>>",
              "lte": "optional<nullable<datetime>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRequestBulkRetriesRequestCreatedAt": {
            "discriminated": false,
            "docs": "Filter by date the bulk retry was created",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "nullable<datetime>",
              "GetRequestBulkRetriesRequestCreatedAtAny",
            ],
          },
          "GetRequestBulkRetriesRequestCreatedAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<nullable<datetime>>",
              "gte": "optional<nullable<datetime>>",
              "le": "optional<nullable<datetime>>",
              "lte": "optional<nullable<datetime>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRequestBulkRetriesRequestQuery": {
            "docs": "Filter properties for the events to be included in the bulk retry, use query parameters of [Requests](#requests)",
            "inline": undefined,
            "properties": {
              "body": {
                "docs": "URL Encoded string of the JSON to match to the data body",
                "type": "optional<GetRequestBulkRetriesRequestQueryBody>",
              },
              "bulk_retry_id": "optional<GetRequestBulkRetriesRequestQueryBulkRetryId>",
              "created_at": "optional<GetRequestBulkRetriesRequestQueryCreatedAt>",
              "dir": {
                "docs": "Sort direction",
                "type": "optional<GetRequestBulkRetriesRequestQueryDir>",
              },
              "events_count": "optional<GetRequestBulkRetriesRequestQueryEventsCount>",
              "headers": {
                "docs": "URL Encoded string of the JSON to match to the data headers",
                "type": "optional<GetRequestBulkRetriesRequestQueryHeaders>",
              },
              "id": {
                "docs": "Filter by requests IDs",
                "type": "optional<GetRequestBulkRetriesRequestQueryId>",
              },
              "ignored_count": "optional<GetRequestBulkRetriesRequestQueryIgnoredCount>",
              "include": "optional<literal<"data">>",
              "ingested_at": "optional<GetRequestBulkRetriesRequestQueryIngestedAt>",
              "limit": {
                "docs": "Result set size",
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 255,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "next": {
                "docs": "The ID to provide in the query to get the next set of results",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "order_by": {
                "docs": "Sort key(s)",
                "type": "optional<GetRequestBulkRetriesRequestQueryOrderBy>",
              },
              "parsed_query": {
                "docs": "URL Encoded string of the JSON to match to the parsed query (JSON representation of the query)",
                "type": "optional<GetRequestBulkRetriesRequestQueryParsedQuery>",
              },
              "path": {
                "docs": "URL Encoded string of the string to match partially to the path",
                "type": "optional<string>",
              },
              "prev": {
                "docs": "The ID to provide in the query to get the previous set of results",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "rejection_cause": {
                "docs": "Filter by rejection cause",
                "type": "optional<nullable<GetRequestBulkRetriesRequestQueryRejectionCause>>",
              },
              "source_id": {
                "docs": "Filter by source IDs",
                "type": "optional<GetRequestBulkRetriesRequestQuerySourceId>",
              },
              "status": "optional<GetRequestBulkRetriesRequestQueryStatus>",
              "verified": {
                "docs": "Filter by verification status",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRequestBulkRetriesRequestQueryBody": {
            "discriminated": false,
            "docs": "URL Encoded string of the JSON to match to the data body",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "GetRequestBulkRetriesRequestQueryBodyOne",
            ],
          },
          "GetRequestBulkRetriesRequestQueryBodyOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRequestBulkRetriesRequestQueryBulkRetryId": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "GetRequestBulkRetriesRequestQueryCreatedAt": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "datetime",
              "GetRequestBulkRetriesRequestQueryCreatedAtAny",
            ],
          },
          "GetRequestBulkRetriesRequestQueryCreatedAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<datetime>",
              "gte": "optional<datetime>",
              "le": "optional<datetime>",
              "lte": "optional<datetime>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRequestBulkRetriesRequestQueryDir": {
            "discriminated": false,
            "docs": "Sort direction",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "literal<"asc">",
              "literal<"desc">",
              "list<GetRequestBulkRetriesRequestQueryDirItem>",
            ],
          },
          "GetRequestBulkRetriesRequestQueryDirItem": {
            "enum": [
              "asc",
              "desc",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRequestBulkRetriesRequestQueryEventsCount": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "integer",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "GetRequestBulkRetriesRequestQueryEventsCountAny",
              "list<integer>",
            ],
          },
          "GetRequestBulkRetriesRequestQueryEventsCountAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "contains": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "gt": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "gte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "le": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "lte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRequestBulkRetriesRequestQueryHeaders": {
            "discriminated": false,
            "docs": "URL Encoded string of the JSON to match to the data headers",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "GetRequestBulkRetriesRequestQueryHeadersOne",
            ],
          },
          "GetRequestBulkRetriesRequestQueryHeadersOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRequestBulkRetriesRequestQueryId": {
            "discriminated": false,
            "docs": "Filter by requests IDs",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "docs": "Request ID",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "GetRequestBulkRetriesRequestQueryIgnoredCount": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "integer",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "GetRequestBulkRetriesRequestQueryIgnoredCountAny",
              "list<integer>",
            ],
          },
          "GetRequestBulkRetriesRequestQueryIgnoredCountAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "contains": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "gt": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "gte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "le": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "lte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRequestBulkRetriesRequestQueryIngestedAt": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "datetime",
              "GetRequestBulkRetriesRequestQueryIngestedAtAny",
            ],
          },
          "GetRequestBulkRetriesRequestQueryIngestedAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<datetime>",
              "gte": "optional<datetime>",
              "le": "optional<datetime>",
              "lte": "optional<datetime>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRequestBulkRetriesRequestQueryOrderBy": {
            "discriminated": false,
            "docs": "Sort key(s)",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "literal<"ingested_at">",
              "literal<"created_at">",
              "list<GetRequestBulkRetriesRequestQueryOrderByItem>",
            ],
          },
          "GetRequestBulkRetriesRequestQueryOrderByItem": {
            "enum": [
              "ingested_at",
              "created_at",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRequestBulkRetriesRequestQueryParsedQuery": {
            "discriminated": false,
            "docs": "URL Encoded string of the JSON to match to the parsed query (JSON representation of the query)",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "GetRequestBulkRetriesRequestQueryParsedQueryOne",
            ],
          },
          "GetRequestBulkRetriesRequestQueryParsedQueryOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRequestBulkRetriesRequestQueryRejectionCause": {
            "discriminated": false,
            "docs": "Filter by rejection cause",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "RequestRejectionCause",
              "GetRequestBulkRetriesRequestQueryRejectionCauseAny",
              "list<RequestRejectionCause>",
            ],
          },
          "GetRequestBulkRetriesRequestQueryRejectionCauseAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "contains": "optional<RequestRejectionCause>",
              "gt": "optional<RequestRejectionCause>",
              "gte": "optional<RequestRejectionCause>",
              "le": "optional<RequestRejectionCause>",
              "lte": "optional<RequestRejectionCause>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRequestBulkRetriesRequestQuerySourceId": {
            "discriminated": false,
            "docs": "Filter by source IDs",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "docs": "Source ID",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "GetRequestBulkRetriesRequestQueryStatus": {
            "enum": [
              "accepted",
              "rejected",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRequestEventsRequestAttempts": {
            "discriminated": false,
            "docs": "Filter by number of attempts",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "integer",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "GetRequestEventsRequestAttemptsAny",
            ],
          },
          "GetRequestEventsRequestAttemptsAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "contains": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "gt": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "gte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "le": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "lte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRequestEventsRequestBody": {
            "discriminated": false,
            "docs": "URL Encoded string of the JSON to match to the data body",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "GetRequestEventsRequestBodyOne",
            ],
          },
          "GetRequestEventsRequestBodyOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRequestEventsRequestCreatedAt": {
            "discriminated": false,
            "docs": "Filter by `created_at` date using a date operator",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "datetime",
              "GetRequestEventsRequestCreatedAtAny",
            ],
          },
          "GetRequestEventsRequestCreatedAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<datetime>",
              "gte": "optional<datetime>",
              "le": "optional<datetime>",
              "lte": "optional<datetime>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRequestEventsRequestHeaders": {
            "discriminated": false,
            "docs": "URL Encoded string of the JSON to match to the data headers",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "GetRequestEventsRequestHeadersOne",
            ],
          },
          "GetRequestEventsRequestHeadersOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRequestEventsRequestParsedQuery": {
            "discriminated": false,
            "docs": "URL Encoded string of the JSON to match to the parsed query (JSON representation of the query)",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "GetRequestEventsRequestParsedQueryOne",
            ],
          },
          "GetRequestEventsRequestParsedQueryOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRequestEventsRequestStatus": {
            "discriminated": false,
            "docs": "Lifecyle status of the event",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "EventStatus",
              "list<EventStatus>",
            ],
          },
          "GetRequestsRequestBody": {
            "discriminated": false,
            "docs": "URL Encoded string of the JSON to match to the data body",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "GetRequestsRequestBodyOne",
            ],
          },
          "GetRequestsRequestBodyOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRequestsRequestCreatedAt": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "datetime",
              "GetRequestsRequestCreatedAtAny",
            ],
          },
          "GetRequestsRequestCreatedAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<datetime>",
              "gte": "optional<datetime>",
              "le": "optional<datetime>",
              "lte": "optional<datetime>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRequestsRequestEventsCount": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "integer",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "GetRequestsRequestEventsCountAny",
              "list<integer>",
            ],
          },
          "GetRequestsRequestEventsCountAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "contains": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "gt": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "gte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "le": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "lte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRequestsRequestHeaders": {
            "discriminated": false,
            "docs": "URL Encoded string of the JSON to match to the data headers",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "GetRequestsRequestHeadersOne",
            ],
          },
          "GetRequestsRequestHeadersOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRequestsRequestIgnoredCount": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "integer",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "GetRequestsRequestIgnoredCountAny",
              "list<integer>",
            ],
          },
          "GetRequestsRequestIgnoredCountAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "contains": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "gt": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "gte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "le": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "lte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRequestsRequestIngestedAt": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "datetime",
              "GetRequestsRequestIngestedAtAny",
            ],
          },
          "GetRequestsRequestIngestedAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<datetime>",
              "gte": "optional<datetime>",
              "le": "optional<datetime>",
              "lte": "optional<datetime>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRequestsRequestParsedQuery": {
            "discriminated": false,
            "docs": "URL Encoded string of the JSON to match to the parsed query (JSON representation of the query)",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "GetRequestsRequestParsedQueryOne",
            ],
          },
          "GetRequestsRequestParsedQueryOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRulesetsRequestArchivedAt": {
            "discriminated": false,
            "docs": "Date the ruleset was archived",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "nullable<datetime>",
              "GetRulesetsRequestArchivedAtAny",
            ],
          },
          "GetRulesetsRequestArchivedAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<nullable<datetime>>",
              "gte": "optional<nullable<datetime>>",
              "le": "optional<nullable<datetime>>",
              "lte": "optional<nullable<datetime>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRulesetsRequestName": {
            "discriminated": false,
            "docs": "The ruleset name",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "GetRulesetsRequestNameZero",
              "GetRulesetsRequestNameAny",
            ],
          },
          "GetRulesetsRequestNameAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "contains": "optional<GetRulesetsRequestNameAnyContains>",
              "gt": "optional<GetRulesetsRequestNameAnyGt>",
              "gte": "optional<GetRulesetsRequestNameAnyGte>",
              "le": "optional<GetRulesetsRequestNameAnyLe>",
              "lte": "optional<GetRulesetsRequestNameAnyLte>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRulesetsRequestNameAnyContains": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "nullable<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 155,
                  "minLength": undefined,
                  "pattern": "^[A-z0-9-_]+$",
                },
              },
              "list<nullable<string>>",
            ],
          },
          "GetRulesetsRequestNameAnyGt": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "nullable<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 155,
                  "minLength": undefined,
                  "pattern": "^[A-z0-9-_]+$",
                },
              },
              "list<nullable<string>>",
            ],
          },
          "GetRulesetsRequestNameAnyGte": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "nullable<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 155,
                  "minLength": undefined,
                  "pattern": "^[A-z0-9-_]+$",
                },
              },
              "list<nullable<string>>",
            ],
          },
          "GetRulesetsRequestNameAnyLe": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "nullable<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 155,
                  "minLength": undefined,
                  "pattern": "^[A-z0-9-_]+$",
                },
              },
              "list<nullable<string>>",
            ],
          },
          "GetRulesetsRequestNameAnyLte": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "nullable<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 155,
                  "minLength": undefined,
                  "pattern": "^[A-z0-9-_]+$",
                },
              },
              "list<nullable<string>>",
            ],
          },
          "GetRulesetsRequestNameZero": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "nullable<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 155,
                  "minLength": undefined,
                  "pattern": "^[A-z0-9-_]+$",
                },
              },
              "list<nullable<string>>",
            ],
          },
          "GetSourcesRequestArchivedAt": {
            "discriminated": false,
            "docs": "Date the source was archived",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "nullable<datetime>",
              "GetSourcesRequestArchivedAtAny",
            ],
          },
          "GetSourcesRequestArchivedAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<nullable<datetime>>",
              "gte": "optional<nullable<datetime>>",
              "le": "optional<nullable<datetime>>",
              "lte": "optional<nullable<datetime>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetSourcesRequestIntegrationId": {
            "discriminated": false,
            "docs": "Filter by integration IDs",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "nullable<string>",
              "GetSourcesRequestIntegrationIdAny",
            ],
          },
          "GetSourcesRequestIntegrationIdAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetSourcesRequestName": {
            "discriminated": false,
            "docs": "The source name",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 155,
                  "minLength": undefined,
                  "pattern": "^[A-z0-9-_]+$",
                },
              },
              "GetSourcesRequestNameAny",
            ],
          },
          "GetSourcesRequestNameAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "contains": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 155,
                  "minLength": undefined,
                  "pattern": "^[A-z0-9-_]+$",
                },
              },
              "gt": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 155,
                  "minLength": undefined,
                  "pattern": "^[A-z0-9-_]+$",
                },
              },
              "gte": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 155,
                  "minLength": undefined,
                  "pattern": "^[A-z0-9-_]+$",
                },
              },
              "le": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 155,
                  "minLength": undefined,
                  "pattern": "^[A-z0-9-_]+$",
                },
              },
              "lte": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 155,
                  "minLength": undefined,
                  "pattern": "^[A-z0-9-_]+$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetTransformationExecutionsRequestCreatedAt": {
            "discriminated": false,
            "docs": "ISO date of the transformation's execution",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "datetime",
              "GetTransformationExecutionsRequestCreatedAtAny",
            ],
          },
          "GetTransformationExecutionsRequestCreatedAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<datetime>",
              "gte": "optional<datetime>",
              "le": "optional<datetime>",
              "lte": "optional<datetime>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetTransformationsRequestName": {
            "discriminated": false,
            "docs": "Filter by transformation name",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "nullable<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 155,
                  "minLength": undefined,
                  "pattern": "^[A-z0-9-_]+$",
                },
              },
              "list<nullable<string>>",
            ],
          },
          "HandledHmacConfigs": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "webhook_secret_key": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "HmacAlgorithms": {
            "enum": [
              "md5",
              "sha1",
              "sha256",
              "sha512",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "HmacIntegrationConfigs": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "algorithm": "HmacAlgorithms",
              "encoding": "HmacIntegrationConfigsEncoding",
              "header_key": "string",
              "webhook_secret_key": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "HmacIntegrationConfigsEncoding": {
            "enum": [
              "base64",
              "hex",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IgnoredEvent": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "cause": "IgnoredEventCause",
              "created_at": "datetime",
              "id": "string",
              "meta": "optional<nullable<IgnoredEventMeta>>",
              "request_id": "string",
              "team_id": "string",
              "updated_at": "datetime",
              "webhook_id": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IgnoredEventCause": {
            "enum": [
              "ARCHIVED",
              "FILTERED",
              "TRANSFORMATION_FAILED",
              "CLI_DISCONNECTED",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IgnoredEventMeta": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "FilteredMeta",
              "TransformationFailedMeta",
            ],
          },
          "IgnoredEventPaginatedResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "count": "optional<integer>",
              "models": "optional<list<IgnoredEvent>>",
              "pagination": "optional<SeekPagination>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Integration": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "configs": {
                "docs": "Decrypted Key/Value object of the associated configuration for that provider",
                "type": "IntegrationConfigs",
              },
              "created_at": {
                "docs": "Date the integration was created",
                "type": "datetime",
              },
              "features": {
                "docs": "List of features to enable (see features list below)",
                "type": "list<IntegrationFeature>",
              },
              "id": {
                "docs": "ID of the integration",
                "type": "string",
              },
              "label": {
                "docs": "Label of the integration",
                "type": "string",
              },
              "provider": "IntegrationProvider",
              "sources": {
                "docs": "List of source IDs the integration is attached to",
                "type": "list<string>",
              },
              "team_id": {
                "docs": "ID of the workspace",
                "type": "string",
              },
              "updated_at": {
                "docs": "Date the integration was last updated",
                "type": "datetime",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IntegrationConfigs": {
            "discriminated": false,
            "docs": "Decrypted Key/Value object of the associated configuration for that provider",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "HmacIntegrationConfigs",
              "ApiKeyIntegrationConfigs",
              "HandledHmacConfigs",
              "BasicAuthIntegrationConfigs",
              "ShopifyIntegrationConfigs",
            ],
          },
          "IntegrationFeature": {
            "enum": [
              "VERIFICATION",
              "HANDSHAKE",
              "POLLING",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IntegrationPaginatedResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "count": "optional<integer>",
              "models": "optional<list<Integration>>",
              "pagination": "optional<SeekPagination>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IntegrationProvider": {
            "docs": "The provider name",
            "enum": [
              "twitter",
              "stripe",
              "recharge",
              "github",
              "shopify",
              "postmark",
              "typeform",
              "hmac",
              "basic_auth",
              "api_key",
              "xero",
              "svix",
              "zoom",
              "akeneo",
              "adyen",
              "gitlab",
              {
                "name": "PropertyFinder",
                "value": "property-finder",
              },
              "woocommerce",
              "oura",
              "commercelayer",
              "mailgun",
              "pipedrive",
              "sendgrid",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Issue": {
            "availability": undefined,
            "base-properties": {},
            "discriminant": "type",
            "docs": "Issue",
            "encoding": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": {
              "delivery": "DeliveryIssue",
              "transformation": "TransformationIssue",
            },
          },
          "IssueCount": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "count": {
                "docs": "Number of issues",
                "type": "integer",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IssueStatus": {
            "docs": "Issue status",
            "enum": [
              "OPENED",
              "IGNORED",
              "ACKNOWLEDGED",
              "RESOLVED",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IssueTrigger": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "channels": "optional<nullable<IssueTriggerChannels>>",
              "configs": "IssueTriggerReference",
              "created_at": {
                "docs": "ISO timestamp for when the issue trigger was created",
                "type": "datetime",
              },
              "deleted_at": {
                "docs": "ISO timestamp for when the issue trigger was deleted",
                "type": "optional<nullable<datetime>>",
              },
              "disabled_at": {
                "docs": "ISO timestamp for when the issue trigger was disabled",
                "type": "optional<nullable<datetime>>",
              },
              "id": {
                "docs": "ID of the issue trigger",
                "type": "string",
              },
              "name": {
                "docs": "Optional unique name to use as reference when using the API",
                "type": "optional<nullable<string>>",
              },
              "team_id": {
                "docs": "ID of the workspace",
                "type": "optional<nullable<string>>",
              },
              "type": "IssueType",
              "updated_at": {
                "docs": "ISO timestamp for when the issue trigger was last updated",
                "type": "datetime",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IssueTriggerBackpressureConfigs": {
            "docs": "Configurations for a 'Backpressure' issue trigger",
            "inline": undefined,
            "properties": {
              "delay": "IssueTriggerBackpressureDelay",
              "destinations": {
                "docs": "A pattern to match on the destination name or array of destination IDs. Use `*` as wildcard.",
                "type": "IssueTriggerBackpressureConfigsDestinations",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IssueTriggerBackpressureConfigsDestinations": {
            "discriminated": false,
            "docs": "A pattern to match on the destination name or array of destination IDs. Use `*` as wildcard.",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "list<string>",
            ],
          },
          "IssueTriggerBackpressureDelay": {
            "docs": "The minimum delay (backpressure) to open the issue for min of 1 minute (60000) and max of 1 day (86400000)",
            "type": "integer",
            "validation": {
              "exclusiveMax": undefined,
              "exclusiveMin": undefined,
              "max": 86400000,
              "min": 60000,
              "multipleOf": undefined,
            },
          },
          "IssueTriggerChannels": {
            "docs": "Notification channels object for the specific channel type",
            "inline": undefined,
            "properties": {
              "email": "optional<IssueTriggerEmailChannel>",
              "opsgenie": "optional<IssueTriggerIntegrationChannel>",
              "slack": "optional<IssueTriggerSlackChannel>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IssueTriggerDeliveryConfigs": {
            "docs": "Configurations for a 'delivery' issue trigger",
            "inline": undefined,
            "properties": {
              "connections": {
                "docs": "A pattern to match on the connection name or array of connection IDs. Use `*` as wildcard.",
                "type": "IssueTriggerDeliveryConfigsConnections",
              },
              "strategy": "IssueTriggerStrategy",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IssueTriggerDeliveryConfigsConnections": {
            "discriminated": false,
            "docs": "A pattern to match on the connection name or array of connection IDs. Use `*` as wildcard.",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "list<string>",
            ],
          },
          "IssueTriggerEmailChannel": {
            "docs": "Email channel for an issue trigger",
            "inline": undefined,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IssueTriggerIntegrationChannel": {
            "docs": "Integration channel for an issue trigger",
            "inline": undefined,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IssueTriggerPaginatedResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "count": "optional<integer>",
              "models": "optional<list<IssueTrigger>>",
              "pagination": "optional<SeekPagination>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IssueTriggerReference": {
            "discriminated": false,
            "docs": "Configuration object for the specific issue type selected",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "IssueTriggerDeliveryConfigs",
              "IssueTriggerTransformationConfigs",
              "IssueTriggerBackpressureConfigs",
            ],
          },
          "IssueTriggerSlackChannel": {
            "docs": "Slack channel for an issue trigger",
            "inline": undefined,
            "properties": {
              "channel_name": {
                "docs": "Channel name",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IssueTriggerStrategy": {
            "docs": "The strategy uses to open the issue",
            "enum": [
              "first_attempt",
              "final_attempt",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IssueTriggerTransformationConfigs": {
            "docs": "Configurations for a 'Transformation' issue trigger",
            "inline": undefined,
            "properties": {
              "log_level": "TransformationExecutionLogLevel",
              "transformations": {
                "docs": "A pattern to match on the transformation name or array of transformation IDs. Use `*` as wildcard.",
                "type": "IssueTriggerTransformationConfigsTransformations",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IssueTriggerTransformationConfigsTransformations": {
            "discriminated": false,
            "docs": "A pattern to match on the transformation name or array of transformation IDs. Use `*` as wildcard.",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "list<string>",
            ],
          },
          "IssueType": {
            "docs": "Issue type",
            "enum": [
              "delivery",
              "transformation",
              "backpressure",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IssueWithData": {
            "availability": undefined,
            "base-properties": {},
            "discriminant": "type",
            "docs": undefined,
            "encoding": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": {
              "delivery": "DeliveryIssueWithData",
              "transformation": "TransformationIssueWithData",
            },
          },
          "IssueWithDataPaginatedResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "count": "optional<integer>",
              "models": "optional<list<IssueWithData>>",
              "pagination": "optional<SeekPagination>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrderByDirection": {
            "enum": [
              "asc",
              "desc",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RawBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "body": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Request": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "cli_events_count": {
                "docs": "The count of CLI events created from this request",
                "type": "optional<nullable<integer>>",
              },
              "created_at": {
                "docs": "	Date the event was created",
                "type": "datetime",
              },
              "data": "optional<nullable<RequestData>>",
              "duplicate_hash": {
                "docs": "Hash of the request data payload used to check for duplicates",
                "type": "optional<nullable<string>>",
              },
              "duplicate_hits": {
                "docs": "Count of duplicate hits found",
                "type": "optional<nullable<integer>>",
              },
              "events_count": {
                "docs": "The count of events created from this request (CLI events not included)",
                "type": "optional<nullable<integer>>",
              },
              "id": {
                "docs": "ID of the request",
                "type": "string",
              },
              "ignored_count": "optional<nullable<integer>>",
              "ingest_priority": {
                "docs": "The priority attributed to the request when received",
                "type": "optional<nullable<RequestIngestPriority>>",
              },
              "ingested_at": {
                "docs": "The time the request was originally received",
                "type": "optional<nullable<datetime>>",
              },
              "ingested_at_id": "optional<string>",
              "original_event_data_id": {
                "docs": "ID of the request data",
                "type": "optional<nullable<string>>",
              },
              "rejection_cause": "optional<RequestRejectionCause>",
              "source_id": {
                "docs": "ID of the associated source",
                "type": "string",
              },
              "team_id": {
                "docs": "ID of the workspace",
                "type": "string",
              },
              "updated_at": {
                "docs": "Date the event was last updated",
                "type": "datetime",
              },
              "verified": {
                "docs": "Whether or not the request was verified when received",
                "type": "optional<nullable<boolean>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RequestData": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "body": "optional<nullable<RequestDataBody>>",
              "headers": "optional<nullable<RequestDataHeaders>>",
              "is_large_payload": "optional<nullable<boolean>>",
              "parsed_query": "optional<nullable<RequestDataParsedQuery>>",
              "path": "string",
              "query": "optional<nullable<string>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RequestDataBody": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "RequestDataBodyOne",
              "list<unknown>",
            ],
          },
          "RequestDataBodyOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RequestDataHeaders": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "map<string, nullable<string>>",
            ],
          },
          "RequestDataParsedQuery": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "nullable<string>",
              "RequestDataParsedQueryOne",
            ],
          },
          "RequestDataParsedQueryOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RequestIngestPriority": {
            "docs": "The priority attributed to the request when received",
            "enum": [
              "NORMAL",
              "LOW",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RequestPaginatedResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "count": "optional<integer>",
              "models": "optional<list<Request>>",
              "pagination": "optional<SeekPagination>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RequestRejectionCause": {
            "enum": [
              "SOURCE_ARCHIVED",
              "NO_WEBHOOK",
              "VERIFICATION_FAILED",
              "UNSUPPORTED_HTTP_METHOD",
              "UNSUPPORTED_CONTENT_TYPE",
              "UNPARSABLE_JSON",
              "PAYLOAD_TOO_LARGE",
              "INGESTION_FATAL",
              "UNKNOWN",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RetriedEvent": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "attempt": "nullable<EventAttempt>",
              "event": "Event",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RetryRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "events": "optional<nullable<list<Event>>>",
              "request": "Request",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RetryRule": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "count": {
                "docs": "Maximum number of retries to attempt",
                "type": "optional<nullable<integer>>",
              },
              "interval": {
                "docs": "Time in MS between each retry",
                "type": "optional<nullable<integer>>",
              },
              "strategy": "RetryStrategy",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RetryStrategy": {
            "docs": "Algorithm to use when calculating delay between retries",
            "enum": [
              "linear",
              "exponential",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Rule": {
            "availability": undefined,
            "base-properties": {},
            "discriminant": "type",
            "docs": undefined,
            "encoding": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": {
              "alert": "AlertRule",
              "delay": "DelayRule",
              "filter": "FilterRule",
              "retry": "RetryRule",
              "transform": "TransformRule",
            },
          },
          "Ruleset": {
            "docs": "Associated [Ruleset](#ruleset-object) object",
            "inline": undefined,
            "properties": {
              "archived_at": {
                "docs": "Date the ruleset was archived",
                "type": "optional<nullable<datetime>>",
              },
              "created_at": {
                "docs": "Date the ruleset was created",
                "type": "datetime",
              },
              "id": {
                "docs": "ID of the ruleset",
                "type": "string",
              },
              "is_team_default": {
                "docs": "Default ruleset of Workspace",
                "type": "boolean",
              },
              "name": {
                "docs": "A unique name for the ruleset",
                "type": "string",
              },
              "rules": {
                "docs": "Array of rules to apply",
                "type": "list<Rule>",
              },
              "team_id": {
                "docs": "ID of the workspace",
                "type": "string",
              },
              "updated_at": {
                "docs": "Date the ruleset was last updated",
                "type": "datetime",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RulesetPaginatedResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "count": "optional<integer>",
              "models": "optional<list<nullable<Ruleset>>>",
              "pagination": "optional<SeekPagination>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SeekPagination": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "dir": "optional<SeekPaginationDir>",
              "limit": "optional<integer>",
              "next": "optional<string>",
              "order_by": "optional<SeekPaginationOrderBy>",
              "prev": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SeekPaginationDir": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "OrderByDirection",
              "list<OrderByDirection>",
            ],
          },
          "SeekPaginationOrderBy": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "list<string>",
            ],
          },
          "ShopifyIntegrationConfigs": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "api_key": "optional<nullable<string>>",
              "api_secret": "optional<nullable<string>>",
              "rate_limit": "optional<nullable<float>>",
              "rate_limit_period": "optional<nullable<ShopifyIntegrationConfigsRateLimitPeriod>>",
              "shop": "optional<nullable<string>>",
              "webhook_secret_key": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ShopifyIntegrationConfigsRateLimitPeriod": {
            "enum": [
              "minute",
              "second",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ShortEventData": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "body": "optional<nullable<ShortEventDataBody>>",
              "headers": "optional<nullable<ShortEventDataHeaders>>",
              "is_large_payload": "optional<nullable<boolean>>",
              "parsed_query": "optional<nullable<ShortEventDataParsedQuery>>",
              "path": "string",
              "query": "optional<nullable<string>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ShortEventDataBody": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "ShortEventDataBodyOne",
              "list<unknown>",
            ],
          },
          "ShortEventDataBodyOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ShortEventDataHeaders": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "map<string, nullable<string>>",
            ],
          },
          "ShortEventDataParsedQuery": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "nullable<string>",
              "ShortEventDataParsedQueryOne",
            ],
          },
          "ShortEventDataParsedQueryOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Source": {
            "docs": "Associated [Source](#source-object) object",
            "inline": undefined,
            "properties": {
              "archived_at": {
                "docs": "Date the source was archived",
                "type": "optional<nullable<datetime>>",
              },
              "created_at": {
                "docs": "Date the source was created",
                "type": "datetime",
              },
              "id": {
                "docs": "ID of the source",
                "type": "string",
              },
              "integration": {
                "docs": "Integration object",
                "type": "optional<nullable<SourceIntegration>>",
              },
              "integration_id": {
                "docs": "ID of the integration",
                "type": "optional<nullable<string>>",
              },
              "name": {
                "docs": "Name for the source",
                "type": "string",
              },
              "team_id": {
                "docs": "ID of the workspace",
                "type": "string",
              },
              "updated_at": {
                "docs": "Date the source was last updated",
                "type": "datetime",
              },
              "url": {
                "docs": "A unique URL that must be supplied to your webhook's provider",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SourceIntegration": {
            "docs": "Integration object",
            "inline": true,
            "properties": {
              "features": {
                "docs": "List of enabled features",
                "type": "list<IntegrationFeature>",
              },
              "id": {
                "docs": "ID of the integration",
                "type": "string",
              },
              "label": {
                "docs": "Label of the integration",
                "type": "string",
              },
              "provider": "IntegrationProvider",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SourcePaginatedResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "count": "optional<integer>",
              "models": "optional<list<Source>>",
              "pagination": "optional<SeekPagination>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ToggleWebhookNotifications": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "enabled": "boolean",
              "source_id": "string",
              "topics": "optional<nullable<list<TopicsValue>>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TopicsValue": {
            "docs": "Supported topics",
            "enum": [
              {
                "name": "IssueOpened",
                "value": "issue.opened",
              },
              {
                "name": "IssueUpdated",
                "value": "issue.updated",
              },
              {
                "name": "DeprecatedAttemptFailed",
                "value": "deprecated.attempt-failed",
              },
              {
                "name": "EventSuccessful",
                "value": "event.successful",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TransformFull": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "transformation": {
                "docs": "You can optionally define a new transformation while creating a transform rule",
                "type": "optional<TransformFullTransformation>",
              },
              "transformation_id": {
                "docs": "ID of the attached transformation object. Optional input, always set once the rule is defined",
                "type": "optional<nullable<string>>",
              },
              "type": {
                "docs": "A transformation rule must be of type `transformation`",
                "type": "literal<"transform">",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TransformFullTransformation": {
            "docs": "You can optionally define a new transformation while creating a transform rule",
            "inline": true,
            "properties": {
              "code": {
                "docs": "A string representation of your JavaScript (ES6) code to run",
                "type": "string",
              },
              "env": {
                "docs": "A key-value object of environment variables to encrypt and expose to your transformation code",
                "type": "optional<nullable<map<string, nullable<string>>>>",
              },
              "name": {
                "docs": "The unique name of the transformation",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TransformReference": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "transformation_id": {
                "docs": "ID of the attached transformation object. Optional input, always set once the rule is defined",
                "type": "string",
              },
              "type": {
                "docs": "A transformation rule must be of type `transformation`",
                "type": "literal<"transform">",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TransformRule": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "TransformReference",
              "TransformFull",
            ],
          },
          "Transformation": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": {
                "docs": "JavaScript code to be executed",
                "type": "string",
              },
              "created_at": {
                "docs": "Date the transformation was created",
                "type": "datetime",
              },
              "encrypted_env": "optional<nullable<string>>",
              "env": {
                "docs": "Key-value environment variables to be passed to the transformation",
                "type": "optional<nullable<map<string, nullable<string>>>>",
              },
              "id": {
                "docs": "ID of the transformation",
                "type": "string",
              },
              "iv": "optional<nullable<string>>",
              "name": {
                "docs": "A unique, human-friendly name for the transformation",
                "type": "string",
              },
              "team_id": {
                "docs": "ID of the workspace",
                "type": "string",
              },
              "updated_at": {
                "docs": "Date the transformation was last updated",
                "type": "datetime",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TransformationExecution": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "created_at": "datetime",
              "id": "string",
              "issue_id": "optional<nullable<string>>",
              "log_level": "TransformationExecutionLogLevel",
              "logs": "list<ConsoleLine>",
              "original_event_data": "optional<nullable<ShortEventData>>",
              "original_event_data_id": "string",
              "team_id": "string",
              "transformation_id": "string",
              "transformed_event_data": "optional<nullable<ShortEventData>>",
              "transformed_event_data_id": "string",
              "updated_at": "datetime",
              "webhook_id": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TransformationExecutionLogLevel": {
            "docs": "The minimum log level to open the issue on",
            "enum": [
              "debug",
              "info",
              "warn",
              "error",
              "fatal",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TransformationExecutionPaginatedResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "count": "optional<integer>",
              "models": "optional<list<TransformationExecution>>",
              "pagination": "optional<SeekPagination>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TransformationExecutorOutput": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "console": "optional<nullable<list<ConsoleLine>>>",
              "execution_id": "optional<nullable<string>>",
              "log_level": "TransformationExecutionLogLevel",
              "request": "optional<nullable<TransformationExecutorOutputRequest>>",
              "request_id": "optional<nullable<string>>",
              "transformation_id": "optional<nullable<string>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TransformationExecutorOutputRequest": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "body": "optional<nullable<TransformationExecutorOutputRequestBody>>",
              "headers": "optional<nullable<TransformationExecutorOutputRequestHeaders>>",
              "parsed_query": "optional<nullable<TransformationExecutorOutputRequestParsedQuery>>",
              "path": "string",
              "query": "optional<nullable<TransformationExecutorOutputRequestQuery>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TransformationExecutorOutputRequestBody": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "nullable<string>",
              "TransformationExecutorOutputRequestBodyOne",
            ],
          },
          "TransformationExecutorOutputRequestBodyOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TransformationExecutorOutputRequestHeaders": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "map<string, unknown>",
            ],
          },
          "TransformationExecutorOutputRequestParsedQuery": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "nullable<string>",
              "TransformationExecutorOutputRequestParsedQueryOne",
            ],
          },
          "TransformationExecutorOutputRequestParsedQueryOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TransformationExecutorOutputRequestQuery": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "nullable<TransformationExecutorOutputRequestQueryZero>",
              "string",
            ],
          },
          "TransformationExecutorOutputRequestQueryZero": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TransformationFailedMeta": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "transformation_id": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TransformationIssue": {
            "docs": "Transformation issue",
            "inline": undefined,
            "properties": {
              "aggregation_keys": "TransformationIssueAggregationKeys",
              "auto_resolved_at": "optional<nullable<datetime>>",
              "created_at": {
                "docs": "ISO timestamp for when the issue was created",
                "type": "string",
              },
              "dismissed_at": {
                "docs": "ISO timestamp for when the issue was dismissed",
                "type": "optional<nullable<datetime>>",
              },
              "first_seen_at": {
                "docs": "ISO timestamp for when the issue was first opened",
                "type": "datetime",
              },
              "id": {
                "docs": "Issue ID",
                "type": "string",
              },
              "last_seen_at": {
                "docs": "ISO timestamp for when the issue last occured",
                "type": "datetime",
              },
              "last_updated_by": {
                "docs": "ID of the team member who last updated the issue status",
                "type": "optional<nullable<string>>",
              },
              "merged_with": "optional<nullable<string>>",
              "opened_at": {
                "docs": "ISO timestamp for when the issue was last opened",
                "type": "datetime",
              },
              "reference": "TransformationIssueReference",
              "status": "IssueStatus",
              "team_id": {
                "docs": "ID of the workspace",
                "type": "string",
              },
              "updated_at": {
                "docs": "ISO timestamp for when the issue was last updated",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TransformationIssueAggregationKeys": {
            "docs": "Keys used as the aggregation keys a 'transformation' type issue",
            "inline": undefined,
            "properties": {
              "log_level": "TransformationExecutionLogLevel",
              "transformation_id": "list<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TransformationIssueData": {
            "docs": "Transformation issue data",
            "inline": undefined,
            "properties": {
              "transformation_execution": "TransformationExecution",
              "trigger_attempt": "optional<nullable<EventAttempt>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TransformationIssueReference": {
            "docs": "Reference to the event request transformation an issue is being created for.",
            "inline": undefined,
            "properties": {
              "transformation_execution_id": "string",
              "trigger_event_request_transformation_id": {
                "docs": "Deprecated but still found on historical issues",
                "type": "optional<nullable<string>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TransformationIssueWithData": {
            "docs": "Transformation issue",
            "inline": undefined,
            "properties": {
              "aggregation_keys": "TransformationIssueAggregationKeys",
              "auto_resolved_at": "optional<nullable<datetime>>",
              "created_at": {
                "docs": "ISO timestamp for when the issue was created",
                "type": "string",
              },
              "data": "optional<nullable<TransformationIssueData>>",
              "dismissed_at": {
                "docs": "ISO timestamp for when the issue was dismissed",
                "type": "optional<nullable<datetime>>",
              },
              "first_seen_at": {
                "docs": "ISO timestamp for when the issue was first opened",
                "type": "datetime",
              },
              "id": {
                "docs": "Issue ID",
                "type": "string",
              },
              "last_seen_at": {
                "docs": "ISO timestamp for when the issue last occured",
                "type": "datetime",
              },
              "last_updated_by": {
                "docs": "ID of the team member who last updated the issue status",
                "type": "optional<nullable<string>>",
              },
              "merged_with": "optional<nullable<string>>",
              "opened_at": {
                "docs": "ISO timestamp for when the issue was last opened",
                "type": "datetime",
              },
              "reference": "TransformationIssueReference",
              "status": "IssueStatus",
              "team_id": {
                "docs": "ID of the workspace",
                "type": "string",
              },
              "updated_at": {
                "docs": "ISO timestamp for when the issue was last updated",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TransformationPaginatedResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "count": "optional<integer>",
              "models": "optional<list<Transformation>>",
              "pagination": "optional<SeekPagination>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  GetIssueTriggersRequestDisabledAtAny:
    properties:
      gt: optional<nullable<datetime>>
      gte: optional<nullable<datetime>>
      le: optional<nullable<datetime>>
      lte: optional<nullable<datetime>>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetIssueTriggersRequestDisabledAt:
    discriminated: false
    docs: Date when the issue trigger was disabled
    union:
      - nullable<datetime>
      - GetIssueTriggersRequestDisabledAtAny
    source:
      openapi: ../openapi.yml
  GetBookmarksRequestLastUsedAtAny:
    properties:
      gt:
        type: optional<nullable<datetime>>
        docs: Last used date
      gte:
        type: optional<nullable<datetime>>
        docs: Last used date
      le:
        type: optional<nullable<datetime>>
        docs: Last used date
      lte:
        type: optional<nullable<datetime>>
        docs: Last used date
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetBookmarksRequestLastUsedAt:
    discriminated: false
    docs: Filter by last used date
    union:
      - type: nullable<datetime>
        docs: Last used date
      - GetBookmarksRequestLastUsedAtAny
    source:
      openapi: ../openapi.yml
  GetDestinationsRequestNameAny:
    properties:
      gt:
        type: optional<string>
        validation:
          pattern: ^[A-z0-9-_]+$
          maxLength: 155
      gte:
        type: optional<string>
        validation:
          pattern: ^[A-z0-9-_]+$
          maxLength: 155
      le:
        type: optional<string>
        validation:
          pattern: ^[A-z0-9-_]+$
          maxLength: 155
      lte:
        type: optional<string>
        validation:
          pattern: ^[A-z0-9-_]+$
          maxLength: 155
      any: optional<boolean>
      contains:
        type: optional<string>
        validation:
          pattern: ^[A-z0-9-_]+$
          maxLength: 155
    source:
      openapi: ../openapi.yml
    inline: true
  GetDestinationsRequestName:
    discriminated: false
    docs: The destination name
    union:
      - type: string
        validation:
          pattern: ^[A-z0-9-_]+$
          maxLength: 155
      - GetDestinationsRequestNameAny
    source:
      openapi: ../openapi.yml
  GetDestinationsRequestArchivedAtAny:
    properties:
      gt: optional<nullable<datetime>>
      gte: optional<nullable<datetime>>
      le: optional<nullable<datetime>>
      lte: optional<nullable<datetime>>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetDestinationsRequestArchivedAt:
    discriminated: false
    docs: Date the destination was archived
    union:
      - nullable<datetime>
      - GetDestinationsRequestArchivedAtAny
    source:
      openapi: ../openapi.yml
  GetDestinationsRequestCliPathAny:
    properties:
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetDestinationsRequestCliPath:
    discriminated: false
    docs: Path for the CLI destination
    union:
      - type: string
        validation:
          maxLength: 255
      - GetDestinationsRequestCliPathAny
      - list<string>
    source:
      openapi: ../openapi.yml
  GetEventsRequestStatus:
    discriminated: false
    docs: Lifecyle status of the event
    union:
      - EventStatus
      - list<EventStatus>
    source:
      openapi: ../openapi.yml
  GetEventsRequestAttemptsAny:
    properties:
      gt:
        type: optional<integer>
        validation:
          min: 0
      gte:
        type: optional<integer>
        validation:
          min: 0
      le:
        type: optional<integer>
        validation:
          min: 0
      lte:
        type: optional<integer>
        validation:
          min: 0
      any: optional<boolean>
      contains:
        type: optional<integer>
        validation:
          min: 0
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventsRequestAttempts:
    discriminated: false
    docs: Filter by number of attempts
    union:
      - type: integer
        validation:
          min: 0
      - GetEventsRequestAttemptsAny
    source:
      openapi: ../openapi.yml
  GetEventsRequestCreatedAtAny:
    properties:
      gt: optional<datetime>
      gte: optional<datetime>
      le: optional<datetime>
      lte: optional<datetime>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventsRequestCreatedAt:
    discriminated: false
    docs: Filter by `created_at` date using a date operator
    union:
      - datetime
      - GetEventsRequestCreatedAtAny
    source:
      openapi: ../openapi.yml
  GetEventsRequestHeadersOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventsRequestHeaders:
    discriminated: false
    docs: URL Encoded string of the JSON to match to the data headers
    union:
      - string
      - GetEventsRequestHeadersOne
    source:
      openapi: ../openapi.yml
  GetEventsRequestBodyOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventsRequestBody:
    discriminated: false
    docs: URL Encoded string of the JSON to match to the data body
    union:
      - string
      - GetEventsRequestBodyOne
    source:
      openapi: ../openapi.yml
  GetEventsRequestParsedQueryOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventsRequestParsedQuery:
    discriminated: false
    docs: >-
      URL Encoded string of the JSON to match to the parsed query (JSON
      representation of the query)
    union:
      - string
      - GetEventsRequestParsedQueryOne
    source:
      openapi: ../openapi.yml
  GetEventBulkRetriesRequestCancelledAtAny:
    properties:
      gt: optional<nullable<datetime>>
      gte: optional<nullable<datetime>>
      le: optional<nullable<datetime>>
      lte: optional<nullable<datetime>>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventBulkRetriesRequestCancelledAt:
    discriminated: false
    docs: Filter by date the bulk retry was cancelled
    union:
      - nullable<datetime>
      - GetEventBulkRetriesRequestCancelledAtAny
    source:
      openapi: ../openapi.yml
  GetEventBulkRetriesRequestCompletedAtAny:
    properties:
      gt: optional<nullable<datetime>>
      gte: optional<nullable<datetime>>
      le: optional<nullable<datetime>>
      lte: optional<nullable<datetime>>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventBulkRetriesRequestCompletedAt:
    discriminated: false
    docs: Filter by date the bulk retry completed
    union:
      - nullable<datetime>
      - GetEventBulkRetriesRequestCompletedAtAny
    source:
      openapi: ../openapi.yml
  GetEventBulkRetriesRequestCreatedAtAny:
    properties:
      gt: optional<nullable<datetime>>
      gte: optional<nullable<datetime>>
      le: optional<nullable<datetime>>
      lte: optional<nullable<datetime>>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventBulkRetriesRequestCreatedAt:
    discriminated: false
    docs: Filter by date the bulk retry was created
    union:
      - nullable<datetime>
      - GetEventBulkRetriesRequestCreatedAtAny
    source:
      openapi: ../openapi.yml
  GetEventBulkRetriesRequestQueryId:
    discriminated: false
    docs: Filter by event IDs
    union:
      - type: string
        docs: Event ID
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventBulkRetriesRequestQueryStatus:
    discriminated: false
    docs: Lifecyle status of the event
    union:
      - EventStatus
      - list<EventStatus>
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventBulkRetriesRequestQueryIssueId:
    discriminated: false
    union:
      - type: string
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventBulkRetriesRequestQueryWebhookId:
    discriminated: false
    docs: Filter by webhook connection IDs
    union:
      - type: string
        docs: Webhook ID
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventBulkRetriesRequestQueryDestinationId:
    discriminated: false
    docs: Filter by destination IDs
    union:
      - type: string
        docs: Destination ID
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventBulkRetriesRequestQuerySourceId:
    discriminated: false
    docs: Filter by source IDs
    union:
      - type: string
        docs: Source ID
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventBulkRetriesRequestQueryAttemptsAny:
    properties:
      gt:
        type: optional<integer>
        validation:
          min: 0
      gte:
        type: optional<integer>
        validation:
          min: 0
      le:
        type: optional<integer>
        validation:
          min: 0
      lte:
        type: optional<integer>
        validation:
          min: 0
      any: optional<boolean>
      contains:
        type: optional<integer>
        validation:
          min: 0
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventBulkRetriesRequestQueryAttempts:
    discriminated: false
    docs: Filter by number of attempts
    union:
      - type: integer
        validation:
          min: 0
      - GetEventBulkRetriesRequestQueryAttemptsAny
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventBulkRetriesRequestQueryResponseStatusAny:
    properties:
      gt:
        type: optional<integer>
        validation:
          min: 200
          max: 600
      gte:
        type: optional<integer>
        validation:
          min: 200
          max: 600
      le:
        type: optional<integer>
        validation:
          min: 200
          max: 600
      lte:
        type: optional<integer>
        validation:
          min: 200
          max: 600
      any: optional<boolean>
      contains:
        type: optional<integer>
        validation:
          min: 200
          max: 600
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventBulkRetriesRequestQueryResponseStatus:
    discriminated: false
    docs: Filter by HTTP response status code
    union:
      - type: integer
        validation:
          min: 200
          max: 600
      - GetEventBulkRetriesRequestQueryResponseStatusAny
      - list<integer>
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventBulkRetriesRequestQuerySuccessfulAtAny:
    properties:
      gt: optional<datetime>
      gte: optional<datetime>
      le: optional<datetime>
      lte: optional<datetime>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventBulkRetriesRequestQuerySuccessfulAt:
    discriminated: false
    docs: Filter by `successful_at` date using a date operator
    union:
      - datetime
      - GetEventBulkRetriesRequestQuerySuccessfulAtAny
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventBulkRetriesRequestQueryCreatedAtAny:
    properties:
      gt: optional<datetime>
      gte: optional<datetime>
      le: optional<datetime>
      lte: optional<datetime>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventBulkRetriesRequestQueryCreatedAt:
    discriminated: false
    docs: Filter by `created_at` date using a date operator
    union:
      - datetime
      - GetEventBulkRetriesRequestQueryCreatedAtAny
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventBulkRetriesRequestQueryErrorCode:
    discriminated: false
    union:
      - type: string
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventBulkRetriesRequestQueryCliIdAny:
    properties:
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventBulkRetriesRequestQueryCliId:
    discriminated: false
    docs: Filter by CLI IDs. `?[any]=true` operator for any CLI.
    union:
      - string
      - GetEventBulkRetriesRequestQueryCliIdAny
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventBulkRetriesRequestQueryCliUserId:
    discriminated: false
    union:
      - string
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventBulkRetriesRequestQueryLastAttemptAtAny:
    properties:
      gt: optional<datetime>
      gte: optional<datetime>
      le: optional<datetime>
      lte: optional<datetime>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventBulkRetriesRequestQueryLastAttemptAt:
    discriminated: false
    docs: Filter by `last_attempt_at` date using a date operator
    union:
      - datetime
      - GetEventBulkRetriesRequestQueryLastAttemptAtAny
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventBulkRetriesRequestQueryEventDataId:
    discriminated: false
    union:
      - type: string
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventBulkRetriesRequestQueryHeadersOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventBulkRetriesRequestQueryHeaders:
    discriminated: false
    docs: URL Encoded string of the JSON to match to the data headers
    union:
      - string
      - GetEventBulkRetriesRequestQueryHeadersOne
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventBulkRetriesRequestQueryBodyOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventBulkRetriesRequestQueryBody:
    discriminated: false
    docs: URL Encoded string of the JSON to match to the data body
    union:
      - string
      - GetEventBulkRetriesRequestQueryBodyOne
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventBulkRetriesRequestQueryParsedQueryOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventBulkRetriesRequestQueryParsedQuery:
    discriminated: false
    docs: >-
      URL Encoded string of the JSON to match to the parsed query (JSON
      representation of the query)
    union:
      - string
      - GetEventBulkRetriesRequestQueryParsedQueryOne
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventBulkRetriesRequestQueryBulkRetryId:
    discriminated: false
    union:
      - type: string
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventBulkRetriesRequestQueryOrderByItem:
    enum:
      - last_attempt_at
      - next_attempt_at
      - created_at
    inline: true
    source:
      openapi: ../openapi.yml
  GetEventBulkRetriesRequestQueryOrderBy:
    discriminated: false
    docs: Sort key(s)
    union:
      - literal<"last_attempt_at">
      - literal<"next_attempt_at">
      - literal<"created_at">
      - list<GetEventBulkRetriesRequestQueryOrderByItem>
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventBulkRetriesRequestQueryDirItem:
    enum:
      - asc
      - desc
    inline: true
    source:
      openapi: ../openapi.yml
  GetEventBulkRetriesRequestQueryDir:
    discriminated: false
    docs: Sort direction
    union:
      - literal<"asc">
      - literal<"desc">
      - list<GetEventBulkRetriesRequestQueryDirItem>
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventBulkRetriesRequestQuery:
    docs: >-
      Filter for events to be included in the bulk retry, use query parameters
      of [Event](#events)
    properties:
      id:
        type: optional<GetEventBulkRetriesRequestQueryId>
        docs: Filter by event IDs
      status:
        type: optional<GetEventBulkRetriesRequestQueryStatus>
        docs: Lifecyle status of the event
      issue_id: optional<GetEventBulkRetriesRequestQueryIssueId>
      webhook_id:
        type: optional<GetEventBulkRetriesRequestQueryWebhookId>
        docs: Filter by webhook connection IDs
      destination_id:
        type: optional<GetEventBulkRetriesRequestQueryDestinationId>
        docs: Filter by destination IDs
      source_id:
        type: optional<GetEventBulkRetriesRequestQuerySourceId>
        docs: Filter by source IDs
      attempts:
        type: optional<GetEventBulkRetriesRequestQueryAttempts>
        docs: Filter by number of attempts
      response_status:
        type: optional<nullable<GetEventBulkRetriesRequestQueryResponseStatus>>
        docs: Filter by HTTP response status code
      successful_at:
        type: optional<nullable<GetEventBulkRetriesRequestQuerySuccessfulAt>>
        docs: Filter by `successful_at` date using a date operator
      created_at:
        type: optional<GetEventBulkRetriesRequestQueryCreatedAt>
        docs: Filter by `created_at` date using a date operator
      error_code: optional<GetEventBulkRetriesRequestQueryErrorCode>
      cli_id:
        type: optional<nullable<GetEventBulkRetriesRequestQueryCliId>>
        docs: Filter by CLI IDs. `?[any]=true` operator for any CLI.
      cli_user_id: optional<nullable<GetEventBulkRetriesRequestQueryCliUserId>>
      last_attempt_at:
        type: optional<nullable<GetEventBulkRetriesRequestQueryLastAttemptAt>>
        docs: Filter by `last_attempt_at` date using a date operator
      event_data_id: optional<GetEventBulkRetriesRequestQueryEventDataId>
      headers:
        type: optional<GetEventBulkRetriesRequestQueryHeaders>
        docs: URL Encoded string of the JSON to match to the data headers
      body:
        type: optional<GetEventBulkRetriesRequestQueryBody>
        docs: URL Encoded string of the JSON to match to the data body
      parsed_query:
        type: optional<GetEventBulkRetriesRequestQueryParsedQuery>
        docs: >-
          URL Encoded string of the JSON to match to the parsed query (JSON
          representation of the query)
      bulk_retry_id: optional<GetEventBulkRetriesRequestQueryBulkRetryId>
      path:
        type: optional<string>
        docs: URL Encoded string of the string to match partially to the path
      include:
        type: optional<literal<"data">>
        docs: Include the data object in the event model
      order_by:
        type: optional<GetEventBulkRetriesRequestQueryOrderBy>
        docs: Sort key(s)
      dir:
        type: optional<GetEventBulkRetriesRequestQueryDir>
        docs: Sort direction
      limit:
        type: optional<integer>
        docs: Result set size
        validation:
          min: 0
          max: 255
      next:
        type: optional<string>
        docs: The ID to provide in the query to get the next set of results
        validation:
          maxLength: 255
      prev:
        type: optional<string>
        docs: The ID to provide in the query to get the previous set of results
        validation:
          maxLength: 255
    source:
      openapi: ../openapi.yml
  GenerateEventBulkRetryPlanRequestQueryId:
    discriminated: false
    docs: Filter by event IDs
    union:
      - type: string
        docs: Event ID
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateEventBulkRetryPlanRequestQueryStatus:
    discriminated: false
    docs: Lifecyle status of the event
    union:
      - EventStatus
      - list<EventStatus>
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateEventBulkRetryPlanRequestQueryIssueId:
    discriminated: false
    union:
      - type: string
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateEventBulkRetryPlanRequestQueryWebhookId:
    discriminated: false
    docs: Filter by webhook connection IDs
    union:
      - type: string
        docs: Webhook ID
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateEventBulkRetryPlanRequestQueryDestinationId:
    discriminated: false
    docs: Filter by destination IDs
    union:
      - type: string
        docs: Destination ID
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateEventBulkRetryPlanRequestQuerySourceId:
    discriminated: false
    docs: Filter by source IDs
    union:
      - type: string
        docs: Source ID
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateEventBulkRetryPlanRequestQueryAttemptsAny:
    properties:
      gt:
        type: optional<integer>
        validation:
          min: 0
      gte:
        type: optional<integer>
        validation:
          min: 0
      le:
        type: optional<integer>
        validation:
          min: 0
      lte:
        type: optional<integer>
        validation:
          min: 0
      any: optional<boolean>
      contains:
        type: optional<integer>
        validation:
          min: 0
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateEventBulkRetryPlanRequestQueryAttempts:
    discriminated: false
    docs: Filter by number of attempts
    union:
      - type: integer
        validation:
          min: 0
      - GenerateEventBulkRetryPlanRequestQueryAttemptsAny
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateEventBulkRetryPlanRequestQueryResponseStatusAny:
    properties:
      gt:
        type: optional<integer>
        validation:
          min: 200
          max: 600
      gte:
        type: optional<integer>
        validation:
          min: 200
          max: 600
      le:
        type: optional<integer>
        validation:
          min: 200
          max: 600
      lte:
        type: optional<integer>
        validation:
          min: 200
          max: 600
      any: optional<boolean>
      contains:
        type: optional<integer>
        validation:
          min: 200
          max: 600
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateEventBulkRetryPlanRequestQueryResponseStatus:
    discriminated: false
    docs: Filter by HTTP response status code
    union:
      - type: integer
        validation:
          min: 200
          max: 600
      - GenerateEventBulkRetryPlanRequestQueryResponseStatusAny
      - list<integer>
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateEventBulkRetryPlanRequestQuerySuccessfulAtAny:
    properties:
      gt: optional<datetime>
      gte: optional<datetime>
      le: optional<datetime>
      lte: optional<datetime>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateEventBulkRetryPlanRequestQuerySuccessfulAt:
    discriminated: false
    docs: Filter by `successful_at` date using a date operator
    union:
      - datetime
      - GenerateEventBulkRetryPlanRequestQuerySuccessfulAtAny
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateEventBulkRetryPlanRequestQueryCreatedAtAny:
    properties:
      gt: optional<datetime>
      gte: optional<datetime>
      le: optional<datetime>
      lte: optional<datetime>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateEventBulkRetryPlanRequestQueryCreatedAt:
    discriminated: false
    docs: Filter by `created_at` date using a date operator
    union:
      - datetime
      - GenerateEventBulkRetryPlanRequestQueryCreatedAtAny
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateEventBulkRetryPlanRequestQueryErrorCode:
    discriminated: false
    union:
      - type: string
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateEventBulkRetryPlanRequestQueryCliIdAny:
    properties:
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateEventBulkRetryPlanRequestQueryCliId:
    discriminated: false
    docs: Filter by CLI IDs. `?[any]=true` operator for any CLI.
    union:
      - string
      - GenerateEventBulkRetryPlanRequestQueryCliIdAny
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateEventBulkRetryPlanRequestQueryCliUserId:
    discriminated: false
    union:
      - string
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateEventBulkRetryPlanRequestQueryLastAttemptAtAny:
    properties:
      gt: optional<datetime>
      gte: optional<datetime>
      le: optional<datetime>
      lte: optional<datetime>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateEventBulkRetryPlanRequestQueryLastAttemptAt:
    discriminated: false
    docs: Filter by `last_attempt_at` date using a date operator
    union:
      - datetime
      - GenerateEventBulkRetryPlanRequestQueryLastAttemptAtAny
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateEventBulkRetryPlanRequestQueryEventDataId:
    discriminated: false
    union:
      - type: string
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateEventBulkRetryPlanRequestQueryHeadersOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateEventBulkRetryPlanRequestQueryHeaders:
    discriminated: false
    docs: URL Encoded string of the JSON to match to the data headers
    union:
      - string
      - GenerateEventBulkRetryPlanRequestQueryHeadersOne
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateEventBulkRetryPlanRequestQueryBodyOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateEventBulkRetryPlanRequestQueryBody:
    discriminated: false
    docs: URL Encoded string of the JSON to match to the data body
    union:
      - string
      - GenerateEventBulkRetryPlanRequestQueryBodyOne
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateEventBulkRetryPlanRequestQueryParsedQueryOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateEventBulkRetryPlanRequestQueryParsedQuery:
    discriminated: false
    docs: >-
      URL Encoded string of the JSON to match to the parsed query (JSON
      representation of the query)
    union:
      - string
      - GenerateEventBulkRetryPlanRequestQueryParsedQueryOne
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateEventBulkRetryPlanRequestQueryBulkRetryId:
    discriminated: false
    union:
      - type: string
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateEventBulkRetryPlanRequestQuery:
    docs: Filter properties for the events to be included in the bulk retry
    properties:
      id:
        type: optional<GenerateEventBulkRetryPlanRequestQueryId>
        docs: Filter by event IDs
      status:
        type: optional<GenerateEventBulkRetryPlanRequestQueryStatus>
        docs: Lifecyle status of the event
      issue_id: optional<GenerateEventBulkRetryPlanRequestQueryIssueId>
      webhook_id:
        type: optional<GenerateEventBulkRetryPlanRequestQueryWebhookId>
        docs: Filter by webhook connection IDs
      destination_id:
        type: optional<GenerateEventBulkRetryPlanRequestQueryDestinationId>
        docs: Filter by destination IDs
      source_id:
        type: optional<GenerateEventBulkRetryPlanRequestQuerySourceId>
        docs: Filter by source IDs
      attempts:
        type: optional<GenerateEventBulkRetryPlanRequestQueryAttempts>
        docs: Filter by number of attempts
      response_status:
        type: >-
          optional<nullable<GenerateEventBulkRetryPlanRequestQueryResponseStatus>>
        docs: Filter by HTTP response status code
      successful_at:
        type: optional<nullable<GenerateEventBulkRetryPlanRequestQuerySuccessfulAt>>
        docs: Filter by `successful_at` date using a date operator
      created_at:
        type: optional<GenerateEventBulkRetryPlanRequestQueryCreatedAt>
        docs: Filter by `created_at` date using a date operator
      error_code: optional<GenerateEventBulkRetryPlanRequestQueryErrorCode>
      cli_id:
        type: optional<nullable<GenerateEventBulkRetryPlanRequestQueryCliId>>
        docs: Filter by CLI IDs. `?[any]=true` operator for any CLI.
      cli_user_id: optional<nullable<GenerateEventBulkRetryPlanRequestQueryCliUserId>>
      last_attempt_at:
        type: >-
          optional<nullable<GenerateEventBulkRetryPlanRequestQueryLastAttemptAt>>
        docs: Filter by `last_attempt_at` date using a date operator
      event_data_id: optional<GenerateEventBulkRetryPlanRequestQueryEventDataId>
      headers:
        type: optional<GenerateEventBulkRetryPlanRequestQueryHeaders>
        docs: URL Encoded string of the JSON to match to the data headers
      body:
        type: optional<GenerateEventBulkRetryPlanRequestQueryBody>
        docs: URL Encoded string of the JSON to match to the data body
      parsed_query:
        type: optional<GenerateEventBulkRetryPlanRequestQueryParsedQuery>
        docs: >-
          URL Encoded string of the JSON to match to the parsed query (JSON
          representation of the query)
      bulk_retry_id: optional<GenerateEventBulkRetryPlanRequestQueryBulkRetryId>
      path:
        type: optional<string>
        docs: URL Encoded string of the string to match partially to the path
    source:
      openapi: ../openapi.yml
  GetIgnoredEventBulkRetriesRequestCancelledAtAny:
    properties:
      gt: optional<nullable<datetime>>
      gte: optional<nullable<datetime>>
      le: optional<nullable<datetime>>
      lte: optional<nullable<datetime>>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetIgnoredEventBulkRetriesRequestCancelledAt:
    discriminated: false
    docs: Filter by date the bulk retry was cancelled
    union:
      - nullable<datetime>
      - GetIgnoredEventBulkRetriesRequestCancelledAtAny
    source:
      openapi: ../openapi.yml
  GetIgnoredEventBulkRetriesRequestCompletedAtAny:
    properties:
      gt: optional<nullable<datetime>>
      gte: optional<nullable<datetime>>
      le: optional<nullable<datetime>>
      lte: optional<nullable<datetime>>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetIgnoredEventBulkRetriesRequestCompletedAt:
    discriminated: false
    docs: Filter by date the bulk retry completed
    union:
      - nullable<datetime>
      - GetIgnoredEventBulkRetriesRequestCompletedAtAny
    source:
      openapi: ../openapi.yml
  GetIgnoredEventBulkRetriesRequestCreatedAtAny:
    properties:
      gt: optional<nullable<datetime>>
      gte: optional<nullable<datetime>>
      le: optional<nullable<datetime>>
      lte: optional<nullable<datetime>>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetIgnoredEventBulkRetriesRequestCreatedAt:
    discriminated: false
    docs: Filter by date the bulk retry was created
    union:
      - nullable<datetime>
      - GetIgnoredEventBulkRetriesRequestCreatedAtAny
    source:
      openapi: ../openapi.yml
  GetIgnoredEventBulkRetriesRequestQueryCause:
    discriminated: false
    docs: The cause of the ignored event
    union:
      - type: string
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  GetIgnoredEventBulkRetriesRequestQueryWebhookId:
    discriminated: false
    docs: Connection ID of the ignored event
    union:
      - type: string
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  GetIgnoredEventBulkRetriesRequestQuery:
    docs: Filter by the bulk retry ignored event query object
    properties:
      cause:
        type: optional<GetIgnoredEventBulkRetriesRequestQueryCause>
        docs: The cause of the ignored event
      webhook_id:
        type: optional<GetIgnoredEventBulkRetriesRequestQueryWebhookId>
        docs: Connection ID of the ignored event
      transformation_id:
        type: optional<string>
        docs: >-
          The associated transformation ID (only applicable to the cause
          `TRANSFORMATION_FAILED`)
        validation:
          maxLength: 255
    source:
      openapi: ../openapi.yml
  GenerateIgnoredEventBulkRetryPlanRequestQueryCause:
    discriminated: false
    docs: The cause of the ignored event
    union:
      - type: string
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateIgnoredEventBulkRetryPlanRequestQueryWebhookId:
    discriminated: false
    docs: Connection ID of the ignored event
    union:
      - type: string
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateIgnoredEventBulkRetryPlanRequestQuery:
    docs: Filter by the bulk retry ignored event query object
    properties:
      cause:
        type: optional<GenerateIgnoredEventBulkRetryPlanRequestQueryCause>
        docs: The cause of the ignored event
      webhook_id:
        type: optional<GenerateIgnoredEventBulkRetryPlanRequestQueryWebhookId>
        docs: Connection ID of the ignored event
      transformation_id:
        type: optional<string>
        docs: >-
          The associated transformation ID (only applicable to the cause
          `TRANSFORMATION_FAILED`)
        validation:
          maxLength: 255
    source:
      openapi: ../openapi.yml
  GetIssuesRequestAggregationKeysWebhookId:
    discriminated: false
    union:
      - string
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  GetIssuesRequestAggregationKeysResponseStatus:
    discriminated: false
    union:
      - float
      - list<float>
    source:
      openapi: ../openapi.yml
    inline: true
  GetIssuesRequestAggregationKeysErrorCode:
    discriminated: false
    union:
      - AttemptErrorCodes
      - list<AttemptErrorCodes>
    source:
      openapi: ../openapi.yml
    inline: true
  GetIssuesRequestAggregationKeys:
    docs: Filter by aggregation keys
    properties:
      webhook_id: optional<GetIssuesRequestAggregationKeysWebhookId>
      response_status: optional<GetIssuesRequestAggregationKeysResponseStatus>
      error_code: optional<GetIssuesRequestAggregationKeysErrorCode>
    source:
      openapi: ../openapi.yml
  GetIssuesRequestCreatedAtAny:
    properties:
      gt: optional<nullable<datetime>>
      gte: optional<nullable<datetime>>
      le: optional<nullable<datetime>>
      lte: optional<nullable<datetime>>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetIssuesRequestCreatedAt:
    discriminated: false
    docs: Filter by created dates
    union:
      - nullable<datetime>
      - GetIssuesRequestCreatedAtAny
    source:
      openapi: ../openapi.yml
  GetIssuesRequestFirstSeenAtAny:
    properties:
      gt: optional<nullable<datetime>>
      gte: optional<nullable<datetime>>
      le: optional<nullable<datetime>>
      lte: optional<nullable<datetime>>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetIssuesRequestFirstSeenAt:
    discriminated: false
    docs: Filter by first seen dates
    union:
      - nullable<datetime>
      - GetIssuesRequestFirstSeenAtAny
    source:
      openapi: ../openapi.yml
  GetIssuesRequestLastSeenAtAny:
    properties:
      gt: optional<nullable<datetime>>
      gte: optional<nullable<datetime>>
      le: optional<nullable<datetime>>
      lte: optional<nullable<datetime>>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetIssuesRequestLastSeenAt:
    discriminated: false
    docs: Filter by last seen dates
    union:
      - nullable<datetime>
      - GetIssuesRequestLastSeenAtAny
    source:
      openapi: ../openapi.yml
  GetIssuesRequestDismissedAtAny:
    properties:
      gt: optional<nullable<datetime>>
      gte: optional<nullable<datetime>>
      le: optional<nullable<datetime>>
      lte: optional<nullable<datetime>>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetIssuesRequestDismissedAt:
    discriminated: false
    docs: Filter by dismissed dates
    union:
      - nullable<datetime>
      - GetIssuesRequestDismissedAtAny
    source:
      openapi: ../openapi.yml
  GetIssueCountRequestAggregationKeysWebhookId:
    discriminated: false
    union:
      - string
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  GetIssueCountRequestAggregationKeysResponseStatus:
    discriminated: false
    union:
      - float
      - list<float>
    source:
      openapi: ../openapi.yml
    inline: true
  GetIssueCountRequestAggregationKeysErrorCode:
    discriminated: false
    union:
      - AttemptErrorCodes
      - list<AttemptErrorCodes>
    source:
      openapi: ../openapi.yml
    inline: true
  GetIssueCountRequestAggregationKeys:
    docs: Filter by aggregation keys
    properties:
      webhook_id: optional<GetIssueCountRequestAggregationKeysWebhookId>
      response_status: optional<GetIssueCountRequestAggregationKeysResponseStatus>
      error_code: optional<GetIssueCountRequestAggregationKeysErrorCode>
    source:
      openapi: ../openapi.yml
  GetIssueCountRequestCreatedAtAny:
    properties:
      gt: optional<nullable<datetime>>
      gte: optional<nullable<datetime>>
      le: optional<nullable<datetime>>
      lte: optional<nullable<datetime>>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetIssueCountRequestCreatedAt:
    discriminated: false
    docs: Filter by created dates
    union:
      - nullable<datetime>
      - GetIssueCountRequestCreatedAtAny
    source:
      openapi: ../openapi.yml
  GetIssueCountRequestFirstSeenAtAny:
    properties:
      gt: optional<nullable<datetime>>
      gte: optional<nullable<datetime>>
      le: optional<nullable<datetime>>
      lte: optional<nullable<datetime>>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetIssueCountRequestFirstSeenAt:
    discriminated: false
    docs: Filter by first seen dates
    union:
      - nullable<datetime>
      - GetIssueCountRequestFirstSeenAtAny
    source:
      openapi: ../openapi.yml
  GetIssueCountRequestLastSeenAtAny:
    properties:
      gt: optional<nullable<datetime>>
      gte: optional<nullable<datetime>>
      le: optional<nullable<datetime>>
      lte: optional<nullable<datetime>>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetIssueCountRequestLastSeenAt:
    discriminated: false
    docs: Filter by last seen dates
    union:
      - nullable<datetime>
      - GetIssueCountRequestLastSeenAtAny
    source:
      openapi: ../openapi.yml
  GetIssueCountRequestDismissedAtAny:
    properties:
      gt: optional<nullable<datetime>>
      gte: optional<nullable<datetime>>
      le: optional<nullable<datetime>>
      lte: optional<nullable<datetime>>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetIssueCountRequestDismissedAt:
    discriminated: false
    docs: Filter by dismissed dates
    union:
      - nullable<datetime>
      - GetIssueCountRequestDismissedAtAny
    source:
      openapi: ../openapi.yml
  GetRequestsRequestIgnoredCountAny:
    properties:
      gt:
        type: optional<integer>
        validation:
          min: 0
      gte:
        type: optional<integer>
        validation:
          min: 0
      le:
        type: optional<integer>
        validation:
          min: 0
      lte:
        type: optional<integer>
        validation:
          min: 0
      any: optional<boolean>
      contains:
        type: optional<integer>
        validation:
          min: 0
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestsRequestIgnoredCount:
    discriminated: false
    union:
      - type: integer
        validation:
          min: 0
      - GetRequestsRequestIgnoredCountAny
      - list<integer>
    source:
      openapi: ../openapi.yml
  GetRequestsRequestEventsCountAny:
    properties:
      gt:
        type: optional<integer>
        validation:
          min: 0
      gte:
        type: optional<integer>
        validation:
          min: 0
      le:
        type: optional<integer>
        validation:
          min: 0
      lte:
        type: optional<integer>
        validation:
          min: 0
      any: optional<boolean>
      contains:
        type: optional<integer>
        validation:
          min: 0
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestsRequestEventsCount:
    discriminated: false
    union:
      - type: integer
        validation:
          min: 0
      - GetRequestsRequestEventsCountAny
      - list<integer>
    source:
      openapi: ../openapi.yml
  GetRequestsRequestHeadersOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestsRequestHeaders:
    discriminated: false
    docs: URL Encoded string of the JSON to match to the data headers
    union:
      - string
      - GetRequestsRequestHeadersOne
    source:
      openapi: ../openapi.yml
  GetRequestsRequestBodyOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestsRequestBody:
    discriminated: false
    docs: URL Encoded string of the JSON to match to the data body
    union:
      - string
      - GetRequestsRequestBodyOne
    source:
      openapi: ../openapi.yml
  GetRequestsRequestParsedQueryOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestsRequestParsedQuery:
    discriminated: false
    docs: >-
      URL Encoded string of the JSON to match to the parsed query (JSON
      representation of the query)
    union:
      - string
      - GetRequestsRequestParsedQueryOne
    source:
      openapi: ../openapi.yml
  GetRequestsRequestCreatedAtAny:
    properties:
      gt: optional<datetime>
      gte: optional<datetime>
      le: optional<datetime>
      lte: optional<datetime>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestsRequestCreatedAt:
    discriminated: false
    union:
      - datetime
      - GetRequestsRequestCreatedAtAny
    source:
      openapi: ../openapi.yml
  GetRequestsRequestIngestedAtAny:
    properties:
      gt: optional<datetime>
      gte: optional<datetime>
      le: optional<datetime>
      lte: optional<datetime>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestsRequestIngestedAt:
    discriminated: false
    union:
      - datetime
      - GetRequestsRequestIngestedAtAny
    source:
      openapi: ../openapi.yml
  GetRequestEventsRequestStatus:
    discriminated: false
    docs: Lifecyle status of the event
    union:
      - EventStatus
      - list<EventStatus>
    source:
      openapi: ../openapi.yml
  GetRequestEventsRequestAttemptsAny:
    properties:
      gt:
        type: optional<integer>
        validation:
          min: 0
      gte:
        type: optional<integer>
        validation:
          min: 0
      le:
        type: optional<integer>
        validation:
          min: 0
      lte:
        type: optional<integer>
        validation:
          min: 0
      any: optional<boolean>
      contains:
        type: optional<integer>
        validation:
          min: 0
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestEventsRequestAttempts:
    discriminated: false
    docs: Filter by number of attempts
    union:
      - type: integer
        validation:
          min: 0
      - GetRequestEventsRequestAttemptsAny
    source:
      openapi: ../openapi.yml
  GetRequestEventsRequestCreatedAtAny:
    properties:
      gt: optional<datetime>
      gte: optional<datetime>
      le: optional<datetime>
      lte: optional<datetime>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestEventsRequestCreatedAt:
    discriminated: false
    docs: Filter by `created_at` date using a date operator
    union:
      - datetime
      - GetRequestEventsRequestCreatedAtAny
    source:
      openapi: ../openapi.yml
  GetRequestEventsRequestHeadersOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestEventsRequestHeaders:
    discriminated: false
    docs: URL Encoded string of the JSON to match to the data headers
    union:
      - string
      - GetRequestEventsRequestHeadersOne
    source:
      openapi: ../openapi.yml
  GetRequestEventsRequestBodyOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestEventsRequestBody:
    discriminated: false
    docs: URL Encoded string of the JSON to match to the data body
    union:
      - string
      - GetRequestEventsRequestBodyOne
    source:
      openapi: ../openapi.yml
  GetRequestEventsRequestParsedQueryOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestEventsRequestParsedQuery:
    discriminated: false
    docs: >-
      URL Encoded string of the JSON to match to the parsed query (JSON
      representation of the query)
    union:
      - string
      - GetRequestEventsRequestParsedQueryOne
    source:
      openapi: ../openapi.yml
  GetRequestBulkRetriesRequestCancelledAtAny:
    properties:
      gt: optional<nullable<datetime>>
      gte: optional<nullable<datetime>>
      le: optional<nullable<datetime>>
      lte: optional<nullable<datetime>>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestBulkRetriesRequestCancelledAt:
    discriminated: false
    docs: Filter by date the bulk retry was cancelled
    union:
      - nullable<datetime>
      - GetRequestBulkRetriesRequestCancelledAtAny
    source:
      openapi: ../openapi.yml
  GetRequestBulkRetriesRequestCompletedAtAny:
    properties:
      gt: optional<nullable<datetime>>
      gte: optional<nullable<datetime>>
      le: optional<nullable<datetime>>
      lte: optional<nullable<datetime>>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestBulkRetriesRequestCompletedAt:
    discriminated: false
    docs: Filter by date the bulk retry completed
    union:
      - nullable<datetime>
      - GetRequestBulkRetriesRequestCompletedAtAny
    source:
      openapi: ../openapi.yml
  GetRequestBulkRetriesRequestCreatedAtAny:
    properties:
      gt: optional<nullable<datetime>>
      gte: optional<nullable<datetime>>
      le: optional<nullable<datetime>>
      lte: optional<nullable<datetime>>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestBulkRetriesRequestCreatedAt:
    discriminated: false
    docs: Filter by date the bulk retry was created
    union:
      - nullable<datetime>
      - GetRequestBulkRetriesRequestCreatedAtAny
    source:
      openapi: ../openapi.yml
  GetRequestBulkRetriesRequestQueryId:
    discriminated: false
    docs: Filter by requests IDs
    union:
      - type: string
        docs: Request ID
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestBulkRetriesRequestQueryStatus:
    enum:
      - accepted
      - rejected
    inline: true
    source:
      openapi: ../openapi.yml
  GetRequestBulkRetriesRequestQueryRejectionCauseAny:
    properties:
      gt: optional<RequestRejectionCause>
      gte: optional<RequestRejectionCause>
      le: optional<RequestRejectionCause>
      lte: optional<RequestRejectionCause>
      any: optional<boolean>
      contains: optional<RequestRejectionCause>
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestBulkRetriesRequestQueryRejectionCause:
    discriminated: false
    docs: Filter by rejection cause
    union:
      - RequestRejectionCause
      - GetRequestBulkRetriesRequestQueryRejectionCauseAny
      - list<RequestRejectionCause>
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestBulkRetriesRequestQueryIgnoredCountAny:
    properties:
      gt:
        type: optional<integer>
        validation:
          min: 0
      gte:
        type: optional<integer>
        validation:
          min: 0
      le:
        type: optional<integer>
        validation:
          min: 0
      lte:
        type: optional<integer>
        validation:
          min: 0
      any: optional<boolean>
      contains:
        type: optional<integer>
        validation:
          min: 0
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestBulkRetriesRequestQueryIgnoredCount:
    discriminated: false
    union:
      - type: integer
        validation:
          min: 0
      - GetRequestBulkRetriesRequestQueryIgnoredCountAny
      - list<integer>
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestBulkRetriesRequestQueryEventsCountAny:
    properties:
      gt:
        type: optional<integer>
        validation:
          min: 0
      gte:
        type: optional<integer>
        validation:
          min: 0
      le:
        type: optional<integer>
        validation:
          min: 0
      lte:
        type: optional<integer>
        validation:
          min: 0
      any: optional<boolean>
      contains:
        type: optional<integer>
        validation:
          min: 0
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestBulkRetriesRequestQueryEventsCount:
    discriminated: false
    union:
      - type: integer
        validation:
          min: 0
      - GetRequestBulkRetriesRequestQueryEventsCountAny
      - list<integer>
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestBulkRetriesRequestQuerySourceId:
    discriminated: false
    docs: Filter by source IDs
    union:
      - type: string
        docs: Source ID
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestBulkRetriesRequestQueryHeadersOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestBulkRetriesRequestQueryHeaders:
    discriminated: false
    docs: URL Encoded string of the JSON to match to the data headers
    union:
      - string
      - GetRequestBulkRetriesRequestQueryHeadersOne
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestBulkRetriesRequestQueryBodyOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestBulkRetriesRequestQueryBody:
    discriminated: false
    docs: URL Encoded string of the JSON to match to the data body
    union:
      - string
      - GetRequestBulkRetriesRequestQueryBodyOne
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestBulkRetriesRequestQueryParsedQueryOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestBulkRetriesRequestQueryParsedQuery:
    discriminated: false
    docs: >-
      URL Encoded string of the JSON to match to the parsed query (JSON
      representation of the query)
    union:
      - string
      - GetRequestBulkRetriesRequestQueryParsedQueryOne
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestBulkRetriesRequestQueryCreatedAtAny:
    properties:
      gt: optional<datetime>
      gte: optional<datetime>
      le: optional<datetime>
      lte: optional<datetime>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestBulkRetriesRequestQueryCreatedAt:
    discriminated: false
    union:
      - datetime
      - GetRequestBulkRetriesRequestQueryCreatedAtAny
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestBulkRetriesRequestQueryIngestedAtAny:
    properties:
      gt: optional<datetime>
      gte: optional<datetime>
      le: optional<datetime>
      lte: optional<datetime>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestBulkRetriesRequestQueryIngestedAt:
    discriminated: false
    union:
      - datetime
      - GetRequestBulkRetriesRequestQueryIngestedAtAny
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestBulkRetriesRequestQueryBulkRetryId:
    discriminated: false
    union:
      - type: string
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestBulkRetriesRequestQueryOrderByItem:
    enum:
      - ingested_at
      - created_at
    inline: true
    source:
      openapi: ../openapi.yml
  GetRequestBulkRetriesRequestQueryOrderBy:
    discriminated: false
    docs: Sort key(s)
    union:
      - literal<"ingested_at">
      - literal<"created_at">
      - list<GetRequestBulkRetriesRequestQueryOrderByItem>
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestBulkRetriesRequestQueryDirItem:
    enum:
      - asc
      - desc
    inline: true
    source:
      openapi: ../openapi.yml
  GetRequestBulkRetriesRequestQueryDir:
    discriminated: false
    docs: Sort direction
    union:
      - literal<"asc">
      - literal<"desc">
      - list<GetRequestBulkRetriesRequestQueryDirItem>
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestBulkRetriesRequestQuery:
    docs: >-
      Filter properties for the events to be included in the bulk retry, use
      query parameters of [Requests](#requests)
    properties:
      id:
        type: optional<GetRequestBulkRetriesRequestQueryId>
        docs: Filter by requests IDs
      status: optional<GetRequestBulkRetriesRequestQueryStatus>
      rejection_cause:
        type: optional<nullable<GetRequestBulkRetriesRequestQueryRejectionCause>>
        docs: Filter by rejection cause
      ignored_count: optional<GetRequestBulkRetriesRequestQueryIgnoredCount>
      events_count: optional<GetRequestBulkRetriesRequestQueryEventsCount>
      source_id:
        type: optional<GetRequestBulkRetriesRequestQuerySourceId>
        docs: Filter by source IDs
      verified:
        type: optional<boolean>
        docs: Filter by verification status
      headers:
        type: optional<GetRequestBulkRetriesRequestQueryHeaders>
        docs: URL Encoded string of the JSON to match to the data headers
      body:
        type: optional<GetRequestBulkRetriesRequestQueryBody>
        docs: URL Encoded string of the JSON to match to the data body
      parsed_query:
        type: optional<GetRequestBulkRetriesRequestQueryParsedQuery>
        docs: >-
          URL Encoded string of the JSON to match to the parsed query (JSON
          representation of the query)
      path:
        type: optional<string>
        docs: URL Encoded string of the string to match partially to the path
      created_at: optional<GetRequestBulkRetriesRequestQueryCreatedAt>
      ingested_at: optional<GetRequestBulkRetriesRequestQueryIngestedAt>
      bulk_retry_id: optional<GetRequestBulkRetriesRequestQueryBulkRetryId>
      include: optional<literal<"data">>
      order_by:
        type: optional<GetRequestBulkRetriesRequestQueryOrderBy>
        docs: Sort key(s)
      dir:
        type: optional<GetRequestBulkRetriesRequestQueryDir>
        docs: Sort direction
      limit:
        type: optional<integer>
        docs: Result set size
        validation:
          min: 0
          max: 255
      next:
        type: optional<string>
        docs: The ID to provide in the query to get the next set of results
        validation:
          maxLength: 255
      prev:
        type: optional<string>
        docs: The ID to provide in the query to get the previous set of results
        validation:
          maxLength: 255
    source:
      openapi: ../openapi.yml
  GenerateRequestBulkRetryPlanRequestQueryId:
    discriminated: false
    docs: Filter by requests IDs
    union:
      - type: string
        docs: Request ID
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateRequestBulkRetryPlanRequestQueryStatus:
    enum:
      - accepted
      - rejected
    inline: true
    source:
      openapi: ../openapi.yml
  GenerateRequestBulkRetryPlanRequestQueryRejectionCauseAny:
    properties:
      gt: optional<RequestRejectionCause>
      gte: optional<RequestRejectionCause>
      le: optional<RequestRejectionCause>
      lte: optional<RequestRejectionCause>
      any: optional<boolean>
      contains: optional<RequestRejectionCause>
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateRequestBulkRetryPlanRequestQueryRejectionCause:
    discriminated: false
    docs: Filter by rejection cause
    union:
      - RequestRejectionCause
      - GenerateRequestBulkRetryPlanRequestQueryRejectionCauseAny
      - list<RequestRejectionCause>
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateRequestBulkRetryPlanRequestQueryIgnoredCountAny:
    properties:
      gt:
        type: optional<integer>
        validation:
          min: 0
      gte:
        type: optional<integer>
        validation:
          min: 0
      le:
        type: optional<integer>
        validation:
          min: 0
      lte:
        type: optional<integer>
        validation:
          min: 0
      any: optional<boolean>
      contains:
        type: optional<integer>
        validation:
          min: 0
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateRequestBulkRetryPlanRequestQueryIgnoredCount:
    discriminated: false
    union:
      - type: integer
        validation:
          min: 0
      - GenerateRequestBulkRetryPlanRequestQueryIgnoredCountAny
      - list<integer>
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateRequestBulkRetryPlanRequestQueryEventsCountAny:
    properties:
      gt:
        type: optional<integer>
        validation:
          min: 0
      gte:
        type: optional<integer>
        validation:
          min: 0
      le:
        type: optional<integer>
        validation:
          min: 0
      lte:
        type: optional<integer>
        validation:
          min: 0
      any: optional<boolean>
      contains:
        type: optional<integer>
        validation:
          min: 0
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateRequestBulkRetryPlanRequestQueryEventsCount:
    discriminated: false
    union:
      - type: integer
        validation:
          min: 0
      - GenerateRequestBulkRetryPlanRequestQueryEventsCountAny
      - list<integer>
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateRequestBulkRetryPlanRequestQuerySourceId:
    discriminated: false
    docs: Filter by source IDs
    union:
      - type: string
        docs: Source ID
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateRequestBulkRetryPlanRequestQueryHeadersOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateRequestBulkRetryPlanRequestQueryHeaders:
    discriminated: false
    docs: URL Encoded string of the JSON to match to the data headers
    union:
      - string
      - GenerateRequestBulkRetryPlanRequestQueryHeadersOne
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateRequestBulkRetryPlanRequestQueryBodyOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateRequestBulkRetryPlanRequestQueryBody:
    discriminated: false
    docs: URL Encoded string of the JSON to match to the data body
    union:
      - string
      - GenerateRequestBulkRetryPlanRequestQueryBodyOne
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateRequestBulkRetryPlanRequestQueryParsedQueryOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateRequestBulkRetryPlanRequestQueryParsedQuery:
    discriminated: false
    docs: >-
      URL Encoded string of the JSON to match to the parsed query (JSON
      representation of the query)
    union:
      - string
      - GenerateRequestBulkRetryPlanRequestQueryParsedQueryOne
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateRequestBulkRetryPlanRequestQueryCreatedAtAny:
    properties:
      gt: optional<datetime>
      gte: optional<datetime>
      le: optional<datetime>
      lte: optional<datetime>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateRequestBulkRetryPlanRequestQueryCreatedAt:
    discriminated: false
    union:
      - datetime
      - GenerateRequestBulkRetryPlanRequestQueryCreatedAtAny
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateRequestBulkRetryPlanRequestQueryIngestedAtAny:
    properties:
      gt: optional<datetime>
      gte: optional<datetime>
      le: optional<datetime>
      lte: optional<datetime>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateRequestBulkRetryPlanRequestQueryIngestedAt:
    discriminated: false
    union:
      - datetime
      - GenerateRequestBulkRetryPlanRequestQueryIngestedAtAny
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateRequestBulkRetryPlanRequestQueryBulkRetryId:
    discriminated: false
    union:
      - type: string
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  GenerateRequestBulkRetryPlanRequestQuery:
    docs: >-
      Filter properties for the events to be included in the bulk retry, use
      query parameters of [Requests](#requests)
    properties:
      id:
        type: optional<GenerateRequestBulkRetryPlanRequestQueryId>
        docs: Filter by requests IDs
      status: optional<GenerateRequestBulkRetryPlanRequestQueryStatus>
      rejection_cause:
        type: >-
          optional<nullable<GenerateRequestBulkRetryPlanRequestQueryRejectionCause>>
        docs: Filter by rejection cause
      ignored_count: optional<GenerateRequestBulkRetryPlanRequestQueryIgnoredCount>
      events_count: optional<GenerateRequestBulkRetryPlanRequestQueryEventsCount>
      source_id:
        type: optional<GenerateRequestBulkRetryPlanRequestQuerySourceId>
        docs: Filter by source IDs
      verified:
        type: optional<boolean>
        docs: Filter by verification status
      headers:
        type: optional<GenerateRequestBulkRetryPlanRequestQueryHeaders>
        docs: URL Encoded string of the JSON to match to the data headers
      body:
        type: optional<GenerateRequestBulkRetryPlanRequestQueryBody>
        docs: URL Encoded string of the JSON to match to the data body
      parsed_query:
        type: optional<GenerateRequestBulkRetryPlanRequestQueryParsedQuery>
        docs: >-
          URL Encoded string of the JSON to match to the parsed query (JSON
          representation of the query)
      path:
        type: optional<string>
        docs: URL Encoded string of the string to match partially to the path
      created_at: optional<GenerateRequestBulkRetryPlanRequestQueryCreatedAt>
      ingested_at: optional<GenerateRequestBulkRetryPlanRequestQueryIngestedAt>
      bulk_retry_id: optional<GenerateRequestBulkRetryPlanRequestQueryBulkRetryId>
    source:
      openapi: ../openapi.yml
  GetRulesetsRequestNameZero:
    discriminated: false
    union:
      - type: nullable<string>
        validation:
          pattern: ^[A-z0-9-_]+$
          maxLength: 155
      - list<nullable<string>>
    source:
      openapi: ../openapi.yml
    inline: true
  GetRulesetsRequestNameAnyGt:
    discriminated: false
    union:
      - type: nullable<string>
        validation:
          pattern: ^[A-z0-9-_]+$
          maxLength: 155
      - list<nullable<string>>
    source:
      openapi: ../openapi.yml
    inline: true
  GetRulesetsRequestNameAnyGte:
    discriminated: false
    union:
      - type: nullable<string>
        validation:
          pattern: ^[A-z0-9-_]+$
          maxLength: 155
      - list<nullable<string>>
    source:
      openapi: ../openapi.yml
    inline: true
  GetRulesetsRequestNameAnyLe:
    discriminated: false
    union:
      - type: nullable<string>
        validation:
          pattern: ^[A-z0-9-_]+$
          maxLength: 155
      - list<nullable<string>>
    source:
      openapi: ../openapi.yml
    inline: true
  GetRulesetsRequestNameAnyLte:
    discriminated: false
    union:
      - type: nullable<string>
        validation:
          pattern: ^[A-z0-9-_]+$
          maxLength: 155
      - list<nullable<string>>
    source:
      openapi: ../openapi.yml
    inline: true
  GetRulesetsRequestNameAnyContains:
    discriminated: false
    union:
      - type: nullable<string>
        validation:
          pattern: ^[A-z0-9-_]+$
          maxLength: 155
      - list<nullable<string>>
    source:
      openapi: ../openapi.yml
    inline: true
  GetRulesetsRequestNameAny:
    properties:
      gt: optional<GetRulesetsRequestNameAnyGt>
      gte: optional<GetRulesetsRequestNameAnyGte>
      le: optional<GetRulesetsRequestNameAnyLe>
      lte: optional<GetRulesetsRequestNameAnyLte>
      any: optional<boolean>
      contains: optional<GetRulesetsRequestNameAnyContains>
    source:
      openapi: ../openapi.yml
    inline: true
  GetRulesetsRequestName:
    discriminated: false
    docs: The ruleset name
    union:
      - GetRulesetsRequestNameZero
      - GetRulesetsRequestNameAny
    source:
      openapi: ../openapi.yml
  GetRulesetsRequestArchivedAtAny:
    properties:
      gt: optional<nullable<datetime>>
      gte: optional<nullable<datetime>>
      le: optional<nullable<datetime>>
      lte: optional<nullable<datetime>>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetRulesetsRequestArchivedAt:
    discriminated: false
    docs: Date the ruleset was archived
    union:
      - nullable<datetime>
      - GetRulesetsRequestArchivedAtAny
    source:
      openapi: ../openapi.yml
  GetSourcesRequestNameAny:
    properties:
      gt:
        type: optional<string>
        validation:
          pattern: ^[A-z0-9-_]+$
          maxLength: 155
      gte:
        type: optional<string>
        validation:
          pattern: ^[A-z0-9-_]+$
          maxLength: 155
      le:
        type: optional<string>
        validation:
          pattern: ^[A-z0-9-_]+$
          maxLength: 155
      lte:
        type: optional<string>
        validation:
          pattern: ^[A-z0-9-_]+$
          maxLength: 155
      any: optional<boolean>
      contains:
        type: optional<string>
        validation:
          pattern: ^[A-z0-9-_]+$
          maxLength: 155
    source:
      openapi: ../openapi.yml
    inline: true
  GetSourcesRequestName:
    discriminated: false
    docs: The source name
    union:
      - type: string
        validation:
          pattern: ^[A-z0-9-_]+$
          maxLength: 155
      - GetSourcesRequestNameAny
    source:
      openapi: ../openapi.yml
  GetSourcesRequestArchivedAtAny:
    properties:
      gt: optional<nullable<datetime>>
      gte: optional<nullable<datetime>>
      le: optional<nullable<datetime>>
      lte: optional<nullable<datetime>>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetSourcesRequestArchivedAt:
    discriminated: false
    docs: Date the source was archived
    union:
      - nullable<datetime>
      - GetSourcesRequestArchivedAtAny
    source:
      openapi: ../openapi.yml
  GetSourcesRequestIntegrationIdAny:
    properties:
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetSourcesRequestIntegrationId:
    discriminated: false
    docs: Filter by integration IDs
    union:
      - nullable<string>
      - GetSourcesRequestIntegrationIdAny
    source:
      openapi: ../openapi.yml
  GetTransformationsRequestName:
    discriminated: false
    docs: Filter by transformation name
    union:
      - type: nullable<string>
        validation:
          pattern: ^[A-z0-9-_]+$
          maxLength: 155
      - list<nullable<string>>
    source:
      openapi: ../openapi.yml
  GetTransformationExecutionsRequestCreatedAtAny:
    properties:
      gt: optional<datetime>
      gte: optional<datetime>
      le: optional<datetime>
      lte: optional<datetime>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetTransformationExecutionsRequestCreatedAt:
    discriminated: false
    docs: ISO date of the transformation's execution
    union:
      - datetime
      - GetTransformationExecutionsRequestCreatedAtAny
    source:
      openapi: ../openapi.yml
  GetConnectionsRequestNameAny:
    properties:
      gt:
        type: optional<string>
        validation:
          pattern: ^[A-z0-9-_]+$
          maxLength: 155
      gte:
        type: optional<string>
        validation:
          pattern: ^[A-z0-9-_]+$
          maxLength: 155
      le:
        type: optional<string>
        validation:
          pattern: ^[A-z0-9-_]+$
          maxLength: 155
      lte:
        type: optional<string>
        validation:
          pattern: ^[A-z0-9-_]+$
          maxLength: 155
      any: optional<boolean>
      contains:
        type: optional<string>
        validation:
          pattern: ^[A-z0-9-_]+$
          maxLength: 155
    source:
      openapi: ../openapi.yml
    inline: true
  GetConnectionsRequestName:
    discriminated: false
    docs: Filter by connection name
    union:
      - type: string
        validation:
          pattern: ^[A-z0-9-_]+$
          maxLength: 155
      - GetConnectionsRequestNameAny
    source:
      openapi: ../openapi.yml
  GetConnectionsRequestArchivedAtAny:
    properties:
      gt: optional<nullable<datetime>>
      gte: optional<nullable<datetime>>
      le: optional<nullable<datetime>>
      lte: optional<nullable<datetime>>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetConnectionsRequestArchivedAt:
    discriminated: false
    docs: Date the connection was archived
    union:
      - nullable<datetime>
      - GetConnectionsRequestArchivedAtAny
    source:
      openapi: ../openapi.yml
  GetConnectionsRequestPausedAtAny:
    properties:
      gt: optional<nullable<datetime>>
      gte: optional<nullable<datetime>>
      le: optional<nullable<datetime>>
      lte: optional<nullable<datetime>>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetConnectionsRequestPausedAt:
    discriminated: false
    docs: Date the connection was paused
    union:
      - nullable<datetime>
      - GetConnectionsRequestPausedAtAny
    source:
      openapi: ../openapi.yml
  OrderByDirection:
    enum:
      - asc
      - desc
    source:
      openapi: ../openapi.yml
  SeekPaginationOrderBy:
    discriminated: false
    union:
      - string
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  SeekPaginationDir:
    discriminated: false
    union:
      - OrderByDirection
      - list<OrderByDirection>
    source:
      openapi: ../openapi.yml
    inline: true
  SeekPagination:
    properties:
      order_by: optional<SeekPaginationOrderBy>
      dir: optional<SeekPaginationDir>
      limit: optional<integer>
      prev: optional<string>
      next: optional<string>
    source:
      openapi: ../openapi.yml
  IssueType:
    enum:
      - delivery
      - transformation
      - backpressure
    docs: Issue type
    source:
      openapi: ../openapi.yml
  IssueTriggerStrategy:
    enum:
      - first_attempt
      - final_attempt
    docs: The strategy uses to open the issue
    source:
      openapi: ../openapi.yml
  IssueTriggerDeliveryConfigsConnections:
    discriminated: false
    docs: >-
      A pattern to match on the connection name or array of connection IDs. Use
      `*` as wildcard.
    union:
      - string
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  IssueTriggerDeliveryConfigs:
    docs: Configurations for a 'delivery' issue trigger
    properties:
      strategy: IssueTriggerStrategy
      connections:
        type: IssueTriggerDeliveryConfigsConnections
        docs: >-
          A pattern to match on the connection name or array of connection IDs.
          Use `*` as wildcard.
    source:
      openapi: ../openapi.yml
  TransformationExecutionLogLevel:
    enum:
      - debug
      - info
      - warn
      - error
      - fatal
    docs: The minimum log level to open the issue on
    source:
      openapi: ../openapi.yml
  IssueTriggerTransformationConfigsTransformations:
    discriminated: false
    docs: >-
      A pattern to match on the transformation name or array of transformation
      IDs. Use `*` as wildcard.
    union:
      - string
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  IssueTriggerTransformationConfigs:
    docs: Configurations for a 'Transformation' issue trigger
    properties:
      log_level: TransformationExecutionLogLevel
      transformations:
        type: IssueTriggerTransformationConfigsTransformations
        docs: >-
          A pattern to match on the transformation name or array of
          transformation IDs. Use `*` as wildcard.
    source:
      openapi: ../openapi.yml
  IssueTriggerBackpressureDelay:
    type: integer
    docs: >-
      The minimum delay (backpressure) to open the issue for min of 1 minute
      (60000) and max of 1 day (86400000)
    validation:
      min: 60000
      max: 86400000
  IssueTriggerBackpressureConfigsDestinations:
    discriminated: false
    docs: >-
      A pattern to match on the destination name or array of destination IDs.
      Use `*` as wildcard.
    union:
      - string
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  IssueTriggerBackpressureConfigs:
    docs: Configurations for a 'Backpressure' issue trigger
    properties:
      delay: IssueTriggerBackpressureDelay
      destinations:
        type: IssueTriggerBackpressureConfigsDestinations
        docs: >-
          A pattern to match on the destination name or array of destination
          IDs. Use `*` as wildcard.
    source:
      openapi: ../openapi.yml
  IssueTriggerReference:
    discriminated: false
    docs: Configuration object for the specific issue type selected
    union:
      - IssueTriggerDeliveryConfigs
      - IssueTriggerTransformationConfigs
      - IssueTriggerBackpressureConfigs
    source:
      openapi: ../openapi.yml
  IssueTriggerSlackChannel:
    docs: Slack channel for an issue trigger
    properties:
      channel_name:
        type: string
        docs: Channel name
    source:
      openapi: ../openapi.yml
  IssueTriggerIntegrationChannel:
    docs: Integration channel for an issue trigger
    properties: {}
    source:
      openapi: ../openapi.yml
  IssueTriggerEmailChannel:
    docs: Email channel for an issue trigger
    properties: {}
    source:
      openapi: ../openapi.yml
  IssueTriggerChannels:
    docs: Notification channels object for the specific channel type
    properties:
      slack: optional<IssueTriggerSlackChannel>
      opsgenie: optional<IssueTriggerIntegrationChannel>
      email: optional<IssueTriggerEmailChannel>
    source:
      openapi: ../openapi.yml
  IssueTrigger:
    properties:
      id:
        type: string
        docs: ID of the issue trigger
      team_id:
        type: optional<nullable<string>>
        docs: ID of the workspace
      name:
        type: optional<nullable<string>>
        docs: Optional unique name to use as reference when using the API
      type: IssueType
      configs: IssueTriggerReference
      channels: optional<nullable<IssueTriggerChannels>>
      disabled_at:
        type: optional<nullable<datetime>>
        docs: ISO timestamp for when the issue trigger was disabled
      updated_at:
        type: datetime
        docs: ISO timestamp for when the issue trigger was last updated
      created_at:
        type: datetime
        docs: ISO timestamp for when the issue trigger was created
      deleted_at:
        type: optional<nullable<datetime>>
        docs: ISO timestamp for when the issue trigger was deleted
    source:
      openapi: ../openapi.yml
  IssueTriggerPaginatedResult:
    properties:
      pagination: optional<SeekPagination>
      count: optional<integer>
      models: optional<list<IssueTrigger>>
    source:
      openapi: ../openapi.yml
  ApiErrorResponseData:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  ApiErrorResponse:
    docs: Error response model
    properties:
      code:
        type: string
        docs: Error code
      status:
        type: float
        docs: Status code
      message:
        type: string
        docs: Error description
      data: optional<nullable<ApiErrorResponseData>>
    source:
      openapi: ../openapi.yml
  DeletedIssueTriggerResponse:
    properties:
      id: string
    source:
      openapi: ../openapi.yml
  AttemptTrigger:
    enum:
      - INITIAL
      - MANUAL
      - BULK_RETRY
      - UNPAUSE
      - AUTOMATIC
    docs: How the attempt was triggered
    source:
      openapi: ../openapi.yml
  AttemptErrorCodes:
    enum:
      - TIMEOUT
      - NOT_FOUND
      - CONNECTION_REFUSED
      - CONNECTION_RESET
      - MISSING_URL
      - CLI
      - CLI_UNAVAILABLE
      - SELF_SIGNED_CERT
      - ERR_TLS_CERT_ALTNAME_INVALID
      - SSL_ERROR_CA_UNKNOWN
      - TTL_EXPIRED
      - DATA_ARCHIVED
      - SSL_CERT_EXPIRED
      - BULK_RETRY_CANCELLED
      - DNS_LOOKUP_FAILED
      - HOST_UNREACHABLE
      - PROTOCOL_ERROR
      - SOCKET_CLOSED
      - UNKNOWN
    docs: Attempt could not complete because of an error
    source:
      openapi: ../openapi.yml
  AttemptStatus:
    enum:
      - QUEUED
      - FAILED
      - SUCCESSFUL
      - HOLD
    docs: Attempt status
    source:
      openapi: ../openapi.yml
  AttemptState:
    enum:
      - DELIVERING
      - QUEUED
      - PENDING
      - COMPLETED
      - HOLD
    source:
      openapi: ../openapi.yml
  EventAttemptBody:
    docs: Response body from the destination
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  EventAttempt:
    properties:
      id:
        type: string
        docs: Attempt ID
      team_id:
        type: string
        docs: Team ID
      event_id:
        type: string
        docs: Event ID
      response_status:
        type: optional<nullable<integer>>
        docs: Attempt's HTTP response code
      attempt_number:
        type: optional<nullable<integer>>
        docs: >-
          Sequential number of attempts (up to and including this one) made for
          the associated event
      trigger: optional<nullable<AttemptTrigger>>
      error_code: optional<AttemptErrorCodes>
      body:
        type: optional<nullable<EventAttemptBody>>
        docs: Response body from the destination
      requested_url:
        type: optional<nullable<string>>
        docs: URL of the destination where delivery was attempted
      bulk_retry_id:
        type: optional<nullable<string>>
        docs: ID of associated bulk retry
      status: AttemptStatus
      successful_at:
        type: optional<nullable<datetime>>
        docs: Date the attempt was successful
      delivered_at:
        type: optional<nullable<datetime>>
        docs: Date the attempt was delivered
      responded_at:
        type: optional<nullable<datetime>>
        docs: Date the destination responded to this attempt
      delivery_latency:
        type: optional<nullable<integer>>
        docs: Time elapsed between attempt initiation and final delivery (in ms)
      response_latency:
        type: optional<nullable<integer>>
        docs: >-
          Time elapsed between attempt initiation and a response from the
          destination (in ms)
      updated_at:
        type: datetime
        docs: Date the attempt was last updated
      created_at:
        type: datetime
        docs: Date the attempt was created
      state: optional<nullable<AttemptState>>
      archived_at:
        type: optional<nullable<string>>
        docs: Date the attempt was archived
      destination_id: optional<nullable<string>>
    source:
      openapi: ../openapi.yml
  EventAttemptPaginatedResult:
    properties:
      pagination: optional<SeekPagination>
      count: optional<integer>
      models: optional<list<nullable<EventAttempt>>>
    source:
      openapi: ../openapi.yml
  ShortEventDataParsedQueryOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  ShortEventDataParsedQuery:
    discriminated: false
    union:
      - nullable<string>
      - ShortEventDataParsedQueryOne
    source:
      openapi: ../openapi.yml
    inline: true
  ShortEventDataHeaders:
    discriminated: false
    union:
      - string
      - map<string, nullable<string>>
    source:
      openapi: ../openapi.yml
    inline: true
  ShortEventDataBodyOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  ShortEventDataBody:
    discriminated: false
    union:
      - string
      - ShortEventDataBodyOne
      - list<unknown>
    source:
      openapi: ../openapi.yml
    inline: true
  ShortEventData:
    properties:
      path: string
      query: optional<nullable<string>>
      parsed_query: optional<nullable<ShortEventDataParsedQuery>>
      headers: optional<nullable<ShortEventDataHeaders>>
      body: optional<nullable<ShortEventDataBody>>
      is_large_payload: optional<nullable<boolean>>
    source:
      openapi: ../openapi.yml
  Bookmark:
    properties:
      id:
        type: string
        docs: ID of the bookmark
      team_id:
        type: string
        docs: ID of the workspace
      webhook_id:
        type: string
        docs: ID of the associated connection
      event_data_id:
        type: string
        docs: ID of the bookmarked event data
      label:
        type: string
        docs: Descriptive name of the bookmark
      alias:
        type: optional<nullable<string>>
        docs: Alternate alias for the bookmark
      data: optional<nullable<ShortEventData>>
      last_used_at:
        type: optional<nullable<datetime>>
        docs: Date the bookmark was last manually triggered
      updated_at:
        type: datetime
        docs: Date the bookmark was last updated
      created_at:
        type: datetime
        docs: Date the bookmark was created
    source:
      openapi: ../openapi.yml
  BookmarkPaginatedResult:
    properties:
      pagination: optional<SeekPagination>
      count: optional<integer>
      models: optional<list<Bookmark>>
    source:
      openapi: ../openapi.yml
  EventStatus:
    enum:
      - SCHEDULED
      - QUEUED
      - HOLD
      - SUCCESSFUL
      - FAILED
    source:
      openapi: ../openapi.yml
  EventDataParsedQueryOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  EventDataParsedQuery:
    discriminated: false
    union:
      - nullable<string>
      - EventDataParsedQueryOne
    source:
      openapi: ../openapi.yml
    inline: true
  EventDataHeaders:
    discriminated: false
    union:
      - string
      - map<string, nullable<string>>
    source:
      openapi: ../openapi.yml
    inline: true
  EventDataBodyOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  EventDataBody:
    discriminated: false
    union:
      - string
      - EventDataBodyOne
      - list<unknown>
    source:
      openapi: ../openapi.yml
    inline: true
  EventData:
    properties:
      path: string
      query: optional<nullable<string>>
      parsed_query: optional<nullable<EventDataParsedQuery>>
      headers: optional<nullable<EventDataHeaders>>
      body: optional<nullable<EventDataBody>>
      is_large_payload: optional<nullable<boolean>>
    source:
      openapi: ../openapi.yml
    inline: true
  Event:
    properties:
      id:
        type: string
        docs: ID of the event
      team_id:
        type: string
        docs: ID of the workspace
      webhook_id:
        type: string
        docs: ID of the associated connection
      source_id:
        type: string
        docs: ID of the associated source
      destination_id:
        type: string
        docs: ID of the associated destination
      event_data_id:
        type: string
        docs: ID of the request data
      request_id:
        type: string
        docs: ID of the request that created the event
      attempts:
        type: integer
        docs: Number of delivery attempts made
      data: optional<nullable<EventData>>
      last_attempt_at:
        type: optional<nullable<datetime>>
        docs: Date of the most recently attempted retry
      next_attempt_at:
        type: optional<nullable<datetime>>
        docs: Date of the next scheduled retry
      response_status:
        type: optional<nullable<integer>>
        docs: Event status
      status: EventStatus
      successful_at:
        type: optional<nullable<datetime>>
        docs: Date of the latest successful attempt
      cli_id:
        type: optional<nullable<string>>
        docs: ID of the CLI the event is sent to
      updated_at:
        type: datetime
        docs: Date the event was last updated
      created_at:
        type: datetime
        docs: Date the event was created
      created_at_id: optional<string>
      last_attempt_at_id: optional<string>
    source:
      openapi: ../openapi.yml
  EventArray: list<Event>
  DeletedBookmarkResponse:
    properties:
      id:
        type: string
        docs: Bookmark ID
    source:
      openapi: ../openapi.yml
  DestinationRateLimitPeriod:
    enum:
      - second
      - minute
      - hour
    docs: Period to rate limit attempts
    default: second
    source:
      openapi: ../openapi.yml
  Destination:
    docs: Associated [Destination](#destination-object) object
    properties:
      id:
        type: string
        docs: ID of the destination
      name:
        type: string
        docs: A unique, human-friendly name for the destination
      team_id:
        type: string
        docs: ID of the workspace
      path_forwarding_disabled: optional<nullable<boolean>>
      url:
        type: optional<nullable<string>>
        docs: HTTP endpoint of the destination
      cli_path:
        type: optional<nullable<string>>
        docs: Path for the CLI destination
      rate_limit:
        type: optional<nullable<integer>>
        docs: >-
          Limit event attempts to receive per period. Max value is workspace
          plan's max attempts thoughput.
      rate_limit_period: optional<nullable<DestinationRateLimitPeriod>>
      archived_at:
        type: optional<nullable<datetime>>
        docs: Date the destination was archived
      updated_at:
        type: datetime
        docs: Date the destination was last updated
      created_at:
        type: datetime
        docs: Date the destination was created
    source:
      openapi: ../openapi.yml
  DestinationPaginatedResult:
    properties:
      pagination: optional<SeekPagination>
      count: optional<integer>
      models: optional<list<Destination>>
    source:
      openapi: ../openapi.yml
  EventPaginatedResult:
    properties:
      pagination: optional<SeekPagination>
      count: optional<integer>
      models: optional<list<Event>>
    source:
      openapi: ../openapi.yml
  RawBody:
    properties:
      body: string
    source:
      openapi: ../openapi.yml
  RetriedEvent:
    properties:
      event: Event
      attempt: nullable<EventAttempt>
    source:
      openapi: ../openapi.yml
  BatchOperationQuery:
    discriminated: false
    docs: Query object to filter records
    union:
      - map<string, unknown>
      - nullable<string>
    source:
      openapi: ../openapi.yml
    inline: true
  BatchOperation:
    properties:
      id:
        type: string
        docs: ID of the bulk retry
      team_id:
        type: string
        docs: ID of the workspace
      query:
        type: optional<nullable<BatchOperationQuery>>
        docs: Query object to filter records
      created_at:
        type: datetime
        docs: Date the bulk retry was created
      updated_at:
        type: datetime
        docs: Last time the bulk retry was updated
      cancelled_at:
        type: optional<nullable<datetime>>
        docs: Date the bulk retry was cancelled
      completed_at:
        type: optional<nullable<datetime>>
        docs: Date the bulk retry was completed
      estimated_batch:
        type: optional<nullable<integer>>
        docs: Number of batches required to complete the bulk retry
      estimated_count:
        type: optional<nullable<integer>>
        docs: Number of estimated events to be retried
      processed_batch:
        type: optional<nullable<integer>>
        docs: Number of batches currently processed
      completed_count:
        type: optional<nullable<integer>>
        docs: Number of events that were successfully delivered
      in_progress:
        type: boolean
        docs: Indicates if the bulk retry is currently in progress
      progress:
        type: optional<nullable<float>>
        docs: Progression of the batch operations, values 0 - 1
      failed_count:
        type: optional<nullable<integer>>
        docs: Number of events that failed to be delivered
      number: optional<nullable<float>>
    source:
      openapi: ../openapi.yml
  BatchOperationPaginatedResult:
    properties:
      pagination: optional<SeekPagination>
      count: optional<integer>
      models: optional<list<BatchOperation>>
    source:
      openapi: ../openapi.yml
  BatchOperationPlan:
    properties:
      estimated_batch:
        type: optional<nullable<integer>>
        docs: Number of batches required to complete the bulk retry
      estimated_count:
        type: optional<nullable<integer>>
        docs: Number of estimated events to be retried
      progress:
        type: optional<nullable<float>>
        docs: Progression of the batch operations, values 0 - 1
    source:
      openapi: ../openapi.yml
  IntegrationProvider:
    enum:
      - twitter
      - stripe
      - recharge
      - github
      - shopify
      - postmark
      - typeform
      - hmac
      - basic_auth
      - api_key
      - xero
      - svix
      - zoom
      - akeneo
      - adyen
      - gitlab
      - value: property-finder
        name: PropertyFinder
      - woocommerce
      - oura
      - commercelayer
      - mailgun
      - pipedrive
      - sendgrid
    docs: The provider name
    source:
      openapi: ../openapi.yml
  IntegrationFeature:
    enum:
      - VERIFICATION
      - HANDSHAKE
      - POLLING
    source:
      openapi: ../openapi.yml
  HmacAlgorithms:
    enum:
      - md5
      - sha1
      - sha256
      - sha512
    source:
      openapi: ../openapi.yml
  HmacIntegrationConfigsEncoding:
    enum:
      - base64
      - hex
    inline: true
    source:
      openapi: ../openapi.yml
  HmacIntegrationConfigs:
    properties:
      webhook_secret_key: string
      algorithm: HmacAlgorithms
      header_key: string
      encoding: HmacIntegrationConfigsEncoding
    source:
      openapi: ../openapi.yml
  ApiKeyIntegrationConfigs:
    properties:
      header_key: string
      api_key: string
    source:
      openapi: ../openapi.yml
  HandledHmacConfigs:
    properties:
      webhook_secret_key: string
    source:
      openapi: ../openapi.yml
  BasicAuthIntegrationConfigs:
    properties:
      name: string
      password: string
    source:
      openapi: ../openapi.yml
  ShopifyIntegrationConfigsRateLimitPeriod:
    enum:
      - minute
      - second
    inline: true
    source:
      openapi: ../openapi.yml
  ShopifyIntegrationConfigs:
    properties:
      webhook_secret_key: string
      rate_limit_period: optional<nullable<ShopifyIntegrationConfigsRateLimitPeriod>>
      rate_limit: optional<nullable<float>>
      api_key: optional<nullable<string>>
      api_secret: optional<nullable<string>>
      shop: optional<nullable<string>>
    source:
      openapi: ../openapi.yml
  IntegrationConfigs:
    discriminated: false
    docs: >-
      Decrypted Key/Value object of the associated configuration for that
      provider
    union:
      - HmacIntegrationConfigs
      - ApiKeyIntegrationConfigs
      - HandledHmacConfigs
      - BasicAuthIntegrationConfigs
      - ShopifyIntegrationConfigs
    source:
      openapi: ../openapi.yml
    inline: true
  Integration:
    properties:
      id:
        type: string
        docs: ID of the integration
      team_id:
        type: string
        docs: ID of the workspace
      label:
        type: string
        docs: Label of the integration
      provider: IntegrationProvider
      features:
        docs: List of features to enable (see features list below)
        type: list<IntegrationFeature>
      configs:
        type: IntegrationConfigs
        docs: >-
          Decrypted Key/Value object of the associated configuration for that
          provider
      sources:
        docs: List of source IDs the integration is attached to
        type: list<string>
      updated_at:
        type: datetime
        docs: Date the integration was last updated
      created_at:
        type: datetime
        docs: Date the integration was created
    source:
      openapi: ../openapi.yml
  IntegrationPaginatedResult:
    properties:
      pagination: optional<SeekPagination>
      count: optional<integer>
      models: optional<list<Integration>>
    source:
      openapi: ../openapi.yml
  AttachedIntegrationToSource:
    properties:
      success: boolean
    source:
      openapi: ../openapi.yml
  DetachedIntegrationFromSource:
    properties: {}
    source:
      openapi: ../openapi.yml
  DeletedIntegration:
    properties:
      id: string
    source:
      openapi: ../openapi.yml
  IssueStatus:
    enum:
      - OPENED
      - IGNORED
      - ACKNOWLEDGED
      - RESOLVED
    docs: Issue status
    source:
      openapi: ../openapi.yml
  DeliveryIssueAggregationKeys:
    docs: Keys used as the aggregation keys a 'delivery' type issue
    properties:
      webhook_id: list<string>
      response_status: list<float>
      error_code: list<AttemptErrorCodes>
    source:
      openapi: ../openapi.yml
  DeliveryIssueReference:
    docs: Reference to the event and attempt an issue is being created for.
    properties:
      event_id: string
      attempt_id: string
    source:
      openapi: ../openapi.yml
  DeliveryIssueData:
    docs: Delivery issue data
    properties:
      trigger_event: optional<Event>
      trigger_attempt: optional<nullable<EventAttempt>>
    source:
      openapi: ../openapi.yml
  DeliveryIssueWithData:
    docs: Delivery issue
    properties:
      id:
        type: string
        docs: Issue ID
      team_id:
        type: string
        docs: ID of the workspace
      status: IssueStatus
      opened_at:
        type: datetime
        docs: ISO timestamp for when the issue was last opened
      first_seen_at:
        type: datetime
        docs: ISO timestamp for when the issue was first opened
      last_seen_at:
        type: datetime
        docs: ISO timestamp for when the issue last occured
      last_updated_by:
        type: optional<nullable<string>>
        docs: ID of the team member who last updated the issue status
      dismissed_at:
        type: optional<nullable<datetime>>
        docs: ISO timestamp for when the issue was dismissed
      auto_resolved_at: optional<nullable<datetime>>
      merged_with: optional<nullable<string>>
      updated_at:
        type: string
        docs: ISO timestamp for when the issue was last updated
      created_at:
        type: string
        docs: ISO timestamp for when the issue was created
      aggregation_keys: DeliveryIssueAggregationKeys
      reference: DeliveryIssueReference
      data: optional<nullable<DeliveryIssueData>>
    source:
      openapi: ../openapi.yml
  TransformationIssueAggregationKeys:
    docs: Keys used as the aggregation keys a 'transformation' type issue
    properties:
      transformation_id: list<string>
      log_level: TransformationExecutionLogLevel
    source:
      openapi: ../openapi.yml
  TransformationIssueReference:
    docs: >-
      Reference to the event request transformation an issue is being created
      for.
    properties:
      transformation_execution_id: string
      trigger_event_request_transformation_id:
        type: optional<nullable<string>>
        docs: Deprecated but still found on historical issues
    source:
      openapi: ../openapi.yml
  ConsoleLineType:
    enum:
      - error
      - log
      - warn
      - info
      - debug
    inline: true
    source:
      openapi: ../openapi.yml
  ConsoleLine:
    properties:
      type: ConsoleLineType
      message: string
    source:
      openapi: ../openapi.yml
  TransformationExecution:
    properties:
      id: string
      transformed_event_data_id: string
      original_event_data_id: string
      transformation_id: string
      team_id: string
      webhook_id: string
      log_level: TransformationExecutionLogLevel
      logs: list<ConsoleLine>
      updated_at: datetime
      created_at: datetime
      original_event_data: optional<nullable<ShortEventData>>
      transformed_event_data: optional<nullable<ShortEventData>>
      issue_id: optional<nullable<string>>
    source:
      openapi: ../openapi.yml
  TransformationIssueData:
    docs: Transformation issue data
    properties:
      transformation_execution: TransformationExecution
      trigger_attempt: optional<nullable<EventAttempt>>
    source:
      openapi: ../openapi.yml
  TransformationIssueWithData:
    docs: Transformation issue
    properties:
      id:
        type: string
        docs: Issue ID
      team_id:
        type: string
        docs: ID of the workspace
      status: IssueStatus
      opened_at:
        type: datetime
        docs: ISO timestamp for when the issue was last opened
      first_seen_at:
        type: datetime
        docs: ISO timestamp for when the issue was first opened
      last_seen_at:
        type: datetime
        docs: ISO timestamp for when the issue last occured
      last_updated_by:
        type: optional<nullable<string>>
        docs: ID of the team member who last updated the issue status
      dismissed_at:
        type: optional<nullable<datetime>>
        docs: ISO timestamp for when the issue was dismissed
      auto_resolved_at: optional<nullable<datetime>>
      merged_with: optional<nullable<string>>
      updated_at:
        type: string
        docs: ISO timestamp for when the issue was last updated
      created_at:
        type: string
        docs: ISO timestamp for when the issue was created
      aggregation_keys: TransformationIssueAggregationKeys
      reference: TransformationIssueReference
      data: optional<nullable<TransformationIssueData>>
    source:
      openapi: ../openapi.yml
  IssueWithData:
    discriminant: type
    base-properties: {}
    union:
      delivery: DeliveryIssueWithData
      transformation: TransformationIssueWithData
    source:
      openapi: ../openapi.yml
  IssueWithDataPaginatedResult:
    properties:
      pagination: optional<SeekPagination>
      count: optional<integer>
      models: optional<list<IssueWithData>>
    source:
      openapi: ../openapi.yml
  IssueCount:
    properties:
      count:
        type: integer
        docs: Number of issues
    source:
      openapi: ../openapi.yml
  DeliveryIssue:
    docs: Delivery issue
    properties:
      id:
        type: string
        docs: Issue ID
      team_id:
        type: string
        docs: ID of the workspace
      status: IssueStatus
      opened_at:
        type: datetime
        docs: ISO timestamp for when the issue was last opened
      first_seen_at:
        type: datetime
        docs: ISO timestamp for when the issue was first opened
      last_seen_at:
        type: datetime
        docs: ISO timestamp for when the issue last occured
      last_updated_by:
        type: optional<nullable<string>>
        docs: ID of the team member who last updated the issue status
      dismissed_at:
        type: optional<nullable<datetime>>
        docs: ISO timestamp for when the issue was dismissed
      auto_resolved_at: optional<nullable<datetime>>
      merged_with: optional<nullable<string>>
      updated_at:
        type: string
        docs: ISO timestamp for when the issue was last updated
      created_at:
        type: string
        docs: ISO timestamp for when the issue was created
      aggregation_keys: DeliveryIssueAggregationKeys
      reference: DeliveryIssueReference
    source:
      openapi: ../openapi.yml
  TransformationIssue:
    docs: Transformation issue
    properties:
      id:
        type: string
        docs: Issue ID
      team_id:
        type: string
        docs: ID of the workspace
      status: IssueStatus
      opened_at:
        type: datetime
        docs: ISO timestamp for when the issue was last opened
      first_seen_at:
        type: datetime
        docs: ISO timestamp for when the issue was first opened
      last_seen_at:
        type: datetime
        docs: ISO timestamp for when the issue last occured
      last_updated_by:
        type: optional<nullable<string>>
        docs: ID of the team member who last updated the issue status
      dismissed_at:
        type: optional<nullable<datetime>>
        docs: ISO timestamp for when the issue was dismissed
      auto_resolved_at: optional<nullable<datetime>>
      merged_with: optional<nullable<string>>
      updated_at:
        type: string
        docs: ISO timestamp for when the issue was last updated
      created_at:
        type: string
        docs: ISO timestamp for when the issue was created
      aggregation_keys: TransformationIssueAggregationKeys
      reference: TransformationIssueReference
    source:
      openapi: ../openapi.yml
  Issue:
    discriminant: type
    base-properties: {}
    docs: Issue
    union:
      delivery: DeliveryIssue
      transformation: TransformationIssue
    source:
      openapi: ../openapi.yml
  RequestRejectionCause:
    enum:
      - SOURCE_ARCHIVED
      - NO_WEBHOOK
      - VERIFICATION_FAILED
      - UNSUPPORTED_HTTP_METHOD
      - UNSUPPORTED_CONTENT_TYPE
      - UNPARSABLE_JSON
      - PAYLOAD_TOO_LARGE
      - INGESTION_FATAL
      - UNKNOWN
    source:
      openapi: ../openapi.yml
  RequestIngestPriority:
    enum:
      - NORMAL
      - LOW
    docs: The priority attributed to the request when received
    inline: true
    source:
      openapi: ../openapi.yml
  RequestDataParsedQueryOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  RequestDataParsedQuery:
    discriminated: false
    union:
      - nullable<string>
      - RequestDataParsedQueryOne
    source:
      openapi: ../openapi.yml
    inline: true
  RequestDataHeaders:
    discriminated: false
    union:
      - string
      - map<string, nullable<string>>
    source:
      openapi: ../openapi.yml
    inline: true
  RequestDataBodyOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  RequestDataBody:
    discriminated: false
    union:
      - string
      - RequestDataBodyOne
      - list<unknown>
    source:
      openapi: ../openapi.yml
    inline: true
  RequestData:
    properties:
      path: string
      query: optional<nullable<string>>
      parsed_query: optional<nullable<RequestDataParsedQuery>>
      headers: optional<nullable<RequestDataHeaders>>
      body: optional<nullable<RequestDataBody>>
      is_large_payload: optional<nullable<boolean>>
    source:
      openapi: ../openapi.yml
    inline: true
  Request:
    properties:
      id:
        type: string
        docs: ID of the request
      team_id:
        type: string
        docs: ID of the workspace
      verified:
        type: optional<nullable<boolean>>
        docs: Whether or not the request was verified when received
      original_event_data_id:
        type: optional<nullable<string>>
        docs: ID of the request data
      duplicate_hash:
        type: optional<nullable<string>>
        docs: Hash of the request data payload used to check for duplicates
      duplicate_hits:
        type: optional<nullable<integer>>
        docs: Count of duplicate hits found
      rejection_cause: optional<RequestRejectionCause>
      ingest_priority:
        type: optional<nullable<RequestIngestPriority>>
        docs: The priority attributed to the request when received
      ingested_at:
        type: optional<nullable<datetime>>
        docs: The time the request was originally received
      ingested_at_id: optional<string>
      source_id:
        type: string
        docs: ID of the associated source
      events_count:
        type: optional<nullable<integer>>
        docs: >-
          The count of events created from this request (CLI events not
          included)
      cli_events_count:
        type: optional<nullable<integer>>
        docs: The count of CLI events created from this request
      ignored_count: optional<nullable<integer>>
      data: optional<nullable<RequestData>>
      updated_at:
        type: datetime
        docs: Date the event was last updated
      created_at:
        type: datetime
        docs: "\tDate the event was created"
    source:
      openapi: ../openapi.yml
  RequestPaginatedResult:
    properties:
      pagination: optional<SeekPagination>
      count: optional<integer>
      models: optional<list<Request>>
    source:
      openapi: ../openapi.yml
  RetryRequest:
    properties:
      request: Request
      events: optional<nullable<list<Event>>>
    source:
      openapi: ../openapi.yml
  IgnoredEventCause:
    enum:
      - ARCHIVED
      - FILTERED
      - TRANSFORMATION_FAILED
      - CLI_DISCONNECTED
    source:
      openapi: ../openapi.yml
  FilteredMeta:
    enum:
      - body
      - headers
      - path
      - query
    source:
      openapi: ../openapi.yml
  TransformationFailedMeta:
    properties:
      transformation_id: string
    source:
      openapi: ../openapi.yml
  IgnoredEventMeta:
    discriminated: false
    union:
      - FilteredMeta
      - TransformationFailedMeta
    source:
      openapi: ../openapi.yml
    inline: true
  IgnoredEvent:
    properties:
      id: string
      team_id: string
      webhook_id: string
      cause: IgnoredEventCause
      request_id: string
      meta: optional<nullable<IgnoredEventMeta>>
      updated_at: datetime
      created_at: datetime
    source:
      openapi: ../openapi.yml
  IgnoredEventPaginatedResult:
    properties:
      pagination: optional<SeekPagination>
      count: optional<integer>
      models: optional<list<IgnoredEvent>>
    source:
      openapi: ../openapi.yml
  RetryStrategy:
    enum:
      - linear
      - exponential
    docs: Algorithm to use when calculating delay between retries
    source:
      openapi: ../openapi.yml
  RetryRule:
    properties:
      strategy: RetryStrategy
      interval:
        type: optional<nullable<integer>>
        docs: Time in MS between each retry
      count:
        type: optional<nullable<integer>>
        docs: Maximum number of retries to attempt
    source:
      openapi: ../openapi.yml
  AlertStrategy:
    enum:
      - each_attempt
      - last_attempt
    docs: Alert strategy to use
    source:
      openapi: ../openapi.yml
  AlertRule:
    properties:
      strategy: AlertStrategy
    source:
      openapi: ../openapi.yml
  ConnectionFilterPropertyThree:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  ConnectionFilterProperty:
    discriminated: false
    docs: JSON using our filter syntax to filter on request headers
    union:
      - nullable<string>
      - float
      - boolean
      - ConnectionFilterPropertyThree
    source:
      openapi: ../openapi.yml
  FilterRule:
    properties:
      headers: optional<nullable<ConnectionFilterProperty>>
      body: optional<nullable<ConnectionFilterProperty>>
      query: optional<nullable<ConnectionFilterProperty>>
      path: optional<nullable<ConnectionFilterProperty>>
    source:
      openapi: ../openapi.yml
  TransformReference:
    properties:
      type:
        type: literal<"transform">
        docs: A transformation rule must be of type `transformation`
      transformation_id:
        type: string
        docs: >-
          ID of the attached transformation object. Optional input, always set
          once the rule is defined
    source:
      openapi: ../openapi.yml
  TransformFullTransformation:
    docs: >-
      You can optionally define a new transformation while creating a transform
      rule
    properties:
      name:
        type: string
        docs: The unique name of the transformation
      code:
        type: string
        docs: A string representation of your JavaScript (ES6) code to run
      env:
        type: optional<nullable<map<string, nullable<string>>>>
        docs: >-
          A key-value object of environment variables to encrypt and expose to
          your transformation code
    source:
      openapi: ../openapi.yml
    inline: true
  TransformFull:
    properties:
      type:
        type: literal<"transform">
        docs: A transformation rule must be of type `transformation`
      transformation_id:
        type: optional<nullable<string>>
        docs: >-
          ID of the attached transformation object. Optional input, always set
          once the rule is defined
      transformation:
        type: optional<TransformFullTransformation>
        docs: >-
          You can optionally define a new transformation while creating a
          transform rule
    source:
      openapi: ../openapi.yml
  TransformRule:
    discriminated: false
    union:
      - TransformReference
      - TransformFull
    source:
      openapi: ../openapi.yml
  DelayRule:
    properties:
      delay:
        type: integer
        docs: Delay to introduce in MS
    source:
      openapi: ../openapi.yml
  Rule:
    discriminant: type
    base-properties: {}
    union:
      retry: RetryRule
      alert: AlertRule
      filter: FilterRule
      transform: TransformRule
      delay: DelayRule
    source:
      openapi: ../openapi.yml
  Ruleset:
    docs: Associated [Ruleset](#ruleset-object) object
    properties:
      id:
        type: string
        docs: ID of the ruleset
      name:
        type: string
        docs: A unique name for the ruleset
      team_id:
        type: string
        docs: ID of the workspace
      rules:
        docs: Array of rules to apply
        type: list<Rule>
      is_team_default:
        type: boolean
        docs: Default ruleset of Workspace
      archived_at:
        type: optional<nullable<datetime>>
        docs: Date the ruleset was archived
      updated_at:
        type: datetime
        docs: Date the ruleset was last updated
      created_at:
        type: datetime
        docs: Date the ruleset was created
    source:
      openapi: ../openapi.yml
  RulesetPaginatedResult:
    properties:
      pagination: optional<SeekPagination>
      count: optional<integer>
      models: optional<list<nullable<Ruleset>>>
    source:
      openapi: ../openapi.yml
  SourceIntegration:
    docs: Integration object
    properties:
      id:
        type: string
        docs: ID of the integration
      label:
        type: string
        docs: Label of the integration
      provider: IntegrationProvider
      features:
        docs: List of enabled features
        type: list<IntegrationFeature>
    source:
      openapi: ../openapi.yml
    inline: true
  Source:
    docs: Associated [Source](#source-object) object
    properties:
      id:
        type: string
        docs: ID of the source
      name:
        type: string
        docs: Name for the source
      team_id:
        type: string
        docs: ID of the workspace
      url:
        type: string
        docs: A unique URL that must be supplied to your webhook's provider
      integration_id:
        type: optional<nullable<string>>
        docs: ID of the integration
      integration:
        type: optional<nullable<SourceIntegration>>
        docs: Integration object
      archived_at:
        type: optional<nullable<datetime>>
        docs: Date the source was archived
      updated_at:
        type: datetime
        docs: Date the source was last updated
      created_at:
        type: datetime
        docs: Date the source was created
    source:
      openapi: ../openapi.yml
  SourcePaginatedResult:
    properties:
      pagination: optional<SeekPagination>
      count: optional<integer>
      models: optional<list<Source>>
    source:
      openapi: ../openapi.yml
  TopicsValue:
    enum:
      - value: issue.opened
        name: IssueOpened
      - value: issue.updated
        name: IssueUpdated
      - value: deprecated.attempt-failed
        name: DeprecatedAttemptFailed
      - value: event.successful
        name: EventSuccessful
    docs: Supported topics
    source:
      openapi: ../openapi.yml
  ToggleWebhookNotifications:
    properties:
      enabled: boolean
      topics: optional<nullable<list<TopicsValue>>>
      source_id: string
    source:
      openapi: ../openapi.yml
  Transformation:
    properties:
      id:
        type: string
        docs: ID of the transformation
      team_id:
        type: string
        docs: ID of the workspace
      name:
        type: string
        docs: A unique, human-friendly name for the transformation
      code:
        type: string
        docs: JavaScript code to be executed
      encrypted_env: optional<nullable<string>>
      iv: optional<nullable<string>>
      env:
        type: optional<nullable<map<string, nullable<string>>>>
        docs: Key-value environment variables to be passed to the transformation
      updated_at:
        type: datetime
        docs: Date the transformation was last updated
      created_at:
        type: datetime
        docs: Date the transformation was created
    source:
      openapi: ../openapi.yml
  TransformationPaginatedResult:
    properties:
      pagination: optional<SeekPagination>
      count: optional<integer>
      models: optional<list<Transformation>>
    source:
      openapi: ../openapi.yml
  TransformationExecutorOutputRequestHeaders:
    discriminated: false
    union:
      - string
      - map<string, unknown>
    source:
      openapi: ../openapi.yml
    inline: true
  TransformationExecutorOutputRequestQueryZero:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  TransformationExecutorOutputRequestQuery:
    discriminated: false
    union:
      - nullable<TransformationExecutorOutputRequestQueryZero>
      - string
    source:
      openapi: ../openapi.yml
    inline: true
  TransformationExecutorOutputRequestParsedQueryOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  TransformationExecutorOutputRequestParsedQuery:
    discriminated: false
    union:
      - nullable<string>
      - TransformationExecutorOutputRequestParsedQueryOne
    source:
      openapi: ../openapi.yml
    inline: true
  TransformationExecutorOutputRequestBodyOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  TransformationExecutorOutputRequestBody:
    discriminated: false
    union:
      - nullable<string>
      - TransformationExecutorOutputRequestBodyOne
    source:
      openapi: ../openapi.yml
    inline: true
  TransformationExecutorOutputRequest:
    properties:
      headers: optional<nullable<TransformationExecutorOutputRequestHeaders>>
      path: string
      query: optional<nullable<TransformationExecutorOutputRequestQuery>>
      parsed_query: optional<nullable<TransformationExecutorOutputRequestParsedQuery>>
      body: optional<nullable<TransformationExecutorOutputRequestBody>>
    source:
      openapi: ../openapi.yml
    inline: true
  TransformationExecutorOutput:
    properties:
      request_id: optional<nullable<string>>
      transformation_id: optional<nullable<string>>
      execution_id: optional<nullable<string>>
      log_level: TransformationExecutionLogLevel
      request: optional<nullable<TransformationExecutorOutputRequest>>
      console: optional<nullable<list<ConsoleLine>>>
    source:
      openapi: ../openapi.yml
  TransformationExecutionPaginatedResult:
    properties:
      pagination: optional<SeekPagination>
      count: optional<integer>
      models: optional<list<TransformationExecution>>
    source:
      openapi: ../openapi.yml
  Connection:
    properties:
      id:
        type: string
        docs: ID of the connection
      name:
        type: string
        docs: Unique name of the connection for this source
      team_id:
        type: string
        docs: ID of the workspace
      destination: Destination
      source: Source
      ruleset: optional<nullable<Ruleset>>
      resolved_rules:
        type: optional<nullable<list<Rule>>>
        docs: Array of rules applied to connection after factoring for the ruleset
      rules:
        type: optional<nullable<list<Rule>>>
        docs: Array of rules configured on the connection
      archived_at:
        type: optional<nullable<datetime>>
        docs: Date the connection was archived
      paused_at:
        type: optional<nullable<datetime>>
        docs: Date the connection was paused
      updated_at:
        type: datetime
        docs: Date the connection was last updated
      created_at:
        type: datetime
        docs: Date the connection was created
    source:
      openapi: ../openapi.yml
  ConnectionPaginatedResult:
    properties:
      pagination: optional<SeekPagination>
      count: optional<integer>
      models: optional<list<Connection>>
    source:
      openapi: ../openapi.yml
errors:
  BadRequestError:
    status-code: 400
    type: ApiErrorResponse
    docs: Bad Request
    examples:
      - value:
          code: code
          status: 1.1
          message: message
  UnprocessableEntityError:
    status-code: 422
    type: ApiErrorResponse
    docs: Unprocessable Entity
    examples:
      - value:
          code: code
          status: 1.1
          message: message
  NotFoundError:
    status-code: 404
    type: ApiErrorResponse
    docs: Not Found
    examples:
      - value:
          code: code
          status: 1.1
          message: message
",
    },
    "attempts.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "An attempt is any request that Hookdeck makes on behalf of an event.",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Attempts",
          "endpoints": {
            "getAttempt": {
              "auth": undefined,
              "display-name": "Get a single attempt",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "archived_at": "archived_at",
                      "attempt_number": 1,
                      "bulk_retry_id": "bulk_retry_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "delivered_at": "2024-01-15T09:30:00Z",
                      "delivery_latency": 1,
                      "destination_id": "destination_id",
                      "error_code": "TIMEOUT",
                      "event_id": "event_id",
                      "id": "id",
                      "requested_url": "requested_url",
                      "responded_at": "2024-01-15T09:30:00Z",
                      "response_latency": 1,
                      "response_status": 1,
                      "state": "DELIVERING",
                      "status": "QUEUED",
                      "successful_at": "2024-01-15T09:30:00Z",
                      "team_id": "team_id",
                      "trigger": "INITIAL",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/attempts/{id}",
              "request": {
                "name": "GetAttemptRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "A single attempt",
                "status-code": 200,
                "type": "nullable<root.EventAttempt>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getAttempts": {
              "auth": undefined,
              "display-name": "Get attempts",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "count": 1,
                      "models": [
                        {
                          "archived_at": "archived_at",
                          "attempt_number": 1,
                          "bulk_retry_id": "bulk_retry_id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "delivered_at": "2024-01-15T09:30:00Z",
                          "delivery_latency": 1,
                          "destination_id": "destination_id",
                          "error_code": "TIMEOUT",
                          "event_id": "event_id",
                          "id": "id",
                          "requested_url": "requested_url",
                          "responded_at": "2024-01-15T09:30:00Z",
                          "response_latency": 1,
                          "response_status": 1,
                          "state": "DELIVERING",
                          "status": "QUEUED",
                          "successful_at": "2024-01-15T09:30:00Z",
                          "team_id": "team_id",
                          "trigger": "INITIAL",
                          "updated_at": "2024-01-15T09:30:00Z",
                        },
                      ],
                      "pagination": {
                        "dir": "asc",
                        "limit": 1,
                        "next": "next",
                        "order_by": "order_by",
                        "prev": "prev",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/attempts",
              "request": {
                "name": "GetAttemptsRequest",
                "query-parameters": {
                  "dir": "optional<GetAttemptsRequestDir>",
                  "event_id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "limit": {
                    "type": "optional<integer>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 255,
                      "min": 0,
                      "multipleOf": undefined,
                    },
                  },
                  "next": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "order_by": "optional<GetAttemptsRequestOrderBy>",
                  "prev": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "response": {
                "docs": "List of attempts",
                "status-code": 200,
                "type": "root.EventAttemptPaginatedResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "GetAttemptsRequestDir": {
            "enum": [
              "asc",
              "desc",
            ],
          },
          "GetAttemptsRequestOrderBy": {
            "enum": [
              "created_at",
            ],
          },
        },
      },
      "rawContents": "types:
  GetAttemptsRequestOrderBy:
    enum:
      - created_at
  GetAttemptsRequestDir:
    enum:
      - asc
      - desc
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    getAttempts:
      path: /attempts
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get attempts
      request:
        name: GetAttemptsRequest
        query-parameters:
          event_id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          order_by: optional<GetAttemptsRequestOrderBy>
          dir: optional<GetAttemptsRequestDir>
          limit:
            type: optional<integer>
            validation:
              min: 0
              max: 255
          next:
            type: optional<string>
            validation:
              maxLength: 255
          prev:
            type: optional<string>
            validation:
              maxLength: 255
      response:
        docs: List of attempts
        type: root.EventAttemptPaginatedResult
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - response:
            body:
              pagination:
                order_by: order_by
                dir: asc
                limit: 1
                prev: prev
                next: next
              count: 1
              models:
                - id: id
                  team_id: team_id
                  event_id: event_id
                  response_status: 1
                  attempt_number: 1
                  trigger: INITIAL
                  error_code: TIMEOUT
                  requested_url: requested_url
                  bulk_retry_id: bulk_retry_id
                  status: QUEUED
                  successful_at: '2024-01-15T09:30:00Z'
                  delivered_at: '2024-01-15T09:30:00Z'
                  responded_at: '2024-01-15T09:30:00Z'
                  delivery_latency: 1
                  response_latency: 1
                  updated_at: '2024-01-15T09:30:00Z'
                  created_at: '2024-01-15T09:30:00Z'
                  state: DELIVERING
                  archived_at: archived_at
                  destination_id: destination_id
    getAttempt:
      path: /attempts/{id}
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get a single attempt
      request:
        name: GetAttemptRequest
        path-parameters:
          id: string
      response:
        docs: A single attempt
        type: nullable<root.EventAttempt>
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              team_id: team_id
              event_id: event_id
              response_status: 1
              attempt_number: 1
              trigger: INITIAL
              error_code: TIMEOUT
              requested_url: requested_url
              bulk_retry_id: bulk_retry_id
              status: QUEUED
              successful_at: '2024-01-15T09:30:00Z'
              delivered_at: '2024-01-15T09:30:00Z'
              responded_at: '2024-01-15T09:30:00Z'
              delivery_latency: 1
              response_latency: 1
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
              state: DELIVERING
              archived_at: archived_at
              destination_id: destination_id
  source:
    openapi: ../openapi.yml
  display-name: Attempts
docs: An attempt is any request that Hookdeck makes on behalf of an event.
",
    },
    "bookmarks.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "A bookmark lets you conveniently store and replay a specific request.",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Bookmarks",
          "endpoints": {
            "createBookmark": {
              "auth": undefined,
              "display-name": "Create a bookmark",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "request": {
                    "event_data_id": "event_data_id",
                    "label": "label",
                    "webhook_id": "webhook_id",
                  },
                  "response": {
                    "body": {
                      "alias": "alias",
                      "created_at": "2024-01-15T09:30:00Z",
                      "data": {
                        "body": "body",
                        "headers": "headers",
                        "is_large_payload": true,
                        "parsed_query": "parsed_query",
                        "path": "path",
                        "query": "query",
                      },
                      "event_data_id": "event_data_id",
                      "id": "id",
                      "label": "label",
                      "last_used_at": "2024-01-15T09:30:00Z",
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "webhook_id": "webhook_id",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/bookmarks",
              "request": {
                "body": {
                  "properties": {
                    "event_data_id": {
                      "docs": "ID of the event data to bookmark",
                      "type": "string",
                      "validation": {
                        "format": undefined,
                        "maxLength": 255,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                    "label": {
                      "docs": "Descriptive name of the bookmark",
                      "type": "string",
                      "validation": {
                        "format": undefined,
                        "maxLength": 255,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                    "name": {
                      "docs": "A unique, human-friendly name for the bookmark",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": 155,
                        "minLength": undefined,
                        "pattern": "^[A-z0-9-_]+$",
                      },
                    },
                    "webhook_id": {
                      "docs": "ID of the associated connection",
                      "type": "string",
                      "validation": {
                        "format": undefined,
                        "maxLength": 255,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateBookmarkRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "A single bookmark",
                "status-code": 200,
                "type": "root.Bookmark",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "deleteBookmark": {
              "auth": undefined,
              "display-name": "Delete a bookmark",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "id": "id",
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/bookmarks/{id}",
              "request": {
                "name": "DeleteBookmarkRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "An object with deleted bookmark's id",
                "status-code": 200,
                "type": "root.DeletedBookmarkResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getBookmark": {
              "auth": undefined,
              "display-name": "Get a single bookmark",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "alias": "alias",
                      "created_at": "2024-01-15T09:30:00Z",
                      "data": {
                        "body": "body",
                        "headers": "headers",
                        "is_large_payload": true,
                        "parsed_query": "parsed_query",
                        "path": "path",
                        "query": "query",
                      },
                      "event_data_id": "event_data_id",
                      "id": "id",
                      "label": "label",
                      "last_used_at": "2024-01-15T09:30:00Z",
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "webhook_id": "webhook_id",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/bookmarks/{id}",
              "request": {
                "name": "GetBookmarkRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "A single bookmark",
                "status-code": 200,
                "type": "root.Bookmark",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getBookmarks": {
              "auth": undefined,
              "display-name": "Get bookmarks",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "count": 1,
                      "models": [
                        {
                          "alias": "alias",
                          "created_at": "2024-01-15T09:30:00Z",
                          "data": {
                            "path": "path",
                          },
                          "event_data_id": "event_data_id",
                          "id": "id",
                          "label": "label",
                          "last_used_at": "2024-01-15T09:30:00Z",
                          "team_id": "team_id",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "webhook_id": "webhook_id",
                        },
                      ],
                      "pagination": {
                        "dir": "asc",
                        "limit": 1,
                        "next": "next",
                        "order_by": "order_by",
                        "prev": "prev",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/bookmarks",
              "request": {
                "name": "GetBookmarksRequest",
                "query-parameters": {
                  "dir": "optional<GetBookmarksRequestDir>",
                  "event_data_id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "label": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "last_used_at": "optional<root.GetBookmarksRequestLastUsedAt>",
                  "limit": {
                    "type": "optional<integer>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 255,
                      "min": 0,
                      "multipleOf": undefined,
                    },
                  },
                  "name": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 155,
                      "minLength": undefined,
                      "pattern": "^[A-z0-9-_]+$",
                    },
                  },
                  "next": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "order_by": "optional<GetBookmarksRequestOrderBy>",
                  "prev": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "webhook_id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "response": {
                "docs": "List of bookmarks",
                "status-code": 200,
                "type": "root.BookmarkPaginatedResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "triggerBookmark": {
              "auth": undefined,
              "display-name": "Trigger a bookmark",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.NotFoundError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "request": {},
                  "response": {
                    "body": [
                      {
                        "attempts": 1,
                        "cli_id": "cli_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "created_at_id": "created_at_id",
                        "data": {
                          "body": "body",
                          "headers": "headers",
                          "is_large_payload": true,
                          "parsed_query": "parsed_query",
                          "path": "path",
                          "query": "query",
                        },
                        "destination_id": "destination_id",
                        "event_data_id": "event_data_id",
                        "id": "id",
                        "last_attempt_at": "2024-01-15T09:30:00Z",
                        "last_attempt_at_id": "last_attempt_at_id",
                        "next_attempt_at": "2024-01-15T09:30:00Z",
                        "request_id": "request_id",
                        "response_status": 1,
                        "source_id": "source_id",
                        "status": "SCHEDULED",
                        "successful_at": "2024-01-15T09:30:00Z",
                        "team_id": "team_id",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "webhook_id": "webhook_id",
                      },
                    ],
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/bookmarks/{id}/trigger",
              "request": {
                "body": {
                  "properties": {
                    "target": {
                      "docs": "Bookmark target",
                      "type": "optional<TriggerBookmarkRequestTarget>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "TriggerBookmarkRequest",
                "path-parameters": {
                  "id": "string",
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Array of created events",
                "status-code": 200,
                "type": "root.EventArray",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "updateBookmark": {
              "auth": undefined,
              "display-name": "Update a bookmark",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.NotFoundError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "request": {},
                  "response": {
                    "body": {
                      "alias": "alias",
                      "created_at": "2024-01-15T09:30:00Z",
                      "data": {
                        "body": "body",
                        "headers": "headers",
                        "is_large_payload": true,
                        "parsed_query": "parsed_query",
                        "path": "path",
                        "query": "query",
                      },
                      "event_data_id": "event_data_id",
                      "id": "id",
                      "label": "label",
                      "last_used_at": "2024-01-15T09:30:00Z",
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "webhook_id": "webhook_id",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/bookmarks/{id}",
              "request": {
                "body": {
                  "properties": {
                    "event_data_id": {
                      "docs": "ID of the event data to bookmark",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": 255,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                    "label": {
                      "docs": "Descriptive name of the bookmark",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": 255,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                    "name": {
                      "docs": "A unique, human-friendly name for the bookmark",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": 155,
                        "minLength": undefined,
                        "pattern": "^[A-z0-9-_]+$",
                      },
                    },
                    "webhook_id": {
                      "docs": "ID of the associated connection",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": 255,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpdateBookmarkRequest",
                "path-parameters": {
                  "id": "string",
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "A single bookmark",
                "status-code": 200,
                "type": "root.Bookmark",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "GetBookmarksRequestDir": {
            "enum": [
              "asc",
              "desc",
            ],
          },
          "GetBookmarksRequestOrderBy": {
            "enum": [
              "created_at",
            ],
          },
          "TriggerBookmarkRequestTarget": {
            "docs": "Bookmark target",
            "enum": [
              "http",
              "cli",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
types:
  GetBookmarksRequestOrderBy:
    enum:
      - created_at
  GetBookmarksRequestDir:
    enum:
      - asc
      - desc
  TriggerBookmarkRequestTarget:
    enum:
      - http
      - cli
    docs: Bookmark target
    inline: true
    source:
      openapi: ../openapi.yml
service:
  auth: false
  base-path: ''
  endpoints:
    getBookmarks:
      path: /bookmarks
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get bookmarks
      request:
        name: GetBookmarksRequest
        query-parameters:
          id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          name:
            type: optional<string>
            allow-multiple: true
            validation:
              pattern: ^[A-z0-9-_]+$
              maxLength: 155
          webhook_id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          event_data_id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          label:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          last_used_at: optional<root.GetBookmarksRequestLastUsedAt>
          order_by: optional<GetBookmarksRequestOrderBy>
          dir: optional<GetBookmarksRequestDir>
          limit:
            type: optional<integer>
            validation:
              min: 0
              max: 255
          next:
            type: optional<string>
            validation:
              maxLength: 255
          prev:
            type: optional<string>
            validation:
              maxLength: 255
      response:
        docs: List of bookmarks
        type: root.BookmarkPaginatedResult
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - response:
            body:
              pagination:
                order_by: order_by
                dir: asc
                limit: 1
                prev: prev
                next: next
              count: 1
              models:
                - id: id
                  team_id: team_id
                  webhook_id: webhook_id
                  event_data_id: event_data_id
                  label: label
                  alias: alias
                  data:
                    path: path
                  last_used_at: '2024-01-15T09:30:00Z'
                  updated_at: '2024-01-15T09:30:00Z'
                  created_at: '2024-01-15T09:30:00Z'
    createBookmark:
      path: /bookmarks
      method: POST
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Create a bookmark
      request:
        name: CreateBookmarkRequest
        body:
          properties:
            event_data_id:
              type: string
              docs: ID of the event data to bookmark
              validation:
                maxLength: 255
            webhook_id:
              type: string
              docs: ID of the associated connection
              validation:
                maxLength: 255
            label:
              type: string
              docs: Descriptive name of the bookmark
              validation:
                maxLength: 255
            name:
              type: optional<string>
              docs: A unique, human-friendly name for the bookmark
              validation:
                pattern: ^[A-z0-9-_]+$
                maxLength: 155
        content-type: application/json
      response:
        docs: A single bookmark
        type: root.Bookmark
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - request:
            event_data_id: event_data_id
            webhook_id: webhook_id
            label: label
          response:
            body:
              id: id
              team_id: team_id
              webhook_id: webhook_id
              event_data_id: event_data_id
              label: label
              alias: alias
              data:
                path: path
                query: query
                parsed_query: parsed_query
                headers: headers
                body: body
                is_large_payload: true
              last_used_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
    getBookmark:
      path: /bookmarks/{id}
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get a single bookmark
      request:
        name: GetBookmarkRequest
        path-parameters:
          id: string
      response:
        docs: A single bookmark
        type: root.Bookmark
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              team_id: team_id
              webhook_id: webhook_id
              event_data_id: event_data_id
              label: label
              alias: alias
              data:
                path: path
                query: query
                parsed_query: parsed_query
                headers: headers
                body: body
                is_large_payload: true
              last_used_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
    updateBookmark:
      path: /bookmarks/{id}
      method: PUT
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Update a bookmark
      request:
        name: UpdateBookmarkRequest
        path-parameters:
          id: string
        body:
          properties:
            event_data_id:
              type: optional<string>
              docs: ID of the event data to bookmark
              validation:
                maxLength: 255
            webhook_id:
              type: optional<string>
              docs: ID of the associated connection
              validation:
                maxLength: 255
            label:
              type: optional<string>
              docs: Descriptive name of the bookmark
              validation:
                maxLength: 255
            name:
              type: optional<string>
              docs: A unique, human-friendly name for the bookmark
              validation:
                pattern: ^[A-z0-9-_]+$
                maxLength: 155
        content-type: application/json
      response:
        docs: A single bookmark
        type: root.Bookmark
        status-code: 200
      errors:
        - root.BadRequestError
        - root.NotFoundError
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            id: id
          request: {}
          response:
            body:
              id: id
              team_id: team_id
              webhook_id: webhook_id
              event_data_id: event_data_id
              label: label
              alias: alias
              data:
                path: path
                query: query
                parsed_query: parsed_query
                headers: headers
                body: body
                is_large_payload: true
              last_used_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
    deleteBookmark:
      path: /bookmarks/{id}
      method: DELETE
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Delete a bookmark
      request:
        name: DeleteBookmarkRequest
        path-parameters:
          id: string
      response:
        docs: An object with deleted bookmark's id
        type: root.DeletedBookmarkResponse
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
    triggerBookmark:
      path: /bookmarks/{id}/trigger
      method: POST
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Trigger a bookmark
      request:
        name: TriggerBookmarkRequest
        path-parameters:
          id: string
        body:
          properties:
            target:
              type: optional<TriggerBookmarkRequestTarget>
              docs: Bookmark target
        content-type: application/json
      response:
        docs: Array of created events
        type: root.EventArray
        status-code: 200
      errors:
        - root.BadRequestError
        - root.NotFoundError
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            id: id
          request: {}
          response:
            body:
              - id: id
                team_id: team_id
                webhook_id: webhook_id
                source_id: source_id
                destination_id: destination_id
                event_data_id: event_data_id
                request_id: request_id
                attempts: 1
                data:
                  path: path
                  query: query
                  parsed_query: parsed_query
                  headers: headers
                  body: body
                  is_large_payload: true
                last_attempt_at: '2024-01-15T09:30:00Z'
                next_attempt_at: '2024-01-15T09:30:00Z'
                response_status: 1
                status: SCHEDULED
                successful_at: '2024-01-15T09:30:00Z'
                cli_id: cli_id
                updated_at: '2024-01-15T09:30:00Z'
                created_at: '2024-01-15T09:30:00Z'
                created_at_id: created_at_id
                last_attempt_at_id: last_attempt_at_id
  source:
    openapi: ../openapi.yml
  display-name: Bookmarks
docs: A bookmark lets you conveniently store and replay a specific request.
",
    },
    "bulkRetryEvents.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Bulk retry events",
          "endpoints": {
            "cancelEventBulkRetry": {
              "auth": undefined,
              "display-name": "Cancel an events bulk retry",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "cancelled_at": "2024-01-15T09:30:00Z",
                      "completed_at": "2024-01-15T09:30:00Z",
                      "completed_count": 1,
                      "created_at": "2024-01-15T09:30:00Z",
                      "estimated_batch": 1,
                      "estimated_count": 1,
                      "failed_count": 1,
                      "id": "id",
                      "in_progress": true,
                      "number": 1.1,
                      "processed_batch": 1,
                      "progress": 1.1,
                      "query": {
                        "key": "value",
                      },
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/bulk/events/retry/{id}/cancel",
              "request": {
                "name": "CancelEventBulkRetryRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "A single events bulk retry",
                "status-code": 200,
                "type": "root.BatchOperation",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "createEventBulkRetry": {
              "auth": undefined,
              "display-name": "Create an events bulk retry",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "request": {},
                  "response": {
                    "body": {
                      "cancelled_at": "2024-01-15T09:30:00Z",
                      "completed_at": "2024-01-15T09:30:00Z",
                      "completed_count": 1,
                      "created_at": "2024-01-15T09:30:00Z",
                      "estimated_batch": 1,
                      "estimated_count": 1,
                      "failed_count": 1,
                      "id": "id",
                      "in_progress": true,
                      "number": 1.1,
                      "processed_batch": 1,
                      "progress": 1.1,
                      "query": {
                        "key": "value",
                      },
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/bulk/events/retry",
              "request": {
                "body": {
                  "properties": {
                    "query": {
                      "docs": "Filter properties for the events to be included in the bulk retry",
                      "type": "optional<CreateEventBulkRetryRequestQuery>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateEventBulkRetryRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "A single events bulk retry",
                "status-code": 200,
                "type": "root.BatchOperation",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "generateEventBulkRetryPlan": {
              "auth": undefined,
              "display-name": "Generate an events bulk retry plan",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "estimated_batch": 1,
                      "estimated_count": 1,
                      "progress": 1.1,
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/bulk/events/retry/plan",
              "request": {
                "name": "GenerateEventBulkRetryPlanRequest",
                "query-parameters": {
                  "query": "optional<root.GenerateEventBulkRetryPlanRequestQuery>",
                },
              },
              "response": {
                "docs": "Events bulk retry plan",
                "status-code": 200,
                "type": "root.BatchOperationPlan",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getEventBulkRetries": {
              "auth": undefined,
              "display-name": "Get events bulk retries",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "count": 1,
                      "models": [
                        {
                          "cancelled_at": "2024-01-15T09:30:00Z",
                          "completed_at": "2024-01-15T09:30:00Z",
                          "completed_count": 1,
                          "created_at": "2024-01-15T09:30:00Z",
                          "estimated_batch": 1,
                          "estimated_count": 1,
                          "failed_count": 1,
                          "id": "id",
                          "in_progress": true,
                          "number": 1.1,
                          "processed_batch": 1,
                          "progress": 1.1,
                          "query": {
                            "key": "value",
                          },
                          "team_id": "team_id",
                          "updated_at": "2024-01-15T09:30:00Z",
                        },
                      ],
                      "pagination": {
                        "dir": "asc",
                        "limit": 1,
                        "next": "next",
                        "order_by": "order_by",
                        "prev": "prev",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/bulk/events/retry",
              "request": {
                "name": "GetEventBulkRetriesRequest",
                "query-parameters": {
                  "cancelled_at": "optional<root.GetEventBulkRetriesRequestCancelledAt>",
                  "completed_at": "optional<root.GetEventBulkRetriesRequestCompletedAt>",
                  "created_at": "optional<root.GetEventBulkRetriesRequestCreatedAt>",
                  "dir": "optional<GetEventBulkRetriesRequestDir>",
                  "id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "in_progress": "optional<boolean>",
                  "limit": {
                    "type": "optional<integer>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 255,
                      "min": 0,
                      "multipleOf": undefined,
                    },
                  },
                  "next": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "order_by": "optional<GetEventBulkRetriesRequestOrderBy>",
                  "prev": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "query": "optional<root.GetEventBulkRetriesRequestQuery>",
                  "query_partial_match": "optional<boolean>",
                },
              },
              "response": {
                "docs": "List of events bulk retries",
                "status-code": 200,
                "type": "root.BatchOperationPaginatedResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getEventBulkRetry": {
              "auth": undefined,
              "display-name": "Get an events bulk retry",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "cancelled_at": "2024-01-15T09:30:00Z",
                      "completed_at": "2024-01-15T09:30:00Z",
                      "completed_count": 1,
                      "created_at": "2024-01-15T09:30:00Z",
                      "estimated_batch": 1,
                      "estimated_count": 1,
                      "failed_count": 1,
                      "id": "id",
                      "in_progress": true,
                      "number": 1.1,
                      "processed_batch": 1,
                      "progress": 1.1,
                      "query": {
                        "key": "value",
                      },
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/bulk/events/retry/{id}",
              "request": {
                "name": "GetEventBulkRetryRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "A single events bulk retry",
                "status-code": 200,
                "type": "root.BatchOperation",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "CreateEventBulkRetryRequestQuery": {
            "docs": "Filter properties for the events to be included in the bulk retry",
            "inline": true,
            "properties": {
              "attempts": {
                "docs": "Filter by number of attempts",
                "type": "optional<CreateEventBulkRetryRequestQueryAttempts>",
              },
              "body": {
                "docs": "URL Encoded string of the JSON to match to the data body",
                "type": "optional<CreateEventBulkRetryRequestQueryBody>",
              },
              "bulk_retry_id": "optional<CreateEventBulkRetryRequestQueryBulkRetryId>",
              "cli_id": {
                "docs": "Filter by CLI IDs. `?[any]=true` operator for any CLI.",
                "type": "optional<nullable<CreateEventBulkRetryRequestQueryCliId>>",
              },
              "cli_user_id": "optional<nullable<CreateEventBulkRetryRequestQueryCliUserId>>",
              "created_at": {
                "docs": "Filter by `created_at` date using a date operator",
                "type": "optional<CreateEventBulkRetryRequestQueryCreatedAt>",
              },
              "destination_id": {
                "docs": "Filter by destination IDs",
                "type": "optional<CreateEventBulkRetryRequestQueryDestinationId>",
              },
              "error_code": "optional<CreateEventBulkRetryRequestQueryErrorCode>",
              "event_data_id": "optional<CreateEventBulkRetryRequestQueryEventDataId>",
              "headers": {
                "docs": "URL Encoded string of the JSON to match to the data headers",
                "type": "optional<CreateEventBulkRetryRequestQueryHeaders>",
              },
              "id": {
                "docs": "Filter by event IDs",
                "type": "optional<CreateEventBulkRetryRequestQueryId>",
              },
              "issue_id": "optional<CreateEventBulkRetryRequestQueryIssueId>",
              "last_attempt_at": {
                "docs": "Filter by `last_attempt_at` date using a date operator",
                "type": "optional<nullable<CreateEventBulkRetryRequestQueryLastAttemptAt>>",
              },
              "parsed_query": {
                "docs": "URL Encoded string of the JSON to match to the parsed query (JSON representation of the query)",
                "type": "optional<CreateEventBulkRetryRequestQueryParsedQuery>",
              },
              "path": {
                "docs": "URL Encoded string of the string to match partially to the path",
                "type": "optional<string>",
              },
              "response_status": {
                "docs": "Filter by HTTP response status code",
                "type": "optional<nullable<CreateEventBulkRetryRequestQueryResponseStatus>>",
              },
              "source_id": {
                "docs": "Filter by source IDs",
                "type": "optional<CreateEventBulkRetryRequestQuerySourceId>",
              },
              "status": {
                "docs": "Lifecyle status of the event",
                "type": "optional<CreateEventBulkRetryRequestQueryStatus>",
              },
              "successful_at": {
                "docs": "Filter by `successful_at` date using a date operator",
                "type": "optional<nullable<CreateEventBulkRetryRequestQuerySuccessfulAt>>",
              },
              "webhook_id": {
                "docs": "Filter by webhook connection IDs",
                "type": "optional<CreateEventBulkRetryRequestQueryWebhookId>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateEventBulkRetryRequestQueryAttempts": {
            "discriminated": false,
            "docs": "Filter by number of attempts",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "integer",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "CreateEventBulkRetryRequestQueryAttemptsAny",
            ],
          },
          "CreateEventBulkRetryRequestQueryAttemptsAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "contains": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "gt": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "gte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "le": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "lte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateEventBulkRetryRequestQueryBody": {
            "discriminated": false,
            "docs": "URL Encoded string of the JSON to match to the data body",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "CreateEventBulkRetryRequestQueryBodyOne",
            ],
          },
          "CreateEventBulkRetryRequestQueryBodyOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateEventBulkRetryRequestQueryBulkRetryId": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "CreateEventBulkRetryRequestQueryCliId": {
            "discriminated": false,
            "docs": "Filter by CLI IDs. `?[any]=true` operator for any CLI.",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "CreateEventBulkRetryRequestQueryCliIdAny",
              "list<string>",
            ],
          },
          "CreateEventBulkRetryRequestQueryCliIdAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateEventBulkRetryRequestQueryCliUserId": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "list<string>",
            ],
          },
          "CreateEventBulkRetryRequestQueryCreatedAt": {
            "discriminated": false,
            "docs": "Filter by `created_at` date using a date operator",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "datetime",
              "CreateEventBulkRetryRequestQueryCreatedAtAny",
            ],
          },
          "CreateEventBulkRetryRequestQueryCreatedAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<datetime>",
              "gte": "optional<datetime>",
              "le": "optional<datetime>",
              "lte": "optional<datetime>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateEventBulkRetryRequestQueryDestinationId": {
            "discriminated": false,
            "docs": "Filter by destination IDs",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "docs": "Destination ID",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "CreateEventBulkRetryRequestQueryErrorCode": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "CreateEventBulkRetryRequestQueryEventDataId": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "CreateEventBulkRetryRequestQueryHeaders": {
            "discriminated": false,
            "docs": "URL Encoded string of the JSON to match to the data headers",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "CreateEventBulkRetryRequestQueryHeadersOne",
            ],
          },
          "CreateEventBulkRetryRequestQueryHeadersOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateEventBulkRetryRequestQueryId": {
            "discriminated": false,
            "docs": "Filter by event IDs",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "docs": "Event ID",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "CreateEventBulkRetryRequestQueryIssueId": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "CreateEventBulkRetryRequestQueryLastAttemptAt": {
            "discriminated": false,
            "docs": "Filter by `last_attempt_at` date using a date operator",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "datetime",
              "CreateEventBulkRetryRequestQueryLastAttemptAtAny",
            ],
          },
          "CreateEventBulkRetryRequestQueryLastAttemptAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<datetime>",
              "gte": "optional<datetime>",
              "le": "optional<datetime>",
              "lte": "optional<datetime>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateEventBulkRetryRequestQueryParsedQuery": {
            "discriminated": false,
            "docs": "URL Encoded string of the JSON to match to the parsed query (JSON representation of the query)",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "CreateEventBulkRetryRequestQueryParsedQueryOne",
            ],
          },
          "CreateEventBulkRetryRequestQueryParsedQueryOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateEventBulkRetryRequestQueryResponseStatus": {
            "discriminated": false,
            "docs": "Filter by HTTP response status code",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "integer",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 600,
                  "min": 200,
                  "multipleOf": undefined,
                },
              },
              "CreateEventBulkRetryRequestQueryResponseStatusAny",
              "list<integer>",
            ],
          },
          "CreateEventBulkRetryRequestQueryResponseStatusAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "contains": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 600,
                  "min": 200,
                  "multipleOf": undefined,
                },
              },
              "gt": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 600,
                  "min": 200,
                  "multipleOf": undefined,
                },
              },
              "gte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 600,
                  "min": 200,
                  "multipleOf": undefined,
                },
              },
              "le": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 600,
                  "min": 200,
                  "multipleOf": undefined,
                },
              },
              "lte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 600,
                  "min": 200,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateEventBulkRetryRequestQuerySourceId": {
            "discriminated": false,
            "docs": "Filter by source IDs",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "docs": "Source ID",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "CreateEventBulkRetryRequestQueryStatus": {
            "discriminated": false,
            "docs": "Lifecyle status of the event",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "root.EventStatus",
              "list<root.EventStatus>",
            ],
          },
          "CreateEventBulkRetryRequestQuerySuccessfulAt": {
            "discriminated": false,
            "docs": "Filter by `successful_at` date using a date operator",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "datetime",
              "CreateEventBulkRetryRequestQuerySuccessfulAtAny",
            ],
          },
          "CreateEventBulkRetryRequestQuerySuccessfulAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<datetime>",
              "gte": "optional<datetime>",
              "le": "optional<datetime>",
              "lte": "optional<datetime>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateEventBulkRetryRequestQueryWebhookId": {
            "discriminated": false,
            "docs": "Filter by webhook connection IDs",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "docs": "Webhook ID",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "GetEventBulkRetriesRequestDir": {
            "enum": [
              "asc",
              "desc",
            ],
          },
          "GetEventBulkRetriesRequestOrderBy": {
            "enum": [
              "created_at",
            ],
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
types:
  GetEventBulkRetriesRequestOrderBy:
    enum:
      - created_at
  GetEventBulkRetriesRequestDir:
    enum:
      - asc
      - desc
  CreateEventBulkRetryRequestQueryId:
    discriminated: false
    docs: Filter by event IDs
    union:
      - type: string
        docs: Event ID
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  CreateEventBulkRetryRequestQueryStatus:
    discriminated: false
    docs: Lifecyle status of the event
    union:
      - root.EventStatus
      - list<root.EventStatus>
    source:
      openapi: ../openapi.yml
    inline: true
  CreateEventBulkRetryRequestQueryIssueId:
    discriminated: false
    union:
      - type: string
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  CreateEventBulkRetryRequestQueryWebhookId:
    discriminated: false
    docs: Filter by webhook connection IDs
    union:
      - type: string
        docs: Webhook ID
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  CreateEventBulkRetryRequestQueryDestinationId:
    discriminated: false
    docs: Filter by destination IDs
    union:
      - type: string
        docs: Destination ID
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  CreateEventBulkRetryRequestQuerySourceId:
    discriminated: false
    docs: Filter by source IDs
    union:
      - type: string
        docs: Source ID
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  CreateEventBulkRetryRequestQueryAttemptsAny:
    properties:
      gt:
        type: optional<integer>
        validation:
          min: 0
      gte:
        type: optional<integer>
        validation:
          min: 0
      le:
        type: optional<integer>
        validation:
          min: 0
      lte:
        type: optional<integer>
        validation:
          min: 0
      any: optional<boolean>
      contains:
        type: optional<integer>
        validation:
          min: 0
    source:
      openapi: ../openapi.yml
    inline: true
  CreateEventBulkRetryRequestQueryAttempts:
    discriminated: false
    docs: Filter by number of attempts
    union:
      - type: integer
        validation:
          min: 0
      - CreateEventBulkRetryRequestQueryAttemptsAny
    source:
      openapi: ../openapi.yml
    inline: true
  CreateEventBulkRetryRequestQueryResponseStatusAny:
    properties:
      gt:
        type: optional<integer>
        validation:
          min: 200
          max: 600
      gte:
        type: optional<integer>
        validation:
          min: 200
          max: 600
      le:
        type: optional<integer>
        validation:
          min: 200
          max: 600
      lte:
        type: optional<integer>
        validation:
          min: 200
          max: 600
      any: optional<boolean>
      contains:
        type: optional<integer>
        validation:
          min: 200
          max: 600
    source:
      openapi: ../openapi.yml
    inline: true
  CreateEventBulkRetryRequestQueryResponseStatus:
    discriminated: false
    docs: Filter by HTTP response status code
    union:
      - type: integer
        validation:
          min: 200
          max: 600
      - CreateEventBulkRetryRequestQueryResponseStatusAny
      - list<integer>
    source:
      openapi: ../openapi.yml
    inline: true
  CreateEventBulkRetryRequestQuerySuccessfulAtAny:
    properties:
      gt: optional<datetime>
      gte: optional<datetime>
      le: optional<datetime>
      lte: optional<datetime>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  CreateEventBulkRetryRequestQuerySuccessfulAt:
    discriminated: false
    docs: Filter by `successful_at` date using a date operator
    union:
      - datetime
      - CreateEventBulkRetryRequestQuerySuccessfulAtAny
    source:
      openapi: ../openapi.yml
    inline: true
  CreateEventBulkRetryRequestQueryCreatedAtAny:
    properties:
      gt: optional<datetime>
      gte: optional<datetime>
      le: optional<datetime>
      lte: optional<datetime>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  CreateEventBulkRetryRequestQueryCreatedAt:
    discriminated: false
    docs: Filter by `created_at` date using a date operator
    union:
      - datetime
      - CreateEventBulkRetryRequestQueryCreatedAtAny
    source:
      openapi: ../openapi.yml
    inline: true
  CreateEventBulkRetryRequestQueryErrorCode:
    discriminated: false
    union:
      - type: string
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  CreateEventBulkRetryRequestQueryCliIdAny:
    properties:
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  CreateEventBulkRetryRequestQueryCliId:
    discriminated: false
    docs: Filter by CLI IDs. `?[any]=true` operator for any CLI.
    union:
      - string
      - CreateEventBulkRetryRequestQueryCliIdAny
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  CreateEventBulkRetryRequestQueryCliUserId:
    discriminated: false
    union:
      - string
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  CreateEventBulkRetryRequestQueryLastAttemptAtAny:
    properties:
      gt: optional<datetime>
      gte: optional<datetime>
      le: optional<datetime>
      lte: optional<datetime>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  CreateEventBulkRetryRequestQueryLastAttemptAt:
    discriminated: false
    docs: Filter by `last_attempt_at` date using a date operator
    union:
      - datetime
      - CreateEventBulkRetryRequestQueryLastAttemptAtAny
    source:
      openapi: ../openapi.yml
    inline: true
  CreateEventBulkRetryRequestQueryEventDataId:
    discriminated: false
    union:
      - type: string
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  CreateEventBulkRetryRequestQueryHeadersOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  CreateEventBulkRetryRequestQueryHeaders:
    discriminated: false
    docs: URL Encoded string of the JSON to match to the data headers
    union:
      - string
      - CreateEventBulkRetryRequestQueryHeadersOne
    source:
      openapi: ../openapi.yml
    inline: true
  CreateEventBulkRetryRequestQueryBodyOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  CreateEventBulkRetryRequestQueryBody:
    discriminated: false
    docs: URL Encoded string of the JSON to match to the data body
    union:
      - string
      - CreateEventBulkRetryRequestQueryBodyOne
    source:
      openapi: ../openapi.yml
    inline: true
  CreateEventBulkRetryRequestQueryParsedQueryOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  CreateEventBulkRetryRequestQueryParsedQuery:
    discriminated: false
    docs: >-
      URL Encoded string of the JSON to match to the parsed query (JSON
      representation of the query)
    union:
      - string
      - CreateEventBulkRetryRequestQueryParsedQueryOne
    source:
      openapi: ../openapi.yml
    inline: true
  CreateEventBulkRetryRequestQueryBulkRetryId:
    discriminated: false
    union:
      - type: string
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  CreateEventBulkRetryRequestQuery:
    docs: Filter properties for the events to be included in the bulk retry
    properties:
      id:
        type: optional<CreateEventBulkRetryRequestQueryId>
        docs: Filter by event IDs
      status:
        type: optional<CreateEventBulkRetryRequestQueryStatus>
        docs: Lifecyle status of the event
      issue_id: optional<CreateEventBulkRetryRequestQueryIssueId>
      webhook_id:
        type: optional<CreateEventBulkRetryRequestQueryWebhookId>
        docs: Filter by webhook connection IDs
      destination_id:
        type: optional<CreateEventBulkRetryRequestQueryDestinationId>
        docs: Filter by destination IDs
      source_id:
        type: optional<CreateEventBulkRetryRequestQuerySourceId>
        docs: Filter by source IDs
      attempts:
        type: optional<CreateEventBulkRetryRequestQueryAttempts>
        docs: Filter by number of attempts
      response_status:
        type: optional<nullable<CreateEventBulkRetryRequestQueryResponseStatus>>
        docs: Filter by HTTP response status code
      successful_at:
        type: optional<nullable<CreateEventBulkRetryRequestQuerySuccessfulAt>>
        docs: Filter by `successful_at` date using a date operator
      created_at:
        type: optional<CreateEventBulkRetryRequestQueryCreatedAt>
        docs: Filter by `created_at` date using a date operator
      error_code: optional<CreateEventBulkRetryRequestQueryErrorCode>
      cli_id:
        type: optional<nullable<CreateEventBulkRetryRequestQueryCliId>>
        docs: Filter by CLI IDs. `?[any]=true` operator for any CLI.
      cli_user_id: optional<nullable<CreateEventBulkRetryRequestQueryCliUserId>>
      last_attempt_at:
        type: optional<nullable<CreateEventBulkRetryRequestQueryLastAttemptAt>>
        docs: Filter by `last_attempt_at` date using a date operator
      event_data_id: optional<CreateEventBulkRetryRequestQueryEventDataId>
      headers:
        type: optional<CreateEventBulkRetryRequestQueryHeaders>
        docs: URL Encoded string of the JSON to match to the data headers
      body:
        type: optional<CreateEventBulkRetryRequestQueryBody>
        docs: URL Encoded string of the JSON to match to the data body
      parsed_query:
        type: optional<CreateEventBulkRetryRequestQueryParsedQuery>
        docs: >-
          URL Encoded string of the JSON to match to the parsed query (JSON
          representation of the query)
      bulk_retry_id: optional<CreateEventBulkRetryRequestQueryBulkRetryId>
      path:
        type: optional<string>
        docs: URL Encoded string of the string to match partially to the path
    source:
      openapi: ../openapi.yml
    inline: true
service:
  auth: false
  base-path: ''
  endpoints:
    getEventBulkRetries:
      path: /bulk/events/retry
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get events bulk retries
      request:
        name: GetEventBulkRetriesRequest
        query-parameters:
          cancelled_at: optional<root.GetEventBulkRetriesRequestCancelledAt>
          completed_at: optional<root.GetEventBulkRetriesRequestCompletedAt>
          created_at: optional<root.GetEventBulkRetriesRequestCreatedAt>
          id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          query: optional<root.GetEventBulkRetriesRequestQuery>
          query_partial_match: optional<boolean>
          in_progress: optional<boolean>
          order_by: optional<GetEventBulkRetriesRequestOrderBy>
          dir: optional<GetEventBulkRetriesRequestDir>
          limit:
            type: optional<integer>
            validation:
              min: 0
              max: 255
          next:
            type: optional<string>
            validation:
              maxLength: 255
          prev:
            type: optional<string>
            validation:
              maxLength: 255
      response:
        docs: List of events bulk retries
        type: root.BatchOperationPaginatedResult
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - response:
            body:
              pagination:
                order_by: order_by
                dir: asc
                limit: 1
                prev: prev
                next: next
              count: 1
              models:
                - id: id
                  team_id: team_id
                  query:
                    key: value
                  created_at: '2024-01-15T09:30:00Z'
                  updated_at: '2024-01-15T09:30:00Z'
                  cancelled_at: '2024-01-15T09:30:00Z'
                  completed_at: '2024-01-15T09:30:00Z'
                  estimated_batch: 1
                  estimated_count: 1
                  processed_batch: 1
                  completed_count: 1
                  in_progress: true
                  progress: 1.1
                  failed_count: 1
                  number: 1.1
    createEventBulkRetry:
      path: /bulk/events/retry
      method: POST
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Create an events bulk retry
      request:
        name: CreateEventBulkRetryRequest
        body:
          properties:
            query:
              type: optional<CreateEventBulkRetryRequestQuery>
              docs: >-
                Filter properties for the events to be included in the bulk
                retry
        content-type: application/json
      response:
        docs: A single events bulk retry
        type: root.BatchOperation
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - request: {}
          response:
            body:
              id: id
              team_id: team_id
              query:
                key: value
              created_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              cancelled_at: '2024-01-15T09:30:00Z'
              completed_at: '2024-01-15T09:30:00Z'
              estimated_batch: 1
              estimated_count: 1
              processed_batch: 1
              completed_count: 1
              in_progress: true
              progress: 1.1
              failed_count: 1
              number: 1.1
    generateEventBulkRetryPlan:
      path: /bulk/events/retry/plan
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Generate an events bulk retry plan
      request:
        name: GenerateEventBulkRetryPlanRequest
        query-parameters:
          query: optional<root.GenerateEventBulkRetryPlanRequestQuery>
      response:
        docs: Events bulk retry plan
        type: root.BatchOperationPlan
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - response:
            body:
              estimated_batch: 1
              estimated_count: 1
              progress: 1.1
    getEventBulkRetry:
      path: /bulk/events/retry/{id}
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get an events bulk retry
      request:
        name: GetEventBulkRetryRequest
        path-parameters:
          id: string
      response:
        docs: A single events bulk retry
        type: root.BatchOperation
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              team_id: team_id
              query:
                key: value
              created_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              cancelled_at: '2024-01-15T09:30:00Z'
              completed_at: '2024-01-15T09:30:00Z'
              estimated_batch: 1
              estimated_count: 1
              processed_batch: 1
              completed_count: 1
              in_progress: true
              progress: 1.1
              failed_count: 1
              number: 1.1
    cancelEventBulkRetry:
      path: /bulk/events/retry/{id}/cancel
      method: POST
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Cancel an events bulk retry
      request:
        name: CancelEventBulkRetryRequest
        path-parameters:
          id: string
      response:
        docs: A single events bulk retry
        type: root.BatchOperation
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              team_id: team_id
              query:
                key: value
              created_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              cancelled_at: '2024-01-15T09:30:00Z'
              completed_at: '2024-01-15T09:30:00Z'
              estimated_batch: 1
              estimated_count: 1
              processed_batch: 1
              completed_count: 1
              in_progress: true
              progress: 1.1
              failed_count: 1
              number: 1.1
  source:
    openapi: ../openapi.yml
  display-name: Bulk retry events
docs: ''
",
    },
    "bulkRetryIgnoredEvents.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Bulk retry ignored events",
          "endpoints": {
            "cancelIgnoredEventBulkRetry": {
              "auth": undefined,
              "display-name": "Cancel an ignored events bulk retry",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "cancelled_at": "2024-01-15T09:30:00Z",
                      "completed_at": "2024-01-15T09:30:00Z",
                      "completed_count": 1,
                      "created_at": "2024-01-15T09:30:00Z",
                      "estimated_batch": 1,
                      "estimated_count": 1,
                      "failed_count": 1,
                      "id": "id",
                      "in_progress": true,
                      "number": 1.1,
                      "processed_batch": 1,
                      "progress": 1.1,
                      "query": {
                        "key": "value",
                      },
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/bulk/ignored-events/retry/{id}/cancel",
              "request": {
                "name": "CancelIgnoredEventBulkRetryRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "A single ignored events bulk retry",
                "status-code": 200,
                "type": "root.BatchOperation",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "createIgnoredEventBulkRetry": {
              "auth": undefined,
              "display-name": "Create an ignored events bulk retry",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "request": {},
                  "response": {
                    "body": {
                      "cancelled_at": "2024-01-15T09:30:00Z",
                      "completed_at": "2024-01-15T09:30:00Z",
                      "completed_count": 1,
                      "created_at": "2024-01-15T09:30:00Z",
                      "estimated_batch": 1,
                      "estimated_count": 1,
                      "failed_count": 1,
                      "id": "id",
                      "in_progress": true,
                      "number": 1.1,
                      "processed_batch": 1,
                      "progress": 1.1,
                      "query": {
                        "key": "value",
                      },
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/bulk/ignored-events/retry",
              "request": {
                "body": {
                  "properties": {
                    "query": {
                      "docs": "Filter by the bulk retry ignored event query object",
                      "type": "optional<CreateIgnoredEventBulkRetryRequestQuery>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateIgnoredEventBulkRetryRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "A single ignored events bulk retry",
                "status-code": 200,
                "type": "root.BatchOperation",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "generateIgnoredEventBulkRetryPlan": {
              "auth": undefined,
              "display-name": "Generate an ignored events bulk retry plan",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "estimated_batch": 1,
                      "estimated_count": 1,
                      "progress": 1.1,
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/bulk/ignored-events/retry/plan",
              "request": {
                "name": "GenerateIgnoredEventBulkRetryPlanRequest",
                "query-parameters": {
                  "query": "optional<root.GenerateIgnoredEventBulkRetryPlanRequestQuery>",
                },
              },
              "response": {
                "docs": "Ignored events bulk retry plan",
                "status-code": 200,
                "type": "root.BatchOperationPlan",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getIgnoredEventBulkRetries": {
              "auth": undefined,
              "display-name": "Get ignored events bulk retries",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "count": 1,
                      "models": [
                        {
                          "cancelled_at": "2024-01-15T09:30:00Z",
                          "completed_at": "2024-01-15T09:30:00Z",
                          "completed_count": 1,
                          "created_at": "2024-01-15T09:30:00Z",
                          "estimated_batch": 1,
                          "estimated_count": 1,
                          "failed_count": 1,
                          "id": "id",
                          "in_progress": true,
                          "number": 1.1,
                          "processed_batch": 1,
                          "progress": 1.1,
                          "query": {
                            "key": "value",
                          },
                          "team_id": "team_id",
                          "updated_at": "2024-01-15T09:30:00Z",
                        },
                      ],
                      "pagination": {
                        "dir": "asc",
                        "limit": 1,
                        "next": "next",
                        "order_by": "order_by",
                        "prev": "prev",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/bulk/ignored-events/retry",
              "request": {
                "name": "GetIgnoredEventBulkRetriesRequest",
                "query-parameters": {
                  "cancelled_at": "optional<root.GetIgnoredEventBulkRetriesRequestCancelledAt>",
                  "completed_at": "optional<root.GetIgnoredEventBulkRetriesRequestCompletedAt>",
                  "created_at": "optional<root.GetIgnoredEventBulkRetriesRequestCreatedAt>",
                  "dir": "optional<GetIgnoredEventBulkRetriesRequestDir>",
                  "id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "in_progress": "optional<boolean>",
                  "limit": {
                    "type": "optional<integer>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 255,
                      "min": 0,
                      "multipleOf": undefined,
                    },
                  },
                  "next": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "order_by": "optional<GetIgnoredEventBulkRetriesRequestOrderBy>",
                  "prev": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "query": "optional<root.GetIgnoredEventBulkRetriesRequestQuery>",
                  "query_partial_match": "optional<boolean>",
                },
              },
              "response": {
                "docs": "List of ignored events bulk retries",
                "status-code": 200,
                "type": "root.BatchOperationPaginatedResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getIgnoredEventBulkRetry": {
              "auth": undefined,
              "display-name": "Get an ignored events bulk retry",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "cancelled_at": "2024-01-15T09:30:00Z",
                      "completed_at": "2024-01-15T09:30:00Z",
                      "completed_count": 1,
                      "created_at": "2024-01-15T09:30:00Z",
                      "estimated_batch": 1,
                      "estimated_count": 1,
                      "failed_count": 1,
                      "id": "id",
                      "in_progress": true,
                      "number": 1.1,
                      "processed_batch": 1,
                      "progress": 1.1,
                      "query": {
                        "key": "value",
                      },
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/bulk/ignored-events/retry/{id}",
              "request": {
                "name": "GetIgnoredEventBulkRetryRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "A single ignored events bulk retry",
                "status-code": 200,
                "type": "root.BatchOperation",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "CreateIgnoredEventBulkRetryRequestQuery": {
            "docs": "Filter by the bulk retry ignored event query object",
            "inline": true,
            "properties": {
              "cause": {
                "docs": "The cause of the ignored event",
                "type": "optional<CreateIgnoredEventBulkRetryRequestQueryCause>",
              },
              "transformation_id": {
                "docs": "The associated transformation ID (only applicable to the cause `TRANSFORMATION_FAILED`)",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "webhook_id": {
                "docs": "Connection ID of the ignored event",
                "type": "optional<CreateIgnoredEventBulkRetryRequestQueryWebhookId>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateIgnoredEventBulkRetryRequestQueryCause": {
            "discriminated": false,
            "docs": "The cause of the ignored event",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "CreateIgnoredEventBulkRetryRequestQueryWebhookId": {
            "discriminated": false,
            "docs": "Connection ID of the ignored event",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "GetIgnoredEventBulkRetriesRequestDir": {
            "enum": [
              "asc",
              "desc",
            ],
          },
          "GetIgnoredEventBulkRetriesRequestOrderBy": {
            "enum": [
              "created_at",
            ],
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
types:
  GetIgnoredEventBulkRetriesRequestOrderBy:
    enum:
      - created_at
  GetIgnoredEventBulkRetriesRequestDir:
    enum:
      - asc
      - desc
  CreateIgnoredEventBulkRetryRequestQueryCause:
    discriminated: false
    docs: The cause of the ignored event
    union:
      - type: string
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  CreateIgnoredEventBulkRetryRequestQueryWebhookId:
    discriminated: false
    docs: Connection ID of the ignored event
    union:
      - type: string
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  CreateIgnoredEventBulkRetryRequestQuery:
    docs: Filter by the bulk retry ignored event query object
    properties:
      cause:
        type: optional<CreateIgnoredEventBulkRetryRequestQueryCause>
        docs: The cause of the ignored event
      webhook_id:
        type: optional<CreateIgnoredEventBulkRetryRequestQueryWebhookId>
        docs: Connection ID of the ignored event
      transformation_id:
        type: optional<string>
        docs: >-
          The associated transformation ID (only applicable to the cause
          `TRANSFORMATION_FAILED`)
        validation:
          maxLength: 255
    source:
      openapi: ../openapi.yml
    inline: true
service:
  auth: false
  base-path: ''
  endpoints:
    getIgnoredEventBulkRetries:
      path: /bulk/ignored-events/retry
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get ignored events bulk retries
      request:
        name: GetIgnoredEventBulkRetriesRequest
        query-parameters:
          cancelled_at: optional<root.GetIgnoredEventBulkRetriesRequestCancelledAt>
          completed_at: optional<root.GetIgnoredEventBulkRetriesRequestCompletedAt>
          created_at: optional<root.GetIgnoredEventBulkRetriesRequestCreatedAt>
          id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          query: optional<root.GetIgnoredEventBulkRetriesRequestQuery>
          query_partial_match: optional<boolean>
          in_progress: optional<boolean>
          order_by: optional<GetIgnoredEventBulkRetriesRequestOrderBy>
          dir: optional<GetIgnoredEventBulkRetriesRequestDir>
          limit:
            type: optional<integer>
            validation:
              min: 0
              max: 255
          next:
            type: optional<string>
            validation:
              maxLength: 255
          prev:
            type: optional<string>
            validation:
              maxLength: 255
      response:
        docs: List of ignored events bulk retries
        type: root.BatchOperationPaginatedResult
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - response:
            body:
              pagination:
                order_by: order_by
                dir: asc
                limit: 1
                prev: prev
                next: next
              count: 1
              models:
                - id: id
                  team_id: team_id
                  query:
                    key: value
                  created_at: '2024-01-15T09:30:00Z'
                  updated_at: '2024-01-15T09:30:00Z'
                  cancelled_at: '2024-01-15T09:30:00Z'
                  completed_at: '2024-01-15T09:30:00Z'
                  estimated_batch: 1
                  estimated_count: 1
                  processed_batch: 1
                  completed_count: 1
                  in_progress: true
                  progress: 1.1
                  failed_count: 1
                  number: 1.1
    createIgnoredEventBulkRetry:
      path: /bulk/ignored-events/retry
      method: POST
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Create an ignored events bulk retry
      request:
        name: CreateIgnoredEventBulkRetryRequest
        body:
          properties:
            query:
              type: optional<CreateIgnoredEventBulkRetryRequestQuery>
              docs: Filter by the bulk retry ignored event query object
        content-type: application/json
      response:
        docs: A single ignored events bulk retry
        type: root.BatchOperation
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - request: {}
          response:
            body:
              id: id
              team_id: team_id
              query:
                key: value
              created_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              cancelled_at: '2024-01-15T09:30:00Z'
              completed_at: '2024-01-15T09:30:00Z'
              estimated_batch: 1
              estimated_count: 1
              processed_batch: 1
              completed_count: 1
              in_progress: true
              progress: 1.1
              failed_count: 1
              number: 1.1
    generateIgnoredEventBulkRetryPlan:
      path: /bulk/ignored-events/retry/plan
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Generate an ignored events bulk retry plan
      request:
        name: GenerateIgnoredEventBulkRetryPlanRequest
        query-parameters:
          query: optional<root.GenerateIgnoredEventBulkRetryPlanRequestQuery>
      response:
        docs: Ignored events bulk retry plan
        type: root.BatchOperationPlan
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - response:
            body:
              estimated_batch: 1
              estimated_count: 1
              progress: 1.1
    getIgnoredEventBulkRetry:
      path: /bulk/ignored-events/retry/{id}
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get an ignored events bulk retry
      request:
        name: GetIgnoredEventBulkRetryRequest
        path-parameters:
          id: string
      response:
        docs: A single ignored events bulk retry
        type: root.BatchOperation
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              team_id: team_id
              query:
                key: value
              created_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              cancelled_at: '2024-01-15T09:30:00Z'
              completed_at: '2024-01-15T09:30:00Z'
              estimated_batch: 1
              estimated_count: 1
              processed_batch: 1
              completed_count: 1
              in_progress: true
              progress: 1.1
              failed_count: 1
              number: 1.1
    cancelIgnoredEventBulkRetry:
      path: /bulk/ignored-events/retry/{id}/cancel
      method: POST
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Cancel an ignored events bulk retry
      request:
        name: CancelIgnoredEventBulkRetryRequest
        path-parameters:
          id: string
      response:
        docs: A single ignored events bulk retry
        type: root.BatchOperation
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              team_id: team_id
              query:
                key: value
              created_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              cancelled_at: '2024-01-15T09:30:00Z'
              completed_at: '2024-01-15T09:30:00Z'
              estimated_batch: 1
              estimated_count: 1
              processed_batch: 1
              completed_count: 1
              in_progress: true
              progress: 1.1
              failed_count: 1
              number: 1.1
  source:
    openapi: ../openapi.yml
  display-name: Bulk retry ignored events
docs: ''
",
    },
    "bulkRetryRequests.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Bulk retry requests",
          "endpoints": {
            "cancelRequestBulkRetry": {
              "auth": undefined,
              "display-name": "Cancel a requests bulk retry",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "cancelled_at": "2024-01-15T09:30:00Z",
                      "completed_at": "2024-01-15T09:30:00Z",
                      "completed_count": 1,
                      "created_at": "2024-01-15T09:30:00Z",
                      "estimated_batch": 1,
                      "estimated_count": 1,
                      "failed_count": 1,
                      "id": "id",
                      "in_progress": true,
                      "number": 1.1,
                      "processed_batch": 1,
                      "progress": 1.1,
                      "query": {
                        "key": "value",
                      },
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/bulk/requests/retry/{id}/cancel",
              "request": {
                "name": "CancelRequestBulkRetryRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "A single requests bulk retry",
                "status-code": 200,
                "type": "root.BatchOperation",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "createRequestBulkRetry": {
              "auth": undefined,
              "display-name": "Create a requests bulk retry",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "request": {},
                  "response": {
                    "body": {
                      "cancelled_at": "2024-01-15T09:30:00Z",
                      "completed_at": "2024-01-15T09:30:00Z",
                      "completed_count": 1,
                      "created_at": "2024-01-15T09:30:00Z",
                      "estimated_batch": 1,
                      "estimated_count": 1,
                      "failed_count": 1,
                      "id": "id",
                      "in_progress": true,
                      "number": 1.1,
                      "processed_batch": 1,
                      "progress": 1.1,
                      "query": {
                        "key": "value",
                      },
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/bulk/requests/retry",
              "request": {
                "body": {
                  "properties": {
                    "query": {
                      "docs": "Filter properties for the events to be included in the bulk retry, use query parameters of [Requests](#requests)",
                      "type": "optional<CreateRequestBulkRetryRequestQuery>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateRequestBulkRetryRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "A single requests bulk retry",
                "status-code": 200,
                "type": "root.BatchOperation",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "generateRequestBulkRetryPlan": {
              "auth": undefined,
              "display-name": "Generate a requests bulk retry plan",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "estimated_batch": 1,
                      "estimated_count": 1,
                      "progress": 1.1,
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/bulk/requests/retry/plan",
              "request": {
                "name": "GenerateRequestBulkRetryPlanRequest",
                "query-parameters": {
                  "query": "optional<root.GenerateRequestBulkRetryPlanRequestQuery>",
                },
              },
              "response": {
                "docs": "Requests bulk retry plan",
                "status-code": 200,
                "type": "root.BatchOperationPlan",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getRequestBulkRetries": {
              "auth": undefined,
              "display-name": "Get request bulk retries",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "count": 1,
                      "models": [
                        {
                          "cancelled_at": "2024-01-15T09:30:00Z",
                          "completed_at": "2024-01-15T09:30:00Z",
                          "completed_count": 1,
                          "created_at": "2024-01-15T09:30:00Z",
                          "estimated_batch": 1,
                          "estimated_count": 1,
                          "failed_count": 1,
                          "id": "id",
                          "in_progress": true,
                          "number": 1.1,
                          "processed_batch": 1,
                          "progress": 1.1,
                          "query": {
                            "key": "value",
                          },
                          "team_id": "team_id",
                          "updated_at": "2024-01-15T09:30:00Z",
                        },
                      ],
                      "pagination": {
                        "dir": "asc",
                        "limit": 1,
                        "next": "next",
                        "order_by": "order_by",
                        "prev": "prev",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/bulk/requests/retry",
              "request": {
                "name": "GetRequestBulkRetriesRequest",
                "query-parameters": {
                  "cancelled_at": "optional<root.GetRequestBulkRetriesRequestCancelledAt>",
                  "completed_at": "optional<root.GetRequestBulkRetriesRequestCompletedAt>",
                  "created_at": "optional<root.GetRequestBulkRetriesRequestCreatedAt>",
                  "dir": "optional<GetRequestBulkRetriesRequestDir>",
                  "id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "in_progress": "optional<boolean>",
                  "limit": {
                    "type": "optional<integer>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 255,
                      "min": 0,
                      "multipleOf": undefined,
                    },
                  },
                  "next": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "order_by": "optional<GetRequestBulkRetriesRequestOrderBy>",
                  "prev": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "query": "optional<root.GetRequestBulkRetriesRequestQuery>",
                  "query_partial_match": "optional<boolean>",
                },
              },
              "response": {
                "docs": "List of request bulk retries",
                "status-code": 200,
                "type": "root.BatchOperationPaginatedResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getRequestBulkRetry": {
              "auth": undefined,
              "display-name": "Get a requests bulk retry",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "cancelled_at": "2024-01-15T09:30:00Z",
                      "completed_at": "2024-01-15T09:30:00Z",
                      "completed_count": 1,
                      "created_at": "2024-01-15T09:30:00Z",
                      "estimated_batch": 1,
                      "estimated_count": 1,
                      "failed_count": 1,
                      "id": "id",
                      "in_progress": true,
                      "number": 1.1,
                      "processed_batch": 1,
                      "progress": 1.1,
                      "query": {
                        "key": "value",
                      },
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/bulk/requests/retry/{id}",
              "request": {
                "name": "GetRequestBulkRetryRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "A single requests bulk retry",
                "status-code": 200,
                "type": "root.BatchOperation",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "CreateRequestBulkRetryRequestQuery": {
            "docs": "Filter properties for the events to be included in the bulk retry, use query parameters of [Requests](#requests)",
            "inline": true,
            "properties": {
              "body": {
                "docs": "URL Encoded string of the JSON to match to the data body",
                "type": "optional<CreateRequestBulkRetryRequestQueryBody>",
              },
              "bulk_retry_id": "optional<CreateRequestBulkRetryRequestQueryBulkRetryId>",
              "created_at": "optional<CreateRequestBulkRetryRequestQueryCreatedAt>",
              "events_count": "optional<CreateRequestBulkRetryRequestQueryEventsCount>",
              "headers": {
                "docs": "URL Encoded string of the JSON to match to the data headers",
                "type": "optional<CreateRequestBulkRetryRequestQueryHeaders>",
              },
              "id": {
                "docs": "Filter by requests IDs",
                "type": "optional<CreateRequestBulkRetryRequestQueryId>",
              },
              "ignored_count": "optional<CreateRequestBulkRetryRequestQueryIgnoredCount>",
              "ingested_at": "optional<CreateRequestBulkRetryRequestQueryIngestedAt>",
              "parsed_query": {
                "docs": "URL Encoded string of the JSON to match to the parsed query (JSON representation of the query)",
                "type": "optional<CreateRequestBulkRetryRequestQueryParsedQuery>",
              },
              "path": {
                "docs": "URL Encoded string of the string to match partially to the path",
                "type": "optional<string>",
              },
              "rejection_cause": {
                "docs": "Filter by rejection cause",
                "type": "optional<nullable<CreateRequestBulkRetryRequestQueryRejectionCause>>",
              },
              "source_id": {
                "docs": "Filter by source IDs",
                "type": "optional<CreateRequestBulkRetryRequestQuerySourceId>",
              },
              "status": "optional<CreateRequestBulkRetryRequestQueryStatus>",
              "verified": {
                "docs": "Filter by verification status",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateRequestBulkRetryRequestQueryBody": {
            "discriminated": false,
            "docs": "URL Encoded string of the JSON to match to the data body",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "CreateRequestBulkRetryRequestQueryBodyOne",
            ],
          },
          "CreateRequestBulkRetryRequestQueryBodyOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateRequestBulkRetryRequestQueryBulkRetryId": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "CreateRequestBulkRetryRequestQueryCreatedAt": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "datetime",
              "CreateRequestBulkRetryRequestQueryCreatedAtAny",
            ],
          },
          "CreateRequestBulkRetryRequestQueryCreatedAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<datetime>",
              "gte": "optional<datetime>",
              "le": "optional<datetime>",
              "lte": "optional<datetime>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateRequestBulkRetryRequestQueryEventsCount": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "integer",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "CreateRequestBulkRetryRequestQueryEventsCountAny",
              "list<integer>",
            ],
          },
          "CreateRequestBulkRetryRequestQueryEventsCountAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "contains": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "gt": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "gte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "le": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "lte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateRequestBulkRetryRequestQueryHeaders": {
            "discriminated": false,
            "docs": "URL Encoded string of the JSON to match to the data headers",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "CreateRequestBulkRetryRequestQueryHeadersOne",
            ],
          },
          "CreateRequestBulkRetryRequestQueryHeadersOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateRequestBulkRetryRequestQueryId": {
            "discriminated": false,
            "docs": "Filter by requests IDs",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "docs": "Request ID",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "CreateRequestBulkRetryRequestQueryIgnoredCount": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "integer",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "CreateRequestBulkRetryRequestQueryIgnoredCountAny",
              "list<integer>",
            ],
          },
          "CreateRequestBulkRetryRequestQueryIgnoredCountAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "contains": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "gt": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "gte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "le": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "lte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateRequestBulkRetryRequestQueryIngestedAt": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "datetime",
              "CreateRequestBulkRetryRequestQueryIngestedAtAny",
            ],
          },
          "CreateRequestBulkRetryRequestQueryIngestedAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<datetime>",
              "gte": "optional<datetime>",
              "le": "optional<datetime>",
              "lte": "optional<datetime>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateRequestBulkRetryRequestQueryParsedQuery": {
            "discriminated": false,
            "docs": "URL Encoded string of the JSON to match to the parsed query (JSON representation of the query)",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "CreateRequestBulkRetryRequestQueryParsedQueryOne",
            ],
          },
          "CreateRequestBulkRetryRequestQueryParsedQueryOne": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateRequestBulkRetryRequestQueryRejectionCause": {
            "discriminated": false,
            "docs": "Filter by rejection cause",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "root.RequestRejectionCause",
              "CreateRequestBulkRetryRequestQueryRejectionCauseAny",
              "list<root.RequestRejectionCause>",
            ],
          },
          "CreateRequestBulkRetryRequestQueryRejectionCauseAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "contains": "optional<root.RequestRejectionCause>",
              "gt": "optional<root.RequestRejectionCause>",
              "gte": "optional<root.RequestRejectionCause>",
              "le": "optional<root.RequestRejectionCause>",
              "lte": "optional<root.RequestRejectionCause>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateRequestBulkRetryRequestQuerySourceId": {
            "discriminated": false,
            "docs": "Filter by source IDs",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "docs": "Source ID",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "list<string>",
            ],
          },
          "CreateRequestBulkRetryRequestQueryStatus": {
            "enum": [
              "accepted",
              "rejected",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRequestBulkRetriesRequestDir": {
            "enum": [
              "asc",
              "desc",
            ],
          },
          "GetRequestBulkRetriesRequestOrderBy": {
            "enum": [
              "created_at",
            ],
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
types:
  GetRequestBulkRetriesRequestOrderBy:
    enum:
      - created_at
  GetRequestBulkRetriesRequestDir:
    enum:
      - asc
      - desc
  CreateRequestBulkRetryRequestQueryId:
    discriminated: false
    docs: Filter by requests IDs
    union:
      - type: string
        docs: Request ID
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  CreateRequestBulkRetryRequestQueryStatus:
    enum:
      - accepted
      - rejected
    inline: true
    source:
      openapi: ../openapi.yml
  CreateRequestBulkRetryRequestQueryRejectionCauseAny:
    properties:
      gt: optional<root.RequestRejectionCause>
      gte: optional<root.RequestRejectionCause>
      le: optional<root.RequestRejectionCause>
      lte: optional<root.RequestRejectionCause>
      any: optional<boolean>
      contains: optional<root.RequestRejectionCause>
    source:
      openapi: ../openapi.yml
    inline: true
  CreateRequestBulkRetryRequestQueryRejectionCause:
    discriminated: false
    docs: Filter by rejection cause
    union:
      - root.RequestRejectionCause
      - CreateRequestBulkRetryRequestQueryRejectionCauseAny
      - list<root.RequestRejectionCause>
    source:
      openapi: ../openapi.yml
    inline: true
  CreateRequestBulkRetryRequestQueryIgnoredCountAny:
    properties:
      gt:
        type: optional<integer>
        validation:
          min: 0
      gte:
        type: optional<integer>
        validation:
          min: 0
      le:
        type: optional<integer>
        validation:
          min: 0
      lte:
        type: optional<integer>
        validation:
          min: 0
      any: optional<boolean>
      contains:
        type: optional<integer>
        validation:
          min: 0
    source:
      openapi: ../openapi.yml
    inline: true
  CreateRequestBulkRetryRequestQueryIgnoredCount:
    discriminated: false
    union:
      - type: integer
        validation:
          min: 0
      - CreateRequestBulkRetryRequestQueryIgnoredCountAny
      - list<integer>
    source:
      openapi: ../openapi.yml
    inline: true
  CreateRequestBulkRetryRequestQueryEventsCountAny:
    properties:
      gt:
        type: optional<integer>
        validation:
          min: 0
      gte:
        type: optional<integer>
        validation:
          min: 0
      le:
        type: optional<integer>
        validation:
          min: 0
      lte:
        type: optional<integer>
        validation:
          min: 0
      any: optional<boolean>
      contains:
        type: optional<integer>
        validation:
          min: 0
    source:
      openapi: ../openapi.yml
    inline: true
  CreateRequestBulkRetryRequestQueryEventsCount:
    discriminated: false
    union:
      - type: integer
        validation:
          min: 0
      - CreateRequestBulkRetryRequestQueryEventsCountAny
      - list<integer>
    source:
      openapi: ../openapi.yml
    inline: true
  CreateRequestBulkRetryRequestQuerySourceId:
    discriminated: false
    docs: Filter by source IDs
    union:
      - type: string
        docs: Source ID
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  CreateRequestBulkRetryRequestQueryHeadersOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  CreateRequestBulkRetryRequestQueryHeaders:
    discriminated: false
    docs: URL Encoded string of the JSON to match to the data headers
    union:
      - string
      - CreateRequestBulkRetryRequestQueryHeadersOne
    source:
      openapi: ../openapi.yml
    inline: true
  CreateRequestBulkRetryRequestQueryBodyOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  CreateRequestBulkRetryRequestQueryBody:
    discriminated: false
    docs: URL Encoded string of the JSON to match to the data body
    union:
      - string
      - CreateRequestBulkRetryRequestQueryBodyOne
    source:
      openapi: ../openapi.yml
    inline: true
  CreateRequestBulkRetryRequestQueryParsedQueryOne:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  CreateRequestBulkRetryRequestQueryParsedQuery:
    discriminated: false
    docs: >-
      URL Encoded string of the JSON to match to the parsed query (JSON
      representation of the query)
    union:
      - string
      - CreateRequestBulkRetryRequestQueryParsedQueryOne
    source:
      openapi: ../openapi.yml
    inline: true
  CreateRequestBulkRetryRequestQueryCreatedAtAny:
    properties:
      gt: optional<datetime>
      gte: optional<datetime>
      le: optional<datetime>
      lte: optional<datetime>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  CreateRequestBulkRetryRequestQueryCreatedAt:
    discriminated: false
    union:
      - datetime
      - CreateRequestBulkRetryRequestQueryCreatedAtAny
    source:
      openapi: ../openapi.yml
    inline: true
  CreateRequestBulkRetryRequestQueryIngestedAtAny:
    properties:
      gt: optional<datetime>
      gte: optional<datetime>
      le: optional<datetime>
      lte: optional<datetime>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  CreateRequestBulkRetryRequestQueryIngestedAt:
    discriminated: false
    union:
      - datetime
      - CreateRequestBulkRetryRequestQueryIngestedAtAny
    source:
      openapi: ../openapi.yml
    inline: true
  CreateRequestBulkRetryRequestQueryBulkRetryId:
    discriminated: false
    union:
      - type: string
        validation:
          maxLength: 255
      - list<string>
    source:
      openapi: ../openapi.yml
    inline: true
  CreateRequestBulkRetryRequestQuery:
    docs: >-
      Filter properties for the events to be included in the bulk retry, use
      query parameters of [Requests](#requests)
    properties:
      id:
        type: optional<CreateRequestBulkRetryRequestQueryId>
        docs: Filter by requests IDs
      status: optional<CreateRequestBulkRetryRequestQueryStatus>
      rejection_cause:
        type: optional<nullable<CreateRequestBulkRetryRequestQueryRejectionCause>>
        docs: Filter by rejection cause
      ignored_count: optional<CreateRequestBulkRetryRequestQueryIgnoredCount>
      events_count: optional<CreateRequestBulkRetryRequestQueryEventsCount>
      source_id:
        type: optional<CreateRequestBulkRetryRequestQuerySourceId>
        docs: Filter by source IDs
      verified:
        type: optional<boolean>
        docs: Filter by verification status
      headers:
        type: optional<CreateRequestBulkRetryRequestQueryHeaders>
        docs: URL Encoded string of the JSON to match to the data headers
      body:
        type: optional<CreateRequestBulkRetryRequestQueryBody>
        docs: URL Encoded string of the JSON to match to the data body
      parsed_query:
        type: optional<CreateRequestBulkRetryRequestQueryParsedQuery>
        docs: >-
          URL Encoded string of the JSON to match to the parsed query (JSON
          representation of the query)
      path:
        type: optional<string>
        docs: URL Encoded string of the string to match partially to the path
      created_at: optional<CreateRequestBulkRetryRequestQueryCreatedAt>
      ingested_at: optional<CreateRequestBulkRetryRequestQueryIngestedAt>
      bulk_retry_id: optional<CreateRequestBulkRetryRequestQueryBulkRetryId>
    source:
      openapi: ../openapi.yml
    inline: true
service:
  auth: false
  base-path: ''
  endpoints:
    getRequestBulkRetries:
      path: /bulk/requests/retry
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get request bulk retries
      request:
        name: GetRequestBulkRetriesRequest
        query-parameters:
          cancelled_at: optional<root.GetRequestBulkRetriesRequestCancelledAt>
          completed_at: optional<root.GetRequestBulkRetriesRequestCompletedAt>
          created_at: optional<root.GetRequestBulkRetriesRequestCreatedAt>
          id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          in_progress: optional<boolean>
          query: optional<root.GetRequestBulkRetriesRequestQuery>
          query_partial_match: optional<boolean>
          order_by: optional<GetRequestBulkRetriesRequestOrderBy>
          dir: optional<GetRequestBulkRetriesRequestDir>
          limit:
            type: optional<integer>
            validation:
              min: 0
              max: 255
          next:
            type: optional<string>
            validation:
              maxLength: 255
          prev:
            type: optional<string>
            validation:
              maxLength: 255
      response:
        docs: List of request bulk retries
        type: root.BatchOperationPaginatedResult
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - response:
            body:
              pagination:
                order_by: order_by
                dir: asc
                limit: 1
                prev: prev
                next: next
              count: 1
              models:
                - id: id
                  team_id: team_id
                  query:
                    key: value
                  created_at: '2024-01-15T09:30:00Z'
                  updated_at: '2024-01-15T09:30:00Z'
                  cancelled_at: '2024-01-15T09:30:00Z'
                  completed_at: '2024-01-15T09:30:00Z'
                  estimated_batch: 1
                  estimated_count: 1
                  processed_batch: 1
                  completed_count: 1
                  in_progress: true
                  progress: 1.1
                  failed_count: 1
                  number: 1.1
    createRequestBulkRetry:
      path: /bulk/requests/retry
      method: POST
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Create a requests bulk retry
      request:
        name: CreateRequestBulkRetryRequest
        body:
          properties:
            query:
              type: optional<CreateRequestBulkRetryRequestQuery>
              docs: >-
                Filter properties for the events to be included in the bulk
                retry, use query parameters of [Requests](#requests)
        content-type: application/json
      response:
        docs: A single requests bulk retry
        type: root.BatchOperation
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - request: {}
          response:
            body:
              id: id
              team_id: team_id
              query:
                key: value
              created_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              cancelled_at: '2024-01-15T09:30:00Z'
              completed_at: '2024-01-15T09:30:00Z'
              estimated_batch: 1
              estimated_count: 1
              processed_batch: 1
              completed_count: 1
              in_progress: true
              progress: 1.1
              failed_count: 1
              number: 1.1
    generateRequestBulkRetryPlan:
      path: /bulk/requests/retry/plan
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Generate a requests bulk retry plan
      request:
        name: GenerateRequestBulkRetryPlanRequest
        query-parameters:
          query: optional<root.GenerateRequestBulkRetryPlanRequestQuery>
      response:
        docs: Requests bulk retry plan
        type: root.BatchOperationPlan
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - response:
            body:
              estimated_batch: 1
              estimated_count: 1
              progress: 1.1
    getRequestBulkRetry:
      path: /bulk/requests/retry/{id}
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get a requests bulk retry
      request:
        name: GetRequestBulkRetryRequest
        path-parameters:
          id: string
      response:
        docs: A single requests bulk retry
        type: root.BatchOperation
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              team_id: team_id
              query:
                key: value
              created_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              cancelled_at: '2024-01-15T09:30:00Z'
              completed_at: '2024-01-15T09:30:00Z'
              estimated_batch: 1
              estimated_count: 1
              processed_batch: 1
              completed_count: 1
              in_progress: true
              progress: 1.1
              failed_count: 1
              number: 1.1
    cancelRequestBulkRetry:
      path: /bulk/requests/retry/{id}/cancel
      method: POST
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Cancel a requests bulk retry
      request:
        name: CancelRequestBulkRetryRequest
        path-parameters:
          id: string
      response:
        docs: A single requests bulk retry
        type: root.BatchOperation
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              team_id: team_id
              query:
                key: value
              created_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              cancelled_at: '2024-01-15T09:30:00Z'
              completed_at: '2024-01-15T09:30:00Z'
              estimated_batch: 1
              estimated_count: 1
              processed_batch: 1
              completed_count: 1
              in_progress: true
              progress: 1.1
              failed_count: 1
              number: 1.1
  source:
    openapi: ../openapi.yml
  display-name: Bulk retry requests
docs: ''
",
    },
    "connections.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "A connection lets you route webhooks from a source to a destination, using a ruleset.",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Connections",
          "endpoints": {
            "archiveConnection": {
              "auth": undefined,
              "display-name": "Archive a connection",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "archived_at": "2024-01-15T09:30:00Z",
                      "created_at": "2024-01-15T09:30:00Z",
                      "destination": {
                        "archived_at": "2024-01-15T09:30:00Z",
                        "cli_path": "cli_path",
                        "created_at": "2024-01-15T09:30:00Z",
                        "id": "id",
                        "name": "name",
                        "path_forwarding_disabled": true,
                        "rate_limit": 1,
                        "rate_limit_period": "second",
                        "team_id": "team_id",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "url": "url",
                      },
                      "id": "id",
                      "name": "name",
                      "paused_at": "2024-01-15T09:30:00Z",
                      "resolved_rules": [
                        {
                          "count": 1,
                          "interval": 1,
                          "strategy": "linear",
                          "type": "retry",
                        },
                      ],
                      "rules": [
                        {
                          "count": 1,
                          "interval": 1,
                          "strategy": "linear",
                          "type": "retry",
                        },
                      ],
                      "ruleset": {
                        "archived_at": "2024-01-15T09:30:00Z",
                        "created_at": "2024-01-15T09:30:00Z",
                        "id": "id",
                        "is_team_default": true,
                        "name": "name",
                        "rules": [
                          {
                            "strategy": "linear",
                            "type": "retry",
                          },
                        ],
                        "team_id": "team_id",
                        "updated_at": "2024-01-15T09:30:00Z",
                      },
                      "source": {
                        "archived_at": "2024-01-15T09:30:00Z",
                        "created_at": "2024-01-15T09:30:00Z",
                        "id": "id",
                        "integration": {
                          "features": [
                            "VERIFICATION",
                          ],
                          "id": "id",
                          "label": "label",
                          "provider": "twitter",
                        },
                        "integration_id": "integration_id",
                        "name": "name",
                        "team_id": "team_id",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "url": "url",
                      },
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/webhooks/{id}/archive",
              "request": {
                "name": "ArchiveConnectionRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "A single connection",
                "status-code": 200,
                "type": "root.Connection",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "createConnection": {
              "auth": undefined,
              "display-name": "Create a connection",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "request": {
                    "name": "name",
                  },
                  "response": {
                    "body": {
                      "archived_at": "2024-01-15T09:30:00Z",
                      "created_at": "2024-01-15T09:30:00Z",
                      "destination": {
                        "archived_at": "2024-01-15T09:30:00Z",
                        "cli_path": "cli_path",
                        "created_at": "2024-01-15T09:30:00Z",
                        "id": "id",
                        "name": "name",
                        "path_forwarding_disabled": true,
                        "rate_limit": 1,
                        "rate_limit_period": "second",
                        "team_id": "team_id",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "url": "url",
                      },
                      "id": "id",
                      "name": "name",
                      "paused_at": "2024-01-15T09:30:00Z",
                      "resolved_rules": [
                        {
                          "count": 1,
                          "interval": 1,
                          "strategy": "linear",
                          "type": "retry",
                        },
                      ],
                      "rules": [
                        {
                          "count": 1,
                          "interval": 1,
                          "strategy": "linear",
                          "type": "retry",
                        },
                      ],
                      "ruleset": {
                        "archived_at": "2024-01-15T09:30:00Z",
                        "created_at": "2024-01-15T09:30:00Z",
                        "id": "id",
                        "is_team_default": true,
                        "name": "name",
                        "rules": [
                          {
                            "strategy": "linear",
                            "type": "retry",
                          },
                        ],
                        "team_id": "team_id",
                        "updated_at": "2024-01-15T09:30:00Z",
                      },
                      "source": {
                        "archived_at": "2024-01-15T09:30:00Z",
                        "created_at": "2024-01-15T09:30:00Z",
                        "id": "id",
                        "integration": {
                          "features": [
                            "VERIFICATION",
                          ],
                          "id": "id",
                          "label": "label",
                          "provider": "twitter",
                        },
                        "integration_id": "integration_id",
                        "name": "name",
                        "team_id": "team_id",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "url": "url",
                      },
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/webhooks",
              "request": {
                "body": {
                  "properties": {
                    "destination": {
                      "docs": "Destination input object",
                      "type": "optional<CreateConnectionRequestDestination>",
                    },
                    "destination_id": {
                      "docs": "ID of a destination to bind to the connection",
                      "type": "optional<nullable<string>>",
                      "validation": {
                        "format": undefined,
                        "maxLength": 255,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                    "name": {
                      "docs": "A unique name of the connection for the source",
                      "type": "string",
                      "validation": {
                        "format": undefined,
                        "maxLength": 155,
                        "minLength": undefined,
                        "pattern": "^[A-z0-9-_]+$",
                      },
                    },
                    "rules": {
                      "docs": "Array of rules to apply",
                      "type": "optional<list<root.Rule>>",
                    },
                    "ruleset": {
                      "docs": "Ruleset input object",
                      "type": "optional<CreateConnectionRequestRuleset>",
                    },
                    "ruleset_id": {
                      "docs": "ID of a rule to bind to the connection. Default to the Workspace default ruleset",
                      "type": "optional<nullable<string>>",
                      "validation": {
                        "format": undefined,
                        "maxLength": 255,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                    "source": {
                      "docs": "Source input object",
                      "type": "optional<CreateConnectionRequestSource>",
                    },
                    "source_id": {
                      "docs": "ID of a source to bind to the connection",
                      "type": "optional<nullable<string>>",
                      "validation": {
                        "format": undefined,
                        "maxLength": 255,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateConnectionRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "A single connection",
                "status-code": 200,
                "type": "root.Connection",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getConnection": {
              "auth": undefined,
              "display-name": "Get a single connection",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "archived_at": "2024-01-15T09:30:00Z",
                      "created_at": "2024-01-15T09:30:00Z",
                      "destination": {
                        "archived_at": "2024-01-15T09:30:00Z",
                        "cli_path": "cli_path",
                        "created_at": "2024-01-15T09:30:00Z",
                        "id": "id",
                        "name": "name",
                        "path_forwarding_disabled": true,
                        "rate_limit": 1,
                        "rate_limit_period": "second",
                        "team_id": "team_id",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "url": "url",
                      },
                      "id": "id",
                      "name": "name",
                      "paused_at": "2024-01-15T09:30:00Z",
                      "resolved_rules": [
                        {
                          "count": 1,
                          "interval": 1,
                          "strategy": "linear",
                          "type": "retry",
                        },
                      ],
                      "rules": [
                        {
                          "count": 1,
                          "interval": 1,
                          "strategy": "linear",
                          "type": "retry",
                        },
                      ],
                      "ruleset": {
                        "archived_at": "2024-01-15T09:30:00Z",
                        "created_at": "2024-01-15T09:30:00Z",
                        "id": "id",
                        "is_team_default": true,
                        "name": "name",
                        "rules": [
                          {
                            "strategy": "linear",
                            "type": "retry",
                          },
                        ],
                        "team_id": "team_id",
                        "updated_at": "2024-01-15T09:30:00Z",
                      },
                      "source": {
                        "archived_at": "2024-01-15T09:30:00Z",
                        "created_at": "2024-01-15T09:30:00Z",
                        "id": "id",
                        "integration": {
                          "features": [
                            "VERIFICATION",
                          ],
                          "id": "id",
                          "label": "label",
                          "provider": "twitter",
                        },
                        "integration_id": "integration_id",
                        "name": "name",
                        "team_id": "team_id",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "url": "url",
                      },
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/webhooks/{id}",
              "request": {
                "name": "GetConnectionRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "A single connection",
                "status-code": 200,
                "type": "root.Connection",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getConnections": {
              "auth": undefined,
              "display-name": "Get connections",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "count": 1,
                      "models": [
                        {
                          "archived_at": "2024-01-15T09:30:00Z",
                          "created_at": "2024-01-15T09:30:00Z",
                          "destination": {
                            "created_at": "2024-01-15T09:30:00Z",
                            "id": "id",
                            "name": "name",
                            "team_id": "team_id",
                            "updated_at": "2024-01-15T09:30:00Z",
                          },
                          "id": "id",
                          "name": "name",
                          "paused_at": "2024-01-15T09:30:00Z",
                          "resolved_rules": [
                            {
                              "strategy": "linear",
                              "type": "retry",
                            },
                          ],
                          "rules": [
                            {
                              "strategy": "linear",
                              "type": "retry",
                            },
                          ],
                          "ruleset": {
                            "created_at": "2024-01-15T09:30:00Z",
                            "id": "id",
                            "is_team_default": true,
                            "name": "name",
                            "rules": [
                              {
                                "strategy": "linear",
                                "type": "retry",
                              },
                            ],
                            "team_id": "team_id",
                            "updated_at": "2024-01-15T09:30:00Z",
                          },
                          "source": {
                            "created_at": "2024-01-15T09:30:00Z",
                            "id": "id",
                            "name": "name",
                            "team_id": "team_id",
                            "updated_at": "2024-01-15T09:30:00Z",
                            "url": "url",
                          },
                          "team_id": "team_id",
                          "updated_at": "2024-01-15T09:30:00Z",
                        },
                      ],
                      "pagination": {
                        "dir": "asc",
                        "limit": 1,
                        "next": "next",
                        "order_by": "order_by",
                        "prev": "prev",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/webhooks",
              "request": {
                "name": "GetConnectionsRequest",
                "query-parameters": {
                  "archived": "optional<boolean>",
                  "archived_at": "optional<root.GetConnectionsRequestArchivedAt>",
                  "destination_id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "dir": "optional<GetConnectionsRequestDir>",
                  "full_name": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 155,
                      "minLength": undefined,
                      "pattern": "^[a-z0-9-_>\s]+$",
                    },
                  },
                  "id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "limit": {
                    "type": "optional<integer>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 255,
                      "min": 0,
                      "multipleOf": undefined,
                    },
                  },
                  "name": "optional<root.GetConnectionsRequestName>",
                  "next": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "order_by": "optional<GetConnectionsRequestOrderBy>",
                  "paused_at": "optional<root.GetConnectionsRequestPausedAt>",
                  "prev": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "source_id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "response": {
                "docs": "List of connections",
                "status-code": 200,
                "type": "root.ConnectionPaginatedResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "pauseConnection": {
              "auth": undefined,
              "display-name": "Pause a connection",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "archived_at": "2024-01-15T09:30:00Z",
                      "created_at": "2024-01-15T09:30:00Z",
                      "destination": {
                        "archived_at": "2024-01-15T09:30:00Z",
                        "cli_path": "cli_path",
                        "created_at": "2024-01-15T09:30:00Z",
                        "id": "id",
                        "name": "name",
                        "path_forwarding_disabled": true,
                        "rate_limit": 1,
                        "rate_limit_period": "second",
                        "team_id": "team_id",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "url": "url",
                      },
                      "id": "id",
                      "name": "name",
                      "paused_at": "2024-01-15T09:30:00Z",
                      "resolved_rules": [
                        {
                          "count": 1,
                          "interval": 1,
                          "strategy": "linear",
                          "type": "retry",
                        },
                      ],
                      "rules": [
                        {
                          "count": 1,
                          "interval": 1,
                          "strategy": "linear",
                          "type": "retry",
                        },
                      ],
                      "ruleset": {
                        "archived_at": "2024-01-15T09:30:00Z",
                        "created_at": "2024-01-15T09:30:00Z",
                        "id": "id",
                        "is_team_default": true,
                        "name": "name",
                        "rules": [
                          {
                            "strategy": "linear",
                            "type": "retry",
                          },
                        ],
                        "team_id": "team_id",
                        "updated_at": "2024-01-15T09:30:00Z",
                      },
                      "source": {
                        "archived_at": "2024-01-15T09:30:00Z",
                        "created_at": "2024-01-15T09:30:00Z",
                        "id": "id",
                        "integration": {
                          "features": [
                            "VERIFICATION",
                          ],
                          "id": "id",
                          "label": "label",
                          "provider": "twitter",
                        },
                        "integration_id": "integration_id",
                        "name": "name",
                        "team_id": "team_id",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "url": "url",
                      },
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/webhooks/{id}/pause",
              "request": {
                "name": "PauseConnectionRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "A single connection",
                "status-code": 200,
                "type": "root.Connection",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "unarchiveConnection": {
              "auth": undefined,
              "display-name": "Unarchive a connection",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "archived_at": "2024-01-15T09:30:00Z",
                      "created_at": "2024-01-15T09:30:00Z",
                      "destination": {
                        "archived_at": "2024-01-15T09:30:00Z",
                        "cli_path": "cli_path",
                        "created_at": "2024-01-15T09:30:00Z",
                        "id": "id",
                        "name": "name",
                        "path_forwarding_disabled": true,
                        "rate_limit": 1,
                        "rate_limit_period": "second",
                        "team_id": "team_id",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "url": "url",
                      },
                      "id": "id",
                      "name": "name",
                      "paused_at": "2024-01-15T09:30:00Z",
                      "resolved_rules": [
                        {
                          "count": 1,
                          "interval": 1,
                          "strategy": "linear",
                          "type": "retry",
                        },
                      ],
                      "rules": [
                        {
                          "count": 1,
                          "interval": 1,
                          "strategy": "linear",
                          "type": "retry",
                        },
                      ],
                      "ruleset": {
                        "archived_at": "2024-01-15T09:30:00Z",
                        "created_at": "2024-01-15T09:30:00Z",
                        "id": "id",
                        "is_team_default": true,
                        "name": "name",
                        "rules": [
                          {
                            "strategy": "linear",
                            "type": "retry",
                          },
                        ],
                        "team_id": "team_id",
                        "updated_at": "2024-01-15T09:30:00Z",
                      },
                      "source": {
                        "archived_at": "2024-01-15T09:30:00Z",
                        "created_at": "2024-01-15T09:30:00Z",
                        "id": "id",
                        "integration": {
                          "features": [
                            "VERIFICATION",
                          ],
                          "id": "id",
                          "label": "label",
                          "provider": "twitter",
                        },
                        "integration_id": "integration_id",
                        "name": "name",
                        "team_id": "team_id",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "url": "url",
                      },
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/webhooks/{id}/unarchive",
              "request": {
                "name": "UnarchiveConnectionRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "A single connection",
                "status-code": 200,
                "type": "root.Connection",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "unpauseConnection": {
              "auth": undefined,
              "display-name": "Unpause a connection",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "archived_at": "2024-01-15T09:30:00Z",
                      "created_at": "2024-01-15T09:30:00Z",
                      "destination": {
                        "archived_at": "2024-01-15T09:30:00Z",
                        "cli_path": "cli_path",
                        "created_at": "2024-01-15T09:30:00Z",
                        "id": "id",
                        "name": "name",
                        "path_forwarding_disabled": true,
                        "rate_limit": 1,
                        "rate_limit_period": "second",
                        "team_id": "team_id",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "url": "url",
                      },
                      "id": "id",
                      "name": "name",
                      "paused_at": "2024-01-15T09:30:00Z",
                      "resolved_rules": [
                        {
                          "count": 1,
                          "interval": 1,
                          "strategy": "linear",
                          "type": "retry",
                        },
                      ],
                      "rules": [
                        {
                          "count": 1,
                          "interval": 1,
                          "strategy": "linear",
                          "type": "retry",
                        },
                      ],
                      "ruleset": {
                        "archived_at": "2024-01-15T09:30:00Z",
                        "created_at": "2024-01-15T09:30:00Z",
                        "id": "id",
                        "is_team_default": true,
                        "name": "name",
                        "rules": [
                          {
                            "strategy": "linear",
                            "type": "retry",
                          },
                        ],
                        "team_id": "team_id",
                        "updated_at": "2024-01-15T09:30:00Z",
                      },
                      "source": {
                        "archived_at": "2024-01-15T09:30:00Z",
                        "created_at": "2024-01-15T09:30:00Z",
                        "id": "id",
                        "integration": {
                          "features": [
                            "VERIFICATION",
                          ],
                          "id": "id",
                          "label": "label",
                          "provider": "twitter",
                        },
                        "integration_id": "integration_id",
                        "name": "name",
                        "team_id": "team_id",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "url": "url",
                      },
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/webhooks/{id}/unpause",
              "request": {
                "name": "UnpauseConnectionRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "A single connection",
                "status-code": 200,
                "type": "root.Connection",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "updateConnection": {
              "auth": undefined,
              "display-name": "Update a connection",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.NotFoundError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "request": {},
                  "response": {
                    "body": {
                      "archived_at": "2024-01-15T09:30:00Z",
                      "created_at": "2024-01-15T09:30:00Z",
                      "destination": {
                        "archived_at": "2024-01-15T09:30:00Z",
                        "cli_path": "cli_path",
                        "created_at": "2024-01-15T09:30:00Z",
                        "id": "id",
                        "name": "name",
                        "path_forwarding_disabled": true,
                        "rate_limit": 1,
                        "rate_limit_period": "second",
                        "team_id": "team_id",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "url": "url",
                      },
                      "id": "id",
                      "name": "name",
                      "paused_at": "2024-01-15T09:30:00Z",
                      "resolved_rules": [
                        {
                          "count": 1,
                          "interval": 1,
                          "strategy": "linear",
                          "type": "retry",
                        },
                      ],
                      "rules": [
                        {
                          "count": 1,
                          "interval": 1,
                          "strategy": "linear",
                          "type": "retry",
                        },
                      ],
                      "ruleset": {
                        "archived_at": "2024-01-15T09:30:00Z",
                        "created_at": "2024-01-15T09:30:00Z",
                        "id": "id",
                        "is_team_default": true,
                        "name": "name",
                        "rules": [
                          {
                            "strategy": "linear",
                            "type": "retry",
                          },
                        ],
                        "team_id": "team_id",
                        "updated_at": "2024-01-15T09:30:00Z",
                      },
                      "source": {
                        "archived_at": "2024-01-15T09:30:00Z",
                        "created_at": "2024-01-15T09:30:00Z",
                        "id": "id",
                        "integration": {
                          "features": [
                            "VERIFICATION",
                          ],
                          "id": "id",
                          "label": "label",
                          "provider": "twitter",
                        },
                        "integration_id": "integration_id",
                        "name": "name",
                        "team_id": "team_id",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "url": "url",
                      },
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/webhooks/{id}",
              "request": {
                "body": {
                  "properties": {
                    "name": {
                      "docs": "Unique name of the connection for the source",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": 155,
                        "minLength": undefined,
                        "pattern": "^[A-z0-9-_]+$",
                      },
                    },
                    "rules": {
                      "docs": "Array of rules to apply",
                      "type": "optional<list<root.Rule>>",
                    },
                    "ruleset": {
                      "docs": "Ruleset input object",
                      "type": "optional<UpdateConnectionRequestRuleset>",
                    },
                    "ruleset_id": {
                      "docs": "ID of a rule to bind to the connection. Default to the Workspace default ruleset",
                      "type": "optional<nullable<string>>",
                      "validation": {
                        "format": undefined,
                        "maxLength": 255,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpdateConnectionRequest",
                "path-parameters": {
                  "id": "string",
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "A single connection",
                "status-code": 200,
                "type": "root.Connection",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "upsertConnection": {
              "auth": undefined,
              "display-name": "Update or create a connection",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "request": {
                    "name": "name",
                  },
                  "response": {
                    "body": {
                      "archived_at": "2024-01-15T09:30:00Z",
                      "created_at": "2024-01-15T09:30:00Z",
                      "destination": {
                        "archived_at": "2024-01-15T09:30:00Z",
                        "cli_path": "cli_path",
                        "created_at": "2024-01-15T09:30:00Z",
                        "id": "id",
                        "name": "name",
                        "path_forwarding_disabled": true,
                        "rate_limit": 1,
                        "rate_limit_period": "second",
                        "team_id": "team_id",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "url": "url",
                      },
                      "id": "id",
                      "name": "name",
                      "paused_at": "2024-01-15T09:30:00Z",
                      "resolved_rules": [
                        {
                          "count": 1,
                          "interval": 1,
                          "strategy": "linear",
                          "type": "retry",
                        },
                      ],
                      "rules": [
                        {
                          "count": 1,
                          "interval": 1,
                          "strategy": "linear",
                          "type": "retry",
                        },
                      ],
                      "ruleset": {
                        "archived_at": "2024-01-15T09:30:00Z",
                        "created_at": "2024-01-15T09:30:00Z",
                        "id": "id",
                        "is_team_default": true,
                        "name": "name",
                        "rules": [
                          {
                            "strategy": "linear",
                            "type": "retry",
                          },
                        ],
                        "team_id": "team_id",
                        "updated_at": "2024-01-15T09:30:00Z",
                      },
                      "source": {
                        "archived_at": "2024-01-15T09:30:00Z",
                        "created_at": "2024-01-15T09:30:00Z",
                        "id": "id",
                        "integration": {
                          "features": [
                            "VERIFICATION",
                          ],
                          "id": "id",
                          "label": "label",
                          "provider": "twitter",
                        },
                        "integration_id": "integration_id",
                        "name": "name",
                        "team_id": "team_id",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "url": "url",
                      },
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/webhooks",
              "request": {
                "body": {
                  "properties": {
                    "destination": {
                      "docs": "Destination input object",
                      "type": "optional<UpsertConnectionRequestDestination>",
                    },
                    "destination_id": {
                      "docs": "ID of a destination to bind to the connection",
                      "type": "optional<nullable<string>>",
                      "validation": {
                        "format": undefined,
                        "maxLength": 255,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                    "name": {
                      "docs": "A unique name of the connection for the source",
                      "type": "string",
                      "validation": {
                        "format": undefined,
                        "maxLength": 155,
                        "minLength": undefined,
                        "pattern": "^[A-z0-9-_]+$",
                      },
                    },
                    "rules": {
                      "docs": "Array of rules to apply",
                      "type": "optional<list<root.Rule>>",
                    },
                    "ruleset": {
                      "docs": "Ruleset input object",
                      "type": "optional<UpsertConnectionRequestRuleset>",
                    },
                    "ruleset_id": {
                      "docs": "ID of a rule to bind to the connection. Default to the Workspace default ruleset",
                      "type": "optional<nullable<string>>",
                      "validation": {
                        "format": undefined,
                        "maxLength": 255,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                    "source": {
                      "docs": "Source input object",
                      "type": "optional<UpsertConnectionRequestSource>",
                    },
                    "source_id": {
                      "docs": "ID of a source to bind to the connection",
                      "type": "optional<nullable<string>>",
                      "validation": {
                        "format": undefined,
                        "maxLength": 255,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpsertConnectionRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "A single connection",
                "status-code": 200,
                "type": "root.Connection",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "CreateConnectionRequestDestination": {
            "docs": "Destination input object",
            "inline": true,
            "properties": {
              "cli_path": {
                "docs": "Path for the CLI destination",
                "type": "optional<nullable<string>>",
              },
              "name": {
                "docs": "Name for the destination",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 155,
                  "minLength": undefined,
                  "pattern": "^[A-z0-9-_]+$",
                },
              },
              "path_forwarding_disabled": "optional<boolean>",
              "rate_limit": {
                "docs": "Limit event attempts to receive per period",
                "type": "optional<nullable<integer>>",
              },
              "rate_limit_period": {
                "docs": "Period to rate limit attempts",
                "type": "optional<CreateConnectionRequestDestinationRateLimitPeriod>",
              },
              "url": {
                "docs": "Endpoint of the destination",
                "type": "optional<nullable<string>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateConnectionRequestDestinationRateLimitPeriod": {
            "docs": "Period to rate limit attempts",
            "enum": [
              "second",
              "minute",
              "hour",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateConnectionRequestRuleset": {
            "docs": "Ruleset input object",
            "inline": true,
            "properties": {
              "is_team_default": "optional<boolean>",
              "name": {
                "docs": "Name for the ruleset",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 155,
                  "minLength": undefined,
                  "pattern": "^[A-z0-9-_]+$",
                },
              },
              "rules": {
                "docs": "Array of rules to apply",
                "type": "optional<list<root.Rule>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateConnectionRequestSource": {
            "docs": "Source input object",
            "inline": true,
            "properties": {
              "name": {
                "docs": "A unique name for the source",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 155,
                  "minLength": undefined,
                  "pattern": "^[A-z0-9-_]+$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetConnectionsRequestDir": {
            "enum": [
              "asc",
              "desc",
            ],
          },
          "GetConnectionsRequestOrderBy": {
            "enum": [
              "created_at",
            ],
          },
          "UpdateConnectionRequestRuleset": {
            "docs": "Ruleset input object",
            "inline": true,
            "properties": {
              "is_team_default": "optional<boolean>",
              "name": {
                "docs": "Name for the ruleset",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 155,
                  "minLength": undefined,
                  "pattern": "^[A-z0-9-_]+$",
                },
              },
              "rules": {
                "docs": "Array of rules to apply",
                "type": "optional<list<root.Rule>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpsertConnectionRequestDestination": {
            "docs": "Destination input object",
            "inline": true,
            "properties": {
              "cli_path": {
                "docs": "Path for the CLI destination",
                "type": "optional<nullable<string>>",
              },
              "name": {
                "docs": "Name for the destination",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 155,
                  "minLength": undefined,
                  "pattern": "^[A-z0-9-_]+$",
                },
              },
              "path_forwarding_disabled": "optional<boolean>",
              "rate_limit": {
                "docs": "Limit event attempts to receive per period",
                "type": "optional<nullable<integer>>",
              },
              "rate_limit_period": {
                "docs": "Period to rate limit attempts",
                "type": "optional<UpsertConnectionRequestDestinationRateLimitPeriod>",
              },
              "url": {
                "docs": "Endpoint of the destination",
                "type": "optional<nullable<string>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpsertConnectionRequestDestinationRateLimitPeriod": {
            "docs": "Period to rate limit attempts",
            "enum": [
              "second",
              "minute",
              "hour",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpsertConnectionRequestRuleset": {
            "docs": "Ruleset input object",
            "inline": true,
            "properties": {
              "is_team_default": "optional<boolean>",
              "name": {
                "docs": "Name for the ruleset",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 155,
                  "minLength": undefined,
                  "pattern": "^[A-z0-9-_]+$",
                },
              },
              "rules": {
                "docs": "Array of rules to apply",
                "type": "optional<list<root.Rule>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpsertConnectionRequestSource": {
            "docs": "Source input object",
            "inline": true,
            "properties": {
              "name": {
                "docs": "A unique name for the source",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 155,
                  "minLength": undefined,
                  "pattern": "^[A-z0-9-_]+$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
types:
  GetConnectionsRequestOrderBy:
    enum:
      - created_at
  GetConnectionsRequestDir:
    enum:
      - asc
      - desc
  CreateConnectionRequestDestinationRateLimitPeriod:
    enum:
      - second
      - minute
      - hour
    docs: Period to rate limit attempts
    inline: true
    source:
      openapi: ../openapi.yml
  CreateConnectionRequestDestination:
    docs: Destination input object
    properties:
      name:
        type: string
        docs: Name for the destination
        validation:
          pattern: ^[A-z0-9-_]+$
          maxLength: 155
      url:
        type: optional<nullable<string>>
        docs: Endpoint of the destination
      cli_path:
        type: optional<nullable<string>>
        docs: Path for the CLI destination
      rate_limit_period:
        type: optional<CreateConnectionRequestDestinationRateLimitPeriod>
        docs: Period to rate limit attempts
      rate_limit:
        type: optional<nullable<integer>>
        docs: Limit event attempts to receive per period
      path_forwarding_disabled: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  CreateConnectionRequestSource:
    docs: Source input object
    properties:
      name:
        type: string
        docs: A unique name for the source
        validation:
          pattern: ^[A-z0-9-_]+$
          maxLength: 155
    source:
      openapi: ../openapi.yml
    inline: true
  CreateConnectionRequestRuleset:
    docs: Ruleset input object
    properties:
      name:
        type: string
        docs: Name for the ruleset
        validation:
          pattern: ^[A-z0-9-_]+$
          maxLength: 155
      rules:
        type: optional<list<root.Rule>>
        docs: Array of rules to apply
      is_team_default: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  UpsertConnectionRequestDestinationRateLimitPeriod:
    enum:
      - second
      - minute
      - hour
    docs: Period to rate limit attempts
    inline: true
    source:
      openapi: ../openapi.yml
  UpsertConnectionRequestDestination:
    docs: Destination input object
    properties:
      name:
        type: string
        docs: Name for the destination
        validation:
          pattern: ^[A-z0-9-_]+$
          maxLength: 155
      url:
        type: optional<nullable<string>>
        docs: Endpoint of the destination
      cli_path:
        type: optional<nullable<string>>
        docs: Path for the CLI destination
      rate_limit_period:
        type: optional<UpsertConnectionRequestDestinationRateLimitPeriod>
        docs: Period to rate limit attempts
      rate_limit:
        type: optional<nullable<integer>>
        docs: Limit event attempts to receive per period
      path_forwarding_disabled: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  UpsertConnectionRequestSource:
    docs: Source input object
    properties:
      name:
        type: string
        docs: A unique name for the source
        validation:
          pattern: ^[A-z0-9-_]+$
          maxLength: 155
    source:
      openapi: ../openapi.yml
    inline: true
  UpsertConnectionRequestRuleset:
    docs: Ruleset input object
    properties:
      name:
        type: string
        docs: Name for the ruleset
        validation:
          pattern: ^[A-z0-9-_]+$
          maxLength: 155
      rules:
        type: optional<list<root.Rule>>
        docs: Array of rules to apply
      is_team_default: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateConnectionRequestRuleset:
    docs: Ruleset input object
    properties:
      name:
        type: string
        docs: Name for the ruleset
        validation:
          pattern: ^[A-z0-9-_]+$
          maxLength: 155
      rules:
        type: optional<list<root.Rule>>
        docs: Array of rules to apply
      is_team_default: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
service:
  auth: false
  base-path: ''
  endpoints:
    getConnections:
      path: /webhooks
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get connections
      request:
        name: GetConnectionsRequest
        query-parameters:
          id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          name: optional<root.GetConnectionsRequestName>
          destination_id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          source_id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          archived: optional<boolean>
          archived_at: optional<root.GetConnectionsRequestArchivedAt>
          full_name:
            type: optional<string>
            validation:
              pattern: ^[a-z0-9-_>\s]+$
              maxLength: 155
          paused_at: optional<root.GetConnectionsRequestPausedAt>
          order_by: optional<GetConnectionsRequestOrderBy>
          dir: optional<GetConnectionsRequestDir>
          limit:
            type: optional<integer>
            validation:
              min: 0
              max: 255
          next:
            type: optional<string>
            validation:
              maxLength: 255
          prev:
            type: optional<string>
            validation:
              maxLength: 255
      response:
        docs: List of connections
        type: root.ConnectionPaginatedResult
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - response:
            body:
              pagination:
                order_by: order_by
                dir: asc
                limit: 1
                prev: prev
                next: next
              count: 1
              models:
                - id: id
                  name: name
                  team_id: team_id
                  destination:
                    id: id
                    name: name
                    team_id: team_id
                    updated_at: '2024-01-15T09:30:00Z'
                    created_at: '2024-01-15T09:30:00Z'
                  source:
                    id: id
                    name: name
                    team_id: team_id
                    url: url
                    updated_at: '2024-01-15T09:30:00Z'
                    created_at: '2024-01-15T09:30:00Z'
                  ruleset:
                    id: id
                    name: name
                    team_id: team_id
                    rules:
                      - strategy: linear
                        type: retry
                    is_team_default: true
                    updated_at: '2024-01-15T09:30:00Z'
                    created_at: '2024-01-15T09:30:00Z'
                  resolved_rules:
                    - strategy: linear
                      type: retry
                  rules:
                    - strategy: linear
                      type: retry
                  archived_at: '2024-01-15T09:30:00Z'
                  paused_at: '2024-01-15T09:30:00Z'
                  updated_at: '2024-01-15T09:30:00Z'
                  created_at: '2024-01-15T09:30:00Z'
    createConnection:
      path: /webhooks
      method: POST
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Create a connection
      request:
        name: CreateConnectionRequest
        body:
          properties:
            name:
              type: string
              docs: A unique name of the connection for the source
              validation:
                pattern: ^[A-z0-9-_]+$
                maxLength: 155
            destination_id:
              type: optional<nullable<string>>
              docs: ID of a destination to bind to the connection
              validation:
                maxLength: 255
            source_id:
              type: optional<nullable<string>>
              docs: ID of a source to bind to the connection
              validation:
                maxLength: 255
            destination:
              type: optional<CreateConnectionRequestDestination>
              docs: Destination input object
            source:
              type: optional<CreateConnectionRequestSource>
              docs: Source input object
            ruleset:
              type: optional<CreateConnectionRequestRuleset>
              docs: Ruleset input object
            ruleset_id:
              type: optional<nullable<string>>
              docs: >-
                ID of a rule to bind to the connection. Default to the Workspace
                default ruleset
              validation:
                maxLength: 255
            rules:
              type: optional<list<root.Rule>>
              docs: Array of rules to apply
        content-type: application/json
      response:
        docs: A single connection
        type: root.Connection
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - request:
            name: name
          response:
            body:
              id: id
              name: name
              team_id: team_id
              destination:
                id: id
                name: name
                team_id: team_id
                path_forwarding_disabled: true
                url: url
                cli_path: cli_path
                rate_limit: 1
                rate_limit_period: second
                archived_at: '2024-01-15T09:30:00Z'
                updated_at: '2024-01-15T09:30:00Z'
                created_at: '2024-01-15T09:30:00Z'
              source:
                id: id
                name: name
                team_id: team_id
                url: url
                integration_id: integration_id
                integration:
                  id: id
                  label: label
                  provider: twitter
                  features:
                    - VERIFICATION
                archived_at: '2024-01-15T09:30:00Z'
                updated_at: '2024-01-15T09:30:00Z'
                created_at: '2024-01-15T09:30:00Z'
              ruleset:
                id: id
                name: name
                team_id: team_id
                rules:
                  - strategy: linear
                    type: retry
                is_team_default: true
                archived_at: '2024-01-15T09:30:00Z'
                updated_at: '2024-01-15T09:30:00Z'
                created_at: '2024-01-15T09:30:00Z'
              resolved_rules:
                - strategy: linear
                  interval: 1
                  count: 1
                  type: retry
              rules:
                - strategy: linear
                  interval: 1
                  count: 1
                  type: retry
              archived_at: '2024-01-15T09:30:00Z'
              paused_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
    upsertConnection:
      path: /webhooks
      method: PUT
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Update or create a connection
      request:
        name: UpsertConnectionRequest
        body:
          properties:
            name:
              type: string
              docs: A unique name of the connection for the source
              validation:
                pattern: ^[A-z0-9-_]+$
                maxLength: 155
            destination_id:
              type: optional<nullable<string>>
              docs: ID of a destination to bind to the connection
              validation:
                maxLength: 255
            source_id:
              type: optional<nullable<string>>
              docs: ID of a source to bind to the connection
              validation:
                maxLength: 255
            destination:
              type: optional<UpsertConnectionRequestDestination>
              docs: Destination input object
            source:
              type: optional<UpsertConnectionRequestSource>
              docs: Source input object
            ruleset:
              type: optional<UpsertConnectionRequestRuleset>
              docs: Ruleset input object
            ruleset_id:
              type: optional<nullable<string>>
              docs: >-
                ID of a rule to bind to the connection. Default to the Workspace
                default ruleset
              validation:
                maxLength: 255
            rules:
              type: optional<list<root.Rule>>
              docs: Array of rules to apply
        content-type: application/json
      response:
        docs: A single connection
        type: root.Connection
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - request:
            name: name
          response:
            body:
              id: id
              name: name
              team_id: team_id
              destination:
                id: id
                name: name
                team_id: team_id
                path_forwarding_disabled: true
                url: url
                cli_path: cli_path
                rate_limit: 1
                rate_limit_period: second
                archived_at: '2024-01-15T09:30:00Z'
                updated_at: '2024-01-15T09:30:00Z'
                created_at: '2024-01-15T09:30:00Z'
              source:
                id: id
                name: name
                team_id: team_id
                url: url
                integration_id: integration_id
                integration:
                  id: id
                  label: label
                  provider: twitter
                  features:
                    - VERIFICATION
                archived_at: '2024-01-15T09:30:00Z'
                updated_at: '2024-01-15T09:30:00Z'
                created_at: '2024-01-15T09:30:00Z'
              ruleset:
                id: id
                name: name
                team_id: team_id
                rules:
                  - strategy: linear
                    type: retry
                is_team_default: true
                archived_at: '2024-01-15T09:30:00Z'
                updated_at: '2024-01-15T09:30:00Z'
                created_at: '2024-01-15T09:30:00Z'
              resolved_rules:
                - strategy: linear
                  interval: 1
                  count: 1
                  type: retry
              rules:
                - strategy: linear
                  interval: 1
                  count: 1
                  type: retry
              archived_at: '2024-01-15T09:30:00Z'
              paused_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
    getConnection:
      path: /webhooks/{id}
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get a single connection
      request:
        name: GetConnectionRequest
        path-parameters:
          id: string
      response:
        docs: A single connection
        type: root.Connection
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              name: name
              team_id: team_id
              destination:
                id: id
                name: name
                team_id: team_id
                path_forwarding_disabled: true
                url: url
                cli_path: cli_path
                rate_limit: 1
                rate_limit_period: second
                archived_at: '2024-01-15T09:30:00Z'
                updated_at: '2024-01-15T09:30:00Z'
                created_at: '2024-01-15T09:30:00Z'
              source:
                id: id
                name: name
                team_id: team_id
                url: url
                integration_id: integration_id
                integration:
                  id: id
                  label: label
                  provider: twitter
                  features:
                    - VERIFICATION
                archived_at: '2024-01-15T09:30:00Z'
                updated_at: '2024-01-15T09:30:00Z'
                created_at: '2024-01-15T09:30:00Z'
              ruleset:
                id: id
                name: name
                team_id: team_id
                rules:
                  - strategy: linear
                    type: retry
                is_team_default: true
                archived_at: '2024-01-15T09:30:00Z'
                updated_at: '2024-01-15T09:30:00Z'
                created_at: '2024-01-15T09:30:00Z'
              resolved_rules:
                - strategy: linear
                  interval: 1
                  count: 1
                  type: retry
              rules:
                - strategy: linear
                  interval: 1
                  count: 1
                  type: retry
              archived_at: '2024-01-15T09:30:00Z'
              paused_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
    updateConnection:
      path: /webhooks/{id}
      method: PUT
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Update a connection
      request:
        name: UpdateConnectionRequest
        path-parameters:
          id: string
        body:
          properties:
            name:
              type: optional<string>
              docs: Unique name of the connection for the source
              validation:
                pattern: ^[A-z0-9-_]+$
                maxLength: 155
            ruleset:
              type: optional<UpdateConnectionRequestRuleset>
              docs: Ruleset input object
            ruleset_id:
              type: optional<nullable<string>>
              docs: >-
                ID of a rule to bind to the connection. Default to the Workspace
                default ruleset
              validation:
                maxLength: 255
            rules:
              type: optional<list<root.Rule>>
              docs: Array of rules to apply
        content-type: application/json
      response:
        docs: A single connection
        type: root.Connection
        status-code: 200
      errors:
        - root.BadRequestError
        - root.NotFoundError
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            id: id
          request: {}
          response:
            body:
              id: id
              name: name
              team_id: team_id
              destination:
                id: id
                name: name
                team_id: team_id
                path_forwarding_disabled: true
                url: url
                cli_path: cli_path
                rate_limit: 1
                rate_limit_period: second
                archived_at: '2024-01-15T09:30:00Z'
                updated_at: '2024-01-15T09:30:00Z'
                created_at: '2024-01-15T09:30:00Z'
              source:
                id: id
                name: name
                team_id: team_id
                url: url
                integration_id: integration_id
                integration:
                  id: id
                  label: label
                  provider: twitter
                  features:
                    - VERIFICATION
                archived_at: '2024-01-15T09:30:00Z'
                updated_at: '2024-01-15T09:30:00Z'
                created_at: '2024-01-15T09:30:00Z'
              ruleset:
                id: id
                name: name
                team_id: team_id
                rules:
                  - strategy: linear
                    type: retry
                is_team_default: true
                archived_at: '2024-01-15T09:30:00Z'
                updated_at: '2024-01-15T09:30:00Z'
                created_at: '2024-01-15T09:30:00Z'
              resolved_rules:
                - strategy: linear
                  interval: 1
                  count: 1
                  type: retry
              rules:
                - strategy: linear
                  interval: 1
                  count: 1
                  type: retry
              archived_at: '2024-01-15T09:30:00Z'
              paused_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
    archiveConnection:
      path: /webhooks/{id}/archive
      method: PUT
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Archive a connection
      request:
        name: ArchiveConnectionRequest
        path-parameters:
          id: string
      response:
        docs: A single connection
        type: root.Connection
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              name: name
              team_id: team_id
              destination:
                id: id
                name: name
                team_id: team_id
                path_forwarding_disabled: true
                url: url
                cli_path: cli_path
                rate_limit: 1
                rate_limit_period: second
                archived_at: '2024-01-15T09:30:00Z'
                updated_at: '2024-01-15T09:30:00Z'
                created_at: '2024-01-15T09:30:00Z'
              source:
                id: id
                name: name
                team_id: team_id
                url: url
                integration_id: integration_id
                integration:
                  id: id
                  label: label
                  provider: twitter
                  features:
                    - VERIFICATION
                archived_at: '2024-01-15T09:30:00Z'
                updated_at: '2024-01-15T09:30:00Z'
                created_at: '2024-01-15T09:30:00Z'
              ruleset:
                id: id
                name: name
                team_id: team_id
                rules:
                  - strategy: linear
                    type: retry
                is_team_default: true
                archived_at: '2024-01-15T09:30:00Z'
                updated_at: '2024-01-15T09:30:00Z'
                created_at: '2024-01-15T09:30:00Z'
              resolved_rules:
                - strategy: linear
                  interval: 1
                  count: 1
                  type: retry
              rules:
                - strategy: linear
                  interval: 1
                  count: 1
                  type: retry
              archived_at: '2024-01-15T09:30:00Z'
              paused_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
    unarchiveConnection:
      path: /webhooks/{id}/unarchive
      method: PUT
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Unarchive a connection
      request:
        name: UnarchiveConnectionRequest
        path-parameters:
          id: string
      response:
        docs: A single connection
        type: root.Connection
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              name: name
              team_id: team_id
              destination:
                id: id
                name: name
                team_id: team_id
                path_forwarding_disabled: true
                url: url
                cli_path: cli_path
                rate_limit: 1
                rate_limit_period: second
                archived_at: '2024-01-15T09:30:00Z'
                updated_at: '2024-01-15T09:30:00Z'
                created_at: '2024-01-15T09:30:00Z'
              source:
                id: id
                name: name
                team_id: team_id
                url: url
                integration_id: integration_id
                integration:
                  id: id
                  label: label
                  provider: twitter
                  features:
                    - VERIFICATION
                archived_at: '2024-01-15T09:30:00Z'
                updated_at: '2024-01-15T09:30:00Z'
                created_at: '2024-01-15T09:30:00Z'
              ruleset:
                id: id
                name: name
                team_id: team_id
                rules:
                  - strategy: linear
                    type: retry
                is_team_default: true
                archived_at: '2024-01-15T09:30:00Z'
                updated_at: '2024-01-15T09:30:00Z'
                created_at: '2024-01-15T09:30:00Z'
              resolved_rules:
                - strategy: linear
                  interval: 1
                  count: 1
                  type: retry
              rules:
                - strategy: linear
                  interval: 1
                  count: 1
                  type: retry
              archived_at: '2024-01-15T09:30:00Z'
              paused_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
    pauseConnection:
      path: /webhooks/{id}/pause
      method: PUT
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Pause a connection
      request:
        name: PauseConnectionRequest
        path-parameters:
          id: string
      response:
        docs: A single connection
        type: root.Connection
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              name: name
              team_id: team_id
              destination:
                id: id
                name: name
                team_id: team_id
                path_forwarding_disabled: true
                url: url
                cli_path: cli_path
                rate_limit: 1
                rate_limit_period: second
                archived_at: '2024-01-15T09:30:00Z'
                updated_at: '2024-01-15T09:30:00Z'
                created_at: '2024-01-15T09:30:00Z'
              source:
                id: id
                name: name
                team_id: team_id
                url: url
                integration_id: integration_id
                integration:
                  id: id
                  label: label
                  provider: twitter
                  features:
                    - VERIFICATION
                archived_at: '2024-01-15T09:30:00Z'
                updated_at: '2024-01-15T09:30:00Z'
                created_at: '2024-01-15T09:30:00Z'
              ruleset:
                id: id
                name: name
                team_id: team_id
                rules:
                  - strategy: linear
                    type: retry
                is_team_default: true
                archived_at: '2024-01-15T09:30:00Z'
                updated_at: '2024-01-15T09:30:00Z'
                created_at: '2024-01-15T09:30:00Z'
              resolved_rules:
                - strategy: linear
                  interval: 1
                  count: 1
                  type: retry
              rules:
                - strategy: linear
                  interval: 1
                  count: 1
                  type: retry
              archived_at: '2024-01-15T09:30:00Z'
              paused_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
    unpauseConnection:
      path: /webhooks/{id}/unpause
      method: PUT
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Unpause a connection
      request:
        name: UnpauseConnectionRequest
        path-parameters:
          id: string
      response:
        docs: A single connection
        type: root.Connection
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              name: name
              team_id: team_id
              destination:
                id: id
                name: name
                team_id: team_id
                path_forwarding_disabled: true
                url: url
                cli_path: cli_path
                rate_limit: 1
                rate_limit_period: second
                archived_at: '2024-01-15T09:30:00Z'
                updated_at: '2024-01-15T09:30:00Z'
                created_at: '2024-01-15T09:30:00Z'
              source:
                id: id
                name: name
                team_id: team_id
                url: url
                integration_id: integration_id
                integration:
                  id: id
                  label: label
                  provider: twitter
                  features:
                    - VERIFICATION
                archived_at: '2024-01-15T09:30:00Z'
                updated_at: '2024-01-15T09:30:00Z'
                created_at: '2024-01-15T09:30:00Z'
              ruleset:
                id: id
                name: name
                team_id: team_id
                rules:
                  - strategy: linear
                    type: retry
                is_team_default: true
                archived_at: '2024-01-15T09:30:00Z'
                updated_at: '2024-01-15T09:30:00Z'
                created_at: '2024-01-15T09:30:00Z'
              resolved_rules:
                - strategy: linear
                  interval: 1
                  count: 1
                  type: retry
              rules:
                - strategy: linear
                  interval: 1
                  count: 1
                  type: retry
              archived_at: '2024-01-15T09:30:00Z'
              paused_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
  source:
    openapi: ../openapi.yml
  display-name: Connections
docs: >-
  A connection lets you route webhooks from a source to a destination, using a
  ruleset.
",
    },
    "destinations.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "A destination is any endpoint to which your webhooks can be routed.",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Destinations",
          "endpoints": {
            "archiveDestination": {
              "auth": undefined,
              "display-name": "Archive a destination",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "archived_at": "2024-01-15T09:30:00Z",
                      "cli_path": "cli_path",
                      "created_at": "2024-01-15T09:30:00Z",
                      "id": "id",
                      "name": "name",
                      "path_forwarding_disabled": true,
                      "rate_limit": 1,
                      "rate_limit_period": "second",
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "url": "url",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/destinations/{id}/archive",
              "request": {
                "name": "ArchiveDestinationRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "A single destination",
                "status-code": 200,
                "type": "root.Destination",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "createDestination": {
              "auth": undefined,
              "display-name": "Create a destination",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "request": {
                    "name": "name",
                  },
                  "response": {
                    "body": {
                      "archived_at": "2024-01-15T09:30:00Z",
                      "cli_path": "cli_path",
                      "created_at": "2024-01-15T09:30:00Z",
                      "id": "id",
                      "name": "name",
                      "path_forwarding_disabled": true,
                      "rate_limit": 1,
                      "rate_limit_period": "second",
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "url": "url",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/destinations",
              "request": {
                "body": {
                  "properties": {
                    "cli_path": {
                      "docs": "Path for the CLI destination",
                      "type": "optional<nullable<string>>",
                    },
                    "name": {
                      "docs": "Name for the destination",
                      "type": "string",
                      "validation": {
                        "format": undefined,
                        "maxLength": 155,
                        "minLength": undefined,
                        "pattern": "^[A-z0-9-_]+$",
                      },
                    },
                    "path_forwarding_disabled": "optional<boolean>",
                    "rate_limit": {
                      "docs": "Limit event attempts to receive per period",
                      "type": "optional<nullable<integer>>",
                    },
                    "rate_limit_period": {
                      "docs": "Period to rate limit attempts",
                      "type": "optional<CreateDestinationRequestRateLimitPeriod>",
                    },
                    "url": {
                      "docs": "Endpoint of the destination",
                      "type": "optional<nullable<string>>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateDestinationRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "A single destination",
                "status-code": 200,
                "type": "root.Destination",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getDestination": {
              "auth": undefined,
              "display-name": "Get a destination",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "archived_at": "2024-01-15T09:30:00Z",
                      "cli_path": "cli_path",
                      "created_at": "2024-01-15T09:30:00Z",
                      "id": "id",
                      "name": "name",
                      "path_forwarding_disabled": true,
                      "rate_limit": 1,
                      "rate_limit_period": "second",
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "url": "url",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/destinations/{id}",
              "request": {
                "name": "GetDestinationRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "A single destination",
                "status-code": 200,
                "type": "root.Destination",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getDestinations": {
              "auth": undefined,
              "display-name": "Get destinations",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "count": 1,
                      "models": [
                        {
                          "archived_at": "2024-01-15T09:30:00Z",
                          "cli_path": "cli_path",
                          "created_at": "2024-01-15T09:30:00Z",
                          "id": "id",
                          "name": "name",
                          "path_forwarding_disabled": true,
                          "rate_limit": 1,
                          "rate_limit_period": "second",
                          "team_id": "team_id",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "url": "url",
                        },
                      ],
                      "pagination": {
                        "dir": "asc",
                        "limit": 1,
                        "next": "next",
                        "order_by": "order_by",
                        "prev": "prev",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/destinations",
              "request": {
                "name": "GetDestinationsRequest",
                "query-parameters": {
                  "archived": "optional<boolean>",
                  "archived_at": "optional<root.GetDestinationsRequestArchivedAt>",
                  "cli_path": "optional<root.GetDestinationsRequestCliPath>",
                  "dir": "optional<GetDestinationsRequestDir>",
                  "id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "limit": {
                    "type": "optional<integer>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 255,
                      "min": 0,
                      "multipleOf": undefined,
                    },
                  },
                  "name": "optional<root.GetDestinationsRequestName>",
                  "next": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "order_by": "optional<GetDestinationsRequestOrderBy>",
                  "prev": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "url": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "List of destinations",
                "status-code": 200,
                "type": "root.DestinationPaginatedResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "unarchiveDestination": {
              "auth": undefined,
              "display-name": "Unarchive a destination",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "archived_at": "2024-01-15T09:30:00Z",
                      "cli_path": "cli_path",
                      "created_at": "2024-01-15T09:30:00Z",
                      "id": "id",
                      "name": "name",
                      "path_forwarding_disabled": true,
                      "rate_limit": 1,
                      "rate_limit_period": "second",
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "url": "url",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/destinations/{id}/unarchive",
              "request": {
                "name": "UnarchiveDestinationRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "A single destination",
                "status-code": 200,
                "type": "root.Destination",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "updateDestination": {
              "auth": undefined,
              "display-name": "Update a destination",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.NotFoundError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "request": {
                    "name": "name",
                  },
                  "response": {
                    "body": {
                      "archived_at": "2024-01-15T09:30:00Z",
                      "cli_path": "cli_path",
                      "created_at": "2024-01-15T09:30:00Z",
                      "id": "id",
                      "name": "name",
                      "path_forwarding_disabled": true,
                      "rate_limit": 1,
                      "rate_limit_period": "second",
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "url": "url",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/destinations/{id}",
              "request": {
                "body": {
                  "properties": {
                    "archived_at": {
                      "docs": "Date the destination was archived",
                      "type": "optional<nullable<datetime>>",
                    },
                    "cli_path": {
                      "docs": "Path for the CLI destination",
                      "type": "optional<nullable<string>>",
                    },
                    "name": {
                      "docs": "Name for the destination",
                      "type": "string",
                      "validation": {
                        "format": undefined,
                        "maxLength": 155,
                        "minLength": undefined,
                        "pattern": "^[A-z0-9-_]+$",
                      },
                    },
                    "path_forwarding_disabled": "optional<boolean>",
                    "rate_limit": {
                      "docs": "Limit event attempts to receive per period",
                      "type": "optional<nullable<integer>>",
                    },
                    "rate_limit_period": {
                      "docs": "Period to rate limit attempts",
                      "type": "optional<UpdateDestinationRequestRateLimitPeriod>",
                    },
                    "url": {
                      "docs": "Endpoint of the destination",
                      "type": "optional<nullable<string>>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpdateDestinationRequest",
                "path-parameters": {
                  "id": "string",
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "A single destination",
                "status-code": 200,
                "type": "root.Destination",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "upsertDestination": {
              "auth": undefined,
              "display-name": "Update or create a destination",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "request": {
                    "name": "name",
                  },
                  "response": {
                    "body": {
                      "archived_at": "2024-01-15T09:30:00Z",
                      "cli_path": "cli_path",
                      "created_at": "2024-01-15T09:30:00Z",
                      "id": "id",
                      "name": "name",
                      "path_forwarding_disabled": true,
                      "rate_limit": 1,
                      "rate_limit_period": "second",
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "url": "url",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/destinations",
              "request": {
                "body": {
                  "properties": {
                    "cli_path": {
                      "docs": "Path for the CLI destination",
                      "type": "optional<nullable<string>>",
                    },
                    "name": {
                      "docs": "Name for the destination",
                      "type": "string",
                      "validation": {
                        "format": undefined,
                        "maxLength": 155,
                        "minLength": undefined,
                        "pattern": "^[A-z0-9-_]+$",
                      },
                    },
                    "path_forwarding_disabled": "optional<boolean>",
                    "rate_limit": {
                      "docs": "Limit event attempts to receive per period",
                      "type": "optional<nullable<integer>>",
                    },
                    "rate_limit_period": {
                      "docs": "Period to rate limit attempts",
                      "type": "optional<UpsertDestinationRequestRateLimitPeriod>",
                    },
                    "url": {
                      "docs": "Endpoint of the destination",
                      "type": "optional<nullable<string>>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpsertDestinationRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "A single destination",
                "status-code": 200,
                "type": "root.Destination",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "CreateDestinationRequestRateLimitPeriod": {
            "docs": "Period to rate limit attempts",
            "enum": [
              "second",
              "minute",
              "hour",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetDestinationsRequestDir": {
            "enum": [
              "asc",
              "desc",
            ],
          },
          "GetDestinationsRequestOrderBy": {
            "enum": [
              "created_at",
            ],
          },
          "UpdateDestinationRequestRateLimitPeriod": {
            "docs": "Period to rate limit attempts",
            "enum": [
              "second",
              "minute",
              "hour",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpsertDestinationRequestRateLimitPeriod": {
            "docs": "Period to rate limit attempts",
            "enum": [
              "second",
              "minute",
              "hour",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
types:
  GetDestinationsRequestOrderBy:
    enum:
      - created_at
  GetDestinationsRequestDir:
    enum:
      - asc
      - desc
  CreateDestinationRequestRateLimitPeriod:
    enum:
      - second
      - minute
      - hour
    docs: Period to rate limit attempts
    inline: true
    source:
      openapi: ../openapi.yml
  UpsertDestinationRequestRateLimitPeriod:
    enum:
      - second
      - minute
      - hour
    docs: Period to rate limit attempts
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateDestinationRequestRateLimitPeriod:
    enum:
      - second
      - minute
      - hour
    docs: Period to rate limit attempts
    inline: true
    source:
      openapi: ../openapi.yml
service:
  auth: false
  base-path: ''
  endpoints:
    getDestinations:
      path: /destinations
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get destinations
      request:
        name: GetDestinationsRequest
        query-parameters:
          id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          name: optional<root.GetDestinationsRequestName>
          archived: optional<boolean>
          archived_at: optional<root.GetDestinationsRequestArchivedAt>
          url:
            type: optional<string>
            allow-multiple: true
          cli_path: optional<root.GetDestinationsRequestCliPath>
          order_by: optional<GetDestinationsRequestOrderBy>
          dir: optional<GetDestinationsRequestDir>
          limit:
            type: optional<integer>
            validation:
              min: 0
              max: 255
          next:
            type: optional<string>
            validation:
              maxLength: 255
          prev:
            type: optional<string>
            validation:
              maxLength: 255
      response:
        docs: List of destinations
        type: root.DestinationPaginatedResult
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - response:
            body:
              pagination:
                order_by: order_by
                dir: asc
                limit: 1
                prev: prev
                next: next
              count: 1
              models:
                - id: id
                  name: name
                  team_id: team_id
                  path_forwarding_disabled: true
                  url: url
                  cli_path: cli_path
                  rate_limit: 1
                  rate_limit_period: second
                  archived_at: '2024-01-15T09:30:00Z'
                  updated_at: '2024-01-15T09:30:00Z'
                  created_at: '2024-01-15T09:30:00Z'
    createDestination:
      path: /destinations
      method: POST
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Create a destination
      request:
        name: CreateDestinationRequest
        body:
          properties:
            name:
              type: string
              docs: Name for the destination
              validation:
                pattern: ^[A-z0-9-_]+$
                maxLength: 155
            url:
              type: optional<nullable<string>>
              docs: Endpoint of the destination
            cli_path:
              type: optional<nullable<string>>
              docs: Path for the CLI destination
            rate_limit_period:
              type: optional<CreateDestinationRequestRateLimitPeriod>
              docs: Period to rate limit attempts
            rate_limit:
              type: optional<nullable<integer>>
              docs: Limit event attempts to receive per period
            path_forwarding_disabled: optional<boolean>
        content-type: application/json
      response:
        docs: A single destination
        type: root.Destination
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - request:
            name: name
          response:
            body:
              id: id
              name: name
              team_id: team_id
              path_forwarding_disabled: true
              url: url
              cli_path: cli_path
              rate_limit: 1
              rate_limit_period: second
              archived_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
    upsertDestination:
      path: /destinations
      method: PUT
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Update or create a destination
      request:
        name: UpsertDestinationRequest
        body:
          properties:
            name:
              type: string
              docs: Name for the destination
              validation:
                pattern: ^[A-z0-9-_]+$
                maxLength: 155
            url:
              type: optional<nullable<string>>
              docs: Endpoint of the destination
            cli_path:
              type: optional<nullable<string>>
              docs: Path for the CLI destination
            rate_limit_period:
              type: optional<UpsertDestinationRequestRateLimitPeriod>
              docs: Period to rate limit attempts
            rate_limit:
              type: optional<nullable<integer>>
              docs: Limit event attempts to receive per period
            path_forwarding_disabled: optional<boolean>
        content-type: application/json
      response:
        docs: A single destination
        type: root.Destination
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - request:
            name: name
          response:
            body:
              id: id
              name: name
              team_id: team_id
              path_forwarding_disabled: true
              url: url
              cli_path: cli_path
              rate_limit: 1
              rate_limit_period: second
              archived_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
    getDestination:
      path: /destinations/{id}
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get a destination
      request:
        name: GetDestinationRequest
        path-parameters:
          id: string
      response:
        docs: A single destination
        type: root.Destination
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              name: name
              team_id: team_id
              path_forwarding_disabled: true
              url: url
              cli_path: cli_path
              rate_limit: 1
              rate_limit_period: second
              archived_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
    updateDestination:
      path: /destinations/{id}
      method: PUT
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Update a destination
      request:
        name: UpdateDestinationRequest
        path-parameters:
          id: string
        body:
          properties:
            name:
              type: string
              docs: Name for the destination
              validation:
                pattern: ^[A-z0-9-_]+$
                maxLength: 155
            url:
              type: optional<nullable<string>>
              docs: Endpoint of the destination
            cli_path:
              type: optional<nullable<string>>
              docs: Path for the CLI destination
            rate_limit_period:
              type: optional<UpdateDestinationRequestRateLimitPeriod>
              docs: Period to rate limit attempts
            rate_limit:
              type: optional<nullable<integer>>
              docs: Limit event attempts to receive per period
            archived_at:
              type: optional<nullable<datetime>>
              docs: Date the destination was archived
            path_forwarding_disabled: optional<boolean>
        content-type: application/json
      response:
        docs: A single destination
        type: root.Destination
        status-code: 200
      errors:
        - root.BadRequestError
        - root.NotFoundError
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            id: id
          request:
            name: name
          response:
            body:
              id: id
              name: name
              team_id: team_id
              path_forwarding_disabled: true
              url: url
              cli_path: cli_path
              rate_limit: 1
              rate_limit_period: second
              archived_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
    archiveDestination:
      path: /destinations/{id}/archive
      method: PUT
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Archive a destination
      request:
        name: ArchiveDestinationRequest
        path-parameters:
          id: string
      response:
        docs: A single destination
        type: root.Destination
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              name: name
              team_id: team_id
              path_forwarding_disabled: true
              url: url
              cli_path: cli_path
              rate_limit: 1
              rate_limit_period: second
              archived_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
    unarchiveDestination:
      path: /destinations/{id}/unarchive
      method: PUT
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Unarchive a destination
      request:
        name: UnarchiveDestinationRequest
        path-parameters:
          id: string
      response:
        docs: A single destination
        type: root.Destination
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              name: name
              team_id: team_id
              path_forwarding_disabled: true
              url: url
              cli_path: cli_path
              rate_limit: 1
              rate_limit_period: second
              archived_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
  source:
    openapi: ../openapi.yml
  display-name: Destinations
docs: A destination is any endpoint to which your webhooks can be routed.
",
    },
    "events.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "An event is any request that Hookdeck receives from a source.",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Events",
          "endpoints": {
            "getEvent": {
              "auth": undefined,
              "display-name": "Get an event",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "attempts": 1,
                      "cli_id": "cli_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "created_at_id": "created_at_id",
                      "data": {
                        "body": "body",
                        "headers": "headers",
                        "is_large_payload": true,
                        "parsed_query": "parsed_query",
                        "path": "path",
                        "query": "query",
                      },
                      "destination_id": "destination_id",
                      "event_data_id": "event_data_id",
                      "id": "id",
                      "last_attempt_at": "2024-01-15T09:30:00Z",
                      "last_attempt_at_id": "last_attempt_at_id",
                      "next_attempt_at": "2024-01-15T09:30:00Z",
                      "request_id": "request_id",
                      "response_status": 1,
                      "source_id": "source_id",
                      "status": "SCHEDULED",
                      "successful_at": "2024-01-15T09:30:00Z",
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "webhook_id": "webhook_id",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/events/{id}",
              "request": {
                "name": "GetEventRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "A single event",
                "status-code": 200,
                "type": "root.Event",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getEvents": {
              "auth": undefined,
              "display-name": "Get events",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "count": 1,
                      "models": [
                        {
                          "attempts": 1,
                          "cli_id": "cli_id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "created_at_id": "created_at_id",
                          "data": {
                            "path": "path",
                          },
                          "destination_id": "destination_id",
                          "event_data_id": "event_data_id",
                          "id": "id",
                          "last_attempt_at": "2024-01-15T09:30:00Z",
                          "last_attempt_at_id": "last_attempt_at_id",
                          "next_attempt_at": "2024-01-15T09:30:00Z",
                          "request_id": "request_id",
                          "response_status": 1,
                          "source_id": "source_id",
                          "status": "SCHEDULED",
                          "successful_at": "2024-01-15T09:30:00Z",
                          "team_id": "team_id",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "webhook_id": "webhook_id",
                        },
                      ],
                      "pagination": {
                        "dir": "asc",
                        "limit": 1,
                        "next": "next",
                        "order_by": "order_by",
                        "prev": "prev",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/events",
              "request": {
                "name": "GetEventsRequest",
                "query-parameters": {
                  "attempts": "optional<root.GetEventsRequestAttempts>",
                  "body": "optional<root.GetEventsRequestBody>",
                  "bulk_retry_id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "cli_id": "optional<nullable<GetEventsRequestCliId>>",
                  "cli_user_id": "optional<nullable<GetEventsRequestCliUserId>>",
                  "created_at": "optional<root.GetEventsRequestCreatedAt>",
                  "destination_id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "dir": "optional<GetEventsRequestDir>",
                  "error_code": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "event_data_id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "headers": "optional<root.GetEventsRequestHeaders>",
                  "id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "include": "optional<literal<"data">>",
                  "issue_id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "last_attempt_at": "optional<nullable<GetEventsRequestLastAttemptAt>>",
                  "limit": {
                    "type": "optional<integer>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 255,
                      "min": 0,
                      "multipleOf": undefined,
                    },
                  },
                  "next": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "order_by": "optional<GetEventsRequestOrderBy>",
                  "parsed_query": "optional<root.GetEventsRequestParsedQuery>",
                  "path": "optional<string>",
                  "prev": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "response_status": "optional<nullable<GetEventsRequestResponseStatus>>",
                  "source_id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "status": "optional<root.GetEventsRequestStatus>",
                  "successful_at": "optional<nullable<GetEventsRequestSuccessfulAt>>",
                  "webhook_id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "response": {
                "docs": "List of events",
                "status-code": 200,
                "type": "root.EventPaginatedResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getRequestRawBody": {
              "auth": undefined,
              "display-name": "Get a event raw body data",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "body": "body",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/events/{id}/raw_body",
              "request": {
                "name": "GetRequestRawBodyRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "A request raw body data",
                "status-code": 200,
                "type": "root.RawBody",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "muteEvent": {
              "auth": undefined,
              "display-name": "Mute an event",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "attempts": 1,
                      "cli_id": "cli_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "created_at_id": "created_at_id",
                      "data": {
                        "body": "body",
                        "headers": "headers",
                        "is_large_payload": true,
                        "parsed_query": "parsed_query",
                        "path": "path",
                        "query": "query",
                      },
                      "destination_id": "destination_id",
                      "event_data_id": "event_data_id",
                      "id": "id",
                      "last_attempt_at": "2024-01-15T09:30:00Z",
                      "last_attempt_at_id": "last_attempt_at_id",
                      "next_attempt_at": "2024-01-15T09:30:00Z",
                      "request_id": "request_id",
                      "response_status": 1,
                      "source_id": "source_id",
                      "status": "SCHEDULED",
                      "successful_at": "2024-01-15T09:30:00Z",
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "webhook_id": "webhook_id",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/events/{id}/mute",
              "request": {
                "name": "MuteEventRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "A single event",
                "status-code": 200,
                "type": "root.Event",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "retryEvent": {
              "auth": undefined,
              "display-name": "Retry an event",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "attempt": {
                        "archived_at": "archived_at",
                        "attempt_number": 1,
                        "bulk_retry_id": "bulk_retry_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "delivered_at": "2024-01-15T09:30:00Z",
                        "delivery_latency": 1,
                        "destination_id": "destination_id",
                        "error_code": "TIMEOUT",
                        "event_id": "event_id",
                        "id": "id",
                        "requested_url": "requested_url",
                        "responded_at": "2024-01-15T09:30:00Z",
                        "response_latency": 1,
                        "response_status": 1,
                        "state": "DELIVERING",
                        "status": "QUEUED",
                        "successful_at": "2024-01-15T09:30:00Z",
                        "team_id": "team_id",
                        "trigger": "INITIAL",
                        "updated_at": "2024-01-15T09:30:00Z",
                      },
                      "event": {
                        "attempts": 1,
                        "cli_id": "cli_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "created_at_id": "created_at_id",
                        "data": {
                          "body": "body",
                          "headers": "headers",
                          "is_large_payload": true,
                          "parsed_query": "parsed_query",
                          "path": "path",
                          "query": "query",
                        },
                        "destination_id": "destination_id",
                        "event_data_id": "event_data_id",
                        "id": "id",
                        "last_attempt_at": "2024-01-15T09:30:00Z",
                        "last_attempt_at_id": "last_attempt_at_id",
                        "next_attempt_at": "2024-01-15T09:30:00Z",
                        "request_id": "request_id",
                        "response_status": 1,
                        "source_id": "source_id",
                        "status": "SCHEDULED",
                        "successful_at": "2024-01-15T09:30:00Z",
                        "team_id": "team_id",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "webhook_id": "webhook_id",
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/events/{id}/retry",
              "request": {
                "name": "RetryEventRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "Retried event with event attempt",
                "status-code": 200,
                "type": "root.RetriedEvent",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "GetEventsRequestCliId": {
            "discriminated": false,
            "docs": "Filter by CLI IDs. `?[any]=true` operator for any CLI.",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "GetEventsRequestCliIdAny",
              "list<string>",
            ],
          },
          "GetEventsRequestCliIdAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetEventsRequestCliUserId": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "list<string>",
            ],
          },
          "GetEventsRequestDir": {
            "enum": [
              "asc",
              "desc",
            ],
          },
          "GetEventsRequestLastAttemptAt": {
            "discriminated": false,
            "docs": "Filter by `last_attempt_at` date using a date operator",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "datetime",
              "GetEventsRequestLastAttemptAtAny",
            ],
          },
          "GetEventsRequestLastAttemptAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<datetime>",
              "gte": "optional<datetime>",
              "le": "optional<datetime>",
              "lte": "optional<datetime>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetEventsRequestOrderBy": {
            "enum": [
              "last_attempt_at",
              "next_attempt_at",
              "created_at",
            ],
          },
          "GetEventsRequestResponseStatus": {
            "discriminated": false,
            "docs": "Filter by HTTP response status code",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "integer",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 600,
                  "min": 200,
                  "multipleOf": undefined,
                },
              },
              "GetEventsRequestResponseStatusAny",
              "list<integer>",
            ],
          },
          "GetEventsRequestResponseStatusAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "contains": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 600,
                  "min": 200,
                  "multipleOf": undefined,
                },
              },
              "gt": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 600,
                  "min": 200,
                  "multipleOf": undefined,
                },
              },
              "gte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 600,
                  "min": 200,
                  "multipleOf": undefined,
                },
              },
              "le": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 600,
                  "min": 200,
                  "multipleOf": undefined,
                },
              },
              "lte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 600,
                  "min": 200,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetEventsRequestSuccessfulAt": {
            "discriminated": false,
            "docs": "Filter by `successful_at` date using a date operator",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "datetime",
              "GetEventsRequestSuccessfulAtAny",
            ],
          },
          "GetEventsRequestSuccessfulAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<datetime>",
              "gte": "optional<datetime>",
              "le": "optional<datetime>",
              "lte": "optional<datetime>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
types:
  GetEventsRequestResponseStatusAny:
    properties:
      gt:
        type: optional<integer>
        validation:
          min: 200
          max: 600
      gte:
        type: optional<integer>
        validation:
          min: 200
          max: 600
      le:
        type: optional<integer>
        validation:
          min: 200
          max: 600
      lte:
        type: optional<integer>
        validation:
          min: 200
          max: 600
      any: optional<boolean>
      contains:
        type: optional<integer>
        validation:
          min: 200
          max: 600
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventsRequestResponseStatus:
    discriminated: false
    docs: Filter by HTTP response status code
    union:
      - type: integer
        validation:
          min: 200
          max: 600
      - GetEventsRequestResponseStatusAny
      - list<integer>
    source:
      openapi: ../openapi.yml
  GetEventsRequestSuccessfulAtAny:
    properties:
      gt: optional<datetime>
      gte: optional<datetime>
      le: optional<datetime>
      lte: optional<datetime>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventsRequestSuccessfulAt:
    discriminated: false
    docs: Filter by `successful_at` date using a date operator
    union:
      - datetime
      - GetEventsRequestSuccessfulAtAny
    source:
      openapi: ../openapi.yml
  GetEventsRequestCliIdAny:
    properties:
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventsRequestCliId:
    discriminated: false
    docs: Filter by CLI IDs. `?[any]=true` operator for any CLI.
    union:
      - string
      - GetEventsRequestCliIdAny
      - list<string>
    source:
      openapi: ../openapi.yml
  GetEventsRequestCliUserId:
    discriminated: false
    union:
      - string
      - list<string>
    source:
      openapi: ../openapi.yml
  GetEventsRequestLastAttemptAtAny:
    properties:
      gt: optional<datetime>
      gte: optional<datetime>
      le: optional<datetime>
      lte: optional<datetime>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetEventsRequestLastAttemptAt:
    discriminated: false
    docs: Filter by `last_attempt_at` date using a date operator
    union:
      - datetime
      - GetEventsRequestLastAttemptAtAny
    source:
      openapi: ../openapi.yml
  GetEventsRequestOrderBy:
    enum:
      - last_attempt_at
      - next_attempt_at
      - created_at
  GetEventsRequestDir:
    enum:
      - asc
      - desc
service:
  auth: false
  base-path: ''
  endpoints:
    getEvents:
      path: /events
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get events
      request:
        name: GetEventsRequest
        query-parameters:
          id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          status: optional<root.GetEventsRequestStatus>
          issue_id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          webhook_id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          destination_id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          source_id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          attempts: optional<root.GetEventsRequestAttempts>
          response_status: optional<nullable<GetEventsRequestResponseStatus>>
          successful_at: optional<nullable<GetEventsRequestSuccessfulAt>>
          created_at: optional<root.GetEventsRequestCreatedAt>
          error_code:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          cli_id: optional<nullable<GetEventsRequestCliId>>
          cli_user_id: optional<nullable<GetEventsRequestCliUserId>>
          last_attempt_at: optional<nullable<GetEventsRequestLastAttemptAt>>
          event_data_id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          headers: optional<root.GetEventsRequestHeaders>
          body: optional<root.GetEventsRequestBody>
          parsed_query: optional<root.GetEventsRequestParsedQuery>
          bulk_retry_id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          path: optional<string>
          include: optional<literal<"data">>
          order_by: optional<GetEventsRequestOrderBy>
          dir: optional<GetEventsRequestDir>
          limit:
            type: optional<integer>
            validation:
              min: 0
              max: 255
          next:
            type: optional<string>
            validation:
              maxLength: 255
          prev:
            type: optional<string>
            validation:
              maxLength: 255
      response:
        docs: List of events
        type: root.EventPaginatedResult
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - response:
            body:
              pagination:
                order_by: order_by
                dir: asc
                limit: 1
                prev: prev
                next: next
              count: 1
              models:
                - id: id
                  team_id: team_id
                  webhook_id: webhook_id
                  source_id: source_id
                  destination_id: destination_id
                  event_data_id: event_data_id
                  request_id: request_id
                  attempts: 1
                  data:
                    path: path
                  last_attempt_at: '2024-01-15T09:30:00Z'
                  next_attempt_at: '2024-01-15T09:30:00Z'
                  response_status: 1
                  status: SCHEDULED
                  successful_at: '2024-01-15T09:30:00Z'
                  cli_id: cli_id
                  updated_at: '2024-01-15T09:30:00Z'
                  created_at: '2024-01-15T09:30:00Z'
                  created_at_id: created_at_id
                  last_attempt_at_id: last_attempt_at_id
    getEvent:
      path: /events/{id}
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get an event
      request:
        name: GetEventRequest
        path-parameters:
          id: string
      response:
        docs: A single event
        type: root.Event
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              team_id: team_id
              webhook_id: webhook_id
              source_id: source_id
              destination_id: destination_id
              event_data_id: event_data_id
              request_id: request_id
              attempts: 1
              data:
                path: path
                query: query
                parsed_query: parsed_query
                headers: headers
                body: body
                is_large_payload: true
              last_attempt_at: '2024-01-15T09:30:00Z'
              next_attempt_at: '2024-01-15T09:30:00Z'
              response_status: 1
              status: SCHEDULED
              successful_at: '2024-01-15T09:30:00Z'
              cli_id: cli_id
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
              created_at_id: created_at_id
              last_attempt_at_id: last_attempt_at_id
    getRequestRawBody:
      path: /events/{id}/raw_body
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get a event raw body data
      request:
        name: GetRequestRawBodyRequest
        path-parameters:
          id: string
      response:
        docs: A request raw body data
        type: root.RawBody
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              body: body
    retryEvent:
      path: /events/{id}/retry
      method: POST
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Retry an event
      request:
        name: RetryEventRequest
        path-parameters:
          id: string
      response:
        docs: Retried event with event attempt
        type: root.RetriedEvent
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              event:
                id: id
                team_id: team_id
                webhook_id: webhook_id
                source_id: source_id
                destination_id: destination_id
                event_data_id: event_data_id
                request_id: request_id
                attempts: 1
                data:
                  path: path
                  query: query
                  parsed_query: parsed_query
                  headers: headers
                  body: body
                  is_large_payload: true
                last_attempt_at: '2024-01-15T09:30:00Z'
                next_attempt_at: '2024-01-15T09:30:00Z'
                response_status: 1
                status: SCHEDULED
                successful_at: '2024-01-15T09:30:00Z'
                cli_id: cli_id
                updated_at: '2024-01-15T09:30:00Z'
                created_at: '2024-01-15T09:30:00Z'
                created_at_id: created_at_id
                last_attempt_at_id: last_attempt_at_id
              attempt:
                id: id
                team_id: team_id
                event_id: event_id
                response_status: 1
                attempt_number: 1
                trigger: INITIAL
                error_code: TIMEOUT
                requested_url: requested_url
                bulk_retry_id: bulk_retry_id
                status: QUEUED
                successful_at: '2024-01-15T09:30:00Z'
                delivered_at: '2024-01-15T09:30:00Z'
                responded_at: '2024-01-15T09:30:00Z'
                delivery_latency: 1
                response_latency: 1
                updated_at: '2024-01-15T09:30:00Z'
                created_at: '2024-01-15T09:30:00Z'
                state: DELIVERING
                archived_at: archived_at
                destination_id: destination_id
    muteEvent:
      path: /events/{id}/mute
      method: PUT
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Mute an event
      request:
        name: MuteEventRequest
        path-parameters:
          id: string
      response:
        docs: A single event
        type: root.Event
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              team_id: team_id
              webhook_id: webhook_id
              source_id: source_id
              destination_id: destination_id
              event_data_id: event_data_id
              request_id: request_id
              attempts: 1
              data:
                path: path
                query: query
                parsed_query: parsed_query
                headers: headers
                body: body
                is_large_payload: true
              last_attempt_at: '2024-01-15T09:30:00Z'
              next_attempt_at: '2024-01-15T09:30:00Z'
              response_status: 1
              status: SCHEDULED
              successful_at: '2024-01-15T09:30:00Z'
              cli_id: cli_id
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
              created_at_id: created_at_id
              last_attempt_at_id: last_attempt_at_id
  source:
    openapi: ../openapi.yml
  display-name: Events
docs: An event is any request that Hookdeck receives from a source.
",
    },
    "integrations.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "An integration configures platform-specific behaviors, such as signature verification.",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Integrations",
          "endpoints": {
            "attachIntegrationToSource": {
              "auth": undefined,
              "display-name": "Attach an integration to a source",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                    "source_id": "source_id",
                  },
                  "response": {
                    "body": {
                      "success": true,
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/integrations/{id}/attach/{source_id}",
              "request": {
                "name": "AttachIntegrationToSourceRequest",
                "path-parameters": {
                  "id": "string",
                  "source_id": "string",
                },
              },
              "response": {
                "docs": "Attach operation success status",
                "status-code": 200,
                "type": "root.AttachedIntegrationToSource",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "createIntegration": {
              "auth": undefined,
              "display-name": "Create an integration",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "request": {
                    "configs": {
                      "algorithm": "md5",
                      "encoding": "base64",
                      "header_key": "header_key",
                      "webhook_secret_key": "webhook_secret_key",
                    },
                    "features": [
                      "VERIFICATION",
                    ],
                    "label": "label",
                    "provider": "twitter",
                  },
                  "response": {
                    "body": {
                      "configs": {
                        "algorithm": "md5",
                        "encoding": "base64",
                        "header_key": "header_key",
                        "webhook_secret_key": "webhook_secret_key",
                      },
                      "created_at": "2024-01-15T09:30:00Z",
                      "features": [
                        "VERIFICATION",
                      ],
                      "id": "id",
                      "label": "label",
                      "provider": "twitter",
                      "sources": [
                        "sources",
                      ],
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/integrations",
              "request": {
                "body": {
                  "properties": {
                    "configs": {
                      "docs": "Decrypted Key/Value object of the associated configuration for that provider",
                      "type": "CreateIntegrationRequestConfigs",
                    },
                    "features": {
                      "docs": "List of features to enable (see features list above)",
                      "type": "list<root.IntegrationFeature>",
                    },
                    "label": {
                      "docs": "Label of the integration",
                      "type": "string",
                    },
                    "provider": "root.IntegrationProvider",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateIntegrationRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "A single integration",
                "status-code": 200,
                "type": "root.Integration",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "deleteIntegration": {
              "auth": undefined,
              "display-name": "Delete an integration",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "id": "id",
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/integrations/{id}",
              "request": {
                "name": "DeleteIntegrationRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "An object with deleted integration id",
                "status-code": 200,
                "type": "root.DeletedIntegration",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "detachIntegrationToSource": {
              "auth": undefined,
              "display-name": "Detach an integration from a source",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                    "source_id": "source_id",
                  },
                  "response": {
                    "body": {},
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/integrations/{id}/detach/{source_id}",
              "request": {
                "name": "DetachIntegrationToSourceRequest",
                "path-parameters": {
                  "id": "string",
                  "source_id": "string",
                },
              },
              "response": {
                "docs": "Detach operation success status",
                "status-code": 200,
                "type": "root.DetachedIntegrationFromSource",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getIntegration": {
              "auth": undefined,
              "display-name": "Get an integration",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "configs": {
                        "algorithm": "md5",
                        "encoding": "base64",
                        "header_key": "header_key",
                        "webhook_secret_key": "webhook_secret_key",
                      },
                      "created_at": "2024-01-15T09:30:00Z",
                      "features": [
                        "VERIFICATION",
                      ],
                      "id": "id",
                      "label": "label",
                      "provider": "twitter",
                      "sources": [
                        "sources",
                      ],
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/integrations/{id}",
              "request": {
                "name": "GetIntegrationRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "A single integration",
                "status-code": 200,
                "type": "root.Integration",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getIntegrations": {
              "auth": undefined,
              "display-name": "Get integrations",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "count": 1,
                      "models": [
                        {
                          "configs": {
                            "algorithm": "md5",
                            "encoding": "base64",
                            "header_key": "header_key",
                            "webhook_secret_key": "webhook_secret_key",
                          },
                          "created_at": "2024-01-15T09:30:00Z",
                          "features": [
                            "VERIFICATION",
                          ],
                          "id": "id",
                          "label": "label",
                          "provider": "twitter",
                          "sources": [
                            "sources",
                          ],
                          "team_id": "team_id",
                          "updated_at": "2024-01-15T09:30:00Z",
                        },
                      ],
                      "pagination": {
                        "dir": "asc",
                        "limit": 1,
                        "next": "next",
                        "order_by": "order_by",
                        "prev": "prev",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/integrations",
              "request": {
                "name": "GetIntegrationsRequest",
                "query-parameters": {
                  "label": "optional<string>",
                  "provider": "optional<root.IntegrationProvider>",
                },
              },
              "response": {
                "docs": "List of integrations",
                "status-code": 200,
                "type": "root.IntegrationPaginatedResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "updateIntegration": {
              "auth": undefined,
              "display-name": "Update an integration",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.NotFoundError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "request": {},
                  "response": {
                    "body": {
                      "configs": {
                        "algorithm": "md5",
                        "encoding": "base64",
                        "header_key": "header_key",
                        "webhook_secret_key": "webhook_secret_key",
                      },
                      "created_at": "2024-01-15T09:30:00Z",
                      "features": [
                        "VERIFICATION",
                      ],
                      "id": "id",
                      "label": "label",
                      "provider": "twitter",
                      "sources": [
                        "sources",
                      ],
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/integrations/{id}",
              "request": {
                "body": {
                  "properties": {
                    "configs": {
                      "docs": "Decrypted Key/Value object of the associated configuration for that provider",
                      "type": "optional<UpdateIntegrationRequestConfigs>",
                    },
                    "features": {
                      "docs": "List of features to enable (see features list above)",
                      "type": "optional<list<root.IntegrationFeature>>",
                    },
                    "label": {
                      "docs": "Label of the integration",
                      "type": "optional<string>",
                    },
                    "provider": "optional<root.IntegrationProvider>",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpdateIntegrationRequest",
                "path-parameters": {
                  "id": "string",
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "A single integration",
                "status-code": 200,
                "type": "root.Integration",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "CreateIntegrationRequestConfigs": {
            "discriminated": false,
            "docs": "Decrypted Key/Value object of the associated configuration for that provider",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "root.HmacIntegrationConfigs",
              "root.ApiKeyIntegrationConfigs",
              "root.HandledHmacConfigs",
              "root.BasicAuthIntegrationConfigs",
              "root.ShopifyIntegrationConfigs",
            ],
          },
          "UpdateIntegrationRequestConfigs": {
            "discriminated": false,
            "docs": "Decrypted Key/Value object of the associated configuration for that provider",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "root.HmacIntegrationConfigs",
              "root.ApiKeyIntegrationConfigs",
              "root.HandledHmacConfigs",
              "root.BasicAuthIntegrationConfigs",
              "root.ShopifyIntegrationConfigs",
            ],
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    getIntegrations:
      path: /integrations
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get integrations
      request:
        name: GetIntegrationsRequest
        query-parameters:
          label: optional<string>
          provider: optional<root.IntegrationProvider>
      response:
        docs: List of integrations
        type: root.IntegrationPaginatedResult
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - response:
            body:
              pagination:
                order_by: order_by
                dir: asc
                limit: 1
                prev: prev
                next: next
              count: 1
              models:
                - id: id
                  team_id: team_id
                  label: label
                  provider: twitter
                  features:
                    - VERIFICATION
                  configs:
                    webhook_secret_key: webhook_secret_key
                    algorithm: md5
                    header_key: header_key
                    encoding: base64
                  sources:
                    - sources
                  updated_at: '2024-01-15T09:30:00Z'
                  created_at: '2024-01-15T09:30:00Z'
    createIntegration:
      path: /integrations
      method: POST
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Create an integration
      request:
        name: CreateIntegrationRequest
        body:
          properties:
            label:
              type: string
              docs: Label of the integration
            configs:
              type: CreateIntegrationRequestConfigs
              docs: >-
                Decrypted Key/Value object of the associated configuration for
                that provider
            provider: root.IntegrationProvider
            features:
              docs: List of features to enable (see features list above)
              type: list<root.IntegrationFeature>
        content-type: application/json
      response:
        docs: A single integration
        type: root.Integration
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - request:
            label: label
            configs:
              webhook_secret_key: webhook_secret_key
              algorithm: md5
              header_key: header_key
              encoding: base64
            provider: twitter
            features:
              - VERIFICATION
          response:
            body:
              id: id
              team_id: team_id
              label: label
              provider: twitter
              features:
                - VERIFICATION
              configs:
                webhook_secret_key: webhook_secret_key
                algorithm: md5
                header_key: header_key
                encoding: base64
              sources:
                - sources
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
    getIntegration:
      path: /integrations/{id}
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get an integration
      request:
        name: GetIntegrationRequest
        path-parameters:
          id: string
      response:
        docs: A single integration
        type: root.Integration
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              team_id: team_id
              label: label
              provider: twitter
              features:
                - VERIFICATION
              configs:
                webhook_secret_key: webhook_secret_key
                algorithm: md5
                header_key: header_key
                encoding: base64
              sources:
                - sources
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
    updateIntegration:
      path: /integrations/{id}
      method: PUT
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Update an integration
      request:
        name: UpdateIntegrationRequest
        path-parameters:
          id: string
        body:
          properties:
            label:
              type: optional<string>
              docs: Label of the integration
            configs:
              type: optional<UpdateIntegrationRequestConfigs>
              docs: >-
                Decrypted Key/Value object of the associated configuration for
                that provider
            provider: optional<root.IntegrationProvider>
            features:
              type: optional<list<root.IntegrationFeature>>
              docs: List of features to enable (see features list above)
        content-type: application/json
      response:
        docs: A single integration
        type: root.Integration
        status-code: 200
      errors:
        - root.BadRequestError
        - root.NotFoundError
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            id: id
          request: {}
          response:
            body:
              id: id
              team_id: team_id
              label: label
              provider: twitter
              features:
                - VERIFICATION
              configs:
                webhook_secret_key: webhook_secret_key
                algorithm: md5
                header_key: header_key
                encoding: base64
              sources:
                - sources
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
    deleteIntegration:
      path: /integrations/{id}
      method: DELETE
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Delete an integration
      request:
        name: DeleteIntegrationRequest
        path-parameters:
          id: string
      response:
        docs: An object with deleted integration id
        type: root.DeletedIntegration
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
    attachIntegrationToSource:
      path: /integrations/{id}/attach/{source_id}
      method: PUT
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Attach an integration to a source
      request:
        name: AttachIntegrationToSourceRequest
        path-parameters:
          id: string
          source_id: string
      response:
        docs: Attach operation success status
        type: root.AttachedIntegrationToSource
        status-code: 200
      errors:
        - root.BadRequestError
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
            source_id: source_id
          response:
            body:
              success: true
    detachIntegrationToSource:
      path: /integrations/{id}/detach/{source_id}
      method: PUT
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Detach an integration from a source
      request:
        name: DetachIntegrationToSourceRequest
        path-parameters:
          id: string
          source_id: string
      response:
        docs: Detach operation success status
        type: root.DetachedIntegrationFromSource
        status-code: 200
      errors:
        - root.BadRequestError
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
            source_id: source_id
          response:
            body: {}
  source:
    openapi: ../openapi.yml
  display-name: Integrations
docs: >-
  An integration configures platform-specific behaviors, such as signature
  verification.
types:
  CreateIntegrationRequestConfigs:
    discriminated: false
    docs: >-
      Decrypted Key/Value object of the associated configuration for that
      provider
    union:
      - root.HmacIntegrationConfigs
      - root.ApiKeyIntegrationConfigs
      - root.HandledHmacConfigs
      - root.BasicAuthIntegrationConfigs
      - root.ShopifyIntegrationConfigs
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateIntegrationRequestConfigs:
    discriminated: false
    docs: >-
      Decrypted Key/Value object of the associated configuration for that
      provider
    union:
      - root.HmacIntegrationConfigs
      - root.ApiKeyIntegrationConfigs
      - root.HandledHmacConfigs
      - root.BasicAuthIntegrationConfigs
      - root.ShopifyIntegrationConfigs
    source:
      openapi: ../openapi.yml
    inline: true
",
    },
    "issueTriggers.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Issue Triggers lets you setup rules that trigger issues when certain conditions are met.",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Issue Triggers",
          "endpoints": {
            "createIssueTrigger": {
              "auth": undefined,
              "display-name": "Create an issue trigger",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "request": {
                    "type": "delivery",
                  },
                  "response": {
                    "body": {
                      "channels": {
                        "slack": {
                          "channel_name": "channel_name",
                        },
                      },
                      "configs": {
                        "connections": "connections",
                        "strategy": "first_attempt",
                      },
                      "created_at": "2024-01-15T09:30:00Z",
                      "deleted_at": "2024-01-15T09:30:00Z",
                      "disabled_at": "2024-01-15T09:30:00Z",
                      "id": "id",
                      "name": "name",
                      "team_id": "team_id",
                      "type": "delivery",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/issue-triggers",
              "request": {
                "body": {
                  "properties": {
                    "channels": "nullable<root.IssueTriggerChannels>",
                    "configs": {
                      "docs": "Configuration object for the specific issue type selected",
                      "type": "optional<CreateIssueTriggerRequestConfigs>",
                    },
                    "name": {
                      "docs": "Optional unique name to use as reference when using the API",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": 255,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                    "type": "root.IssueType",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateIssueTriggerRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "A single issue trigger",
                "status-code": 200,
                "type": "root.IssueTrigger",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "deleteIssueTrigger": {
              "auth": undefined,
              "display-name": "Delete an issue trigger",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "id": "id",
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/issue-triggers/{id}",
              "request": {
                "name": "DeleteIssueTriggerRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "An object with deleted issue trigger's id",
                "status-code": 200,
                "type": "root.DeletedIssueTriggerResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "disableIssueTrigger": {
              "auth": undefined,
              "display-name": "Disable an issue trigger",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "channels": {
                        "slack": {
                          "channel_name": "channel_name",
                        },
                      },
                      "configs": {
                        "connections": "connections",
                        "strategy": "first_attempt",
                      },
                      "created_at": "2024-01-15T09:30:00Z",
                      "deleted_at": "2024-01-15T09:30:00Z",
                      "disabled_at": "2024-01-15T09:30:00Z",
                      "id": "id",
                      "name": "name",
                      "team_id": "team_id",
                      "type": "delivery",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/issue-triggers/{id}/disable",
              "request": {
                "name": "DisableIssueTriggerRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "A single issue trigger",
                "status-code": 200,
                "type": "root.IssueTrigger",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "enableIssueTrigger": {
              "auth": undefined,
              "display-name": "Enable an issue trigger",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "channels": {
                        "slack": {
                          "channel_name": "channel_name",
                        },
                      },
                      "configs": {
                        "connections": "connections",
                        "strategy": "first_attempt",
                      },
                      "created_at": "2024-01-15T09:30:00Z",
                      "deleted_at": "2024-01-15T09:30:00Z",
                      "disabled_at": "2024-01-15T09:30:00Z",
                      "id": "id",
                      "name": "name",
                      "team_id": "team_id",
                      "type": "delivery",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/issue-triggers/{id}/enable",
              "request": {
                "name": "EnableIssueTriggerRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "A single issue trigger",
                "status-code": 200,
                "type": "root.IssueTrigger",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getIssueTrigger": {
              "auth": undefined,
              "display-name": "Get a single issue trigger",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "channels": {
                        "slack": {
                          "channel_name": "channel_name",
                        },
                      },
                      "configs": {
                        "connections": "connections",
                        "strategy": "first_attempt",
                      },
                      "created_at": "2024-01-15T09:30:00Z",
                      "deleted_at": "2024-01-15T09:30:00Z",
                      "disabled_at": "2024-01-15T09:30:00Z",
                      "id": "id",
                      "name": "name",
                      "team_id": "team_id",
                      "type": "delivery",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/issue-triggers/{id}",
              "request": {
                "name": "GetIssueTriggerRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "A single issue trigger",
                "status-code": 200,
                "type": "root.IssueTrigger",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getIssueTriggers": {
              "auth": undefined,
              "display-name": "Get issue triggers",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "count": 1,
                      "models": [
                        {
                          "configs": {
                            "connections": "connections",
                            "strategy": "first_attempt",
                          },
                          "created_at": "2024-01-15T09:30:00Z",
                          "deleted_at": "2024-01-15T09:30:00Z",
                          "disabled_at": "2024-01-15T09:30:00Z",
                          "id": "id",
                          "name": "name",
                          "team_id": "team_id",
                          "type": "delivery",
                          "updated_at": "2024-01-15T09:30:00Z",
                        },
                      ],
                      "pagination": {
                        "dir": "asc",
                        "limit": 1,
                        "next": "next",
                        "order_by": "order_by",
                        "prev": "prev",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/issue-triggers",
              "request": {
                "name": "GetIssueTriggersRequest",
                "query-parameters": {
                  "dir": "optional<GetIssueTriggersRequestDir>",
                  "disabled_at": "optional<root.GetIssueTriggersRequestDisabledAt>",
                  "limit": {
                    "type": "optional<integer>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 255,
                      "min": 0,
                      "multipleOf": undefined,
                    },
                  },
                  "name": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "next": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "order_by": "optional<GetIssueTriggersRequestOrderBy>",
                  "prev": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "type": "optional<root.IssueType>",
                },
              },
              "response": {
                "docs": "List of issue triggers",
                "status-code": 200,
                "type": "root.IssueTriggerPaginatedResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "updateIssueTrigger": {
              "auth": undefined,
              "display-name": "Update an issue trigger",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "request": {},
                  "response": {
                    "body": {
                      "channels": {
                        "slack": {
                          "channel_name": "channel_name",
                        },
                      },
                      "configs": {
                        "connections": "connections",
                        "strategy": "first_attempt",
                      },
                      "created_at": "2024-01-15T09:30:00Z",
                      "deleted_at": "2024-01-15T09:30:00Z",
                      "disabled_at": "2024-01-15T09:30:00Z",
                      "id": "id",
                      "name": "name",
                      "team_id": "team_id",
                      "type": "delivery",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/issue-triggers/{id}",
              "request": {
                "body": {
                  "properties": {
                    "channels": "optional<nullable<root.IssueTriggerChannels>>",
                    "configs": {
                      "docs": "Configuration object for the specific issue type selected",
                      "type": "optional<UpdateIssueTriggerRequestConfigs>",
                    },
                    "disabled_at": {
                      "docs": "Date when the issue trigger was disabled",
                      "type": "optional<nullable<datetime>>",
                    },
                    "name": {
                      "docs": "Optional unique name to use as reference when using the API",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": 255,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpdateIssueTriggerRequest",
                "path-parameters": {
                  "id": "string",
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "A single issue trigger",
                "status-code": 200,
                "type": "root.IssueTrigger",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "upsertIssueTrigger": {
              "auth": undefined,
              "display-name": "Create or update an issue trigger",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "request": {
                    "name": "name",
                    "type": "delivery",
                  },
                  "response": {
                    "body": {
                      "channels": {
                        "slack": {
                          "channel_name": "channel_name",
                        },
                      },
                      "configs": {
                        "connections": "connections",
                        "strategy": "first_attempt",
                      },
                      "created_at": "2024-01-15T09:30:00Z",
                      "deleted_at": "2024-01-15T09:30:00Z",
                      "disabled_at": "2024-01-15T09:30:00Z",
                      "id": "id",
                      "name": "name",
                      "team_id": "team_id",
                      "type": "delivery",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/issue-triggers",
              "request": {
                "body": {
                  "properties": {
                    "channels": "nullable<root.IssueTriggerChannels>",
                    "configs": {
                      "docs": "Configuration object for the specific issue type selected",
                      "type": "optional<UpsertIssueTriggerRequestConfigs>",
                    },
                    "name": {
                      "docs": "Required unique name to use as reference when using the API",
                      "type": "string",
                      "validation": {
                        "format": undefined,
                        "maxLength": 255,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                    "type": "root.IssueType",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpsertIssueTriggerRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "A single issue trigger",
                "status-code": 200,
                "type": "root.IssueTrigger",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "CreateIssueTriggerRequestConfigs": {
            "discriminated": false,
            "docs": "Configuration object for the specific issue type selected",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "root.IssueTriggerDeliveryConfigs",
              "root.IssueTriggerTransformationConfigs",
              "root.IssueTriggerBackpressureConfigs",
            ],
          },
          "GetIssueTriggersRequestDir": {
            "enum": [
              "asc",
              "desc",
            ],
          },
          "GetIssueTriggersRequestOrderBy": {
            "enum": [
              "created_at",
              "type",
            ],
          },
          "UpdateIssueTriggerRequestConfigs": {
            "discriminated": false,
            "docs": "Configuration object for the specific issue type selected",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "root.IssueTriggerDeliveryConfigs",
              "root.IssueTriggerTransformationConfigs",
              "root.IssueTriggerBackpressureConfigs",
            ],
          },
          "UpsertIssueTriggerRequestConfigs": {
            "discriminated": false,
            "docs": "Configuration object for the specific issue type selected",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "root.IssueTriggerDeliveryConfigs",
              "root.IssueTriggerTransformationConfigs",
              "root.IssueTriggerBackpressureConfigs",
            ],
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
types:
  GetIssueTriggersRequestOrderBy:
    enum:
      - created_at
      - type
  GetIssueTriggersRequestDir:
    enum:
      - asc
      - desc
  CreateIssueTriggerRequestConfigs:
    discriminated: false
    docs: Configuration object for the specific issue type selected
    union:
      - root.IssueTriggerDeliveryConfigs
      - root.IssueTriggerTransformationConfigs
      - root.IssueTriggerBackpressureConfigs
    source:
      openapi: ../openapi.yml
    inline: true
  UpsertIssueTriggerRequestConfigs:
    discriminated: false
    docs: Configuration object for the specific issue type selected
    union:
      - root.IssueTriggerDeliveryConfigs
      - root.IssueTriggerTransformationConfigs
      - root.IssueTriggerBackpressureConfigs
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateIssueTriggerRequestConfigs:
    discriminated: false
    docs: Configuration object for the specific issue type selected
    union:
      - root.IssueTriggerDeliveryConfigs
      - root.IssueTriggerTransformationConfigs
      - root.IssueTriggerBackpressureConfigs
    source:
      openapi: ../openapi.yml
    inline: true
service:
  auth: false
  base-path: ''
  endpoints:
    getIssueTriggers:
      path: /issue-triggers
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get issue triggers
      request:
        name: GetIssueTriggersRequest
        query-parameters:
          name:
            type: optional<string>
            validation:
              maxLength: 255
          type: optional<root.IssueType>
          disabled_at: optional<root.GetIssueTriggersRequestDisabledAt>
          order_by: optional<GetIssueTriggersRequestOrderBy>
          dir: optional<GetIssueTriggersRequestDir>
          limit:
            type: optional<integer>
            validation:
              min: 0
              max: 255
          next:
            type: optional<string>
            validation:
              maxLength: 255
          prev:
            type: optional<string>
            validation:
              maxLength: 255
      response:
        docs: List of issue triggers
        type: root.IssueTriggerPaginatedResult
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - response:
            body:
              pagination:
                order_by: order_by
                dir: asc
                limit: 1
                prev: prev
                next: next
              count: 1
              models:
                - id: id
                  team_id: team_id
                  name: name
                  type: delivery
                  configs:
                    strategy: first_attempt
                    connections: connections
                  disabled_at: '2024-01-15T09:30:00Z'
                  updated_at: '2024-01-15T09:30:00Z'
                  created_at: '2024-01-15T09:30:00Z'
                  deleted_at: '2024-01-15T09:30:00Z'
    createIssueTrigger:
      path: /issue-triggers
      method: POST
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Create an issue trigger
      request:
        name: CreateIssueTriggerRequest
        body:
          properties:
            type: root.IssueType
            configs:
              type: optional<CreateIssueTriggerRequestConfigs>
              docs: Configuration object for the specific issue type selected
            channels: nullable<root.IssueTriggerChannels>
            name:
              type: optional<string>
              docs: Optional unique name to use as reference when using the API
              validation:
                maxLength: 255
        content-type: application/json
      response:
        docs: A single issue trigger
        type: root.IssueTrigger
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - request:
            type: delivery
          response:
            body:
              id: id
              team_id: team_id
              name: name
              type: delivery
              configs:
                strategy: first_attempt
                connections: connections
              channels:
                slack:
                  channel_name: channel_name
              disabled_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
              deleted_at: '2024-01-15T09:30:00Z'
    upsertIssueTrigger:
      path: /issue-triggers
      method: PUT
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Create or update an issue trigger
      request:
        name: UpsertIssueTriggerRequest
        body:
          properties:
            type: root.IssueType
            configs:
              type: optional<UpsertIssueTriggerRequestConfigs>
              docs: Configuration object for the specific issue type selected
            channels: nullable<root.IssueTriggerChannels>
            name:
              type: string
              docs: Required unique name to use as reference when using the API
              validation:
                maxLength: 255
        content-type: application/json
      response:
        docs: A single issue trigger
        type: root.IssueTrigger
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - request:
            type: delivery
            name: name
          response:
            body:
              id: id
              team_id: team_id
              name: name
              type: delivery
              configs:
                strategy: first_attempt
                connections: connections
              channels:
                slack:
                  channel_name: channel_name
              disabled_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
              deleted_at: '2024-01-15T09:30:00Z'
    getIssueTrigger:
      path: /issue-triggers/{id}
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get a single issue trigger
      request:
        name: GetIssueTriggerRequest
        path-parameters:
          id: string
      response:
        docs: A single issue trigger
        type: root.IssueTrigger
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              team_id: team_id
              name: name
              type: delivery
              configs:
                strategy: first_attempt
                connections: connections
              channels:
                slack:
                  channel_name: channel_name
              disabled_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
              deleted_at: '2024-01-15T09:30:00Z'
    updateIssueTrigger:
      path: /issue-triggers/{id}
      method: PUT
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Update an issue trigger
      request:
        name: UpdateIssueTriggerRequest
        path-parameters:
          id: string
        body:
          properties:
            configs:
              type: optional<UpdateIssueTriggerRequestConfigs>
              docs: Configuration object for the specific issue type selected
            channels: optional<nullable<root.IssueTriggerChannels>>
            disabled_at:
              type: optional<nullable<datetime>>
              docs: Date when the issue trigger was disabled
            name:
              type: optional<string>
              docs: Optional unique name to use as reference when using the API
              validation:
                maxLength: 255
        content-type: application/json
      response:
        docs: A single issue trigger
        type: root.IssueTrigger
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            id: id
          request: {}
          response:
            body:
              id: id
              team_id: team_id
              name: name
              type: delivery
              configs:
                strategy: first_attempt
                connections: connections
              channels:
                slack:
                  channel_name: channel_name
              disabled_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
              deleted_at: '2024-01-15T09:30:00Z'
    deleteIssueTrigger:
      path: /issue-triggers/{id}
      method: DELETE
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Delete an issue trigger
      request:
        name: DeleteIssueTriggerRequest
        path-parameters:
          id: string
      response:
        docs: An object with deleted issue trigger's id
        type: root.DeletedIssueTriggerResponse
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
    disableIssueTrigger:
      path: /issue-triggers/{id}/disable
      method: PUT
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Disable an issue trigger
      request:
        name: DisableIssueTriggerRequest
        path-parameters:
          id: string
      response:
        docs: A single issue trigger
        type: root.IssueTrigger
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              team_id: team_id
              name: name
              type: delivery
              configs:
                strategy: first_attempt
                connections: connections
              channels:
                slack:
                  channel_name: channel_name
              disabled_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
              deleted_at: '2024-01-15T09:30:00Z'
    enableIssueTrigger:
      path: /issue-triggers/{id}/enable
      method: PUT
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Enable an issue trigger
      request:
        name: EnableIssueTriggerRequest
        path-parameters:
          id: string
      response:
        docs: A single issue trigger
        type: root.IssueTrigger
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              team_id: team_id
              name: name
              type: delivery
              configs:
                strategy: first_attempt
                connections: connections
              channels:
                slack:
                  channel_name: channel_name
              disabled_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
              deleted_at: '2024-01-15T09:30:00Z'
  source:
    openapi: ../openapi.yml
  display-name: Issue Triggers
docs: >-
  Issue Triggers lets you setup rules that trigger issues when certain
  conditions are met.
",
    },
    "issues.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Issues lets you track problems in your workspace and communicate resolution steps with your team.",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Issues",
          "endpoints": {
            "dismissIssue": {
              "auth": undefined,
              "display-name": "Dismiss an issue",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "aggregation_keys": {
                        "error_code": [
                          "TIMEOUT",
                        ],
                        "response_status": [
                          1.1,
                        ],
                        "webhook_id": [
                          "webhook_id",
                        ],
                      },
                      "auto_resolved_at": "2024-01-15T09:30:00Z",
                      "created_at": "created_at",
                      "dismissed_at": "2024-01-15T09:30:00Z",
                      "first_seen_at": "2024-01-15T09:30:00Z",
                      "id": "iss_YXKv5OdJXCiVwkPhGy",
                      "last_seen_at": "2024-01-15T09:30:00Z",
                      "last_updated_by": "last_updated_by",
                      "merged_with": "merged_with",
                      "opened_at": "2024-01-15T09:30:00Z",
                      "reference": {
                        "attempt_id": "attempt_id",
                        "event_id": "event_id",
                      },
                      "status": "OPENED",
                      "team_id": "team_id",
                      "type": "delivery",
                      "updated_at": "updated_at",
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/issues/{id}",
              "request": {
                "name": "DismissIssueRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "Dismissed issue",
                "status-code": 200,
                "type": "root.Issue",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getIssue": {
              "auth": undefined,
              "display-name": "Get a single issue",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "aggregation_keys": {
                        "error_code": [
                          "TIMEOUT",
                        ],
                        "response_status": [
                          1.1,
                        ],
                        "webhook_id": [
                          "webhook_id",
                        ],
                      },
                      "auto_resolved_at": "2024-01-15T09:30:00Z",
                      "created_at": "created_at",
                      "data": {
                        "trigger_attempt": {
                          "archived_at": "archived_at",
                          "attempt_number": 1,
                          "bulk_retry_id": "bulk_retry_id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "delivered_at": "2024-01-15T09:30:00Z",
                          "delivery_latency": 1,
                          "destination_id": "destination_id",
                          "error_code": "TIMEOUT",
                          "event_id": "event_id",
                          "id": "id",
                          "requested_url": "requested_url",
                          "responded_at": "2024-01-15T09:30:00Z",
                          "response_latency": 1,
                          "response_status": 1,
                          "state": "DELIVERING",
                          "status": "QUEUED",
                          "successful_at": "2024-01-15T09:30:00Z",
                          "team_id": "team_id",
                          "trigger": "INITIAL",
                          "updated_at": "2024-01-15T09:30:00Z",
                        },
                        "trigger_event": {
                          "attempts": 1,
                          "cli_id": "cli_id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "created_at_id": "created_at_id",
                          "data": {
                            "path": "path",
                          },
                          "destination_id": "destination_id",
                          "event_data_id": "event_data_id",
                          "id": "id",
                          "last_attempt_at": "2024-01-15T09:30:00Z",
                          "last_attempt_at_id": "last_attempt_at_id",
                          "next_attempt_at": "2024-01-15T09:30:00Z",
                          "request_id": "request_id",
                          "response_status": 1,
                          "source_id": "source_id",
                          "status": "SCHEDULED",
                          "successful_at": "2024-01-15T09:30:00Z",
                          "team_id": "team_id",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "webhook_id": "webhook_id",
                        },
                      },
                      "dismissed_at": "2024-01-15T09:30:00Z",
                      "first_seen_at": "2024-01-15T09:30:00Z",
                      "id": "iss_YXKv5OdJXCiVwkPhGy",
                      "last_seen_at": "2024-01-15T09:30:00Z",
                      "last_updated_by": "last_updated_by",
                      "merged_with": "merged_with",
                      "opened_at": "2024-01-15T09:30:00Z",
                      "reference": {
                        "attempt_id": "attempt_id",
                        "event_id": "event_id",
                      },
                      "status": "OPENED",
                      "team_id": "team_id",
                      "type": "delivery",
                      "updated_at": "updated_at",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/issues/{id}",
              "request": {
                "name": "GetIssueRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "A single issue",
                "status-code": 200,
                "type": "root.IssueWithData",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getIssueCount": {
              "auth": undefined,
              "display-name": "Get the number of issues",
              "docs": "",
              "errors": [
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "query-parameters": {
                    "id": "iss_YXKv5OdJXCiVwkPhGy",
                    "issue_trigger_id": "it_BXKv5OdJXCiVwkPhGy",
                    "merged_with": "iss_AXKv3OdJXCiKlkPhDz",
                  },
                  "response": {
                    "body": {
                      "count": 5,
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/issues/count",
              "request": {
                "name": "GetIssueCountRequest",
                "query-parameters": {
                  "aggregation_keys": "optional<root.GetIssueCountRequestAggregationKeys>",
                  "created_at": "optional<root.GetIssueCountRequestCreatedAt>",
                  "dir": "optional<GetIssueCountRequestDir>",
                  "dismissed_at": "optional<root.GetIssueCountRequestDismissedAt>",
                  "first_seen_at": "optional<root.GetIssueCountRequestFirstSeenAt>",
                  "id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "issue_trigger_id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "last_seen_at": "optional<root.GetIssueCountRequestLastSeenAt>",
                  "limit": {
                    "type": "optional<integer>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 255,
                      "min": 0,
                      "multipleOf": undefined,
                    },
                  },
                  "merged_with": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                  },
                  "next": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "order_by": "optional<GetIssueCountRequestOrderBy>",
                  "prev": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "status": "optional<GetIssueCountRequestStatus>",
                  "type": "optional<GetIssueCountRequestType>",
                },
              },
              "response": {
                "docs": "Issue count",
                "status-code": 200,
                "type": "root.IssueCount",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getIssues": {
              "auth": undefined,
              "display-name": "Get issues",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "query-parameters": {
                    "id": "iss_YXKv5OdJXCiVwkPhGy",
                    "issue_trigger_id": "it_BXKv5OdJXCiVwkPhGy",
                    "merged_with": "iss_AXKv3OdJXCiKlkPhDz",
                  },
                  "response": {
                    "body": {
                      "count": 1,
                      "models": [
                        {
                          "aggregation_keys": {
                            "error_code": [
                              "TIMEOUT",
                            ],
                            "response_status": [
                              1.1,
                            ],
                            "webhook_id": [
                              "webhook_id",
                            ],
                          },
                          "auto_resolved_at": "2024-01-15T09:30:00Z",
                          "created_at": "created_at",
                          "dismissed_at": "2024-01-15T09:30:00Z",
                          "first_seen_at": "2024-01-15T09:30:00Z",
                          "id": "iss_YXKv5OdJXCiVwkPhGy",
                          "last_seen_at": "2024-01-15T09:30:00Z",
                          "last_updated_by": "last_updated_by",
                          "merged_with": "merged_with",
                          "opened_at": "2024-01-15T09:30:00Z",
                          "reference": {
                            "attempt_id": "attempt_id",
                            "event_id": "event_id",
                          },
                          "status": "OPENED",
                          "team_id": "team_id",
                          "type": "delivery",
                          "updated_at": "updated_at",
                        },
                      ],
                      "pagination": {
                        "dir": "asc",
                        "limit": 1,
                        "next": "next",
                        "order_by": "order_by",
                        "prev": "prev",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/issues",
              "request": {
                "name": "GetIssuesRequest",
                "query-parameters": {
                  "aggregation_keys": "optional<root.GetIssuesRequestAggregationKeys>",
                  "created_at": "optional<root.GetIssuesRequestCreatedAt>",
                  "dir": "optional<GetIssuesRequestDir>",
                  "dismissed_at": "optional<root.GetIssuesRequestDismissedAt>",
                  "first_seen_at": "optional<root.GetIssuesRequestFirstSeenAt>",
                  "id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "issue_trigger_id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "last_seen_at": "optional<root.GetIssuesRequestLastSeenAt>",
                  "limit": {
                    "type": "optional<integer>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 255,
                      "min": 0,
                      "multipleOf": undefined,
                    },
                  },
                  "merged_with": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                  },
                  "next": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "order_by": "optional<GetIssuesRequestOrderBy>",
                  "prev": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "status": "optional<GetIssuesRequestStatus>",
                  "type": "optional<GetIssuesRequestType>",
                },
              },
              "response": {
                "docs": "List of issues",
                "status-code": 200,
                "type": "root.IssueWithDataPaginatedResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "updateIssue": {
              "auth": undefined,
              "display-name": "Update issue",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "request": {
                    "status": "OPENED",
                  },
                  "response": {
                    "body": {
                      "aggregation_keys": {
                        "error_code": [
                          "TIMEOUT",
                        ],
                        "response_status": [
                          1.1,
                        ],
                        "webhook_id": [
                          "webhook_id",
                        ],
                      },
                      "auto_resolved_at": "2024-01-15T09:30:00Z",
                      "created_at": "created_at",
                      "dismissed_at": "2024-01-15T09:30:00Z",
                      "first_seen_at": "2024-01-15T09:30:00Z",
                      "id": "iss_YXKv5OdJXCiVwkPhGy",
                      "last_seen_at": "2024-01-15T09:30:00Z",
                      "last_updated_by": "last_updated_by",
                      "merged_with": "merged_with",
                      "opened_at": "2024-01-15T09:30:00Z",
                      "reference": {
                        "attempt_id": "attempt_id",
                        "event_id": "event_id",
                      },
                      "status": "OPENED",
                      "team_id": "team_id",
                      "type": "delivery",
                      "updated_at": "updated_at",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/issues/{id}",
              "request": {
                "body": {
                  "properties": {
                    "status": {
                      "docs": "New status",
                      "type": "UpdateIssueRequestStatus",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpdateIssueRequest",
                "path-parameters": {
                  "id": "string",
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Updated issue",
                "status-code": 200,
                "type": "root.Issue",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "GetIssueCountRequestDir": {
            "enum": [
              "asc",
              "desc",
            ],
          },
          "GetIssueCountRequestOrderBy": {
            "enum": [
              "created_at",
              "first_seen_at",
              "last_seen_at",
              "opened_at",
              "status",
            ],
          },
          "GetIssueCountRequestStatus": {
            "enum": [
              "OPENED",
              "IGNORED",
              "ACKNOWLEDGED",
              "RESOLVED",
            ],
          },
          "GetIssueCountRequestType": {
            "enum": [
              "delivery",
              "transformation",
              "backpressure",
            ],
          },
          "GetIssuesRequestDir": {
            "enum": [
              "asc",
              "desc",
            ],
          },
          "GetIssuesRequestOrderBy": {
            "enum": [
              "created_at",
              "first_seen_at",
              "last_seen_at",
              "opened_at",
              "status",
            ],
          },
          "GetIssuesRequestStatus": {
            "enum": [
              "OPENED",
              "IGNORED",
              "ACKNOWLEDGED",
              "RESOLVED",
            ],
          },
          "GetIssuesRequestType": {
            "enum": [
              "delivery",
              "transformation",
              "backpressure",
            ],
          },
          "UpdateIssueRequestStatus": {
            "docs": "New status",
            "enum": [
              "OPENED",
              "IGNORED",
              "ACKNOWLEDGED",
              "RESOLVED",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  GetIssuesRequestType:
    enum:
      - delivery
      - transformation
      - backpressure
  GetIssuesRequestStatus:
    enum:
      - OPENED
      - IGNORED
      - ACKNOWLEDGED
      - RESOLVED
  GetIssuesRequestOrderBy:
    enum:
      - created_at
      - first_seen_at
      - last_seen_at
      - opened_at
      - status
  GetIssuesRequestDir:
    enum:
      - asc
      - desc
  GetIssueCountRequestType:
    enum:
      - delivery
      - transformation
      - backpressure
  GetIssueCountRequestStatus:
    enum:
      - OPENED
      - IGNORED
      - ACKNOWLEDGED
      - RESOLVED
  GetIssueCountRequestOrderBy:
    enum:
      - created_at
      - first_seen_at
      - last_seen_at
      - opened_at
      - status
  GetIssueCountRequestDir:
    enum:
      - asc
      - desc
  UpdateIssueRequestStatus:
    enum:
      - OPENED
      - IGNORED
      - ACKNOWLEDGED
      - RESOLVED
    docs: New status
    inline: true
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    getIssues:
      path: /issues
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get issues
      request:
        name: GetIssuesRequest
        query-parameters:
          id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          issue_trigger_id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          type: optional<GetIssuesRequestType>
          status: optional<GetIssuesRequestStatus>
          merged_with:
            type: optional<string>
            allow-multiple: true
          aggregation_keys: optional<root.GetIssuesRequestAggregationKeys>
          created_at: optional<root.GetIssuesRequestCreatedAt>
          first_seen_at: optional<root.GetIssuesRequestFirstSeenAt>
          last_seen_at: optional<root.GetIssuesRequestLastSeenAt>
          dismissed_at: optional<root.GetIssuesRequestDismissedAt>
          order_by: optional<GetIssuesRequestOrderBy>
          dir: optional<GetIssuesRequestDir>
          limit:
            type: optional<integer>
            validation:
              min: 0
              max: 255
          next:
            type: optional<string>
            validation:
              maxLength: 255
          prev:
            type: optional<string>
            validation:
              maxLength: 255
      response:
        docs: List of issues
        type: root.IssueWithDataPaginatedResult
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - query-parameters:
            id: iss_YXKv5OdJXCiVwkPhGy
            issue_trigger_id: it_BXKv5OdJXCiVwkPhGy
            merged_with: iss_AXKv3OdJXCiKlkPhDz
          response:
            body:
              pagination:
                order_by: order_by
                dir: asc
                limit: 1
                prev: prev
                next: next
              count: 1
              models:
                - id: iss_YXKv5OdJXCiVwkPhGy
                  team_id: team_id
                  status: OPENED
                  opened_at: '2024-01-15T09:30:00Z'
                  first_seen_at: '2024-01-15T09:30:00Z'
                  last_seen_at: '2024-01-15T09:30:00Z'
                  last_updated_by: last_updated_by
                  dismissed_at: '2024-01-15T09:30:00Z'
                  auto_resolved_at: '2024-01-15T09:30:00Z'
                  merged_with: merged_with
                  updated_at: updated_at
                  created_at: created_at
                  aggregation_keys:
                    webhook_id:
                      - webhook_id
                    response_status:
                      - 1.1
                    error_code:
                      - TIMEOUT
                  reference:
                    event_id: event_id
                    attempt_id: attempt_id
                  type: delivery
    getIssueCount:
      path: /issues/count
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get the number of issues
      request:
        name: GetIssueCountRequest
        query-parameters:
          id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          issue_trigger_id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          type: optional<GetIssueCountRequestType>
          status: optional<GetIssueCountRequestStatus>
          merged_with:
            type: optional<string>
            allow-multiple: true
          aggregation_keys: optional<root.GetIssueCountRequestAggregationKeys>
          created_at: optional<root.GetIssueCountRequestCreatedAt>
          first_seen_at: optional<root.GetIssueCountRequestFirstSeenAt>
          last_seen_at: optional<root.GetIssueCountRequestLastSeenAt>
          dismissed_at: optional<root.GetIssueCountRequestDismissedAt>
          order_by: optional<GetIssueCountRequestOrderBy>
          dir: optional<GetIssueCountRequestDir>
          limit:
            type: optional<integer>
            validation:
              min: 0
              max: 255
          next:
            type: optional<string>
            validation:
              maxLength: 255
          prev:
            type: optional<string>
            validation:
              maxLength: 255
      response:
        docs: Issue count
        type: root.IssueCount
        status-code: 200
      errors:
        - root.UnprocessableEntityError
      examples:
        - query-parameters:
            id: iss_YXKv5OdJXCiVwkPhGy
            issue_trigger_id: it_BXKv5OdJXCiVwkPhGy
            merged_with: iss_AXKv3OdJXCiKlkPhDz
          response:
            body:
              count: 5
    getIssue:
      path: /issues/{id}
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get a single issue
      request:
        name: GetIssueRequest
        path-parameters:
          id: string
      response:
        docs: A single issue
        type: root.IssueWithData
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: iss_YXKv5OdJXCiVwkPhGy
              team_id: team_id
              status: OPENED
              opened_at: '2024-01-15T09:30:00Z'
              first_seen_at: '2024-01-15T09:30:00Z'
              last_seen_at: '2024-01-15T09:30:00Z'
              last_updated_by: last_updated_by
              dismissed_at: '2024-01-15T09:30:00Z'
              auto_resolved_at: '2024-01-15T09:30:00Z'
              merged_with: merged_with
              updated_at: updated_at
              created_at: created_at
              aggregation_keys:
                webhook_id:
                  - webhook_id
                response_status:
                  - 1.1
                error_code:
                  - TIMEOUT
              reference:
                event_id: event_id
                attempt_id: attempt_id
              data:
                trigger_event:
                  id: id
                  team_id: team_id
                  webhook_id: webhook_id
                  source_id: source_id
                  destination_id: destination_id
                  event_data_id: event_data_id
                  request_id: request_id
                  attempts: 1
                  data:
                    path: path
                  last_attempt_at: '2024-01-15T09:30:00Z'
                  next_attempt_at: '2024-01-15T09:30:00Z'
                  response_status: 1
                  status: SCHEDULED
                  successful_at: '2024-01-15T09:30:00Z'
                  cli_id: cli_id
                  updated_at: '2024-01-15T09:30:00Z'
                  created_at: '2024-01-15T09:30:00Z'
                  created_at_id: created_at_id
                  last_attempt_at_id: last_attempt_at_id
                trigger_attempt:
                  id: id
                  team_id: team_id
                  event_id: event_id
                  response_status: 1
                  attempt_number: 1
                  trigger: INITIAL
                  error_code: TIMEOUT
                  requested_url: requested_url
                  bulk_retry_id: bulk_retry_id
                  status: QUEUED
                  successful_at: '2024-01-15T09:30:00Z'
                  delivered_at: '2024-01-15T09:30:00Z'
                  responded_at: '2024-01-15T09:30:00Z'
                  delivery_latency: 1
                  response_latency: 1
                  updated_at: '2024-01-15T09:30:00Z'
                  created_at: '2024-01-15T09:30:00Z'
                  state: DELIVERING
                  archived_at: archived_at
                  destination_id: destination_id
              type: delivery
    updateIssue:
      path: /issues/{id}
      method: PUT
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Update issue
      request:
        name: UpdateIssueRequest
        path-parameters:
          id: string
        body:
          properties:
            status:
              type: UpdateIssueRequestStatus
              docs: New status
        content-type: application/json
      response:
        docs: Updated issue
        type: root.Issue
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            id: id
          request:
            status: OPENED
          response:
            body:
              id: iss_YXKv5OdJXCiVwkPhGy
              team_id: team_id
              status: OPENED
              opened_at: '2024-01-15T09:30:00Z'
              first_seen_at: '2024-01-15T09:30:00Z'
              last_seen_at: '2024-01-15T09:30:00Z'
              last_updated_by: last_updated_by
              dismissed_at: '2024-01-15T09:30:00Z'
              auto_resolved_at: '2024-01-15T09:30:00Z'
              merged_with: merged_with
              updated_at: updated_at
              created_at: created_at
              aggregation_keys:
                webhook_id:
                  - webhook_id
                response_status:
                  - 1.1
                error_code:
                  - TIMEOUT
              reference:
                event_id: event_id
                attempt_id: attempt_id
              type: delivery
    dismissIssue:
      path: /issues/{id}
      method: DELETE
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Dismiss an issue
      request:
        name: DismissIssueRequest
        path-parameters:
          id: string
      response:
        docs: Dismissed issue
        type: root.Issue
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: iss_YXKv5OdJXCiVwkPhGy
              team_id: team_id
              status: OPENED
              opened_at: '2024-01-15T09:30:00Z'
              first_seen_at: '2024-01-15T09:30:00Z'
              last_seen_at: '2024-01-15T09:30:00Z'
              last_updated_by: last_updated_by
              dismissed_at: '2024-01-15T09:30:00Z'
              auto_resolved_at: '2024-01-15T09:30:00Z'
              merged_with: merged_with
              updated_at: updated_at
              created_at: created_at
              aggregation_keys:
                webhook_id:
                  - webhook_id
                response_status:
                  - 1.1
                error_code:
                  - TIMEOUT
              reference:
                event_id: event_id
                attempt_id: attempt_id
              type: delivery
  source:
    openapi: ../openapi.yml
  display-name: Issues
docs: >-
  Issues lets you track problems in your workspace and communicate resolution
  steps with your team.
",
    },
    "notifications.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Notifications let your team receive alerts anytime an issue changes.",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Notifications",
          "endpoints": {
            "toggleWebhookNotifications": {
              "auth": undefined,
              "display-name": "Toggle webhook notifications for the workspace",
              "docs": "",
              "examples": [
                {
                  "request": {},
                  "response": {
                    "body": {
                      "enabled": true,
                      "source_id": "source_id",
                      "topics": [
                        "issue.opened",
                      ],
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/notifications/webhooks",
              "request": {
                "body": {
                  "properties": {
                    "enabled": {
                      "docs": "Enable or disable webhook notifications on the workspace",
                      "type": "optional<boolean>",
                    },
                    "source_id": {
                      "docs": "The Hookdeck Source to send the webhook to",
                      "type": "optional<string>",
                    },
                    "topics": {
                      "docs": "List of topics to send notifications for",
                      "type": "optional<list<root.TopicsValue>>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ToggleWebhookNotificationsRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Toggle operation status response",
                "status-code": 200,
                "type": "root.ToggleWebhookNotifications",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    toggleWebhookNotifications:
      path: /notifications/webhooks
      method: PUT
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Toggle webhook notifications for the workspace
      request:
        name: ToggleWebhookNotificationsRequest
        body:
          properties:
            enabled:
              type: optional<boolean>
              docs: Enable or disable webhook notifications on the workspace
            topics:
              type: optional<list<root.TopicsValue>>
              docs: List of topics to send notifications for
            source_id:
              type: optional<string>
              docs: The Hookdeck Source to send the webhook to
        content-type: application/json
      response:
        docs: Toggle operation status response
        type: root.ToggleWebhookNotifications
        status-code: 200
      examples:
        - request: {}
          response:
            body:
              enabled: true
              topics:
                - issue.opened
              source_id: source_id
  source:
    openapi: ../openapi.yml
  display-name: Notifications
docs: Notifications let your team receive alerts anytime an issue changes.
",
    },
    "requests.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "A request represent a webhook received by Hookdeck.",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Requests",
          "endpoints": {
            "getRequest": {
              "auth": undefined,
              "display-name": "Get a request",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "cli_events_count": 1,
                      "created_at": "2024-01-15T09:30:00Z",
                      "data": {
                        "body": "body",
                        "headers": "headers",
                        "is_large_payload": true,
                        "parsed_query": "parsed_query",
                        "path": "path",
                        "query": "query",
                      },
                      "duplicate_hash": "duplicate_hash",
                      "duplicate_hits": 1,
                      "events_count": 1,
                      "id": "id",
                      "ignored_count": 1,
                      "ingest_priority": "NORMAL",
                      "ingested_at": "2024-01-15T09:30:00Z",
                      "ingested_at_id": "ingested_at_id",
                      "original_event_data_id": "original_event_data_id",
                      "rejection_cause": "SOURCE_ARCHIVED",
                      "source_id": "source_id",
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "verified": true,
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/requests/{id}",
              "request": {
                "name": "GetRequestRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "A single request",
                "status-code": 200,
                "type": "root.Request",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getRequestEvents": {
              "auth": undefined,
              "display-name": "Get request events",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.NotFoundError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "count": 1,
                      "models": [
                        {
                          "attempts": 1,
                          "cli_id": "cli_id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "created_at_id": "created_at_id",
                          "data": {
                            "path": "path",
                          },
                          "destination_id": "destination_id",
                          "event_data_id": "event_data_id",
                          "id": "id",
                          "last_attempt_at": "2024-01-15T09:30:00Z",
                          "last_attempt_at_id": "last_attempt_at_id",
                          "next_attempt_at": "2024-01-15T09:30:00Z",
                          "request_id": "request_id",
                          "response_status": 1,
                          "source_id": "source_id",
                          "status": "SCHEDULED",
                          "successful_at": "2024-01-15T09:30:00Z",
                          "team_id": "team_id",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "webhook_id": "webhook_id",
                        },
                      ],
                      "pagination": {
                        "dir": "asc",
                        "limit": 1,
                        "next": "next",
                        "order_by": "order_by",
                        "prev": "prev",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/requests/{id}/events",
              "request": {
                "name": "GetRequestEventsRequest",
                "path-parameters": {
                  "id": "string",
                },
                "query-parameters": {
                  "attempts": "optional<root.GetRequestEventsRequestAttempts>",
                  "body": "optional<root.GetRequestEventsRequestBody>",
                  "bulk_retry_id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "cli_id": "optional<nullable<GetRequestEventsRequestCliId>>",
                  "cli_user_id": "optional<nullable<GetRequestEventsRequestCliUserId>>",
                  "created_at": "optional<root.GetRequestEventsRequestCreatedAt>",
                  "destination_id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "dir": "optional<GetRequestEventsRequestDir>",
                  "error_code": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "event_data_id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "headers": "optional<root.GetRequestEventsRequestHeaders>",
                  "id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "include": "optional<literal<"data">>",
                  "issue_id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "last_attempt_at": "optional<nullable<GetRequestEventsRequestLastAttemptAt>>",
                  "limit": {
                    "type": "optional<integer>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 255,
                      "min": 0,
                      "multipleOf": undefined,
                    },
                  },
                  "next": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "order_by": "optional<GetRequestEventsRequestOrderBy>",
                  "parsed_query": "optional<root.GetRequestEventsRequestParsedQuery>",
                  "path": "optional<string>",
                  "prev": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "response_status": "optional<nullable<GetRequestEventsRequestResponseStatus>>",
                  "source_id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "status": "optional<root.GetRequestEventsRequestStatus>",
                  "successful_at": "optional<nullable<GetRequestEventsRequestSuccessfulAt>>",
                  "webhook_id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "response": {
                "docs": "List of events",
                "status-code": 200,
                "type": "root.EventPaginatedResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getRequestIgnoredEvents": {
              "auth": undefined,
              "display-name": "Get request ignored events",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.NotFoundError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "count": 1,
                      "models": [
                        {
                          "cause": "ARCHIVED",
                          "created_at": "2024-01-15T09:30:00Z",
                          "id": "id",
                          "meta": "body",
                          "request_id": "request_id",
                          "team_id": "team_id",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "webhook_id": "webhook_id",
                        },
                      ],
                      "pagination": {
                        "dir": "asc",
                        "limit": 1,
                        "next": "next",
                        "order_by": "order_by",
                        "prev": "prev",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/requests/{id}/ignored_events",
              "request": {
                "name": "GetRequestIgnoredEventsRequest",
                "path-parameters": {
                  "id": "string",
                },
                "query-parameters": {
                  "dir": "optional<GetRequestIgnoredEventsRequestDir>",
                  "id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "limit": {
                    "type": "optional<integer>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 255,
                      "min": 0,
                      "multipleOf": undefined,
                    },
                  },
                  "next": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "order_by": "optional<GetRequestIgnoredEventsRequestOrderBy>",
                  "prev": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "response": {
                "docs": "List of ignored events",
                "status-code": 200,
                "type": "root.IgnoredEventPaginatedResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getRequestRawBody": {
              "auth": undefined,
              "display-name": "Get a request raw body data",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "body": "body",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/requests/{id}/raw_body",
              "request": {
                "name": "GetRequestRawBodyRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "A request raw body data",
                "status-code": 200,
                "type": "root.RawBody",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getRequests": {
              "auth": undefined,
              "display-name": "Get requests",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "count": 1,
                      "models": [
                        {
                          "cli_events_count": 1,
                          "created_at": "2024-01-15T09:30:00Z",
                          "data": {
                            "path": "path",
                          },
                          "duplicate_hash": "duplicate_hash",
                          "duplicate_hits": 1,
                          "events_count": 1,
                          "id": "id",
                          "ignored_count": 1,
                          "ingest_priority": "NORMAL",
                          "ingested_at": "2024-01-15T09:30:00Z",
                          "ingested_at_id": "ingested_at_id",
                          "original_event_data_id": "original_event_data_id",
                          "rejection_cause": "SOURCE_ARCHIVED",
                          "source_id": "source_id",
                          "team_id": "team_id",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "verified": true,
                        },
                      ],
                      "pagination": {
                        "dir": "asc",
                        "limit": 1,
                        "next": "next",
                        "order_by": "order_by",
                        "prev": "prev",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/requests",
              "request": {
                "name": "GetRequestsRequest",
                "query-parameters": {
                  "body": "optional<root.GetRequestsRequestBody>",
                  "bulk_retry_id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "created_at": "optional<root.GetRequestsRequestCreatedAt>",
                  "dir": "optional<GetRequestsRequestDir>",
                  "events_count": "optional<root.GetRequestsRequestEventsCount>",
                  "headers": "optional<root.GetRequestsRequestHeaders>",
                  "id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "ignored_count": "optional<root.GetRequestsRequestIgnoredCount>",
                  "include": "optional<literal<"data">>",
                  "ingested_at": "optional<root.GetRequestsRequestIngestedAt>",
                  "limit": {
                    "type": "optional<integer>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 255,
                      "min": 0,
                      "multipleOf": undefined,
                    },
                  },
                  "next": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "order_by": "optional<GetRequestsRequestOrderBy>",
                  "parsed_query": "optional<root.GetRequestsRequestParsedQuery>",
                  "path": "optional<string>",
                  "prev": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "rejection_cause": "optional<nullable<GetRequestsRequestRejectionCause>>",
                  "source_id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "status": "optional<GetRequestsRequestStatus>",
                  "verified": "optional<boolean>",
                },
              },
              "response": {
                "docs": "List of requests",
                "status-code": 200,
                "type": "root.RequestPaginatedResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "retryRequest": {
              "auth": undefined,
              "display-name": "Retry a request",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.NotFoundError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "request": {
                    "webhook_ids": [
                      "webhook_ids",
                    ],
                  },
                  "response": {
                    "body": {
                      "events": [
                        {
                          "attempts": 1,
                          "cli_id": "cli_id",
                          "created_at": "2024-01-15T09:30:00Z",
                          "created_at_id": "created_at_id",
                          "data": {
                            "path": "path",
                          },
                          "destination_id": "destination_id",
                          "event_data_id": "event_data_id",
                          "id": "id",
                          "last_attempt_at": "2024-01-15T09:30:00Z",
                          "last_attempt_at_id": "last_attempt_at_id",
                          "next_attempt_at": "2024-01-15T09:30:00Z",
                          "request_id": "request_id",
                          "response_status": 1,
                          "source_id": "source_id",
                          "status": "SCHEDULED",
                          "successful_at": "2024-01-15T09:30:00Z",
                          "team_id": "team_id",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "webhook_id": "webhook_id",
                        },
                      ],
                      "request": {
                        "cli_events_count": 1,
                        "created_at": "2024-01-15T09:30:00Z",
                        "data": {
                          "body": "body",
                          "headers": "headers",
                          "is_large_payload": true,
                          "parsed_query": "parsed_query",
                          "path": "path",
                          "query": "query",
                        },
                        "duplicate_hash": "duplicate_hash",
                        "duplicate_hits": 1,
                        "events_count": 1,
                        "id": "id",
                        "ignored_count": 1,
                        "ingest_priority": "NORMAL",
                        "ingested_at": "2024-01-15T09:30:00Z",
                        "ingested_at_id": "ingested_at_id",
                        "original_event_data_id": "original_event_data_id",
                        "rejection_cause": "SOURCE_ARCHIVED",
                        "source_id": "source_id",
                        "team_id": "team_id",
                        "updated_at": "2024-01-15T09:30:00Z",
                        "verified": true,
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/requests/{id}/retry",
              "request": {
                "body": {
                  "properties": {
                    "webhook_ids": {
                      "docs": "Subset of webhook_ids to re-run the event logic on. Useful to retry only specific ignored_events",
                      "type": "list<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "RetryRequestRequest",
                "path-parameters": {
                  "id": "string",
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Retry request operation result",
                "status-code": 200,
                "type": "root.RetryRequest",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "GetRequestEventsRequestCliId": {
            "discriminated": false,
            "docs": "Filter by CLI IDs. `?[any]=true` operator for any CLI.",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "GetRequestEventsRequestCliIdAny",
              "list<string>",
            ],
          },
          "GetRequestEventsRequestCliIdAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRequestEventsRequestCliUserId": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "list<string>",
            ],
          },
          "GetRequestEventsRequestDir": {
            "enum": [
              "asc",
              "desc",
            ],
          },
          "GetRequestEventsRequestLastAttemptAt": {
            "discriminated": false,
            "docs": "Filter by `last_attempt_at` date using a date operator",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "datetime",
              "GetRequestEventsRequestLastAttemptAtAny",
            ],
          },
          "GetRequestEventsRequestLastAttemptAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<datetime>",
              "gte": "optional<datetime>",
              "le": "optional<datetime>",
              "lte": "optional<datetime>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRequestEventsRequestOrderBy": {
            "enum": [
              "last_attempt_at",
              "next_attempt_at",
              "created_at",
            ],
          },
          "GetRequestEventsRequestResponseStatus": {
            "discriminated": false,
            "docs": "Filter by HTTP response status code",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "integer",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 600,
                  "min": 200,
                  "multipleOf": undefined,
                },
              },
              "GetRequestEventsRequestResponseStatusAny",
              "list<integer>",
            ],
          },
          "GetRequestEventsRequestResponseStatusAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "contains": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 600,
                  "min": 200,
                  "multipleOf": undefined,
                },
              },
              "gt": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 600,
                  "min": 200,
                  "multipleOf": undefined,
                },
              },
              "gte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 600,
                  "min": 200,
                  "multipleOf": undefined,
                },
              },
              "le": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 600,
                  "min": 200,
                  "multipleOf": undefined,
                },
              },
              "lte": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 600,
                  "min": 200,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRequestEventsRequestSuccessfulAt": {
            "discriminated": false,
            "docs": "Filter by `successful_at` date using a date operator",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "datetime",
              "GetRequestEventsRequestSuccessfulAtAny",
            ],
          },
          "GetRequestEventsRequestSuccessfulAtAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "gt": "optional<datetime>",
              "gte": "optional<datetime>",
              "le": "optional<datetime>",
              "lte": "optional<datetime>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRequestIgnoredEventsRequestDir": {
            "enum": [
              "asc",
              "desc",
            ],
          },
          "GetRequestIgnoredEventsRequestOrderBy": {
            "enum": [
              "created_at",
            ],
          },
          "GetRequestsRequestDir": {
            "enum": [
              "asc",
              "desc",
            ],
          },
          "GetRequestsRequestOrderBy": {
            "enum": [
              "ingested_at",
              "created_at",
            ],
          },
          "GetRequestsRequestRejectionCause": {
            "discriminated": false,
            "docs": "Filter by rejection cause",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "root.RequestRejectionCause",
              "GetRequestsRequestRejectionCauseAny",
              "list<root.RequestRejectionCause>",
            ],
          },
          "GetRequestsRequestRejectionCauseAny": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "any": "optional<boolean>",
              "contains": "optional<root.RequestRejectionCause>",
              "gt": "optional<root.RequestRejectionCause>",
              "gte": "optional<root.RequestRejectionCause>",
              "le": "optional<root.RequestRejectionCause>",
              "lte": "optional<root.RequestRejectionCause>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetRequestsRequestStatus": {
            "enum": [
              "accepted",
              "rejected",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  GetRequestsRequestStatus:
    enum:
      - accepted
      - rejected
    source:
      openapi: ../openapi.yml
  GetRequestsRequestRejectionCauseAny:
    properties:
      gt: optional<root.RequestRejectionCause>
      gte: optional<root.RequestRejectionCause>
      le: optional<root.RequestRejectionCause>
      lte: optional<root.RequestRejectionCause>
      any: optional<boolean>
      contains: optional<root.RequestRejectionCause>
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestsRequestRejectionCause:
    discriminated: false
    docs: Filter by rejection cause
    union:
      - root.RequestRejectionCause
      - GetRequestsRequestRejectionCauseAny
      - list<root.RequestRejectionCause>
    source:
      openapi: ../openapi.yml
  GetRequestsRequestOrderBy:
    enum:
      - ingested_at
      - created_at
  GetRequestsRequestDir:
    enum:
      - asc
      - desc
  GetRequestEventsRequestResponseStatusAny:
    properties:
      gt:
        type: optional<integer>
        validation:
          min: 200
          max: 600
      gte:
        type: optional<integer>
        validation:
          min: 200
          max: 600
      le:
        type: optional<integer>
        validation:
          min: 200
          max: 600
      lte:
        type: optional<integer>
        validation:
          min: 200
          max: 600
      any: optional<boolean>
      contains:
        type: optional<integer>
        validation:
          min: 200
          max: 600
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestEventsRequestResponseStatus:
    discriminated: false
    docs: Filter by HTTP response status code
    union:
      - type: integer
        validation:
          min: 200
          max: 600
      - GetRequestEventsRequestResponseStatusAny
      - list<integer>
    source:
      openapi: ../openapi.yml
  GetRequestEventsRequestSuccessfulAtAny:
    properties:
      gt: optional<datetime>
      gte: optional<datetime>
      le: optional<datetime>
      lte: optional<datetime>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestEventsRequestSuccessfulAt:
    discriminated: false
    docs: Filter by `successful_at` date using a date operator
    union:
      - datetime
      - GetRequestEventsRequestSuccessfulAtAny
    source:
      openapi: ../openapi.yml
  GetRequestEventsRequestCliIdAny:
    properties:
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestEventsRequestCliId:
    discriminated: false
    docs: Filter by CLI IDs. `?[any]=true` operator for any CLI.
    union:
      - string
      - GetRequestEventsRequestCliIdAny
      - list<string>
    source:
      openapi: ../openapi.yml
  GetRequestEventsRequestCliUserId:
    discriminated: false
    union:
      - string
      - list<string>
    source:
      openapi: ../openapi.yml
  GetRequestEventsRequestLastAttemptAtAny:
    properties:
      gt: optional<datetime>
      gte: optional<datetime>
      le: optional<datetime>
      lte: optional<datetime>
      any: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetRequestEventsRequestLastAttemptAt:
    discriminated: false
    docs: Filter by `last_attempt_at` date using a date operator
    union:
      - datetime
      - GetRequestEventsRequestLastAttemptAtAny
    source:
      openapi: ../openapi.yml
  GetRequestEventsRequestOrderBy:
    enum:
      - last_attempt_at
      - next_attempt_at
      - created_at
  GetRequestEventsRequestDir:
    enum:
      - asc
      - desc
  GetRequestIgnoredEventsRequestOrderBy:
    enum:
      - created_at
  GetRequestIgnoredEventsRequestDir:
    enum:
      - asc
      - desc
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    getRequests:
      path: /requests
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get requests
      request:
        name: GetRequestsRequest
        query-parameters:
          id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          status: optional<GetRequestsRequestStatus>
          rejection_cause: optional<nullable<GetRequestsRequestRejectionCause>>
          ignored_count: optional<root.GetRequestsRequestIgnoredCount>
          events_count: optional<root.GetRequestsRequestEventsCount>
          source_id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          verified: optional<boolean>
          headers: optional<root.GetRequestsRequestHeaders>
          body: optional<root.GetRequestsRequestBody>
          parsed_query: optional<root.GetRequestsRequestParsedQuery>
          path: optional<string>
          created_at: optional<root.GetRequestsRequestCreatedAt>
          ingested_at: optional<root.GetRequestsRequestIngestedAt>
          bulk_retry_id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          include: optional<literal<"data">>
          order_by: optional<GetRequestsRequestOrderBy>
          dir: optional<GetRequestsRequestDir>
          limit:
            type: optional<integer>
            validation:
              min: 0
              max: 255
          next:
            type: optional<string>
            validation:
              maxLength: 255
          prev:
            type: optional<string>
            validation:
              maxLength: 255
      response:
        docs: List of requests
        type: root.RequestPaginatedResult
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - response:
            body:
              pagination:
                order_by: order_by
                dir: asc
                limit: 1
                prev: prev
                next: next
              count: 1
              models:
                - id: id
                  team_id: team_id
                  verified: true
                  original_event_data_id: original_event_data_id
                  duplicate_hash: duplicate_hash
                  duplicate_hits: 1
                  rejection_cause: SOURCE_ARCHIVED
                  ingest_priority: NORMAL
                  ingested_at: '2024-01-15T09:30:00Z'
                  ingested_at_id: ingested_at_id
                  source_id: source_id
                  events_count: 1
                  cli_events_count: 1
                  ignored_count: 1
                  data:
                    path: path
                  updated_at: '2024-01-15T09:30:00Z'
                  created_at: '2024-01-15T09:30:00Z'
    getRequest:
      path: /requests/{id}
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get a request
      request:
        name: GetRequestRequest
        path-parameters:
          id: string
      response:
        docs: A single request
        type: root.Request
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              team_id: team_id
              verified: true
              original_event_data_id: original_event_data_id
              duplicate_hash: duplicate_hash
              duplicate_hits: 1
              rejection_cause: SOURCE_ARCHIVED
              ingest_priority: NORMAL
              ingested_at: '2024-01-15T09:30:00Z'
              ingested_at_id: ingested_at_id
              source_id: source_id
              events_count: 1
              cli_events_count: 1
              ignored_count: 1
              data:
                path: path
                query: query
                parsed_query: parsed_query
                headers: headers
                body: body
                is_large_payload: true
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
    getRequestRawBody:
      path: /requests/{id}/raw_body
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get a request raw body data
      request:
        name: GetRequestRawBodyRequest
        path-parameters:
          id: string
      response:
        docs: A request raw body data
        type: root.RawBody
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              body: body
    retryRequest:
      path: /requests/{id}/retry
      method: POST
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Retry a request
      request:
        name: RetryRequestRequest
        path-parameters:
          id: string
        body:
          properties:
            webhook_ids:
              docs: >-
                Subset of webhook_ids to re-run the event logic on. Useful to
                retry only specific ignored_events
              type: list<string>
        content-type: application/json
      response:
        docs: Retry request operation result
        type: root.RetryRequest
        status-code: 200
      errors:
        - root.BadRequestError
        - root.NotFoundError
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            id: id
          request:
            webhook_ids:
              - webhook_ids
          response:
            body:
              request:
                id: id
                team_id: team_id
                verified: true
                original_event_data_id: original_event_data_id
                duplicate_hash: duplicate_hash
                duplicate_hits: 1
                rejection_cause: SOURCE_ARCHIVED
                ingest_priority: NORMAL
                ingested_at: '2024-01-15T09:30:00Z'
                ingested_at_id: ingested_at_id
                source_id: source_id
                events_count: 1
                cli_events_count: 1
                ignored_count: 1
                data:
                  path: path
                  query: query
                  parsed_query: parsed_query
                  headers: headers
                  body: body
                  is_large_payload: true
                updated_at: '2024-01-15T09:30:00Z'
                created_at: '2024-01-15T09:30:00Z'
              events:
                - id: id
                  team_id: team_id
                  webhook_id: webhook_id
                  source_id: source_id
                  destination_id: destination_id
                  event_data_id: event_data_id
                  request_id: request_id
                  attempts: 1
                  data:
                    path: path
                  last_attempt_at: '2024-01-15T09:30:00Z'
                  next_attempt_at: '2024-01-15T09:30:00Z'
                  response_status: 1
                  status: SCHEDULED
                  successful_at: '2024-01-15T09:30:00Z'
                  cli_id: cli_id
                  updated_at: '2024-01-15T09:30:00Z'
                  created_at: '2024-01-15T09:30:00Z'
                  created_at_id: created_at_id
                  last_attempt_at_id: last_attempt_at_id
    getRequestEvents:
      path: /requests/{id}/events
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get request events
      request:
        name: GetRequestEventsRequest
        path-parameters:
          id: string
        query-parameters:
          id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          status: optional<root.GetRequestEventsRequestStatus>
          issue_id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          webhook_id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          destination_id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          source_id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          attempts: optional<root.GetRequestEventsRequestAttempts>
          response_status: optional<nullable<GetRequestEventsRequestResponseStatus>>
          successful_at: optional<nullable<GetRequestEventsRequestSuccessfulAt>>
          created_at: optional<root.GetRequestEventsRequestCreatedAt>
          error_code:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          cli_id: optional<nullable<GetRequestEventsRequestCliId>>
          cli_user_id: optional<nullable<GetRequestEventsRequestCliUserId>>
          last_attempt_at: optional<nullable<GetRequestEventsRequestLastAttemptAt>>
          event_data_id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          headers: optional<root.GetRequestEventsRequestHeaders>
          body: optional<root.GetRequestEventsRequestBody>
          parsed_query: optional<root.GetRequestEventsRequestParsedQuery>
          bulk_retry_id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          path: optional<string>
          include: optional<literal<"data">>
          order_by: optional<GetRequestEventsRequestOrderBy>
          dir: optional<GetRequestEventsRequestDir>
          limit:
            type: optional<integer>
            validation:
              min: 0
              max: 255
          next:
            type: optional<string>
            validation:
              maxLength: 255
          prev:
            type: optional<string>
            validation:
              maxLength: 255
      response:
        docs: List of events
        type: root.EventPaginatedResult
        status-code: 200
      errors:
        - root.BadRequestError
        - root.NotFoundError
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              pagination:
                order_by: order_by
                dir: asc
                limit: 1
                prev: prev
                next: next
              count: 1
              models:
                - id: id
                  team_id: team_id
                  webhook_id: webhook_id
                  source_id: source_id
                  destination_id: destination_id
                  event_data_id: event_data_id
                  request_id: request_id
                  attempts: 1
                  data:
                    path: path
                  last_attempt_at: '2024-01-15T09:30:00Z'
                  next_attempt_at: '2024-01-15T09:30:00Z'
                  response_status: 1
                  status: SCHEDULED
                  successful_at: '2024-01-15T09:30:00Z'
                  cli_id: cli_id
                  updated_at: '2024-01-15T09:30:00Z'
                  created_at: '2024-01-15T09:30:00Z'
                  created_at_id: created_at_id
                  last_attempt_at_id: last_attempt_at_id
    getRequestIgnoredEvents:
      path: /requests/{id}/ignored_events
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get request ignored events
      request:
        name: GetRequestIgnoredEventsRequest
        path-parameters:
          id: string
        query-parameters:
          id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          order_by: optional<GetRequestIgnoredEventsRequestOrderBy>
          dir: optional<GetRequestIgnoredEventsRequestDir>
          limit:
            type: optional<integer>
            validation:
              min: 0
              max: 255
          next:
            type: optional<string>
            validation:
              maxLength: 255
          prev:
            type: optional<string>
            validation:
              maxLength: 255
      response:
        docs: List of ignored events
        type: root.IgnoredEventPaginatedResult
        status-code: 200
      errors:
        - root.BadRequestError
        - root.NotFoundError
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              pagination:
                order_by: order_by
                dir: asc
                limit: 1
                prev: prev
                next: next
              count: 1
              models:
                - id: id
                  team_id: team_id
                  webhook_id: webhook_id
                  cause: ARCHIVED
                  request_id: request_id
                  meta: body
                  updated_at: '2024-01-15T09:30:00Z'
                  created_at: '2024-01-15T09:30:00Z'
  source:
    openapi: ../openapi.yml
  display-name: Requests
docs: A request represent a webhook received by Hookdeck.
",
    },
    "rulesets.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "A ruleset defines a group of rules that can be used across many connections.",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Rulesets",
          "endpoints": {
            "archiveRuleset": {
              "auth": undefined,
              "display-name": "Archive a ruleset",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "archived_at": "2024-01-15T09:30:00Z",
                      "created_at": "2024-01-15T09:30:00Z",
                      "id": "id",
                      "is_team_default": true,
                      "name": "name",
                      "rules": [
                        {
                          "count": 1,
                          "interval": 1,
                          "strategy": "linear",
                          "type": "retry",
                        },
                      ],
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/rulesets/{id}/archive",
              "request": {
                "name": "ArchiveRulesetRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "A single ruleset",
                "status-code": 200,
                "type": "nullable<root.Ruleset>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "createRuleset": {
              "auth": undefined,
              "display-name": "Create a ruleset",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "request": {
                    "name": "name",
                  },
                  "response": {
                    "body": {
                      "archived_at": "2024-01-15T09:30:00Z",
                      "created_at": "2024-01-15T09:30:00Z",
                      "id": "id",
                      "is_team_default": true,
                      "name": "name",
                      "rules": [
                        {
                          "count": 1,
                          "interval": 1,
                          "strategy": "linear",
                          "type": "retry",
                        },
                      ],
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/rulesets",
              "request": {
                "body": {
                  "properties": {
                    "is_team_default": "optional<boolean>",
                    "name": {
                      "docs": "Name for the ruleset",
                      "type": "string",
                      "validation": {
                        "format": undefined,
                        "maxLength": 155,
                        "minLength": undefined,
                        "pattern": "^[A-z0-9-_]+$",
                      },
                    },
                    "rules": {
                      "docs": "Array of rules to apply",
                      "type": "optional<list<root.Rule>>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateRulesetRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "A single ruleset",
                "status-code": 200,
                "type": "nullable<root.Ruleset>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getRuleset": {
              "auth": undefined,
              "display-name": "Get a ruleset",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "archived_at": "2024-01-15T09:30:00Z",
                      "created_at": "2024-01-15T09:30:00Z",
                      "id": "id",
                      "is_team_default": true,
                      "name": "name",
                      "rules": [
                        {
                          "count": 1,
                          "interval": 1,
                          "strategy": "linear",
                          "type": "retry",
                        },
                      ],
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/rulesets/{id}",
              "request": {
                "name": "GetRulesetRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "A single ruleset",
                "status-code": 200,
                "type": "nullable<root.Ruleset>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getRulesets": {
              "auth": undefined,
              "display-name": "Get rulesets",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "count": 1,
                      "models": [
                        {
                          "archived_at": "2024-01-15T09:30:00Z",
                          "created_at": "2024-01-15T09:30:00Z",
                          "id": "id",
                          "is_team_default": true,
                          "name": "name",
                          "rules": [
                            {
                              "strategy": "linear",
                              "type": "retry",
                            },
                          ],
                          "team_id": "team_id",
                          "updated_at": "2024-01-15T09:30:00Z",
                        },
                      ],
                      "pagination": {
                        "dir": "asc",
                        "limit": 1,
                        "next": "next",
                        "order_by": "order_by",
                        "prev": "prev",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/rulesets",
              "request": {
                "name": "GetRulesetsRequest",
                "query-parameters": {
                  "archived": "optional<boolean>",
                  "archived_at": "optional<root.GetRulesetsRequestArchivedAt>",
                  "dir": "optional<GetRulesetsRequestDir>",
                  "id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "limit": {
                    "type": "optional<integer>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 255,
                      "min": 0,
                      "multipleOf": undefined,
                    },
                  },
                  "name": "optional<root.GetRulesetsRequestName>",
                  "next": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "order_by": "optional<GetRulesetsRequestOrderBy>",
                  "prev": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "response": {
                "docs": "List of rulesets",
                "status-code": 200,
                "type": "root.RulesetPaginatedResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "unarchiveRuleset": {
              "auth": undefined,
              "display-name": "Unarchive a ruleset",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "archived_at": "2024-01-15T09:30:00Z",
                      "created_at": "2024-01-15T09:30:00Z",
                      "id": "id",
                      "is_team_default": true,
                      "name": "name",
                      "rules": [
                        {
                          "count": 1,
                          "interval": 1,
                          "strategy": "linear",
                          "type": "retry",
                        },
                      ],
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/rulesets/{id}/unarchive",
              "request": {
                "name": "UnarchiveRulesetRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "A single ruleset",
                "status-code": 200,
                "type": "nullable<root.Ruleset>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "updateRuleset": {
              "auth": undefined,
              "display-name": "Update a ruleset",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.NotFoundError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "request": {},
                  "response": {
                    "body": {
                      "archived_at": "2024-01-15T09:30:00Z",
                      "created_at": "2024-01-15T09:30:00Z",
                      "id": "id",
                      "is_team_default": true,
                      "name": "name",
                      "rules": [
                        {
                          "count": 1,
                          "interval": 1,
                          "strategy": "linear",
                          "type": "retry",
                        },
                      ],
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/rulesets/{id}",
              "request": {
                "body": {
                  "properties": {
                    "archived_at": {
                      "docs": "Date the ruleset was archived",
                      "type": "optional<nullable<datetime>>",
                    },
                    "is_team_default": "optional<boolean>",
                    "name": {
                      "docs": "Name for the ruleset",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": 155,
                        "minLength": undefined,
                        "pattern": "^[A-z0-9-_]+$",
                      },
                    },
                    "rules": {
                      "docs": "Array of rules to apply",
                      "type": "optional<list<root.Rule>>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpdateRulesetRequest",
                "path-parameters": {
                  "id": "string",
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "A single ruleset",
                "status-code": 200,
                "type": "nullable<root.Ruleset>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "upsertRuleset": {
              "auth": undefined,
              "display-name": "Update or create a ruleset",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "request": {
                    "name": "name",
                  },
                  "response": {
                    "body": {
                      "archived_at": "2024-01-15T09:30:00Z",
                      "created_at": "2024-01-15T09:30:00Z",
                      "id": "id",
                      "is_team_default": true,
                      "name": "name",
                      "rules": [
                        {
                          "count": 1,
                          "interval": 1,
                          "strategy": "linear",
                          "type": "retry",
                        },
                      ],
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/rulesets",
              "request": {
                "body": {
                  "properties": {
                    "is_team_default": "optional<boolean>",
                    "name": {
                      "docs": "Name for the ruleset",
                      "type": "string",
                      "validation": {
                        "format": undefined,
                        "maxLength": 155,
                        "minLength": undefined,
                        "pattern": "^[A-z0-9-_]+$",
                      },
                    },
                    "rules": {
                      "docs": "Array of rules to apply",
                      "type": "optional<list<root.Rule>>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpsertRulesetRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "A single ruleset",
                "status-code": 200,
                "type": "nullable<root.Ruleset>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "GetRulesetsRequestDir": {
            "enum": [
              "asc",
              "desc",
            ],
          },
          "GetRulesetsRequestOrderBy": {
            "enum": [
              "created_at",
            ],
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
types:
  GetRulesetsRequestOrderBy:
    enum:
      - created_at
  GetRulesetsRequestDir:
    enum:
      - asc
      - desc
service:
  auth: false
  base-path: ''
  endpoints:
    getRulesets:
      path: /rulesets
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get rulesets
      request:
        name: GetRulesetsRequest
        query-parameters:
          id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          name: optional<root.GetRulesetsRequestName>
          archived: optional<boolean>
          archived_at: optional<root.GetRulesetsRequestArchivedAt>
          order_by: optional<GetRulesetsRequestOrderBy>
          dir: optional<GetRulesetsRequestDir>
          limit:
            type: optional<integer>
            validation:
              min: 0
              max: 255
          next:
            type: optional<string>
            validation:
              maxLength: 255
          prev:
            type: optional<string>
            validation:
              maxLength: 255
      response:
        docs: List of rulesets
        type: root.RulesetPaginatedResult
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - response:
            body:
              pagination:
                order_by: order_by
                dir: asc
                limit: 1
                prev: prev
                next: next
              count: 1
              models:
                - id: id
                  name: name
                  team_id: team_id
                  rules:
                    - strategy: linear
                      type: retry
                  is_team_default: true
                  archived_at: '2024-01-15T09:30:00Z'
                  updated_at: '2024-01-15T09:30:00Z'
                  created_at: '2024-01-15T09:30:00Z'
    createRuleset:
      path: /rulesets
      method: POST
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Create a ruleset
      request:
        name: CreateRulesetRequest
        body:
          properties:
            name:
              type: string
              docs: Name for the ruleset
              validation:
                pattern: ^[A-z0-9-_]+$
                maxLength: 155
            rules:
              type: optional<list<root.Rule>>
              docs: Array of rules to apply
            is_team_default: optional<boolean>
        content-type: application/json
      response:
        docs: A single ruleset
        type: nullable<root.Ruleset>
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - request:
            name: name
          response:
            body:
              id: id
              name: name
              team_id: team_id
              rules:
                - strategy: linear
                  interval: 1
                  count: 1
                  type: retry
              is_team_default: true
              archived_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
    upsertRuleset:
      path: /rulesets
      method: PUT
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Update or create a ruleset
      request:
        name: UpsertRulesetRequest
        body:
          properties:
            name:
              type: string
              docs: Name for the ruleset
              validation:
                pattern: ^[A-z0-9-_]+$
                maxLength: 155
            rules:
              type: optional<list<root.Rule>>
              docs: Array of rules to apply
            is_team_default: optional<boolean>
        content-type: application/json
      response:
        docs: A single ruleset
        type: nullable<root.Ruleset>
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - request:
            name: name
          response:
            body:
              id: id
              name: name
              team_id: team_id
              rules:
                - strategy: linear
                  interval: 1
                  count: 1
                  type: retry
              is_team_default: true
              archived_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
    getRuleset:
      path: /rulesets/{id}
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get a ruleset
      request:
        name: GetRulesetRequest
        path-parameters:
          id: string
      response:
        docs: A single ruleset
        type: nullable<root.Ruleset>
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              name: name
              team_id: team_id
              rules:
                - strategy: linear
                  interval: 1
                  count: 1
                  type: retry
              is_team_default: true
              archived_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
    updateRuleset:
      path: /rulesets/{id}
      method: PUT
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Update a ruleset
      request:
        name: UpdateRulesetRequest
        path-parameters:
          id: string
        body:
          properties:
            name:
              type: optional<string>
              docs: Name for the ruleset
              validation:
                pattern: ^[A-z0-9-_]+$
                maxLength: 155
            archived_at:
              type: optional<nullable<datetime>>
              docs: Date the ruleset was archived
            rules:
              type: optional<list<root.Rule>>
              docs: Array of rules to apply
            is_team_default: optional<boolean>
        content-type: application/json
      response:
        docs: A single ruleset
        type: nullable<root.Ruleset>
        status-code: 200
      errors:
        - root.BadRequestError
        - root.NotFoundError
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            id: id
          request: {}
          response:
            body:
              id: id
              name: name
              team_id: team_id
              rules:
                - strategy: linear
                  interval: 1
                  count: 1
                  type: retry
              is_team_default: true
              archived_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
    archiveRuleset:
      path: /rulesets/{id}/archive
      method: PUT
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Archive a ruleset
      request:
        name: ArchiveRulesetRequest
        path-parameters:
          id: string
      response:
        docs: A single ruleset
        type: nullable<root.Ruleset>
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              name: name
              team_id: team_id
              rules:
                - strategy: linear
                  interval: 1
                  count: 1
                  type: retry
              is_team_default: true
              archived_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
    unarchiveRuleset:
      path: /rulesets/{id}/unarchive
      method: PUT
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Unarchive a ruleset
      request:
        name: UnarchiveRulesetRequest
        path-parameters:
          id: string
      response:
        docs: A single ruleset
        type: nullable<root.Ruleset>
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              name: name
              team_id: team_id
              rules:
                - strategy: linear
                  interval: 1
                  count: 1
                  type: retry
              is_team_default: true
              archived_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
  source:
    openapi: ../openapi.yml
  display-name: Rulesets
docs: A ruleset defines a group of rules that can be used across many connections.
",
    },
    "sources.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "A source represents any third party that sends webhooks to Hookdeck.",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Sources",
          "endpoints": {
            "archiveSource": {
              "auth": undefined,
              "display-name": "Archive a source",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "archived_at": "2024-01-15T09:30:00Z",
                      "created_at": "2024-01-15T09:30:00Z",
                      "id": "id",
                      "integration": {
                        "features": [
                          "VERIFICATION",
                        ],
                        "id": "id",
                        "label": "label",
                        "provider": "twitter",
                      },
                      "integration_id": "integration_id",
                      "name": "name",
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "url": "url",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/sources/{id}/archive",
              "request": {
                "name": "ArchiveSourceRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "A single source",
                "status-code": 200,
                "type": "root.Source",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "createSource": {
              "auth": undefined,
              "display-name": "Create a source",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "request": {
                    "name": "name",
                  },
                  "response": {
                    "body": {
                      "archived_at": "2024-01-15T09:30:00Z",
                      "created_at": "2024-01-15T09:30:00Z",
                      "id": "id",
                      "integration": {
                        "features": [
                          "VERIFICATION",
                        ],
                        "id": "id",
                        "label": "label",
                        "provider": "twitter",
                      },
                      "integration_id": "integration_id",
                      "name": "name",
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "url": "url",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/sources",
              "request": {
                "body": {
                  "properties": {
                    "name": {
                      "docs": "A unique name for the source",
                      "type": "string",
                      "validation": {
                        "format": undefined,
                        "maxLength": 155,
                        "minLength": undefined,
                        "pattern": "^[A-z0-9-_]+$",
                      },
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateSourceRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "A single source",
                "status-code": 200,
                "type": "root.Source",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getSource": {
              "auth": undefined,
              "display-name": "Get a source",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "archived_at": "2024-01-15T09:30:00Z",
                      "created_at": "2024-01-15T09:30:00Z",
                      "id": "id",
                      "integration": {
                        "features": [
                          "VERIFICATION",
                        ],
                        "id": "id",
                        "label": "label",
                        "provider": "twitter",
                      },
                      "integration_id": "integration_id",
                      "name": "name",
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "url": "url",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sources/{id}",
              "request": {
                "name": "GetSourceRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "A single source",
                "status-code": 200,
                "type": "root.Source",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getSources": {
              "auth": undefined,
              "display-name": "Get sources",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "count": 1,
                      "models": [
                        {
                          "archived_at": "2024-01-15T09:30:00Z",
                          "created_at": "2024-01-15T09:30:00Z",
                          "id": "id",
                          "integration": {
                            "features": [
                              "VERIFICATION",
                            ],
                            "id": "id",
                            "label": "label",
                            "provider": "twitter",
                          },
                          "integration_id": "integration_id",
                          "name": "name",
                          "team_id": "team_id",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "url": "url",
                        },
                      ],
                      "pagination": {
                        "dir": "asc",
                        "limit": 1,
                        "next": "next",
                        "order_by": "order_by",
                        "prev": "prev",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sources",
              "request": {
                "name": "GetSourcesRequest",
                "query-parameters": {
                  "archived": "optional<boolean>",
                  "archived_at": "optional<root.GetSourcesRequestArchivedAt>",
                  "dir": "optional<GetSourcesRequestDir>",
                  "id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "integration_id": "optional<root.GetSourcesRequestIntegrationId>",
                  "limit": {
                    "type": "optional<integer>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 255,
                      "min": 0,
                      "multipleOf": undefined,
                    },
                  },
                  "name": "optional<root.GetSourcesRequestName>",
                  "next": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "order_by": "optional<GetSourcesRequestOrderBy>",
                  "prev": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "response": {
                "docs": "List of sources",
                "status-code": 200,
                "type": "root.SourcePaginatedResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "unarchiveSource": {
              "auth": undefined,
              "display-name": "Unarchive a source",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "archived_at": "2024-01-15T09:30:00Z",
                      "created_at": "2024-01-15T09:30:00Z",
                      "id": "id",
                      "integration": {
                        "features": [
                          "VERIFICATION",
                        ],
                        "id": "id",
                        "label": "label",
                        "provider": "twitter",
                      },
                      "integration_id": "integration_id",
                      "name": "name",
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "url": "url",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/sources/{id}/unarchive",
              "request": {
                "name": "UnarchiveSourceRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "A single source",
                "status-code": 200,
                "type": "root.Source",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "updateSource": {
              "auth": undefined,
              "display-name": "Update a source",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.NotFoundError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "request": {},
                  "response": {
                    "body": {
                      "archived_at": "2024-01-15T09:30:00Z",
                      "created_at": "2024-01-15T09:30:00Z",
                      "id": "id",
                      "integration": {
                        "features": [
                          "VERIFICATION",
                        ],
                        "id": "id",
                        "label": "label",
                        "provider": "twitter",
                      },
                      "integration_id": "integration_id",
                      "name": "name",
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "url": "url",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/sources/{id}",
              "request": {
                "body": {
                  "properties": {
                    "archived_at": {
                      "docs": "Date the source was archived",
                      "type": "optional<nullable<datetime>>",
                    },
                    "name": {
                      "docs": "A unique name for the source",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": 155,
                        "minLength": undefined,
                        "pattern": "^[A-z0-9-_]+$",
                      },
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpdateSourceRequest",
                "path-parameters": {
                  "id": "string",
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "A single source",
                "status-code": 200,
                "type": "root.Source",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "upsertSource": {
              "auth": undefined,
              "display-name": "Update or create a source",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "request": {
                    "name": "name",
                  },
                  "response": {
                    "body": {
                      "archived_at": "2024-01-15T09:30:00Z",
                      "created_at": "2024-01-15T09:30:00Z",
                      "id": "id",
                      "integration": {
                        "features": [
                          "VERIFICATION",
                        ],
                        "id": "id",
                        "label": "label",
                        "provider": "twitter",
                      },
                      "integration_id": "integration_id",
                      "name": "name",
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "url": "url",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/sources",
              "request": {
                "body": {
                  "properties": {
                    "name": {
                      "docs": "A unique name for the source",
                      "type": "string",
                      "validation": {
                        "format": undefined,
                        "maxLength": 155,
                        "minLength": undefined,
                        "pattern": "^[A-z0-9-_]+$",
                      },
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpsertSourceRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "A single source",
                "status-code": 200,
                "type": "root.Source",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "GetSourcesRequestDir": {
            "enum": [
              "asc",
              "desc",
            ],
          },
          "GetSourcesRequestOrderBy": {
            "enum": [
              "created_at",
            ],
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
types:
  GetSourcesRequestOrderBy:
    enum:
      - created_at
  GetSourcesRequestDir:
    enum:
      - asc
      - desc
service:
  auth: false
  base-path: ''
  endpoints:
    getSources:
      path: /sources
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get sources
      request:
        name: GetSourcesRequest
        query-parameters:
          id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          name: optional<root.GetSourcesRequestName>
          archived: optional<boolean>
          archived_at: optional<root.GetSourcesRequestArchivedAt>
          integration_id: optional<root.GetSourcesRequestIntegrationId>
          order_by: optional<GetSourcesRequestOrderBy>
          dir: optional<GetSourcesRequestDir>
          limit:
            type: optional<integer>
            validation:
              min: 0
              max: 255
          next:
            type: optional<string>
            validation:
              maxLength: 255
          prev:
            type: optional<string>
            validation:
              maxLength: 255
      response:
        docs: List of sources
        type: root.SourcePaginatedResult
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - response:
            body:
              pagination:
                order_by: order_by
                dir: asc
                limit: 1
                prev: prev
                next: next
              count: 1
              models:
                - id: id
                  name: name
                  team_id: team_id
                  url: url
                  integration_id: integration_id
                  integration:
                    id: id
                    label: label
                    provider: twitter
                    features:
                      - VERIFICATION
                  archived_at: '2024-01-15T09:30:00Z'
                  updated_at: '2024-01-15T09:30:00Z'
                  created_at: '2024-01-15T09:30:00Z'
    createSource:
      path: /sources
      method: POST
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Create a source
      request:
        name: CreateSourceRequest
        body:
          properties:
            name:
              type: string
              docs: A unique name for the source
              validation:
                pattern: ^[A-z0-9-_]+$
                maxLength: 155
        content-type: application/json
      response:
        docs: A single source
        type: root.Source
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - request:
            name: name
          response:
            body:
              id: id
              name: name
              team_id: team_id
              url: url
              integration_id: integration_id
              integration:
                id: id
                label: label
                provider: twitter
                features:
                  - VERIFICATION
              archived_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
    upsertSource:
      path: /sources
      method: PUT
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Update or create a source
      request:
        name: UpsertSourceRequest
        body:
          properties:
            name:
              type: string
              docs: A unique name for the source
              validation:
                pattern: ^[A-z0-9-_]+$
                maxLength: 155
        content-type: application/json
      response:
        docs: A single source
        type: root.Source
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - request:
            name: name
          response:
            body:
              id: id
              name: name
              team_id: team_id
              url: url
              integration_id: integration_id
              integration:
                id: id
                label: label
                provider: twitter
                features:
                  - VERIFICATION
              archived_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
    getSource:
      path: /sources/{id}
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get a source
      request:
        name: GetSourceRequest
        path-parameters:
          id: string
      response:
        docs: A single source
        type: root.Source
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              name: name
              team_id: team_id
              url: url
              integration_id: integration_id
              integration:
                id: id
                label: label
                provider: twitter
                features:
                  - VERIFICATION
              archived_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
    updateSource:
      path: /sources/{id}
      method: PUT
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Update a source
      request:
        name: UpdateSourceRequest
        path-parameters:
          id: string
        body:
          properties:
            name:
              type: optional<string>
              docs: A unique name for the source
              validation:
                pattern: ^[A-z0-9-_]+$
                maxLength: 155
            archived_at:
              type: optional<nullable<datetime>>
              docs: Date the source was archived
        content-type: application/json
      response:
        docs: A single source
        type: root.Source
        status-code: 200
      errors:
        - root.BadRequestError
        - root.NotFoundError
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            id: id
          request: {}
          response:
            body:
              id: id
              name: name
              team_id: team_id
              url: url
              integration_id: integration_id
              integration:
                id: id
                label: label
                provider: twitter
                features:
                  - VERIFICATION
              archived_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
    archiveSource:
      path: /sources/{id}/archive
      method: PUT
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Archive a source
      request:
        name: ArchiveSourceRequest
        path-parameters:
          id: string
      response:
        docs: A single source
        type: root.Source
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              name: name
              team_id: team_id
              url: url
              integration_id: integration_id
              integration:
                id: id
                label: label
                provider: twitter
                features:
                  - VERIFICATION
              archived_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
    unarchiveSource:
      path: /sources/{id}/unarchive
      method: PUT
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Unarchive a source
      request:
        name: UnarchiveSourceRequest
        path-parameters:
          id: string
      response:
        docs: A single source
        type: root.Source
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              name: name
              team_id: team_id
              url: url
              integration_id: integration_id
              integration:
                id: id
                label: label
                provider: twitter
                features:
                  - VERIFICATION
              archived_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
  source:
    openapi: ../openapi.yml
  display-name: Sources
docs: A source represents any third party that sends webhooks to Hookdeck.
",
    },
    "transformations.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "A transformation represents JavaScript code that will be executed on a connection's requests. Transformations are applied to connections using Rules.",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Transformations",
          "endpoints": {
            "createTransformation": {
              "auth": undefined,
              "display-name": "Create a transformation",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "request": {
                    "code": "code",
                    "name": "name",
                  },
                  "response": {
                    "body": {
                      "code": "code",
                      "created_at": "2024-01-15T09:30:00Z",
                      "encrypted_env": "encrypted_env",
                      "env": {
                        "key": "value",
                      },
                      "id": "id",
                      "iv": "iv",
                      "name": "name",
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/transformations",
              "request": {
                "body": {
                  "properties": {
                    "code": {
                      "docs": "JavaScript code to be executed",
                      "type": "string",
                    },
                    "env": {
                      "docs": "Key-value environment variables to be passed to the transformation",
                      "type": "optional<map<string, CreateTransformationRequestEnvValue>>",
                    },
                    "name": {
                      "docs": "A unique, human-friendly name for the transformation",
                      "type": "string",
                      "validation": {
                        "format": undefined,
                        "maxLength": 155,
                        "minLength": undefined,
                        "pattern": "^[A-z0-9-_]+$",
                      },
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateTransformationRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "A single transformation",
                "status-code": 200,
                "type": "root.Transformation",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getTransformation": {
              "auth": undefined,
              "display-name": "Get a transformation",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "code": "code",
                      "created_at": "2024-01-15T09:30:00Z",
                      "encrypted_env": "encrypted_env",
                      "env": {
                        "key": "value",
                      },
                      "id": "id",
                      "iv": "iv",
                      "name": "name",
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/transformations/{id}",
              "request": {
                "name": "GetTransformationRequest",
                "path-parameters": {
                  "id": "string",
                },
              },
              "response": {
                "docs": "A single transformation",
                "status-code": 200,
                "type": "root.Transformation",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getTransformationExecution": {
              "auth": undefined,
              "display-name": "Get a transformation execution",
              "docs": "",
              "errors": [
                "root.NotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "execution_id": "execution_id",
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "created_at": "2024-01-15T09:30:00Z",
                      "id": "id",
                      "issue_id": "issue_id",
                      "log_level": "debug",
                      "logs": [
                        {
                          "message": "message",
                          "type": "error",
                        },
                      ],
                      "original_event_data": {
                        "body": "body",
                        "headers": "headers",
                        "is_large_payload": true,
                        "parsed_query": "parsed_query",
                        "path": "path",
                        "query": "query",
                      },
                      "original_event_data_id": "original_event_data_id",
                      "team_id": "team_id",
                      "transformation_id": "transformation_id",
                      "transformed_event_data": {
                        "body": "body",
                        "headers": "headers",
                        "is_large_payload": true,
                        "parsed_query": "parsed_query",
                        "path": "path",
                        "query": "query",
                      },
                      "transformed_event_data_id": "transformed_event_data_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                      "webhook_id": "webhook_id",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/transformations/{id}/executions/{execution_id}",
              "request": {
                "name": "GetTransformationExecutionRequest",
                "path-parameters": {
                  "execution_id": "string",
                  "id": "string",
                },
              },
              "response": {
                "docs": "A single transformation execution",
                "status-code": 200,
                "type": "root.TransformationExecution",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getTransformationExecutions": {
              "auth": undefined,
              "display-name": "Get transformation executions",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "count": 1,
                      "models": [
                        {
                          "created_at": "2024-01-15T09:30:00Z",
                          "id": "id",
                          "issue_id": "issue_id",
                          "log_level": "debug",
                          "logs": [
                            {
                              "message": "message",
                              "type": "error",
                            },
                          ],
                          "original_event_data": {
                            "path": "path",
                          },
                          "original_event_data_id": "original_event_data_id",
                          "team_id": "team_id",
                          "transformation_id": "transformation_id",
                          "transformed_event_data": {
                            "path": "path",
                          },
                          "transformed_event_data_id": "transformed_event_data_id",
                          "updated_at": "2024-01-15T09:30:00Z",
                          "webhook_id": "webhook_id",
                        },
                      ],
                      "pagination": {
                        "dir": "asc",
                        "limit": 1,
                        "next": "next",
                        "order_by": "order_by",
                        "prev": "prev",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/transformations/{id}/executions",
              "request": {
                "name": "GetTransformationExecutionsRequest",
                "path-parameters": {
                  "id": "string",
                },
                "query-parameters": {
                  "created_at": "optional<root.GetTransformationExecutionsRequestCreatedAt>",
                  "dir": "optional<GetTransformationExecutionsRequestDir>",
                  "issue_id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "limit": {
                    "type": "optional<integer>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 255,
                      "min": 0,
                      "multipleOf": undefined,
                    },
                  },
                  "log_level": "optional<GetTransformationExecutionsRequestLogLevel>",
                  "next": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "order_by": "optional<GetTransformationExecutionsRequestOrderBy>",
                  "prev": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "webhook_id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "response": {
                "docs": "List of transformation executions",
                "status-code": 200,
                "type": "root.TransformationExecutionPaginatedResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getTransformations": {
              "auth": undefined,
              "display-name": "Get transformations",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "count": 1,
                      "models": [
                        {
                          "code": "code",
                          "created_at": "2024-01-15T09:30:00Z",
                          "encrypted_env": "encrypted_env",
                          "id": "id",
                          "iv": "iv",
                          "name": "name",
                          "team_id": "team_id",
                          "updated_at": "2024-01-15T09:30:00Z",
                        },
                      ],
                      "pagination": {
                        "dir": "asc",
                        "limit": 1,
                        "next": "next",
                        "order_by": "order_by",
                        "prev": "prev",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/transformations",
              "request": {
                "name": "GetTransformationsRequest",
                "query-parameters": {
                  "dir": "optional<GetTransformationsRequestDir>",
                  "id": {
                    "allow-multiple": true,
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "limit": {
                    "type": "optional<integer>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 255,
                      "min": 0,
                      "multipleOf": undefined,
                    },
                  },
                  "name": "optional<root.GetTransformationsRequestName>",
                  "next": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "order_by": "optional<GetTransformationsRequestOrderBy>",
                  "prev": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 255,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "response": {
                "docs": "List of transformations",
                "status-code": 200,
                "type": "root.TransformationPaginatedResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "testTransformation": {
              "auth": undefined,
              "display-name": "Test a transformation code",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "request": {},
                  "response": {
                    "body": {
                      "console": [
                        {
                          "message": "message",
                          "type": "error",
                        },
                      ],
                      "execution_id": "execution_id",
                      "log_level": "debug",
                      "request": {
                        "body": "body",
                        "headers": "headers",
                        "parsed_query": "parsed_query",
                        "path": "path",
                      },
                      "request_id": "request_id",
                      "transformation_id": "transformation_id",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/transformations/run",
              "request": {
                "body": {
                  "properties": {
                    "code": {
                      "docs": "JavaScript code to be executed",
                      "type": "optional<string>",
                    },
                    "env": {
                      "docs": "Key-value environment variables to be passed to the transformation",
                      "type": "optional<TestTransformationRequestEnv>",
                    },
                    "event_id": "optional<string>",
                    "request": {
                      "docs": "Request input to use for the transformation execution",
                      "type": "optional<TestTransformationRequestRequest>",
                    },
                    "transformation_id": {
                      "docs": "Transformation ID",
                      "type": "optional<string>",
                    },
                    "webhook_id": {
                      "docs": "ID of the connection to use for the execution `context`",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "TestTransformationRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Transformation run output",
                "status-code": 200,
                "type": "root.TransformationExecutorOutput",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "updateTransformation": {
              "auth": undefined,
              "display-name": "Update a transformation",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.NotFoundError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "request": {},
                  "response": {
                    "body": {
                      "code": "code",
                      "created_at": "2024-01-15T09:30:00Z",
                      "encrypted_env": "encrypted_env",
                      "env": {
                        "key": "value",
                      },
                      "id": "id",
                      "iv": "iv",
                      "name": "name",
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/transformations/{id}",
              "request": {
                "body": {
                  "properties": {
                    "code": {
                      "docs": "JavaScript code to be executed",
                      "type": "optional<string>",
                    },
                    "env": {
                      "docs": "Key-value environment variables to be passed to the transformation",
                      "type": "optional<map<string, UpdateTransformationRequestEnvValue>>",
                    },
                    "name": {
                      "docs": "A unique, human-friendly name for the transformation",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": 155,
                        "minLength": undefined,
                        "pattern": "^[A-z0-9-_]+$",
                      },
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpdateTransformationRequest",
                "path-parameters": {
                  "id": "string",
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "A single transformation",
                "status-code": 200,
                "type": "root.Transformation",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "upsertTransformation": {
              "auth": undefined,
              "display-name": "Update or create a transformation",
              "docs": "",
              "errors": [
                "root.BadRequestError",
                "root.UnprocessableEntityError",
              ],
              "examples": [
                {
                  "request": {
                    "code": "code",
                    "name": "name",
                  },
                  "response": {
                    "body": {
                      "code": "code",
                      "created_at": "2024-01-15T09:30:00Z",
                      "encrypted_env": "encrypted_env",
                      "env": {
                        "key": "value",
                      },
                      "id": "id",
                      "iv": "iv",
                      "name": "name",
                      "team_id": "team_id",
                      "updated_at": "2024-01-15T09:30:00Z",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/transformations",
              "request": {
                "body": {
                  "properties": {
                    "code": {
                      "docs": "JavaScript code to be executed",
                      "type": "string",
                    },
                    "env": {
                      "docs": "Key-value environment variables to be passed to the transformation",
                      "type": "optional<map<string, UpsertTransformationRequestEnvValue>>",
                    },
                    "name": {
                      "docs": "A unique, human-friendly name for the transformation",
                      "type": "string",
                      "validation": {
                        "format": undefined,
                        "maxLength": 155,
                        "minLength": undefined,
                        "pattern": "^[A-z0-9-_]+$",
                      },
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpsertTransformationRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "A single transformation",
                "status-code": 200,
                "type": "root.Transformation",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "CreateTransformationRequestEnvValue": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "float",
            ],
          },
          "GetTransformationExecutionsRequestDir": {
            "enum": [
              "asc",
              "desc",
            ],
          },
          "GetTransformationExecutionsRequestLogLevel": {
            "enum": [
              "debug",
              "info",
              "warn",
              "error",
              "fatal",
            ],
          },
          "GetTransformationExecutionsRequestOrderBy": {
            "enum": [
              "created_at",
            ],
          },
          "GetTransformationsRequestDir": {
            "enum": [
              "asc",
              "desc",
            ],
          },
          "GetTransformationsRequestOrderBy": {
            "enum": [
              "created_at",
            ],
          },
          "TestTransformationRequestEnv": {
            "docs": "Key-value environment variables to be passed to the transformation",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TestTransformationRequestRequest": {
            "docs": "Request input to use for the transformation execution",
            "inline": true,
            "properties": {
              "body": {
                "docs": "Body of the request",
                "type": "optional<TestTransformationRequestRequestBody>",
              },
              "headers": {
                "docs": "Headers of the request",
                "type": "map<string, string>",
              },
              "parsed_query": {
                "docs": "JSON representation of the query params",
                "type": "optional<TestTransformationRequestRequestParsedQuery>",
              },
              "path": {
                "docs": "Path of the request",
                "type": "optional<nullable<string>>",
              },
              "query": {
                "docs": "String representation of the query params of the request",
                "type": "optional<nullable<string>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TestTransformationRequestRequestBody": {
            "discriminated": false,
            "docs": "Body of the request",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "TestTransformationRequestRequestBodyZero",
              "string",
            ],
          },
          "TestTransformationRequestRequestBodyZero": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TestTransformationRequestRequestParsedQuery": {
            "docs": "JSON representation of the query params",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateTransformationRequestEnvValue": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "float",
            ],
          },
          "UpsertTransformationRequestEnvValue": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "float",
            ],
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
types:
  GetTransformationsRequestOrderBy:
    enum:
      - created_at
  GetTransformationsRequestDir:
    enum:
      - asc
      - desc
  CreateTransformationRequestEnvValue:
    discriminated: false
    union:
      - string
      - float
    source:
      openapi: ../openapi.yml
    inline: true
  UpsertTransformationRequestEnvValue:
    discriminated: false
    union:
      - string
      - float
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateTransformationRequestEnvValue:
    discriminated: false
    union:
      - string
      - float
    source:
      openapi: ../openapi.yml
    inline: true
  TestTransformationRequestEnv:
    docs: Key-value environment variables to be passed to the transformation
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  TestTransformationRequestRequestBodyZero:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  TestTransformationRequestRequestBody:
    discriminated: false
    docs: Body of the request
    union:
      - TestTransformationRequestRequestBodyZero
      - string
    source:
      openapi: ../openapi.yml
    inline: true
  TestTransformationRequestRequestParsedQuery:
    docs: JSON representation of the query params
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  TestTransformationRequestRequest:
    docs: Request input to use for the transformation execution
    properties:
      headers:
        type: map<string, string>
        docs: Headers of the request
      body:
        type: optional<TestTransformationRequestRequestBody>
        docs: Body of the request
      path:
        type: optional<nullable<string>>
        docs: Path of the request
      query:
        type: optional<nullable<string>>
        docs: String representation of the query params of the request
      parsed_query:
        type: optional<TestTransformationRequestRequestParsedQuery>
        docs: JSON representation of the query params
    source:
      openapi: ../openapi.yml
    inline: true
  GetTransformationExecutionsRequestLogLevel:
    enum:
      - debug
      - info
      - warn
      - error
      - fatal
  GetTransformationExecutionsRequestOrderBy:
    enum:
      - created_at
  GetTransformationExecutionsRequestDir:
    enum:
      - asc
      - desc
service:
  auth: false
  base-path: ''
  endpoints:
    getTransformations:
      path: /transformations
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get transformations
      request:
        name: GetTransformationsRequest
        query-parameters:
          id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          name: optional<root.GetTransformationsRequestName>
          order_by: optional<GetTransformationsRequestOrderBy>
          dir: optional<GetTransformationsRequestDir>
          limit:
            type: optional<integer>
            validation:
              min: 0
              max: 255
          next:
            type: optional<string>
            validation:
              maxLength: 255
          prev:
            type: optional<string>
            validation:
              maxLength: 255
      response:
        docs: List of transformations
        type: root.TransformationPaginatedResult
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - response:
            body:
              pagination:
                order_by: order_by
                dir: asc
                limit: 1
                prev: prev
                next: next
              count: 1
              models:
                - id: id
                  team_id: team_id
                  name: name
                  code: code
                  encrypted_env: encrypted_env
                  iv: iv
                  updated_at: '2024-01-15T09:30:00Z'
                  created_at: '2024-01-15T09:30:00Z'
    createTransformation:
      path: /transformations
      method: POST
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Create a transformation
      request:
        name: CreateTransformationRequest
        body:
          properties:
            name:
              type: string
              docs: A unique, human-friendly name for the transformation
              validation:
                pattern: ^[A-z0-9-_]+$
                maxLength: 155
            code:
              type: string
              docs: JavaScript code to be executed
            env:
              type: optional<map<string, CreateTransformationRequestEnvValue>>
              docs: >-
                Key-value environment variables to be passed to the
                transformation
        content-type: application/json
      response:
        docs: A single transformation
        type: root.Transformation
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - request:
            name: name
            code: code
          response:
            body:
              id: id
              team_id: team_id
              name: name
              code: code
              encrypted_env: encrypted_env
              iv: iv
              env:
                key: value
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
    upsertTransformation:
      path: /transformations
      method: PUT
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Update or create a transformation
      request:
        name: UpsertTransformationRequest
        body:
          properties:
            name:
              type: string
              docs: A unique, human-friendly name for the transformation
              validation:
                pattern: ^[A-z0-9-_]+$
                maxLength: 155
            code:
              type: string
              docs: JavaScript code to be executed
            env:
              type: optional<map<string, UpsertTransformationRequestEnvValue>>
              docs: >-
                Key-value environment variables to be passed to the
                transformation
        content-type: application/json
      response:
        docs: A single transformation
        type: root.Transformation
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - request:
            name: name
            code: code
          response:
            body:
              id: id
              team_id: team_id
              name: name
              code: code
              encrypted_env: encrypted_env
              iv: iv
              env:
                key: value
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
    getTransformation:
      path: /transformations/{id}
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get a transformation
      request:
        name: GetTransformationRequest
        path-parameters:
          id: string
      response:
        docs: A single transformation
        type: root.Transformation
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              team_id: team_id
              name: name
              code: code
              encrypted_env: encrypted_env
              iv: iv
              env:
                key: value
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
    updateTransformation:
      path: /transformations/{id}
      method: PUT
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Update a transformation
      request:
        name: UpdateTransformationRequest
        path-parameters:
          id: string
        body:
          properties:
            name:
              type: optional<string>
              docs: A unique, human-friendly name for the transformation
              validation:
                pattern: ^[A-z0-9-_]+$
                maxLength: 155
            code:
              type: optional<string>
              docs: JavaScript code to be executed
            env:
              type: optional<map<string, UpdateTransformationRequestEnvValue>>
              docs: >-
                Key-value environment variables to be passed to the
                transformation
        content-type: application/json
      response:
        docs: A single transformation
        type: root.Transformation
        status-code: 200
      errors:
        - root.BadRequestError
        - root.NotFoundError
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            id: id
          request: {}
          response:
            body:
              id: id
              team_id: team_id
              name: name
              code: code
              encrypted_env: encrypted_env
              iv: iv
              env:
                key: value
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
    testTransformation:
      path: /transformations/run
      method: PUT
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Test a transformation code
      request:
        name: TestTransformationRequest
        body:
          properties:
            env:
              type: optional<TestTransformationRequestEnv>
              docs: >-
                Key-value environment variables to be passed to the
                transformation
            webhook_id:
              type: optional<string>
              docs: ID of the connection to use for the execution `context`
            code:
              type: optional<string>
              docs: JavaScript code to be executed
            transformation_id:
              type: optional<string>
              docs: Transformation ID
            request:
              type: optional<TestTransformationRequestRequest>
              docs: Request input to use for the transformation execution
            event_id: optional<string>
        content-type: application/json
      response:
        docs: Transformation run output
        type: root.TransformationExecutorOutput
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - request: {}
          response:
            body:
              request_id: request_id
              transformation_id: transformation_id
              execution_id: execution_id
              log_level: debug
              request:
                headers: headers
                path: path
                parsed_query: parsed_query
                body: body
              console:
                - type: error
                  message: message
    getTransformationExecutions:
      path: /transformations/{id}/executions
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get transformation executions
      request:
        name: GetTransformationExecutionsRequest
        path-parameters:
          id: string
        query-parameters:
          log_level: optional<GetTransformationExecutionsRequestLogLevel>
          webhook_id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          issue_id:
            type: optional<string>
            allow-multiple: true
            validation:
              maxLength: 255
          created_at: optional<root.GetTransformationExecutionsRequestCreatedAt>
          order_by: optional<GetTransformationExecutionsRequestOrderBy>
          dir: optional<GetTransformationExecutionsRequestDir>
          limit:
            type: optional<integer>
            validation:
              min: 0
              max: 255
          next:
            type: optional<string>
            validation:
              maxLength: 255
          prev:
            type: optional<string>
            validation:
              maxLength: 255
      response:
        docs: List of transformation executions
        type: root.TransformationExecutionPaginatedResult
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              pagination:
                order_by: order_by
                dir: asc
                limit: 1
                prev: prev
                next: next
              count: 1
              models:
                - id: id
                  transformed_event_data_id: transformed_event_data_id
                  original_event_data_id: original_event_data_id
                  transformation_id: transformation_id
                  team_id: team_id
                  webhook_id: webhook_id
                  log_level: debug
                  logs:
                    - type: error
                      message: message
                  updated_at: '2024-01-15T09:30:00Z'
                  created_at: '2024-01-15T09:30:00Z'
                  original_event_data:
                    path: path
                  transformed_event_data:
                    path: path
                  issue_id: issue_id
    getTransformationExecution:
      path: /transformations/{id}/executions/{execution_id}
      method: GET
      docs: ''
      source:
        openapi: ../openapi.yml
      display-name: Get a transformation execution
      request:
        name: GetTransformationExecutionRequest
        path-parameters:
          id: string
          execution_id: string
      response:
        docs: A single transformation execution
        type: root.TransformationExecution
        status-code: 200
      errors:
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
            execution_id: execution_id
          response:
            body:
              id: id
              transformed_event_data_id: transformed_event_data_id
              original_event_data_id: original_event_data_id
              transformation_id: transformation_id
              team_id: team_id
              webhook_id: webhook_id
              log_level: debug
              logs:
                - type: error
                  message: message
              updated_at: '2024-01-15T09:30:00Z'
              created_at: '2024-01-15T09:30:00Z'
              original_event_data:
                path: path
                query: query
                parsed_query: parsed_query
                headers: headers
                body: body
                is_large_payload: true
              transformed_event_data:
                path: path
                query: query
                parsed_query: parsed_query
                headers: headers
                body: body
                is_large_payload: true
              issue_id: issue_id
  source:
    openapi: ../openapi.yml
  display-name: Transformations
docs: >-
  A transformation represents JavaScript code that will be executed on a
  connection's requests. Transformations are applied to connections using Rules.
",
    },
  },
  "packageMarkers": {},
  "rootApiFile": {
    "contents": {
      "auth": "BearerAuthScheme",
      "auth-schemes": {
        "BasicAuthScheme": {
          "scheme": "basic",
        },
        "BearerAuthScheme": {
          "scheme": "bearer",
        },
      },
      "default-environment": "Default",
      "display-name": "Hookdeck Admin REST API",
      "environments": {
        "Default": "https://api.hookdeck.com/2023-01-01",
      },
      "error-discrimination": {
        "strategy": "status-code",
      },
      "name": "api",
    },
    "defaultUrl": undefined,
    "rawContents": "name: api
error-discrimination:
  strategy: status-code
display-name: Hookdeck Admin REST API
environments:
  Default: https://api.hookdeck.com/2023-01-01
default-environment: Default
auth-schemes:
  BearerAuthScheme:
    scheme: bearer
  BasicAuthScheme:
    scheme: basic
auth: BearerAuthScheme
",
  },
}