{
  "title": "Hume AI Batch API",
  "description": "The Batch API provides access to Hume models through an asynchronous job-based interface. You can submit a job to have many different files processed in parallel. The status of a job can then be checked with the job ID. Email notifications are available to alert on completed jobs.",
  "servers": [
    {
      "url": "https://api.hume.ai"
    }
  ],
  "tags": {
    "tagsById": {
      "Start Job": {
        "id": "Start Job"
      },
      "Get Job Predictions": {
        "id": "Get Job Predictions"
      },
      "List Jobs": {
        "id": "List Jobs"
      }
    },
    "orderedTagIds": [
      "Start Job",
      "Get Job Predictions",
      "List Jobs"
    ]
  },
  "hasEndpointsMarkedInternal": false,
  "endpoints": [
    {
      "summary": "List Jobs",
      "audiences": [],
      "operationId": "list_jobs",
      "tags": [
        "List Jobs"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The maximum number of jobs to include in the response.",
          "name": "limit",
          "schema": {
            "generatedName": "ListJobsRequestLimit",
            "value": {
              "schema": {
                "default": 50,
                "type": "int"
              },
              "generatedName": "ListJobsRequestLimit",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yaml",
            "type": "openapi"
          }
        },
        {
          "description": "Include only jobs with these statuses.",
          "name": "status",
          "schema": {
            "generatedName": "ListJobsRequestStatus",
            "value": {
              "value": {
                "generatedName": "ListJobsRequestStatusItem",
                "schema": "Status",
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "ListJobsRequestStatus",
              "groupName": [],
              "type": "array"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yaml",
            "type": "openapi"
          }
        },
        {
          "description": "Include only jobs that were created before or after `timestamp_ms`.",
          "name": "when",
          "schema": {
            "generatedName": "ListJobsRequestWhen",
            "value": {
              "generatedName": "ListJobsRequestWhen",
              "schema": "When",
              "source": {
                "file": "../openapi.yaml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yaml",
            "type": "openapi"
          }
        },
        {
          "description": "Defaults to the current date and time. See `when`.",
          "name": "timestamp_ms",
          "schema": {
            "generatedName": "ListJobsRequestTimestampMs",
            "value": {
              "schema": {
                "default": null,
                "type": "int64"
              },
              "generatedName": "ListJobsRequestTimestampMs",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yaml",
            "type": "openapi"
          }
        },
        {
          "description": "The job timestamp to sort by.",
          "name": "sort_by",
          "schema": {
            "generatedName": "ListJobsRequestSortBy",
            "value": {
              "generatedName": "ListJobsRequestSortBy",
              "schema": "SortBy",
              "source": {
                "file": "../openapi.yaml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yaml",
            "type": "openapi"
          }
        },
        {
          "description": "The sort direction.",
          "name": "direction",
          "schema": {
            "generatedName": "ListJobsRequestDirection",
            "value": {
              "generatedName": "ListJobsRequestDirection",
              "schema": "Direction",
              "source": {
                "file": "../openapi.yaml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yaml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListJobsRequest",
      "response": {
        "description": "",
        "schema": {
          "value": {
            "generatedName": "ListJobsResponseItem",
            "schema": "Job_Request",
            "source": {
              "file": "../openapi.yaml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "ListJobsResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Sort and filter jobs.",
      "authed": true,
      "method": "GET",
      "path": "/v0/batch/jobs",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "user_id": {
                      "value": {
                        "value": "user_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "job_id": {
                      "value": {
                        "value": "job_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "request": {
                      "properties": {
                        "urls": {
                          "value": [
                            {
                              "value": {
                                "value": "urls",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "callback_url": {
                          "value": {
                            "value": "callback_url",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "notify": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "files": {
                          "value": [
                            {
                              "properties": {
                                "md5sum": {
                                  "value": {
                                    "value": "md5sum",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "state": {
                      "value": {
                        "value": {
                          "status": {
                            "value": {
                              "value": "FAILED",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "created_timestamp_ms": {
                            "value": {
                              "value": 1000000,
                              "type": "int64"
                            },
                            "type": "primitive"
                          },
                          "started_timestamp_ms": {
                            "value": {
                              "value": 1000000,
                              "type": "int64"
                            },
                            "type": "primitive"
                          },
                          "ended_timestamp_ms": {
                            "value": {
                              "value": 1000000,
                              "type": "int64"
                            },
                            "type": "primitive"
                          },
                          "message": {
                            "value": {
                              "value": "state",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yaml",
        "type": "openapi"
      }
    },
    {
      "summary": "Start Job",
      "audiences": [],
      "operationId": "start_job",
      "tags": [
        "Start Job"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "StartJobRequest",
      "request": {
        "schema": {
          "generatedName": "StartJobRequest",
          "schema": "BaseRequest",
          "source": {
            "file": "../openapi.yaml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json; charset=utf-8",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "StartJobResponse",
          "schema": "JobId",
          "source": {
            "file": "../openapi.yaml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Start a new batch job.",
      "authed": true,
      "method": "POST",
      "path": "/v0/batch/jobs",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "job_id": {
                  "value": {
                    "value": "job_id",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yaml",
        "type": "openapi"
      }
    },
    {
      "summary": "Get Job Predictions",
      "audiences": [],
      "operationId": "get_job_predictions",
      "tags": [
        "Get Job Predictions"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "GetJobPredictionsRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yaml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetJobPredictionsRequest",
      "response": {
        "description": "",
        "schema": {
          "value": {
            "generatedName": "GetJobPredictionsResponseItem",
            "schema": "SourceResult",
            "source": {
              "file": "../openapi.yaml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "GetJobPredictionsResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Get the JSON predictions of a completed job.",
      "authed": true,
      "method": "GET",
      "path": "/v0/batch/jobs/{id}/predictions",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "source": {
                      "value": {
                        "value": {
                          "type": {
                            "value": {
                              "value": "file",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "filename": {
                            "value": {
                              "value": "source",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "content_type": {
                            "value": {
                              "value": "source",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "md5sum": {
                            "value": {
                              "value": "source",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    },
                    "results": {
                      "properties": {
                        "predictions": {
                          "value": [
                            {
                              "properties": {
                                "file": {
                                  "value": {
                                    "value": "file",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "models": {
                                  "properties": {},
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "errors": {
                          "value": [
                            {
                              "properties": {
                                "message": {
                                  "value": {
                                    "value": "message",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "file": {
                                  "value": {
                                    "value": "file",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "error": {
                      "value": {
                        "value": "error",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yaml",
        "type": "openapi"
      }
    },
    {
      "summary": "Get Job Artifacts",
      "audiences": [],
      "operationId": "get_job_artifacts",
      "tags": [
        "Get Job Predictions"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "GetJobArtifactsRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yaml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetJobArtifactsRequest",
      "response": {
        "description": "",
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "file"
      },
      "errors": {},
      "server": [],
      "description": "Get the artifacts ZIP of a completed job.",
      "authed": true,
      "method": "GET",
      "path": "/v0/batch/jobs/{id}/artifacts",
      "examples": [],
      "source": {
        "file": "../openapi.yaml",
        "type": "openapi"
      }
    },
    {
      "summary": "Get Job Details",
      "audiences": [],
      "operationId": "get_job",
      "tags": [
        "Get Job Predictions"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "GetJobRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yaml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetJobRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetJobResponse",
          "schema": "Job_Request",
          "source": {
            "file": "../openapi.yaml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Get the request details and state of a given job.",
      "authed": true,
      "method": "GET",
      "path": "/v0/batch/jobs/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "user_id": {
                  "value": {
                    "value": "user_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "job_id": {
                  "value": {
                    "value": "job_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "request": {
                  "properties": {
                    "models": {
                      "properties": {
                        "burst": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "facemesh": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      },
                      "type": "object"
                    },
                    "transcription": {
                      "properties": {
                        "language": {
                          "value": "zh",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    "urls": {
                      "value": [
                        {
                          "value": {
                            "value": "urls",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "callback_url": {
                      "value": {
                        "value": "callback_url",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "notify": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "files": {
                      "value": [
                        {
                          "properties": {
                            "md5sum": {
                              "value": {
                                "value": "md5sum",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "state": {
                  "value": {
                    "value": {
                      "status": {
                        "value": {
                          "value": "FAILED",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "created_timestamp_ms": {
                        "value": {
                          "value": 1000000,
                          "type": "int64"
                        },
                        "type": "primitive"
                      },
                      "started_timestamp_ms": {
                        "value": {
                          "value": 1000000,
                          "type": "int64"
                        },
                        "type": "primitive"
                      },
                      "ended_timestamp_ms": {
                        "value": {
                          "value": 1000000,
                          "type": "int64"
                        },
                        "type": "primitive"
                      },
                      "message": {
                        "value": {
                          "value": "state",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "discriminated"
                  },
                  "type": "oneOf"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yaml",
        "type": "openapi"
      }
    }
  ],
  "webhooks": [],
  "channel": [],
  "groupedSchemas": {
    "rootSchemas": {
      "BaseRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "baseRequestModels",
            "key": "models",
            "schema": {
              "generatedName": "baseRequestModels",
              "value": {
                "generatedName": "BaseRequestModels",
                "schema": "Models",
                "groupName": [],
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "baseRequestTranscription",
            "key": "transcription",
            "schema": {
              "generatedName": "baseRequestTranscription",
              "value": {
                "generatedName": "BaseRequestTranscription",
                "schema": "Transcription",
                "groupName": [],
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "baseRequestUrls",
            "key": "urls",
            "schema": {
              "generatedName": "baseRequestUrls",
              "value": {
                "description": "URLs to the media files to be processed. Each must be a valid public URL to a media file (see recommended input filetypes) or an archive (`.zip`, `.tar.gz`, `.tar.bz2`, `.tar.xz`) of media files.\n\nIf you wish to supply more than 100 URLs, consider providing them as an archive (`.zip`, `.tar.gz`, `.tar.bz2`, `.tar.xz`).",
                "value": {
                  "schema": {
                    "format": "url",
                    "type": "string"
                  },
                  "generatedName": "BaseRequestUrlsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "BaseRequestUrls",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "baseRequestCallbackUrl",
            "key": "callback_url",
            "schema": {
              "generatedName": "baseRequestCallbackUrl",
              "value": {
                "description": "If provided, a `POST` request will be made to the URL with the generated predictions on completion or the error message on failure.",
                "schema": {
                  "format": "url",
                  "type": "string"
                },
                "generatedName": "BaseRequestCallbackUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "baseRequestNotify",
            "key": "notify",
            "schema": {
              "generatedName": "baseRequestNotify",
              "value": {
                "description": "Whether to send an email notification to the user upon job failure.",
                "schema": {
                  "default": false,
                  "type": "boolean"
                },
                "generatedName": "BaseRequestNotify",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "BaseRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Bcp47Tag": {
        "generatedName": "Bcp47Tag",
        "values": [
          {
            "generatedName": "zh",
            "value": "zh",
            "casing": {}
          },
          {
            "generatedName": "da",
            "value": "da",
            "casing": {}
          },
          {
            "generatedName": "nl",
            "value": "nl",
            "casing": {}
          },
          {
            "generatedName": "en",
            "value": "en",
            "casing": {}
          },
          {
            "generatedName": "EnAu",
            "value": "en-AU",
            "casing": {}
          },
          {
            "generatedName": "EnIn",
            "value": "en-IN",
            "casing": {}
          },
          {
            "generatedName": "EnNz",
            "value": "en-NZ",
            "casing": {}
          },
          {
            "generatedName": "EnGb",
            "value": "en-GB",
            "casing": {}
          },
          {
            "generatedName": "fr",
            "value": "fr",
            "casing": {}
          },
          {
            "generatedName": "FrCa",
            "value": "fr-CA",
            "casing": {}
          },
          {
            "generatedName": "de",
            "value": "de",
            "casing": {}
          },
          {
            "generatedName": "hi",
            "value": "hi",
            "casing": {}
          },
          {
            "generatedName": "HiLatn",
            "value": "hi-Latn",
            "casing": {}
          },
          {
            "generatedName": "id",
            "value": "id",
            "casing": {}
          },
          {
            "generatedName": "it",
            "value": "it",
            "casing": {}
          },
          {
            "generatedName": "ja",
            "value": "ja",
            "casing": {}
          },
          {
            "generatedName": "ko",
            "value": "ko",
            "casing": {}
          },
          {
            "generatedName": "no",
            "value": "no",
            "casing": {}
          },
          {
            "generatedName": "pl",
            "value": "pl",
            "casing": {}
          },
          {
            "generatedName": "pt",
            "value": "pt",
            "casing": {}
          },
          {
            "generatedName": "PtBr",
            "value": "pt-BR",
            "casing": {}
          },
          {
            "generatedName": "PtPt",
            "value": "pt-PT",
            "casing": {}
          },
          {
            "generatedName": "ru",
            "value": "ru",
            "casing": {}
          },
          {
            "generatedName": "es",
            "value": "es",
            "casing": {}
          },
          {
            "generatedName": "Es419",
            "value": "es-419",
            "casing": {}
          },
          {
            "generatedName": "sv",
            "value": "sv",
            "casing": {}
          },
          {
            "generatedName": "ta",
            "value": "ta",
            "casing": {}
          },
          {
            "generatedName": "tr",
            "value": "tr",
            "casing": {}
          },
          {
            "generatedName": "uk",
            "value": "uk",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "BoundingBox": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "boundingBoxX",
            "key": "x",
            "schema": {
              "description": "x-coordinate of bounding box top left corner.",
              "schema": {
                "type": "double"
              },
              "generatedName": "BoundingBoxX",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "boundingBoxY",
            "key": "y",
            "schema": {
              "description": "y-coordinate of bounding box top left corner.",
              "schema": {
                "type": "double"
              },
              "generatedName": "BoundingBoxY",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "boundingBoxW",
            "key": "w",
            "schema": {
              "description": "Bounding box width.",
              "schema": {
                "type": "double"
              },
              "generatedName": "BoundingBoxW",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "boundingBoxH",
            "key": "h",
            "schema": {
              "description": "Bounding box height.",
              "schema": {
                "type": "double"
              },
              "generatedName": "BoundingBoxH",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A bounding box around a face.",
        "generatedName": "BoundingBox",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "BurstPrediction": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "burstPredictionTime",
            "key": "time",
            "schema": {
              "generatedName": "BurstPredictionTime",
              "schema": "TimeInterval",
              "source": {
                "file": "../openapi.yaml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "burstPredictionEmotions",
            "key": "emotions",
            "schema": {
              "description": "A high-dimensional embedding in emotion space.",
              "value": {
                "generatedName": "BurstPredictionEmotionsItem",
                "schema": "EmotionScore",
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "BurstPredictionEmotions",
              "title": "Emotions Scores",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "burstPredictionDescriptions",
            "key": "descriptions",
            "schema": {
              "description": "Modality-specific descriptive features and their scores.",
              "value": {
                "generatedName": "BurstPredictionDescriptionsItem",
                "schema": "DescriptionsScore",
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "BurstPredictionDescriptions",
              "title": "Descriptions Scores",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "BurstPrediction",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Completed": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "completedCreatedTimestampMs",
            "key": "created_timestamp_ms",
            "schema": {
              "description": "When this job was created (Unix timestamp in milliseconds).",
              "schema": {
                "type": "int64"
              },
              "generatedName": "CompletedCreatedTimestampMs",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "completedStartedTimestampMs",
            "key": "started_timestamp_ms",
            "schema": {
              "description": "When this job started (Unix timestamp in milliseconds).",
              "schema": {
                "type": "int64"
              },
              "generatedName": "CompletedStartedTimestampMs",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "completedEndedTimestampMs",
            "key": "ended_timestamp_ms",
            "schema": {
              "description": "When this job ended (Unix timestamp in milliseconds).",
              "schema": {
                "type": "int64"
              },
              "generatedName": "CompletedEndedTimestampMs",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "completedNumPredictions",
            "key": "num_predictions",
            "schema": {
              "description": "The number of predictions that were generated by this job.",
              "schema": {
                "type": "int"
              },
              "generatedName": "CompletedNumPredictions",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "completedNumErrors",
            "key": "num_errors",
            "schema": {
              "description": "The number of errors that occurred while running this job.",
              "schema": {
                "type": "int"
              },
              "generatedName": "CompletedNumErrors",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Completed",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "DescriptionsScore": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "descriptionsScoreName",
            "key": "name",
            "schema": {
              "description": "Name of the descriptive feature being expressed.",
              "schema": {
                "type": "string"
              },
              "generatedName": "DescriptionsScoreName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "descriptionsScoreScore",
            "key": "score",
            "schema": {
              "description": "Embedding value for the descriptive feature being expressed.",
              "schema": {
                "type": "string"
              },
              "generatedName": "DescriptionsScoreScore",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "DescriptionsScore",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Direction": {
        "generatedName": "Direction",
        "values": [
          {
            "generatedName": "asc",
            "value": "asc",
            "casing": {}
          },
          {
            "generatedName": "desc",
            "value": "desc",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "EmotionScore": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "emotionScoreName",
            "key": "name",
            "schema": {
              "description": "Name of the emotion being expressed.",
              "schema": {
                "type": "string"
              },
              "generatedName": "EmotionScoreName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "emotionScoreScore",
            "key": "score",
            "schema": {
              "description": "Embedding value for the emotion being expressed.",
              "schema": {
                "type": "string"
              },
              "generatedName": "EmotionScoreScore",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EmotionScore",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Empty": {
        "description": "To include predictions for this model type, set this field to `{}`. It is currently not configurable further.",
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "EmptyKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "EmptyValue",
          "type": "unknown"
        },
        "generatedName": "Empty",
        "groupName": [],
        "type": "map"
      },
      "Error": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "errorMessage",
            "key": "message",
            "schema": {
              "description": "An error message.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ErrorMessage",
              "title": "Error Message",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "errorFile",
            "key": "file",
            "schema": {
              "description": "A file path relative to the top level source URL or file.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ErrorFile",
              "nameOverride": "File",
              "title": "File",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Error",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Face": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "faceFpsPred",
            "key": "fps_pred",
            "schema": {
              "generatedName": "faceFpsPred",
              "value": {
                "description": "Number of frames per second to process. Other frames will be omitted from the response. Set to `0` to process every frame.",
                "schema": {
                  "default": 3,
                  "type": "double"
                },
                "generatedName": "FaceFpsPred",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "faceProbThreshold",
            "key": "prob_threshold",
            "schema": {
              "generatedName": "faceProbThreshold",
              "value": {
                "description": "Face detection probability threshold. Faces detected with a probability less than this threshold will be omitted from the response.",
                "schema": {
                  "default": 0.99,
                  "minimum": 0,
                  "maximum": 1,
                  "type": "double"
                },
                "generatedName": "FaceProbThreshold",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "faceIdentifyFaces",
            "key": "identify_faces",
            "schema": {
              "generatedName": "faceIdentifyFaces",
              "value": {
                "description": "Whether to return identifiers for faces across frames. If `true`, unique identifiers will be assigned to face bounding boxes to differentiate different faces. If `false`, all faces will be tagged with an `unknown` ID.",
                "schema": {
                  "default": false,
                  "type": "boolean"
                },
                "generatedName": "FaceIdentifyFaces",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "faceMinFaceSize",
            "key": "min_face_size",
            "schema": {
              "generatedName": "faceMinFaceSize",
              "value": {
                "description": "Minimum bounding box side length in pixels to treat as a face. Faces detected with a bounding box side length in pixels less than this threshold will be omitted from the response.",
                "schema": {
                  "type": "uint64"
                },
                "generatedName": "FaceMinFaceSize",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "faceFacs",
            "key": "facs",
            "schema": {
              "generatedName": "faceFacs",
              "value": {
                "generatedName": "FaceFacs",
                "schema": "Empty",
                "groupName": [],
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "faceDescriptions",
            "key": "descriptions",
            "schema": {
              "generatedName": "faceDescriptions",
              "value": {
                "generatedName": "FaceDescriptions",
                "schema": "Empty",
                "groupName": [],
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "faceSaveFaces",
            "key": "save_faces",
            "schema": {
              "generatedName": "faceSaveFaces",
              "value": {
                "description": "Whether to extract and save the detected faces in the artifacts zip created by each job.",
                "schema": {
                  "default": false,
                  "type": "boolean"
                },
                "generatedName": "FaceSaveFaces",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Face",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "FacePrediction": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "facePredictionFrame",
            "key": "frame",
            "schema": {
              "description": "Frame number",
              "schema": {
                "type": "uint64"
              },
              "generatedName": "FacePredictionFrame",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "facePredictionTime",
            "key": "time",
            "schema": {
              "description": "Time in seconds when face detection occurred.",
              "schema": {
                "type": "double"
              },
              "generatedName": "FacePredictionTime",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "facePredictionProb",
            "key": "prob",
            "schema": {
              "description": "The predicted probability that a detected face was actually a face.",
              "schema": {
                "type": "double"
              },
              "generatedName": "FacePredictionProb",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "facePredictionBox",
            "key": "box",
            "schema": {
              "generatedName": "FacePredictionBox",
              "schema": "BoundingBox",
              "source": {
                "file": "../openapi.yaml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "facePredictionEmotions",
            "key": "emotions",
            "schema": {
              "description": "A high-dimensional embedding in emotion space.",
              "value": {
                "generatedName": "FacePredictionEmotionsItem",
                "schema": "EmotionScore",
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "FacePredictionEmotions",
              "title": "Emotions Scores",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "facePredictionFacs",
            "key": "facs",
            "schema": {
              "generatedName": "facePredictionFacs",
              "value": {
                "description": "FACS 2.0 features and their scores.",
                "value": {
                  "generatedName": "FacePredictionFacsItem",
                  "schema": "FacsScore",
                  "source": {
                    "file": "../openapi.yaml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "FacePredictionFacs",
                "title": "FACS 2.0 Scores",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "facePredictionDescriptions",
            "key": "descriptions",
            "schema": {
              "generatedName": "facePredictionDescriptions",
              "value": {
                "description": "Modality-specific descriptive features and their scores.",
                "value": {
                  "generatedName": "FacePredictionDescriptionsItem",
                  "schema": "DescriptionsScore",
                  "source": {
                    "file": "../openapi.yaml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "FacePredictionDescriptions",
                "title": "Descriptions Scores",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "FacePrediction",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "FacemeshPrediction": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "facemeshPredictionEmotions",
            "key": "emotions",
            "schema": {
              "description": "A high-dimensional embedding in emotion space.",
              "value": {
                "generatedName": "FacemeshPredictionEmotionsItem",
                "schema": "EmotionScore",
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "FacemeshPredictionEmotions",
              "title": "Emotions Scores",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "FacemeshPrediction",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "FacsScore": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "facsScoreName",
            "key": "name",
            "schema": {
              "description": "Name of the FACS 2.0 feature being expressed.",
              "schema": {
                "type": "string"
              },
              "generatedName": "FacsScoreName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "facsScoreScore",
            "key": "score",
            "schema": {
              "description": "Embedding value for the FACS 2.0 feature being expressed.",
              "schema": {
                "type": "string"
              },
              "generatedName": "FacsScoreScore",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "FacsScore",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Failed": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "failedCreatedTimestampMs",
            "key": "created_timestamp_ms",
            "schema": {
              "description": "When this job was created (Unix timestamp in milliseconds).",
              "schema": {
                "type": "int64"
              },
              "generatedName": "FailedCreatedTimestampMs",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "failedStartedTimestampMs",
            "key": "started_timestamp_ms",
            "schema": {
              "description": "When this job started (Unix timestamp in milliseconds).",
              "schema": {
                "type": "int64"
              },
              "generatedName": "FailedStartedTimestampMs",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "failedEndedTimestampMs",
            "key": "ended_timestamp_ms",
            "schema": {
              "description": "When this job ended (Unix timestamp in milliseconds).",
              "schema": {
                "type": "int64"
              },
              "generatedName": "FailedEndedTimestampMs",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "failedMessage",
            "key": "message",
            "schema": {
              "description": "An error message.",
              "schema": {
                "type": "string"
              },
              "generatedName": "FailedMessage",
              "title": "Error Message",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Failed",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "File": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "fileFilename",
            "key": "filename",
            "schema": {
              "generatedName": "fileFilename",
              "value": {
                "description": "The name of the file.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "FileFilename",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "fileContentType",
            "key": "content_type",
            "schema": {
              "generatedName": "fileContentType",
              "value": {
                "description": "The content type of the file.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "FileContentType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "fileMd5Sum",
            "key": "md5sum",
            "schema": {
              "description": "The MD5 checksum of the file.",
              "schema": {
                "type": "string"
              },
              "generatedName": "FileMd5Sum",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "File",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Granularity": {
        "description": "The granularity at which to generate predictions. `utterance` corresponds to a natural pause or break in conversation, while `conversational_turn` corresponds to a change in speaker.",
        "generatedName": "Granularity",
        "values": [
          {
            "generatedName": "word",
            "value": "word",
            "casing": {}
          },
          {
            "generatedName": "sentence",
            "value": "sentence",
            "casing": {}
          },
          {
            "generatedName": "utterance",
            "value": "utterance",
            "casing": {}
          },
          {
            "generatedName": "conversational_turn",
            "value": "conversational_turn",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "GroupedPredictions_BurstPrediction": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "groupedPredictionsBurstPredictionId",
            "key": "id",
            "schema": {
              "description": "An automatically generated label to identify individuals in your media file. Will be `unknown` if you have chosen to disable identification, or if the model is unable to distinguish between individuals.",
              "schema": {
                "type": "string"
              },
              "generatedName": "GroupedPredictionsBurstPredictionId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "groupedPredictionsBurstPredictionPredictions",
            "key": "predictions",
            "schema": {
              "value": {
                "generatedName": "GroupedPredictionsBurstPredictionPredictionsItem",
                "schema": "BurstPrediction",
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "GroupedPredictionsBurstPredictionPredictions",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "GroupedPredictionsBurstPrediction",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "GroupedPredictions_FacePrediction": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "groupedPredictionsFacePredictionId",
            "key": "id",
            "schema": {
              "description": "An automatically generated label to identify individuals in your media file. Will be `unknown` if you have chosen to disable identification, or if the model is unable to distinguish between individuals.",
              "schema": {
                "type": "string"
              },
              "generatedName": "GroupedPredictionsFacePredictionId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "groupedPredictionsFacePredictionPredictions",
            "key": "predictions",
            "schema": {
              "value": {
                "generatedName": "GroupedPredictionsFacePredictionPredictionsItem",
                "schema": "FacePrediction",
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "GroupedPredictionsFacePredictionPredictions",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "GroupedPredictionsFacePrediction",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "GroupedPredictions_FacemeshPrediction": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "groupedPredictionsFacemeshPredictionId",
            "key": "id",
            "schema": {
              "description": "An automatically generated label to identify individuals in your media file. Will be `unknown` if you have chosen to disable identification, or if the model is unable to distinguish between individuals.",
              "schema": {
                "type": "string"
              },
              "generatedName": "GroupedPredictionsFacemeshPredictionId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "groupedPredictionsFacemeshPredictionPredictions",
            "key": "predictions",
            "schema": {
              "value": {
                "generatedName": "GroupedPredictionsFacemeshPredictionPredictionsItem",
                "schema": "FacemeshPrediction",
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "GroupedPredictionsFacemeshPredictionPredictions",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "GroupedPredictionsFacemeshPrediction",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "GroupedPredictions_LanguagePrediction": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "groupedPredictionsLanguagePredictionId",
            "key": "id",
            "schema": {
              "description": "An automatically generated label to identify individuals in your media file. Will be `unknown` if you have chosen to disable identification, or if the model is unable to distinguish between individuals.",
              "schema": {
                "type": "string"
              },
              "generatedName": "GroupedPredictionsLanguagePredictionId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "groupedPredictionsLanguagePredictionPredictions",
            "key": "predictions",
            "schema": {
              "value": {
                "generatedName": "GroupedPredictionsLanguagePredictionPredictionsItem",
                "schema": "LanguagePrediction",
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "GroupedPredictionsLanguagePredictionPredictions",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "GroupedPredictionsLanguagePrediction",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "GroupedPredictions_NerPrediction": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "groupedPredictionsNerPredictionId",
            "key": "id",
            "schema": {
              "description": "An automatically generated label to identify individuals in your media file. Will be `unknown` if you have chosen to disable identification, or if the model is unable to distinguish between individuals.",
              "schema": {
                "type": "string"
              },
              "generatedName": "GroupedPredictionsNerPredictionId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "groupedPredictionsNerPredictionPredictions",
            "key": "predictions",
            "schema": {
              "value": {
                "generatedName": "GroupedPredictionsNerPredictionPredictionsItem",
                "schema": "NerPrediction",
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "GroupedPredictionsNerPredictionPredictions",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "GroupedPredictionsNerPrediction",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "GroupedPredictions_ProsodyPrediction": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "groupedPredictionsProsodyPredictionId",
            "key": "id",
            "schema": {
              "description": "An automatically generated label to identify individuals in your media file. Will be `unknown` if you have chosen to disable identification, or if the model is unable to distinguish between individuals.",
              "schema": {
                "type": "string"
              },
              "generatedName": "GroupedPredictionsProsodyPredictionId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "groupedPredictionsProsodyPredictionPredictions",
            "key": "predictions",
            "schema": {
              "value": {
                "generatedName": "GroupedPredictionsProsodyPredictionPredictionsItem",
                "schema": "ProsodyPrediction",
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "GroupedPredictionsProsodyPredictionPredictions",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "GroupedPredictionsProsodyPrediction",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "InProgress": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "inProgressCreatedTimestampMs",
            "key": "created_timestamp_ms",
            "schema": {
              "description": "When this job was created (Unix timestamp in milliseconds).",
              "schema": {
                "type": "int64"
              },
              "generatedName": "InProgressCreatedTimestampMs",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "inProgressStartedTimestampMs",
            "key": "started_timestamp_ms",
            "schema": {
              "description": "When this job started (Unix timestamp in milliseconds).",
              "schema": {
                "type": "int64"
              },
              "generatedName": "InProgressStartedTimestampMs",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "InProgress",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Job_Request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "jobRequestUserId",
            "key": "user_id",
            "schema": {
              "description": "Your user ID.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "JobRequestUserId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "jobRequestJobId",
            "key": "job_id",
            "schema": {
              "description": "The ID associated with this job.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "JobRequestJobId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "jobRequestRequest",
            "key": "request",
            "schema": {
              "generatedName": "JobRequestRequest",
              "schema": "Request",
              "source": {
                "file": "../openapi.yaml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "jobRequestState",
            "key": "state",
            "schema": {
              "generatedName": "JobRequestState",
              "schema": "State",
              "source": {
                "file": "../openapi.yaml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "JobRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "JobId": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "jobIdJobId",
            "key": "job_id",
            "schema": {
              "description": "The ID of the started job.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "JobIdJobId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "JobId",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Language": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "languageGranularity",
            "key": "granularity",
            "schema": {
              "generatedName": "languageGranularity",
              "value": {
                "generatedName": "LanguageGranularity",
                "schema": "Granularity",
                "groupName": [],
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "languageIdentifySpeakers",
            "key": "identify_speakers",
            "schema": {
              "generatedName": "languageIdentifySpeakers",
              "value": {
                "description": "Whether to return identifiers for speakers over time. If `true`, unique identifiers will be assigned to spoken words to differentiate different speakers. If `false`, all speakers will be tagged with an `unknown` ID.",
                "schema": {
                  "default": false,
                  "type": "boolean"
                },
                "generatedName": "LanguageIdentifySpeakers",
                "title": "Identify Speakers",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "languageSentiment",
            "key": "sentiment",
            "schema": {
              "generatedName": "languageSentiment",
              "value": {
                "generatedName": "LanguageSentiment",
                "schema": "Empty",
                "groupName": [],
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "languageToxicity",
            "key": "toxicity",
            "schema": {
              "generatedName": "languageToxicity",
              "value": {
                "generatedName": "LanguageToxicity",
                "schema": "Empty",
                "groupName": [],
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Language",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "LanguagePrediction": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "languagePredictionText",
            "key": "text",
            "schema": {
              "description": "A segment of text (like a word or a sentence).",
              "schema": {
                "type": "string"
              },
              "generatedName": "LanguagePredictionText",
              "nameOverride": "Text",
              "title": "Text",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "languagePredictionPosition",
            "key": "position",
            "schema": {
              "generatedName": "LanguagePredictionPosition",
              "schema": "PositionInterval",
              "source": {
                "file": "../openapi.yaml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "languagePredictionTime",
            "key": "time",
            "schema": {
              "generatedName": "languagePredictionTime",
              "value": {
                "generatedName": "LanguagePredictionTime",
                "schema": "TimeInterval",
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "languagePredictionConfidence",
            "key": "confidence",
            "schema": {
              "generatedName": "languagePredictionConfidence",
              "value": {
                "description": "Value between `0.0` and `1.0` that indicates our transcription model’s relative confidence in this text.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "LanguagePredictionConfidence",
                "nameOverride": "Confidence",
                "title": "Confidence",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "languagePredictionSpeakerConfidence",
            "key": "speaker_confidence",
            "schema": {
              "generatedName": "languagePredictionSpeakerConfidence",
              "value": {
                "description": "Value between `0.0` and `1.0` that indicates our transcription model’s relative confidence that this text was spoken by this speaker.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "LanguagePredictionSpeakerConfidence",
                "title": "Speaker Confidence",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "languagePredictionEmotions",
            "key": "emotions",
            "schema": {
              "description": "A high-dimensional embedding in emotion space.",
              "value": {
                "generatedName": "LanguagePredictionEmotionsItem",
                "schema": "EmotionScore",
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "LanguagePredictionEmotions",
              "title": "Emotions Scores",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "languagePredictionSentiment",
            "key": "sentiment",
            "schema": {
              "generatedName": "languagePredictionSentiment",
              "value": {
                "description": "Sentiment predictions returned as a distribution. This model predicts the probability that a given text could be interpreted as having each sentiment level from `1` (negative) to `9` (positive).\n\nCompared to returning one estimate of sentiment, this enables a more nuanced analysis of a text's meaning. For example, a text with very neutral sentiment would have an average rating of `5`. But also a text that could be interpreted as having very positive sentiment or very negative sentiment would also have an average rating of `5`. The average sentiment is less informative than the distribution over sentiment, so this API returns a value for each sentiment level.",
                "value": {
                  "generatedName": "LanguagePredictionSentimentItem",
                  "schema": "SentimentScore",
                  "source": {
                    "file": "../openapi.yaml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "LanguagePredictionSentiment",
                "title": "Sentiment Scores",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "languagePredictionToxicity",
            "key": "toxicity",
            "schema": {
              "generatedName": "languagePredictionToxicity",
              "value": {
                "description": "Toxicity predictions returned as probabilities that the text can be classified into the following categories: `toxic`, `severe_toxic`, `obscene`, `threat`, `insult`, and `identity_hate`.",
                "value": {
                  "generatedName": "LanguagePredictionToxicityItem",
                  "schema": "ToxicityScore",
                  "source": {
                    "file": "../openapi.yaml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "LanguagePredictionToxicity",
                "title": "Toxicity Scores",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "LanguagePrediction",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Models": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "modelsFace",
            "key": "face",
            "schema": {
              "generatedName": "modelsFace",
              "value": {
                "generatedName": "ModelsFace",
                "schema": "Face",
                "groupName": [],
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelsBurst",
            "key": "burst",
            "schema": {
              "generatedName": "modelsBurst",
              "value": {
                "generatedName": "ModelsBurst",
                "schema": "Empty",
                "groupName": [],
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelsProsody",
            "key": "prosody",
            "schema": {
              "generatedName": "modelsProsody",
              "value": {
                "generatedName": "ModelsProsody",
                "schema": "Prosody",
                "groupName": [],
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelsLanguage",
            "key": "language",
            "schema": {
              "generatedName": "modelsLanguage",
              "value": {
                "generatedName": "ModelsLanguage",
                "schema": "Language",
                "groupName": [],
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelsNer",
            "key": "ner",
            "schema": {
              "generatedName": "modelsNer",
              "value": {
                "generatedName": "ModelsNer",
                "schema": "Ner",
                "groupName": [],
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelsFacemesh",
            "key": "facemesh",
            "schema": {
              "generatedName": "modelsFacemesh",
              "value": {
                "generatedName": "ModelsFacemesh",
                "schema": "Empty",
                "groupName": [],
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Models",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ModelsPredictions": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "modelsPredictionsFace",
            "key": "face",
            "schema": {
              "generatedName": "modelsPredictionsFace",
              "value": {
                "generatedName": "ModelsPredictionsFace",
                "schema": "Predictions_optional_Null_FacePrediction",
                "groupName": [],
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelsPredictionsBurst",
            "key": "burst",
            "schema": {
              "generatedName": "modelsPredictionsBurst",
              "value": {
                "generatedName": "ModelsPredictionsBurst",
                "schema": "Predictions_optional_Null_BurstPrediction",
                "groupName": [],
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelsPredictionsProsody",
            "key": "prosody",
            "schema": {
              "generatedName": "modelsPredictionsProsody",
              "value": {
                "generatedName": "ModelsPredictionsProsody",
                "schema": "Predictions_optional_TranscriptionMetadata_ProsodyPrediction",
                "groupName": [],
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelsPredictionsLanguage",
            "key": "language",
            "schema": {
              "generatedName": "modelsPredictionsLanguage",
              "value": {
                "generatedName": "ModelsPredictionsLanguage",
                "schema": "Predictions_optional_TranscriptionMetadata_LanguagePrediction",
                "groupName": [],
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelsPredictionsNer",
            "key": "ner",
            "schema": {
              "generatedName": "modelsPredictionsNer",
              "value": {
                "generatedName": "ModelsPredictionsNer",
                "schema": "Predictions_optional_TranscriptionMetadata_NerPrediction",
                "groupName": [],
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelsPredictionsFacemesh",
            "key": "facemesh",
            "schema": {
              "generatedName": "modelsPredictionsFacemesh",
              "value": {
                "generatedName": "ModelsPredictionsFacemesh",
                "schema": "Predictions_optional_Null_FacemeshPrediction",
                "groupName": [],
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ModelsPredictions",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Ner": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "nerIdentifySpeakers",
            "key": "identify_speakers",
            "schema": {
              "generatedName": "nerIdentifySpeakers",
              "value": {
                "description": "Whether to return identifiers for speakers over time. If `true`, unique identifiers will be assigned to spoken words to differentiate different speakers. If `false`, all speakers will be tagged with an `unknown` ID.",
                "schema": {
                  "default": false,
                  "type": "boolean"
                },
                "generatedName": "NerIdentifySpeakers",
                "title": "Identify Speakers",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Ner",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "NerPrediction": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "nerPredictionEntity",
            "key": "entity",
            "schema": {
              "description": "The recognized topic or entity.",
              "schema": {
                "type": "string"
              },
              "generatedName": "NerPredictionEntity",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "nerPredictionPosition",
            "key": "position",
            "schema": {
              "generatedName": "NerPredictionPosition",
              "schema": "PositionInterval",
              "source": {
                "file": "../openapi.yaml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "nerPredictionEntityConfidence",
            "key": "entity_confidence",
            "schema": {
              "description": "Our NER model's relative confidence in the recognized topic or entity.",
              "schema": {
                "type": "double"
              },
              "generatedName": "NerPredictionEntityConfidence",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "nerPredictionSupport",
            "key": "support",
            "schema": {
              "description": "A measure of how often the entity is linked to by other entities.",
              "schema": {
                "type": "double"
              },
              "generatedName": "NerPredictionSupport",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "nerPredictionUri",
            "key": "uri",
            "schema": {
              "description": "A URL which provides more information about the recognized topic or entity.",
              "schema": {
                "type": "string"
              },
              "generatedName": "NerPredictionUri",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "nerPredictionLinkWord",
            "key": "link_word",
            "schema": {
              "description": "The specific word to which the emotion predictions are linked.",
              "schema": {
                "type": "string"
              },
              "generatedName": "NerPredictionLinkWord",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "nerPredictionTime",
            "key": "time",
            "schema": {
              "generatedName": "nerPredictionTime",
              "value": {
                "generatedName": "NerPredictionTime",
                "schema": "TimeInterval",
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "nerPredictionConfidence",
            "key": "confidence",
            "schema": {
              "generatedName": "nerPredictionConfidence",
              "value": {
                "description": "Value between `0.0` and `1.0` that indicates our transcription model’s relative confidence in this text.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "NerPredictionConfidence",
                "nameOverride": "Confidence",
                "title": "Confidence",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "nerPredictionSpeakerConfidence",
            "key": "speaker_confidence",
            "schema": {
              "generatedName": "nerPredictionSpeakerConfidence",
              "value": {
                "description": "Value between `0.0` and `1.0` that indicates our transcription model’s relative confidence that this text was spoken by this speaker.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "NerPredictionSpeakerConfidence",
                "title": "Speaker Confidence",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "nerPredictionEmotions",
            "key": "emotions",
            "schema": {
              "description": "A high-dimensional embedding in emotion space.",
              "value": {
                "generatedName": "NerPredictionEmotionsItem",
                "schema": "EmotionScore",
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "NerPredictionEmotions",
              "title": "Emotions Scores",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "NerPrediction",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Null": {
        "description": "No associated metadata for this model. Value will be `null`.",
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "NullKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "NullValue",
          "type": "unknown"
        },
        "generatedName": "Null",
        "groupName": [],
        "type": "map"
      },
      "PositionInterval": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "positionIntervalBegin",
            "key": "begin",
            "schema": {
              "description": "The index of the first character in the text segment, inclusive.",
              "schema": {
                "type": "uint64"
              },
              "generatedName": "PositionIntervalBegin",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "positionIntervalEnd",
            "key": "end",
            "schema": {
              "description": "The index of the last character in the text segment, exclusive.",
              "schema": {
                "type": "uint64"
              },
              "generatedName": "PositionIntervalEnd",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Position of a segment of text within a larger document, measured in characters. Uses zero-based indexing. The beginning index is inclusive and the end index is exclusive.",
        "generatedName": "PositionInterval",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Prediction": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "predictionFile",
            "key": "file",
            "schema": {
              "description": "A file path relative to the top level source URL or file.",
              "schema": {
                "type": "string"
              },
              "generatedName": "PredictionFile",
              "nameOverride": "File",
              "title": "File",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "predictionModels",
            "key": "models",
            "schema": {
              "generatedName": "PredictionModels",
              "schema": "ModelsPredictions",
              "source": {
                "file": "../openapi.yaml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Prediction",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Predictions_optional_Null_BurstPrediction": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "predictionsOptionalNullBurstPredictionMetadata",
            "key": "metadata",
            "schema": {
              "generatedName": "predictionsOptionalNullBurstPredictionMetadata",
              "value": {
                "generatedName": "PredictionsOptionalNullBurstPredictionMetadata",
                "schema": "Null",
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "predictionsOptionalNullBurstPredictionGroupedPredictions",
            "key": "grouped_predictions",
            "schema": {
              "value": {
                "generatedName": "PredictionsOptionalNullBurstPredictionGroupedPredictionsItem",
                "schema": "GroupedPredictions_BurstPrediction",
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "PredictionsOptionalNullBurstPredictionGroupedPredictions",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PredictionsOptionalNullBurstPrediction",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Predictions_optional_Null_FacePrediction": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "predictionsOptionalNullFacePredictionMetadata",
            "key": "metadata",
            "schema": {
              "generatedName": "predictionsOptionalNullFacePredictionMetadata",
              "value": {
                "generatedName": "PredictionsOptionalNullFacePredictionMetadata",
                "schema": "Null",
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "predictionsOptionalNullFacePredictionGroupedPredictions",
            "key": "grouped_predictions",
            "schema": {
              "value": {
                "generatedName": "PredictionsOptionalNullFacePredictionGroupedPredictionsItem",
                "schema": "GroupedPredictions_FacePrediction",
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "PredictionsOptionalNullFacePredictionGroupedPredictions",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PredictionsOptionalNullFacePrediction",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Predictions_optional_Null_FacemeshPrediction": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "predictionsOptionalNullFacemeshPredictionMetadata",
            "key": "metadata",
            "schema": {
              "generatedName": "predictionsOptionalNullFacemeshPredictionMetadata",
              "value": {
                "generatedName": "PredictionsOptionalNullFacemeshPredictionMetadata",
                "schema": "Null",
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "predictionsOptionalNullFacemeshPredictionGroupedPredictions",
            "key": "grouped_predictions",
            "schema": {
              "value": {
                "generatedName": "PredictionsOptionalNullFacemeshPredictionGroupedPredictionsItem",
                "schema": "GroupedPredictions_FacemeshPrediction",
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "PredictionsOptionalNullFacemeshPredictionGroupedPredictions",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PredictionsOptionalNullFacemeshPrediction",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Predictions_optional_TranscriptionMetadata_LanguagePrediction": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "predictionsOptionalTranscriptionMetadataLanguagePredictionMetadata",
            "key": "metadata",
            "schema": {
              "generatedName": "predictionsOptionalTranscriptionMetadataLanguagePredictionMetadata",
              "value": {
                "generatedName": "PredictionsOptionalTranscriptionMetadataLanguagePredictionMetadata",
                "schema": "TranscriptionMetadata",
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "predictionsOptionalTranscriptionMetadataLanguagePredictionGroupedPredictions",
            "key": "grouped_predictions",
            "schema": {
              "value": {
                "generatedName": "PredictionsOptionalTranscriptionMetadataLanguagePredictionGroupedPredictionsItem",
                "schema": "GroupedPredictions_LanguagePrediction",
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "PredictionsOptionalTranscriptionMetadataLanguagePredictionGroupedPredictions",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PredictionsOptionalTranscriptionMetadataLanguagePrediction",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Predictions_optional_TranscriptionMetadata_NerPrediction": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "predictionsOptionalTranscriptionMetadataNerPredictionMetadata",
            "key": "metadata",
            "schema": {
              "generatedName": "predictionsOptionalTranscriptionMetadataNerPredictionMetadata",
              "value": {
                "generatedName": "PredictionsOptionalTranscriptionMetadataNerPredictionMetadata",
                "schema": "TranscriptionMetadata",
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "predictionsOptionalTranscriptionMetadataNerPredictionGroupedPredictions",
            "key": "grouped_predictions",
            "schema": {
              "value": {
                "generatedName": "PredictionsOptionalTranscriptionMetadataNerPredictionGroupedPredictionsItem",
                "schema": "GroupedPredictions_NerPrediction",
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "PredictionsOptionalTranscriptionMetadataNerPredictionGroupedPredictions",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PredictionsOptionalTranscriptionMetadataNerPrediction",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Predictions_optional_TranscriptionMetadata_ProsodyPrediction": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "predictionsOptionalTranscriptionMetadataProsodyPredictionMetadata",
            "key": "metadata",
            "schema": {
              "generatedName": "predictionsOptionalTranscriptionMetadataProsodyPredictionMetadata",
              "value": {
                "generatedName": "PredictionsOptionalTranscriptionMetadataProsodyPredictionMetadata",
                "schema": "TranscriptionMetadata",
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "predictionsOptionalTranscriptionMetadataProsodyPredictionGroupedPredictions",
            "key": "grouped_predictions",
            "schema": {
              "value": {
                "generatedName": "PredictionsOptionalTranscriptionMetadataProsodyPredictionGroupedPredictionsItem",
                "schema": "GroupedPredictions_ProsodyPrediction",
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "PredictionsOptionalTranscriptionMetadataProsodyPredictionGroupedPredictions",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PredictionsOptionalTranscriptionMetadataProsodyPrediction",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Prosody": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "prosodyGranularity",
            "key": "granularity",
            "schema": {
              "generatedName": "prosodyGranularity",
              "value": {
                "generatedName": "ProsodyGranularity",
                "schema": "Granularity",
                "groupName": [],
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "prosodyIdentifySpeakers",
            "key": "identify_speakers",
            "schema": {
              "generatedName": "prosodyIdentifySpeakers",
              "value": {
                "description": "Whether to return identifiers for speakers over time. If `true`, unique identifiers will be assigned to spoken words to differentiate different speakers. If `false`, all speakers will be tagged with an `unknown` ID.",
                "schema": {
                  "default": false,
                  "type": "boolean"
                },
                "generatedName": "ProsodyIdentifySpeakers",
                "title": "Identify Speakers",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "prosodyWindow",
            "key": "window",
            "schema": {
              "generatedName": "prosodyWindow",
              "value": {
                "generatedName": "ProsodyWindow",
                "schema": "Window",
                "groupName": [],
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "NOTE: the `granularity` field is ignored if transcription is not enabled or if the `window` field has been set.",
        "generatedName": "Prosody",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ProsodyPrediction": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "prosodyPredictionText",
            "key": "text",
            "schema": {
              "generatedName": "prosodyPredictionText",
              "value": {
                "description": "A segment of text (like a word or a sentence).",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ProsodyPredictionText",
                "nameOverride": "Text",
                "title": "Text",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "prosodyPredictionTime",
            "key": "time",
            "schema": {
              "generatedName": "ProsodyPredictionTime",
              "schema": "TimeInterval",
              "source": {
                "file": "../openapi.yaml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "prosodyPredictionConfidence",
            "key": "confidence",
            "schema": {
              "generatedName": "prosodyPredictionConfidence",
              "value": {
                "description": "Value between `0.0` and `1.0` that indicates our transcription model’s relative confidence in this text.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "ProsodyPredictionConfidence",
                "nameOverride": "Confidence",
                "title": "Confidence",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "prosodyPredictionSpeakerConfidence",
            "key": "speaker_confidence",
            "schema": {
              "generatedName": "prosodyPredictionSpeakerConfidence",
              "value": {
                "description": "Value between `0.0` and `1.0` that indicates our transcription model’s relative confidence that this text was spoken by this speaker.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "ProsodyPredictionSpeakerConfidence",
                "title": "Speaker Confidence",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "prosodyPredictionEmotions",
            "key": "emotions",
            "schema": {
              "description": "A high-dimensional embedding in emotion space.",
              "value": {
                "generatedName": "ProsodyPredictionEmotionsItem",
                "schema": "EmotionScore",
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "ProsodyPredictionEmotions",
              "title": "Emotions Scores",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ProsodyPrediction",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Queued": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "queuedCreatedTimestampMs",
            "key": "created_timestamp_ms",
            "schema": {
              "description": "When this job was created (Unix timestamp in milliseconds).",
              "schema": {
                "type": "int64"
              },
              "generatedName": "QueuedCreatedTimestampMs",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Queued",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "requestModels",
            "key": "models",
            "schema": {
              "generatedName": "requestModels",
              "value": {
                "generatedName": "RequestModels",
                "schema": "Models",
                "groupName": [],
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestTranscription",
            "key": "transcription",
            "schema": {
              "generatedName": "requestTranscription",
              "value": {
                "generatedName": "RequestTranscription",
                "schema": "Transcription",
                "groupName": [],
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestUrls",
            "key": "urls",
            "schema": {
              "generatedName": "requestUrls",
              "value": {
                "description": "URLs to the media files to be processed. Each must be a valid public URL to a media file (see recommended input filetypes) or an archive (`.zip`, `.tar.gz`, `.tar.bz2`, `.tar.xz`) of media files.\n\nIf you wish to supply more than 100 URLs, consider providing them as an archive (`.zip`, `.tar.gz`, `.tar.bz2`, `.tar.xz`).",
                "value": {
                  "schema": {
                    "format": "url",
                    "type": "string"
                  },
                  "generatedName": "RequestUrlsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "RequestUrls",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestCallbackUrl",
            "key": "callback_url",
            "schema": {
              "generatedName": "requestCallbackUrl",
              "value": {
                "description": "If provided, a `POST` request will be made to the URL with the generated predictions on completion or the error message on failure.",
                "schema": {
                  "format": "url",
                  "type": "string"
                },
                "generatedName": "RequestCallbackUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestNotify",
            "key": "notify",
            "schema": {
              "generatedName": "requestNotify",
              "value": {
                "description": "Whether to send an email notification to the user upon job completion/failure.",
                "schema": {
                  "default": false,
                  "type": "boolean"
                },
                "generatedName": "RequestNotify",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestFiles",
            "key": "files",
            "schema": {
              "value": {
                "generatedName": "RequestFilesItem",
                "schema": "File",
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "RequestFiles",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Results": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "resultsPredictions",
            "key": "predictions",
            "schema": {
              "value": {
                "generatedName": "ResultsPredictionsItem",
                "schema": "Prediction",
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "ResultsPredictions",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resultsErrors",
            "key": "errors",
            "schema": {
              "value": {
                "generatedName": "ResultsErrorsItem",
                "schema": "Error",
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "ResultsErrors",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Results",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SentimentScore": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sentimentScoreName",
            "key": "name",
            "schema": {
              "description": "Level of sentiment, ranging from `1` (negative) to `9` (positive)",
              "schema": {
                "type": "string"
              },
              "generatedName": "SentimentScoreName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sentimentScoreScore",
            "key": "score",
            "schema": {
              "description": "Prediction for this level of sentiment",
              "schema": {
                "type": "string"
              },
              "generatedName": "SentimentScoreScore",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SentimentScore",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SortBy": {
        "generatedName": "SortBy",
        "values": [
          {
            "generatedName": "created",
            "value": "created",
            "casing": {}
          },
          {
            "generatedName": "started",
            "value": "started",
            "casing": {}
          },
          {
            "generatedName": "ended",
            "value": "ended",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "Source": {
        "value": {
          "commonProperties": [],
          "discriminantProperty": "type",
          "generatedName": "Source",
          "schemas": {
            "url": {
              "generatedName": "ComponentsSchemasSourceUrl",
              "schema": "Source_Url",
              "source": {
                "file": "../openapi.yaml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "file": {
              "generatedName": "ComponentsSchemasSourceFile",
              "schema": "Source_File",
              "source": {
                "file": "../openapi.yaml",
                "type": "openapi"
              },
              "type": "reference"
            }
          },
          "groupName": [],
          "source": {
            "file": "../openapi.yaml",
            "type": "openapi"
          },
          "type": "discriminated"
        },
        "type": "oneOf"
      },
      "SourceResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sourceResultSource",
            "key": "source",
            "schema": {
              "generatedName": "SourceResultSource",
              "schema": "Source",
              "source": {
                "file": "../openapi.yaml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sourceResultResults",
            "key": "results",
            "schema": {
              "generatedName": "sourceResultResults",
              "value": {
                "generatedName": "SourceResultResults",
                "schema": "Results",
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sourceResultError",
            "key": "error",
            "schema": {
              "generatedName": "sourceResultError",
              "value": {
                "description": "An error message.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SourceResultError",
                "title": "Error Message",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SourceResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Source_File": {
        "allOf": [
          {
            "generatedName": "File",
            "schema": "File",
            "source": {
              "file": "../openapi.yaml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [],
        "allOfPropertyConflicts": [],
        "generatedName": "SourceFile",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Source_Url": {
        "allOf": [
          {
            "generatedName": "Url",
            "schema": "Url",
            "source": {
              "file": "../openapi.yaml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [],
        "allOfPropertyConflicts": [],
        "generatedName": "SourceUrl",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Url": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "urlUrl",
            "key": "url",
            "schema": {
              "description": "The URL of the source media file.",
              "schema": {
                "type": "string"
              },
              "generatedName": "UrlUrl",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Url",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "State": {
        "value": {
          "commonProperties": [],
          "discriminantProperty": "status",
          "generatedName": "State",
          "schemas": {
            "QUEUED": {
              "generatedName": "ComponentsSchemasStateQueued",
              "schema": "State_Queued",
              "source": {
                "file": "../openapi.yaml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "IN_PROGRESS": {
              "generatedName": "ComponentsSchemasStateInProgress",
              "schema": "State_InProgress",
              "source": {
                "file": "../openapi.yaml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "COMPLETED": {
              "generatedName": "ComponentsSchemasStateCompleted",
              "schema": "State_Completed",
              "source": {
                "file": "../openapi.yaml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "FAILED": {
              "generatedName": "ComponentsSchemasStateFailed",
              "schema": "State_Failed",
              "source": {
                "file": "../openapi.yaml",
                "type": "openapi"
              },
              "type": "reference"
            }
          },
          "groupName": [],
          "source": {
            "file": "../openapi.yaml",
            "type": "openapi"
          },
          "type": "discriminated"
        },
        "type": "oneOf"
      },
      "State_Completed": {
        "allOf": [
          {
            "generatedName": "Completed",
            "schema": "Completed",
            "source": {
              "file": "../openapi.yaml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [],
        "allOfPropertyConflicts": [],
        "generatedName": "StateCompleted",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "State_Failed": {
        "allOf": [
          {
            "generatedName": "Failed",
            "schema": "Failed",
            "source": {
              "file": "../openapi.yaml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [],
        "allOfPropertyConflicts": [],
        "generatedName": "StateFailed",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "State_InProgress": {
        "allOf": [
          {
            "generatedName": "InProgress",
            "schema": "InProgress",
            "source": {
              "file": "../openapi.yaml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [],
        "allOfPropertyConflicts": [],
        "generatedName": "StateInProgress",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "State_Queued": {
        "allOf": [
          {
            "generatedName": "Queued",
            "schema": "Queued",
            "source": {
              "file": "../openapi.yaml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [],
        "allOfPropertyConflicts": [],
        "generatedName": "StateQueued",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Status": {
        "generatedName": "Status",
        "values": [
          {
            "generatedName": "QUEUED",
            "value": "QUEUED",
            "casing": {}
          },
          {
            "generatedName": "IN_PROGRESS",
            "value": "IN_PROGRESS",
            "casing": {}
          },
          {
            "generatedName": "COMPLETED",
            "value": "COMPLETED",
            "casing": {}
          },
          {
            "generatedName": "FAILED",
            "value": "FAILED",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "TimeInterval": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "timeIntervalBegin",
            "key": "begin",
            "schema": {
              "description": "Beginning of time range in seconds.",
              "schema": {
                "type": "double"
              },
              "generatedName": "TimeIntervalBegin",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timeIntervalEnd",
            "key": "end",
            "schema": {
              "description": "End of time range in seconds.",
              "schema": {
                "type": "double"
              },
              "generatedName": "TimeIntervalEnd",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A time range with a beginning and end, measured in seconds.",
        "generatedName": "TimeInterval",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ToxicityScore": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "toxicityScoreName",
            "key": "name",
            "schema": {
              "description": "Category of toxicity.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ToxicityScoreName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toxicityScoreScore",
            "key": "score",
            "schema": {
              "description": "Prediction for this category of toxicity",
              "schema": {
                "type": "string"
              },
              "generatedName": "ToxicityScoreScore",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ToxicityScore",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Transcription": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "transcriptionLanguage",
            "key": "language",
            "schema": {
              "generatedName": "transcriptionLanguage",
              "value": {
                "generatedName": "TranscriptionLanguage",
                "schema": "Bcp47Tag",
                "groupName": [],
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Transcription",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TranscriptionMetadata": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "transcriptionMetadataConfidence",
            "key": "confidence",
            "schema": {
              "description": "Value between `0.0` and `1.0` indicating our transcription model’s relative confidence in the transcription of your media file.",
              "schema": {
                "type": "double"
              },
              "generatedName": "TranscriptionMetadataConfidence",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transcriptionMetadataDetectedLanguage",
            "key": "detected_language",
            "schema": {
              "generatedName": "transcriptionMetadataDetectedLanguage",
              "value": {
                "generatedName": "TranscriptionMetadataDetectedLanguage",
                "schema": "Bcp47Tag",
                "groupName": [],
                "source": {
                  "file": "../openapi.yaml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Transcription metadata for your media file.",
        "generatedName": "TranscriptionMetadata",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      },
      "When": {
        "generatedName": "When",
        "values": [
          {
            "generatedName": "created_before",
            "value": "created_before",
            "casing": {}
          },
          {
            "generatedName": "created_after",
            "value": "created_after",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "Window": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "windowLength",
            "key": "length",
            "schema": {
              "generatedName": "windowLength",
              "value": {
                "description": "The length of the sliding window.",
                "schema": {
                  "default": 4,
                  "minimum": 0.5,
                  "type": "double"
                },
                "generatedName": "WindowLength",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "windowStep",
            "key": "step",
            "schema": {
              "generatedName": "windowStep",
              "value": {
                "description": "The step size of the sliding window.",
                "schema": {
                  "default": 1,
                  "minimum": 0.5,
                  "type": "double"
                },
                "generatedName": "WindowStep",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Window",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yaml",
          "type": "openapi"
        },
        "type": "object"
      }
    },
    "namespacedSchemas": {}
  },
  "variables": {},
  "nonRequestReferencedSchemas": {},
  "securitySchemes": {
    "Authentication": {
      "headerName": "X-Hume-Api-Key",
      "type": "header"
    }
  },
  "globalHeaders": [],
  "idempotencyHeaders": [],
  "groups": {}
}