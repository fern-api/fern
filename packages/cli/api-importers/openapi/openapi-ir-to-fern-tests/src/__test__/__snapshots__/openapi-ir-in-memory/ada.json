{
  "type": "openapi",
  "value": {
    "info": {
      "title": "End Users API",
      "version": "1.0.0",
      "description": "test"
    },
    "tags": [
      {
        "name": "End Users API",
        "description": "test"
      }
    ],
    "paths": {
      "/end-users/v1/{end_user_id}": {
        "get": {
          "operationId": "getEndUserById",
          "summary": "Get an end user by ID",
          "description": "Get a specific end user",
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "tags": [
            "End users"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "end_user_id",
              "schema": {
                "type": "string"
              },
              "required": true,
              "description": "The end_user_id"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EndUser"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  },
                  "examples": {
                    "UnauthorizedError": {
                      "$ref": "#/components/examples/UnauthorizedError"
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  },
                  "examples": {
                    "NotFoundError": {
                      "$ref": "#/components/examples/NotFoundError"
                    }
                  }
                }
              }
            },
            "429": {
              "description": "Too Many Requests",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  },
                  "examples": {
                    "TooManyRequestsError": {
                      "$ref": "#/components/examples/TooManyRequestsError"
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  },
                  "examples": {
                    "InternalServerError": {
                      "$ref": "#/components/examples/InternalServerError"
                    }
                  }
                }
              }
            }
          }
        },
        "patch": {
          "operationId": "updateEndUserById",
          "summary": "Update an end user by ID",
          "description": "Update an end user. Request data is limited to 4KB in size total.",
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "tags": [
            "End users"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "end_user_id",
              "schema": {
                "type": "string"
              },
              "required": true,
              "description": "The end_user_id"
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndUserRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EndUser"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  },
                  "examples": {
                    "BadRequestError": {
                      "$ref": "#/components/examples/BadRequestError"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  },
                  "examples": {
                    "UnauthorizedError": {
                      "$ref": "#/components/examples/UnauthorizedError"
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  },
                  "examples": {
                    "NotFoundError": {
                      "$ref": "#/components/examples/NotFoundError"
                    }
                  }
                }
              }
            },
            "413": {
              "description": "Content Too Large",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  },
                  "examples": {
                    "ContentTooLargeError": {
                      "$ref": "#/components/examples/ContentTooLargeError"
                    }
                  }
                }
              }
            },
            "429": {
              "description": "Too Many Requests",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  },
                  "examples": {
                    "TooManyRequestsError": {
                      "$ref": "#/components/examples/TooManyRequestsError"
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  },
                  "examples": {
                    "InternalServerError": {
                      "$ref": "#/components/examples/InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/end-users/v1": {
        "get": {
          "operationId": "getEndUsers",
          "summary": "Get multiple end users by ID",
          "description": "Get multiple end users",
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "tags": [
            "End users"
          ],
          "parameters": [
            {
              "in": "query",
              "name": "cursor",
              "description": "The end user ID that marks the start or beginning of the returned profile records.",
              "schema": {
                "type": "string",
                "examples": [
                  "65a17e3f43bec88e2792d0eb"
                ]
              },
              "required": false
            },
            {
              "in": "query",
              "name": "limit",
              "description": "The number of end user profile records to return",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "maximum": 100,
                "examples": [
                  8
                ]
              },
              "required": false
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EndUsers"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  },
                  "examples": {
                    "BadRequestError": {
                      "$ref": "#/components/examples/BadRequestError"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  },
                  "examples": {
                    "UnauthorizedError": {
                      "$ref": "#/components/examples/UnauthorizedError"
                    }
                  }
                }
              }
            },
            "429": {
              "description": "Too Many Requests",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  },
                  "examples": {
                    "TooManyRequestsError": {
                      "$ref": "#/components/examples/TooManyRequestsError"
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  },
                  "examples": {
                    "InternalServerError": {
                      "$ref": "#/components/examples/InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/end-users/v1/spec": {},
      "/end-users/v1/docs": {}
    },
    "openapi": "3.1.0",
    "components": {
      "schemas": {
        "EndUser": {
          "type": [
            "object"
          ],
          "properties": {
            "end_user_id": {
              "type": [
                "string"
              ],
              "readOnly": true,
              "description": "The unique Ada-generated ID for the end user",
              "examples": [
                "5f7e0e2c1e7c7e000f0f9c3a"
              ]
            },
            "profile": {
              "description": "The end user's profile information",
              "type": [
                "object"
              ],
              "properties": {
                "first_name": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The end user's first name",
                  "examples": [
                    "Ada"
                  ]
                },
                "last_name": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The end user's last name",
                  "examples": [
                    "Lovelace"
                  ]
                },
                "email": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The end user's email address",
                  "examples": [
                    "ada.lovelace@ada.cx"
                  ]
                },
                "language": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The end user's language in BCP 47 format",
                  "examples": [
                    "en-US"
                  ]
                },
                "metadata": {
                  "type": [
                    "object"
                  ],
                  "description": "A dictionary of arbitrary key, value pairs assigned to the end user                      - `metadata` keys may only be of type: `string`                      - `metadata` values may only be one of type: `string`, `boolean`, or `integer`                     ",
                  "examples": [
                    {
                      "example_key1": "example_string_value",
                      "example_key2": true,
                      "example_key3": 123
                    }
                  ],
                  "additionalProperties": {}
                },
                "system_properties": {
                  "type": [
                    "object"
                  ],
                  "description": "Read-only profile information set by Ada",
                  "properties": {
                    "user_agent": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The end user's browser user-agent information captured by Ada",
                      "examples": [
                        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36"
                      ],
                      "readOnly": true
                    },
                    "device": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The end user's device information captured by Ada",
                      "examples": [
                        "macos"
                      ],
                      "readOnly": true
                    },
                    "browser": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The end user's browser information captured by Ada",
                      "examples": [
                        "Chrome"
                      ],
                      "readOnly": true
                    },
                    "browser_version": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The end user's browser version captured by Ada",
                      "examples": [
                        "119.0.0.0"
                      ],
                      "readOnly": true
                    },
                    "introshown": {
                      "type": [
                        "boolean",
                        "null"
                      ],
                      "description": "Whether the introductory message of a campaign has been displayed to the end user",
                      "examples": [
                        false
                      ],
                      "readOnly": true
                    },
                    "last_answer_id": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The ID for the last answer displayed to the end user during a conversation",
                      "examples": [
                        "650071321ef45533437f6f29"
                      ],
                      "readOnly": true
                    },
                    "last_question_asked": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The last question asked by the end user",
                      "examples": [
                        "What is my account balance?"
                      ],
                      "readOnly": true
                    },
                    "sunshine_first_message_id": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The ID for the first message sent to the end user via Sunshine Conversations",
                      "examples": [
                        "65736922f17d0bf841d8eeb4"
                      ],
                      "readOnly": true
                    },
                    "sunshine_conversation_id": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The ID for the Sunshine Conversation for this end user",
                      "examples": [
                        "12345abc"
                      ],
                      "readOnly": true
                    },
                    "sunshine_end_user_channel": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The channel used to communicate with the end user via Sunshine Conversations",
                      "examples": [
                        "whatsapp"
                      ],
                      "readOnly": true
                    },
                    "sunshine_signed_up_at": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The date the end user signed up for Sunshine Conversations",
                      "examples": [
                        "2023-12-08T19:06:04.890000"
                      ],
                      "readOnly": true
                    },
                    "sunshine_user_id": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The Sunshine Conversations user ID for the end user",
                      "examples": [
                        "5f7e0e2c1e7c7e000f0f9c3a"
                      ],
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "created_at": {
              "type": [
                "string"
              ],
              "readOnly": true,
              "description": "The date and time the end user was created",
              "examples": [
                "2023-12-08T19:06:04.890000"
              ]
            },
            "updated_at": {
              "type": [
                "string"
              ],
              "readOnly": true,
              "description": "The date and time the end user was updated",
              "examples": [
                "2023-12-08T19:06:04.890000"
              ]
            }
          },
          "examples": [
            {
              "end_user_id": "5f7e0e2c1e7c7e000f0f9c3a",
              "profile": {
                "first_name": "Ada",
                "last_name": "Lovelace",
                "email": "ada.lovelace@ada.cx",
                "language": "en-US",
                "metadata": {
                  "example_key1": "example_string_value",
                  "example_key2": true,
                  "example_key3": 123
                },
                "system_properties": {
                  "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36",
                  "device": "macos",
                  "browser": "Chrome",
                  "browser_version": "119.0.0.0",
                  "introshown": false,
                  "last_answer_id": "650071321ef45533437f6f29",
                  "last_question_asked": "What is my account balance?",
                  "sunshine_first_message_id": "65736922f17d0bf841d8eeb4",
                  "sunshine_conversation_id": "12345abc",
                  "sunshine_end_user_channel": "whatsapp",
                  "sunshine_signed_up_at": "2023-12-08T19:06:04.890000",
                  "sunshine_user_id": "5f7e0e2c1e7c7e000f0f9c3a"
                }
              },
              "created_at": "2023-12-08T19:06:04.890000",
              "updated_at": "2023-12-08T19:06:04.890000"
            }
          ]
        },
        "EndUserRequest": {
          "type": [
            "object"
          ],
          "required": [
            "profile"
          ],
          "properties": {
            "profile": {
              "description": "The end user's profile information",
              "type": [
                "object"
              ],
              "properties": {
                "first_name": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The end user's first name",
                  "examples": [
                    "Ada"
                  ]
                },
                "last_name": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The end user's last name",
                  "examples": [
                    "Lovelace"
                  ]
                },
                "email": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The end user's email address",
                  "examples": [
                    "ada.lovelace@ada.cx"
                  ]
                },
                "language": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The end user's language in BCP 47 format",
                  "examples": [
                    "en-US"
                  ]
                },
                "metadata": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "description": "A dictionary of arbitrary key, value pairs assigned to the end user                      - `metadata` keys may only be of type: `string`                      - `metadata` values may only be one of type: `string`, `boolean`, or `integer`                     ",
                  "examples": [
                    {
                      "example_key1": "example_string_value",
                      "example_key2": true,
                      "example_key3": 123
                    }
                  ],
                  "additionalProperties": {}
                }
              }
            }
          },
          "examples": [
            {
              "profile": {
                "first_name": "Ada",
                "last_name": "Lovelace",
                "email": "ada.lovelace@ada.cx",
                "language": "en-US",
                "metadata": {
                  "example_key1": "example_string_value",
                  "example_key2": true,
                  "example_key3": 123
                }
              }
            }
          ]
        },
        "Error": {
          "type": [
            "object"
          ],
          "properties": {
            "msg": {
              "type": [
                "string"
              ],
              "description": "The error message",
              "examples": [
                "resource_not_found"
              ]
            },
            "details": {
              "type": [
                "string"
              ],
              "description": "Extra information about the error",
              "examples": [
                "The requested resource with ID <id> was not found"
              ]
            }
          },
          "examples": [
            {
              "msg": "resource_not_found",
              "details": "The requested resource with ID 123456abcdef was not found"
            }
          ],
          "required": [
            "details",
            "msg"
          ]
        },
        "Errors": {
          "type": [
            "object"
          ],
          "properties": {
            "errors": {
              "type": [
                "array"
              ],
              "description": "A list of errors",
              "items": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "required": [
            "errors"
          ]
        },
        "EndUsers": {
          "type": [
            "object"
          ],
          "properties": {
            "end_users": {
              "type": [
                "array"
              ],
              "description": "List of end user profiles",
              "items": {
                "$ref": "#/components/schemas/EndUser"
              }
            },
            "meta": {
              "description": "Metadata returned with the results including but not limited to a link to the next page of data",
              "type": [
                "object"
              ],
              "properties": {
                "next_page_url": {
                  "type": [
                    "string"
                  ],
                  "format": "url",
                  "description": "Link to the next page of data using a cursor value",
                  "examples": [
                    "https://example.ada.support/api/end-users/v1?cursor=65a17e3f43bec88e2792d0eb"
                  ]
                }
              }
            }
          }
        },
        "EndUserCreatedWebhookPayload": {
          "properties": {
            "type": {
              "type": [
                "string"
              ],
              "readOnly": false,
              "description": "The webhook event type description",
              "examples": [
                "v1.end_user.created"
              ]
            },
            "timestamp": {
              "type": [
                "string"
              ],
              "readOnly": false,
              "description": "The timestamp for when the event was generated. Uses millisecond precision to help with event ordering needs.",
              "examples": [
                "2024-01-17T22:23:35.835"
              ]
            },
            "data": {
              "type": [
                "object"
              ],
              "description": "The webhook event data",
              "allOf": [
                {
                  "$ref": "#/components/schemas/EndUser"
                },
                {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "end_user_id": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique Ada-generated ID for the end user",
                      "examples": [
                        "5f7e0e2c1e7c7e000f0f9c3a"
                      ],
                      "readOnly": false
                    },
                    "created_at": {
                      "type": [
                        "string"
                      ],
                      "description": "The date and time the end user was created",
                      "examples": [
                        "2023-12-08T19:06:02.000000"
                      ],
                      "readOnly": false
                    },
                    "updated_at": {
                      "type": [
                        "string"
                      ],
                      "description": "The date and time the end user was updated",
                      "examples": [
                        "2023-12-08T19:06:04.890000"
                      ],
                      "readOnly": false
                    }
                  }
                }
              ]
            }
          },
          "examples": [
            {
              "type": "v1.end_user.created",
              "timestamp": "2024-01-17T22:23:35.835",
              "data": {
                "end_user_id": "5f7e0e2c1e7c7e000f0f9c3a",
                "profile": {
                  "first_name": "Ada",
                  "last_name": "Lovelace",
                  "email": "ada.lovelace@ada.cx",
                  "language": "en-US",
                  "metadata": {
                    "example_key1": "example_string_value",
                    "example_key2": true,
                    "example_key3": 123
                  },
                  "system_properties": {
                    "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36",
                    "device": "macos",
                    "browser": "Chrome",
                    "browser_version": "119.0.0.0",
                    "introshown": false,
                    "last_answer_id": "650071321ef45533437f6f29",
                    "last_question_asked": "What is my account balance?",
                    "sunshine_first_message_id": "65736922f17d0bf841d8eeb4",
                    "sunshine_conversation_id": "12345abc",
                    "sunshine_end_user_channel": "whatsapp",
                    "sunshine_signed_up_at": "2023-12-08T19:06:04.890000",
                    "sunshine_user_id": "5f7e0e2c1e7c7e000f0f9c3a"
                  }
                },
                "created_at": "2023-12-08T19:06:04.890000",
                "updated_at": "2023-12-08T19:06:04.890000"
              }
            }
          ]
        },
        "EndUserUpdatedWebhookPayload": {
          "properties": {
            "type": {
              "type": [
                "string"
              ],
              "readOnly": false,
              "description": "The webhook event type description",
              "examples": [
                "v1.end_user.updated"
              ]
            },
            "timestamp": {
              "type": [
                "string"
              ],
              "readOnly": false,
              "description": "The timestamp for when the event was generated. Uses millisecond precision to help with event ordering needs.",
              "examples": [
                "2024-01-17T22:23:35.835"
              ]
            },
            "data": {
              "type": [
                "object"
              ],
              "description": "The webhook event data",
              "allOf": [
                {
                  "$ref": "#/components/schemas/EndUser"
                },
                {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "end_user_id": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique Ada-generated ID for the end user",
                      "examples": [
                        "5f7e0e2c1e7c7e000f0f9c3a"
                      ],
                      "readOnly": false
                    },
                    "created_at": {
                      "type": [
                        "string"
                      ],
                      "description": "The date and time the end user was created",
                      "examples": [
                        "2023-12-08T19:06:02.000000"
                      ],
                      "readOnly": false
                    },
                    "updated_at": {
                      "type": [
                        "string"
                      ],
                      "description": "The date and time the end user was updated",
                      "examples": [
                        "2023-12-08T19:06:04.890000"
                      ],
                      "readOnly": false
                    }
                  }
                }
              ]
            }
          },
          "examples": [
            {
              "type": "v1.end_user.updated",
              "timestamp": "2024-01-17T22:23:35.835",
              "data": {
                "end_user_id": "5f7e0e2c1e7c7e000f0f9c3a",
                "profile": {
                  "first_name": "Ada",
                  "last_name": "Lovelace",
                  "email": "ada.lovelace@ada.cx",
                  "language": "en-US",
                  "metadata": {
                    "example_key1": "example_string_value",
                    "example_key2": true,
                    "example_key3": 123
                  },
                  "system_properties": {
                    "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36",
                    "device": "macos",
                    "browser": "Chrome",
                    "browser_version": "119.0.0.0",
                    "introshown": false,
                    "last_answer_id": "650071321ef45533437f6f29",
                    "last_question_asked": "What is my account balance?",
                    "sunshine_first_message_id": "65736922f17d0bf841d8eeb4",
                    "sunshine_conversation_id": "12345abc",
                    "sunshine_end_user_channel": "whatsapp",
                    "sunshine_signed_up_at": "2023-12-08T19:06:04.890000",
                    "sunshine_user_id": "5f7e0e2c1e7c7e000f0f9c3a"
                  }
                },
                "created_at": "2023-12-08T19:06:04.890000",
                "updated_at": "2023-12-08T19:06:04.890000"
              }
            }
          ]
        }
      },
      "examples": {
        "BadRequestError": {
          "value": {
            "errors": [
              {
                "msg": "bad_request",
                "details": "{'profile': {'system_properties': ['Unknown field.']}}"
              }
            ]
          }
        },
        "NotFoundError": {
          "value": {
            "errors": [
              {
                "msg": "resource_not_found",
                "details": "The requested resource with ID 5f7e0e2c1e7c7e000f0f9c3a was not found"
              }
            ]
          }
        },
        "UnauthorizedError": {
          "value": {
            "errors": [
              {
                "msg": "unauthorized",
                "details": "You are not authorized to access this resource"
              }
            ]
          }
        },
        "ContentTooLargeError": {
          "value": {
            "errors": [
              {
                "msg": "content_too_large",
                "details": "Maximum request size of 4.0 MB exceeded. Content length: 5.0 MB."
              }
            ]
          }
        },
        "TooManyRequestsError": {
          "value": {
            "errors": [
              {
                "msg": "rate_limit_exceeded",
                "details": "50 requests allowed per second"
              }
            ]
          }
        },
        "InternalServerError": {
          "value": {
            "errors": [
              {
                "msg": "internal_server_error",
                "details": "An unknown error occurred. error_id: 91d435a7-e0b4-4c56-a097-8907e9ed851e"
              }
            ]
          }
        }
      },
      "securitySchemes": {
        "BearerAuth": {
          "type": "http",
          "scheme": "bearer"
        }
      }
    },
    "webhooks": {
      "v1.end_user.created": {
        "post": {
          "summary": "End user created webhook",
          "description": "A webhook sent when a new end user is created",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndUserCreatedWebhookPayload"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Return a 200 status to indicate that the data was received successfully"
            }
          },
          "tags": [
            "Webhooks"
          ]
        }
      },
      "v1.end_user.updated": {
        "post": {
          "summary": "End user updated webhook",
          "description": "A webhook sent when an end user is updated",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndUserUpdatedWebhookPayload"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Return a 200 status to indicate that the data was received successfully"
            }
          },
          "tags": [
            "Webhooks"
          ]
        }
      }
    },
    "servers": [
      {
        "url": "https://{handle}.ada.support/api",
        "variables": {
          "handle": {
            "default": "example"
          }
        },
        "description": "The subdomain of the client"
      }
    ]
  }
}