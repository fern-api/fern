{
  "title": "Intercom API",
  "description": "The intercom API reference.",
  "servers": [
    {
      "url": "https://api.intercom.io",
      "description": "The production API server"
    },
    {
      "url": "https://api.eu.intercom.io",
      "description": "The european API server"
    },
    {
      "url": "https://api.au.intercom.io",
      "description": "The australian API server"
    }
  ],
  "tags": {
    "tagsById": {
      "Admins": {
        "id": "Admins",
        "description": "Everything about your Admins"
      },
      "Articles": {
        "id": "Articles",
        "description": "Everything about your Articles"
      },
      "Companies": {
        "id": "Companies",
        "description": "Everything about your Companies"
      },
      "Contacts": {
        "id": "Contacts",
        "description": "Everything about your contacts"
      },
      "Conversations": {
        "id": "Conversations",
        "description": "Everything about your Conversations"
      },
      "Data Attributes": {
        "id": "Data Attributes",
        "description": "Everything about your Data Attributes"
      },
      "Data Events": {
        "id": "Data Events",
        "description": "Everything about your Data Events"
      },
      "Data Export": {
        "id": "Data Export",
        "description": "Everything about your Data Exports"
      },
      "Help Center": {
        "id": "Help Center",
        "description": "Everything about your Help Center"
      },
      "Messages": {
        "id": "Messages",
        "description": "Everything about your messages"
      },
      "News": {
        "id": "News",
        "description": "Everything about your News"
      },
      "Notes": {
        "id": "Notes",
        "description": "Everything about your Notes"
      },
      "Segments": {
        "id": "Segments",
        "description": "Everything about your Segments"
      },
      "Subscription Types": {
        "id": "Subscription Types",
        "description": "Everything about subscription types"
      },
      "Switch": {
        "id": "Switch",
        "description": "Everything about Switch"
      },
      "Tags": {
        "id": "Tags",
        "description": "Everything about tags"
      },
      "Teams": {
        "id": "Teams",
        "description": "Everything about your Teams"
      },
      "Ticket Type Attributes": {
        "id": "Ticket Type Attributes",
        "description": "Everything about your ticket type attributes"
      },
      "Ticket Types": {
        "id": "Ticket Types",
        "description": "Everything about your ticket types"
      },
      "Tickets": {
        "id": "Tickets",
        "description": "Everything about your tickets"
      },
      "Visitors": {
        "id": "Visitors",
        "description": "Everything about your Visitors"
      }
    },
    "orderedTagIds": [
      "Admins",
      "Articles",
      "Companies",
      "Contacts",
      "Conversations",
      "Data Attributes",
      "Data Events",
      "Data Export",
      "Help Center",
      "Messages",
      "News",
      "Notes",
      "Segments",
      "Subscription Types",
      "Switch",
      "Tags",
      "Teams",
      "Ticket Type Attributes",
      "Ticket Types",
      "Tickets",
      "Visitors"
    ]
  },
  "hasEndpointsMarkedInternal": false,
  "endpoints": [
    {
      "summary": "Create or Update a company",
      "audiences": [],
      "operationId": "createOrUpdateCompany",
      "tags": [
        "Companies"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [
        {
          "name": "Intercom-Version",
          "schema": {
            "generatedName": "CreateOrUpdateCompanyRequestIntercomVersion",
            "value": {
              "generatedName": "CreateOrUpdateCompanyRequestIntercomVersion",
              "schema": "intercom_version",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "CreateOrUpdateCompanyRequest",
      "request": {
        "schema": {
          "generatedName": "CreateOrUpdateCompanyRequestBody",
          "schema": "create_or_update_company_request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [
          {
            "name": "Successful",
            "value": {
              "company_id": "company_remote_id",
              "name": "my company",
              "remote_created_at": 1374138000
            }
          },
          {
            "name": "Bad Request",
            "value": {
              "test": "invalid"
            }
          }
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful",
        "schema": {
          "generatedName": "CreateOrUpdateCompanyResponse",
          "schema": "company",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [
          {
            "name": "Successful",
            "value": {
              "type": "company",
              "company_id": "company_remote_id",
              "id": "667d607c8a68186f43bafd1e",
              "app_id": "this_is_an_id116_that_should_be_at_least_",
              "name": "my company",
              "remote_created_at": 1374138000,
              "created_at": 1719492732,
              "updated_at": 1719492732,
              "monthly_spend": 0,
              "session_count": 0,
              "user_count": 0,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "segments": {
                "type": "segment.list",
                "segments": []
              },
              "plan": {},
              "custom_attributes": {
                "creation_source": "api"
              }
            }
          }
        ],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "name": "Bad Request",
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "type",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "error.list",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "errors",
                      "type": "string"
                    },
                    "value": {
                      "value": [
                        {
                          "value": [
                            {
                              "key": {
                                "value": "code",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "bad_request",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            {
                              "key": {
                                "value": "message",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "bad 'test' parameter",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      ],
                      "type": "array"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Unauthorized",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "name": "Unauthorized",
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "type",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "error.list",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "9b0d6fb9-d2d7-4904-a13c-97557a802323",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "errors",
                      "type": "string"
                    },
                    "value": {
                      "value": [
                        {
                          "value": [
                            {
                              "key": {
                                "value": "code",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "unauthorized",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            {
                              "key": {
                                "value": "message",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "Access Token Invalid",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      ],
                      "type": "array"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "You can create or update a company.\n\nCompanies will be only visible in Intercom when there is at least one associated user.\n\nCompanies are looked up via `company_id` in a `POST` request, if not found via `company_id`, the new company will be created, if found, that company will be updated.\n\n{% admonition type=\"attention\" name=\"Using `company_id`\" %}\n  You can set a unique `company_id` value when creating a company. However, it is not possible to update `company_id`. Be sure to set a unique value once upon creation of the company.\n{% /admonition %}\n",
      "authed": true,
      "method": "POST",
      "path": "/companies",
      "examples": [
        {
          "name": "Successful",
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "name": {
                "value": {
                  "value": "my company",
                  "type": "string"
                },
                "type": "primitive"
              },
              "company_id": {
                "value": {
                  "value": "company_remote_id",
                  "type": "string"
                },
                "type": "primitive"
              },
              "remote_created_at": {
                "value": {
                  "value": 1374138000,
                  "type": "int"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "type": {
                  "value": {
                    "value": "company",
                    "type": "string"
                  },
                  "type": "literal"
                },
                "id": {
                  "value": {
                    "value": "667d607c8a68186f43bafd1e",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "my company",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "app_id": {
                  "value": {
                    "value": "this_is_an_id116_that_should_be_at_least_",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "plan": {
                  "properties": {
                    "type": {
                      "value": {
                        "value": "plan",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "269315",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "name": {
                      "value": {
                        "value": "Pro",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "company_id": {
                  "value": {
                    "value": "company_remote_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "remote_created_at": {
                  "value": {
                    "value": 1374138000,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": 1719492732,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": 1719492732,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "last_request_at": {
                  "value": {
                    "value": 1663597223,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "size": {
                  "value": {
                    "value": 100,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "website": {
                  "value": {
                    "value": "https://www.intercom.com",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "industry": {
                  "value": {
                    "value": "Software",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "monthly_spend": {
                  "value": {
                    "value": 0,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "session_count": {
                  "value": {
                    "value": 0,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "user_count": {
                  "value": {
                    "value": 0,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "custom_attributes": {
                  "value": [
                    {
                      "key": {
                        "value": "creation_source",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "api",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "tags": {
                  "properties": {
                    "type": {
                      "value": {
                        "value": "tag.list",
                        "type": "string"
                      },
                      "type": "literal"
                    },
                    "tags": {
                      "value": [
                        {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "segments": {
                  "properties": {
                    "type": {
                      "value": {
                        "value": "segment.list",
                        "type": "string"
                      },
                      "type": "literal"
                    },
                    "segments": {
                      "value": [
                        {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "56203d253cba154d39010062",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "name": {
                              "value": {
                                "value": "Active",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "created_at": {
                              "value": {
                                "value": 1394621988,
                                "type": "int"
                              },
                              "type": "primitive"
                            },
                            "updated_at": {
                              "value": {
                                "value": 1394622004,
                                "type": "int"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    }
  ],
  "webhooks": [],
  "channel": [],
  "groupedSchemas": {
    "rootSchemas": {
      "activity_log": {
        "generatedName": "ActivityLog",
        "title": "Activity Log",
        "description": "Activities performed by Admins.",
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "activityLogId",
              "key": "id",
              "schema": {
                "generatedName": "activityLogId",
                "title": "Activity Log",
                "value": {
                  "description": "The id representing the activity.",
                  "schema": {
                    "example": "6",
                    "type": "string"
                  },
                  "generatedName": "ActivityLogId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "activityLogPerformedBy",
              "key": "performed_by",
              "schema": {
                "generatedName": "activityLogPerformedBy",
                "title": "Activity Log",
                "value": {
                  "allOf": [],
                  "properties": [
                    {
                      "conflict": {},
                      "generatedName": "activityLogPerformedByType",
                      "key": "type",
                      "schema": {
                        "generatedName": "activityLogPerformedByType",
                        "value": {
                          "description": "String representing the object's type. Always has the value `admin`.",
                          "schema": {
                            "example": "admin",
                            "type": "string"
                          },
                          "generatedName": "ActivityLogPerformedByType",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "activityLogPerformedById",
                      "key": "id",
                      "schema": {
                        "generatedName": "activityLogPerformedById",
                        "value": {
                          "description": "The id representing the admin.",
                          "schema": {
                            "example": "1295",
                            "type": "string"
                          },
                          "generatedName": "ActivityLogPerformedById",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "activityLogPerformedByEmail",
                      "key": "email",
                      "schema": {
                        "generatedName": "activityLogPerformedByEmail",
                        "value": {
                          "description": "The email of the admin.",
                          "schema": {
                            "example": "john@example.com",
                            "type": "string"
                          },
                          "generatedName": "ActivityLogPerformedByEmail",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "activityLogPerformedByIp",
                      "key": "ip",
                      "schema": {
                        "generatedName": "activityLogPerformedByIp",
                        "value": {
                          "description": "The IP address of the admin.",
                          "schema": {
                            "example": "198.51.100.255",
                            "type": "string"
                          },
                          "generatedName": "ActivityLogPerformedByIp",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    }
                  ],
                  "allOfPropertyConflicts": [],
                  "description": "Details about the Admin involved in the activity.",
                  "generatedName": "ActivityLogPerformedBy",
                  "groupName": [],
                  "additionalProperties": false,
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "object"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "activityLogMetadata",
              "key": "metadata",
              "schema": {
                "generatedName": "activityLogMetadata",
                "title": "Activity Log",
                "value": {
                  "generatedName": "ActivityLogMetadata",
                  "schema": "activity_log_metadata",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "activityLogCreatedAt",
              "key": "created_at",
              "schema": {
                "generatedName": "activityLogCreatedAt",
                "title": "Activity Log",
                "value": {
                  "description": "The time the activity was created.",
                  "schema": {
                    "example": 1671028894,
                    "type": "int"
                  },
                  "generatedName": "ActivityLogCreatedAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "activityLogActivityType",
              "key": "activity_type",
              "schema": {
                "generatedName": "activityLogActivityType",
                "title": "Activity Log",
                "value": {
                  "generatedName": "ActivityLogActivityType",
                  "values": [
                    {
                      "generatedName": "admin_assignment_limit_change",
                      "value": "admin_assignment_limit_change",
                      "casing": {}
                    },
                    {
                      "generatedName": "admin_away_mode_change",
                      "value": "admin_away_mode_change",
                      "casing": {}
                    },
                    {
                      "generatedName": "admin_deletion",
                      "value": "admin_deletion",
                      "casing": {}
                    },
                    {
                      "generatedName": "admin_deprovisioned",
                      "value": "admin_deprovisioned",
                      "casing": {}
                    },
                    {
                      "generatedName": "admin_impersonation_end",
                      "value": "admin_impersonation_end",
                      "casing": {}
                    },
                    {
                      "generatedName": "admin_impersonation_start",
                      "value": "admin_impersonation_start",
                      "casing": {}
                    },
                    {
                      "generatedName": "admin_invite_change",
                      "value": "admin_invite_change",
                      "casing": {}
                    },
                    {
                      "generatedName": "admin_invite_creation",
                      "value": "admin_invite_creation",
                      "casing": {}
                    },
                    {
                      "generatedName": "admin_invite_deletion",
                      "value": "admin_invite_deletion",
                      "casing": {}
                    },
                    {
                      "generatedName": "admin_login_failure",
                      "value": "admin_login_failure",
                      "casing": {}
                    },
                    {
                      "generatedName": "admin_login_success",
                      "value": "admin_login_success",
                      "casing": {}
                    },
                    {
                      "generatedName": "admin_logout",
                      "value": "admin_logout",
                      "casing": {}
                    },
                    {
                      "generatedName": "admin_password_reset_request",
                      "value": "admin_password_reset_request",
                      "casing": {}
                    },
                    {
                      "generatedName": "admin_password_reset_success",
                      "value": "admin_password_reset_success",
                      "casing": {}
                    },
                    {
                      "generatedName": "admin_permission_change",
                      "value": "admin_permission_change",
                      "casing": {}
                    },
                    {
                      "generatedName": "admin_provisioned",
                      "value": "admin_provisioned",
                      "casing": {}
                    },
                    {
                      "generatedName": "admin_two_factor_auth_change",
                      "value": "admin_two_factor_auth_change",
                      "casing": {}
                    },
                    {
                      "generatedName": "admin_unauthorized_sign_in_method",
                      "value": "admin_unauthorized_sign_in_method",
                      "casing": {}
                    },
                    {
                      "generatedName": "app_admin_join",
                      "value": "app_admin_join",
                      "casing": {}
                    },
                    {
                      "generatedName": "app_authentication_method_change",
                      "value": "app_authentication_method_change",
                      "casing": {}
                    },
                    {
                      "generatedName": "app_data_deletion",
                      "value": "app_data_deletion",
                      "casing": {}
                    },
                    {
                      "generatedName": "app_data_export",
                      "value": "app_data_export",
                      "casing": {}
                    },
                    {
                      "generatedName": "app_google_sso_domain_change",
                      "value": "app_google_sso_domain_change",
                      "casing": {}
                    },
                    {
                      "generatedName": "app_identity_verification_change",
                      "value": "app_identity_verification_change",
                      "casing": {}
                    },
                    {
                      "generatedName": "app_name_change",
                      "value": "app_name_change",
                      "casing": {}
                    },
                    {
                      "generatedName": "app_outbound_address_change",
                      "value": "app_outbound_address_change",
                      "casing": {}
                    },
                    {
                      "generatedName": "app_package_installation",
                      "value": "app_package_installation",
                      "casing": {}
                    },
                    {
                      "generatedName": "app_package_token_regeneration",
                      "value": "app_package_token_regeneration",
                      "casing": {}
                    },
                    {
                      "generatedName": "app_package_uninstallation",
                      "value": "app_package_uninstallation",
                      "casing": {}
                    },
                    {
                      "generatedName": "app_team_creation",
                      "value": "app_team_creation",
                      "casing": {}
                    },
                    {
                      "generatedName": "app_team_deletion",
                      "value": "app_team_deletion",
                      "casing": {}
                    },
                    {
                      "generatedName": "app_team_membership_modification",
                      "value": "app_team_membership_modification",
                      "casing": {}
                    },
                    {
                      "generatedName": "app_timezone_change",
                      "value": "app_timezone_change",
                      "casing": {}
                    },
                    {
                      "generatedName": "app_webhook_creation",
                      "value": "app_webhook_creation",
                      "casing": {}
                    },
                    {
                      "generatedName": "app_webhook_deletion",
                      "value": "app_webhook_deletion",
                      "casing": {}
                    },
                    {
                      "generatedName": "articles_in_messenger_enabled_change",
                      "value": "articles_in_messenger_enabled_change",
                      "casing": {}
                    },
                    {
                      "generatedName": "bulk_delete",
                      "value": "bulk_delete",
                      "casing": {}
                    },
                    {
                      "generatedName": "bulk_export",
                      "value": "bulk_export",
                      "casing": {}
                    },
                    {
                      "generatedName": "campaign_deletion",
                      "value": "campaign_deletion",
                      "casing": {}
                    },
                    {
                      "generatedName": "campaign_state_change",
                      "value": "campaign_state_change",
                      "casing": {}
                    },
                    {
                      "generatedName": "conversation_part_deletion",
                      "value": "conversation_part_deletion",
                      "casing": {}
                    },
                    {
                      "generatedName": "conversation_topic_change",
                      "value": "conversation_topic_change",
                      "casing": {}
                    },
                    {
                      "generatedName": "conversation_topic_creation",
                      "value": "conversation_topic_creation",
                      "casing": {}
                    },
                    {
                      "generatedName": "conversation_topic_deletion",
                      "value": "conversation_topic_deletion",
                      "casing": {}
                    },
                    {
                      "generatedName": "help_center_settings_change",
                      "value": "help_center_settings_change",
                      "casing": {}
                    },
                    {
                      "generatedName": "inbound_conversations_change",
                      "value": "inbound_conversations_change",
                      "casing": {}
                    },
                    {
                      "generatedName": "inbox_access_change",
                      "value": "inbox_access_change",
                      "casing": {}
                    },
                    {
                      "generatedName": "message_deletion",
                      "value": "message_deletion",
                      "casing": {}
                    },
                    {
                      "generatedName": "message_state_change",
                      "value": "message_state_change",
                      "casing": {}
                    },
                    {
                      "generatedName": "messenger_look_and_feel_change",
                      "value": "messenger_look_and_feel_change",
                      "casing": {}
                    },
                    {
                      "generatedName": "messenger_search_required_change",
                      "value": "messenger_search_required_change",
                      "casing": {}
                    },
                    {
                      "generatedName": "messenger_spaces_change",
                      "value": "messenger_spaces_change",
                      "casing": {}
                    },
                    {
                      "generatedName": "office_hours_change",
                      "value": "office_hours_change",
                      "casing": {}
                    },
                    {
                      "generatedName": "role_change",
                      "value": "role_change",
                      "casing": {}
                    },
                    {
                      "generatedName": "role_creation",
                      "value": "role_creation",
                      "casing": {}
                    },
                    {
                      "generatedName": "role_deletion",
                      "value": "role_deletion",
                      "casing": {}
                    },
                    {
                      "generatedName": "ruleset_activation_title_preview",
                      "value": "ruleset_activation_title_preview",
                      "casing": {}
                    },
                    {
                      "generatedName": "ruleset_creation",
                      "value": "ruleset_creation",
                      "casing": {}
                    },
                    {
                      "generatedName": "ruleset_deletion",
                      "value": "ruleset_deletion",
                      "casing": {}
                    },
                    {
                      "generatedName": "search_browse_enabled_change",
                      "value": "search_browse_enabled_change",
                      "casing": {}
                    },
                    {
                      "generatedName": "search_browse_required_change",
                      "value": "search_browse_required_change",
                      "casing": {}
                    },
                    {
                      "generatedName": "seat_change",
                      "value": "seat_change",
                      "casing": {}
                    },
                    {
                      "generatedName": "seat_revoke",
                      "value": "seat_revoke",
                      "casing": {}
                    },
                    {
                      "generatedName": "security_settings_change",
                      "value": "security_settings_change",
                      "casing": {}
                    },
                    {
                      "generatedName": "temporary_expectation_change",
                      "value": "temporary_expectation_change",
                      "casing": {}
                    },
                    {
                      "generatedName": "upfront_email_collection_change",
                      "value": "upfront_email_collection_change",
                      "casing": {}
                    },
                    {
                      "generatedName": "welcome_message_change",
                      "value": "welcome_message_change",
                      "casing": {}
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "enum"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "activityLogActivityDescription",
              "key": "activity_description",
              "schema": {
                "generatedName": "activityLogActivityDescription",
                "title": "Activity Log",
                "value": {
                  "description": "A sentence or two describing the activity.",
                  "schema": {
                    "example": "Admin updated the app's name to \"My App\".",
                    "type": "string"
                  },
                  "generatedName": "ActivityLogActivityDescription",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "Activities performed by Admins.",
          "generatedName": "ActivityLog",
          "title": "Activity Log",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "groupName": [],
        "type": "nullable"
      },
      "activity_log_list": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "activityLogListType",
            "key": "type",
            "schema": {
              "generatedName": "activityLogListType",
              "title": "Paginated Response",
              "value": {
                "description": "String representing the object's type. Always has the value `activity_log.list`.",
                "schema": {
                  "example": "activity_log.list",
                  "type": "string"
                },
                "generatedName": "ActivityLogListType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "activityLogListPages",
            "key": "pages",
            "schema": {
              "generatedName": "activityLogListPages",
              "title": "Paginated Response",
              "value": {
                "generatedName": "ActivityLogListPages",
                "schema": "cursor_pages",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "activityLogListActivityLogs",
            "key": "activity_logs",
            "schema": {
              "generatedName": "activityLogListActivityLogs",
              "title": "Paginated Response",
              "value": {
                "description": "An array of activity logs",
                "value": {
                  "generatedName": "ActivityLogListActivityLogsItem",
                  "schema": "activity_log",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ActivityLogListActivityLogs",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A paginated list of activity logs.",
        "generatedName": "ActivityLogList",
        "title": "Paginated Response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "activity_log_metadata": {
        "generatedName": "ActivityLogMetadata",
        "title": "Activity Log Metadata",
        "description": "Additional data provided about Admin activity.",
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "activityLogMetadataSignInMethod",
              "key": "sign_in_method",
              "schema": {
                "generatedName": "activityLogMetadataSignInMethod",
                "title": "Activity Log Metadata",
                "value": {
                  "generatedName": "ActivityLogMetadataSignInMethod",
                  "description": "The way the admin signed in.",
                  "value": {
                    "description": "The way the admin signed in.",
                    "schema": {
                      "example": "email_password",
                      "type": "string"
                    },
                    "generatedName": "ActivityLogMetadataSignInMethod",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "activityLogMetadataExternalId",
              "key": "external_id",
              "schema": {
                "generatedName": "activityLogMetadataExternalId",
                "title": "Activity Log Metadata",
                "value": {
                  "generatedName": "ActivityLogMetadataExternalId",
                  "description": "The unique identifier for the contact which is provided by the Client.",
                  "value": {
                    "description": "The unique identifier for the contact which is provided by the Client.",
                    "schema": {
                      "example": "f3b87a2e09d514c6c2e79b9a",
                      "type": "string"
                    },
                    "generatedName": "ActivityLogMetadataExternalId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "activityLogMetadataAwayMode",
              "key": "away_mode",
              "schema": {
                "generatedName": "activityLogMetadataAwayMode",
                "title": "Activity Log Metadata",
                "value": {
                  "generatedName": "ActivityLogMetadataAwayMode",
                  "description": "The away mode status which is set to true when away and false when returned.",
                  "value": {
                    "description": "The away mode status which is set to true when away and false when returned.",
                    "schema": {
                      "example": true,
                      "type": "boolean"
                    },
                    "generatedName": "ActivityLogMetadataAwayMode",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "activityLogMetadataAwayStatusReason",
              "key": "away_status_reason",
              "schema": {
                "generatedName": "activityLogMetadataAwayStatusReason",
                "title": "Activity Log Metadata",
                "value": {
                  "generatedName": "ActivityLogMetadataAwayStatusReason",
                  "description": "The reason the Admin is away.",
                  "value": {
                    "description": "The reason the Admin is away.",
                    "schema": {
                      "example": "😌 On a break",
                      "type": "string"
                    },
                    "generatedName": "ActivityLogMetadataAwayStatusReason",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "activityLogMetadataReassignConversations",
              "key": "reassign_conversations",
              "schema": {
                "generatedName": "activityLogMetadataReassignConversations",
                "title": "Activity Log Metadata",
                "value": {
                  "generatedName": "ActivityLogMetadataReassignConversations",
                  "description": "Indicates if conversations should be reassigned while an Admin is away.",
                  "value": {
                    "description": "Indicates if conversations should be reassigned while an Admin is away.",
                    "schema": {
                      "example": false,
                      "type": "boolean"
                    },
                    "generatedName": "ActivityLogMetadataReassignConversations",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "activityLogMetadataSource",
              "key": "source",
              "schema": {
                "generatedName": "activityLogMetadataSource",
                "title": "Activity Log Metadata",
                "value": {
                  "generatedName": "ActivityLogMetadataSource",
                  "description": "The action that initiated the status change.",
                  "value": {
                    "description": "The action that initiated the status change.",
                    "schema": {
                      "example": "admin update from web - Admin id: 93",
                      "type": "string"
                    },
                    "generatedName": "ActivityLogMetadataSource",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "activityLogMetadataAutoChanged",
              "key": "auto_changed",
              "schema": {
                "generatedName": "activityLogMetadataAutoChanged",
                "title": "Activity Log Metadata",
                "value": {
                  "generatedName": "ActivityLogMetadataAutoChanged",
                  "description": "Indicates if the status was changed automatically or manually.",
                  "value": {
                    "description": "Indicates if the status was changed automatically or manually.",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ActivityLogMetadataAutoChanged",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "activityLogMetadataUpdateBy",
              "key": "update_by",
              "schema": {
                "generatedName": "activityLogMetadataUpdateBy",
                "title": "Activity Log Metadata",
                "value": {
                  "generatedName": "ActivityLogMetadataUpdateBy",
                  "description": "The ID of the Admin who initiated the activity.",
                  "value": {
                    "description": "The ID of the Admin who initiated the activity.",
                    "schema": {
                      "example": 93,
                      "type": "int"
                    },
                    "generatedName": "ActivityLogMetadataUpdateBy",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "activityLogMetadataUpdateByName",
              "key": "update_by_name",
              "schema": {
                "generatedName": "activityLogMetadataUpdateByName",
                "title": "Activity Log Metadata",
                "value": {
                  "generatedName": "ActivityLogMetadataUpdateByName",
                  "description": "The name of the Admin who initiated the activity.",
                  "value": {
                    "description": "The name of the Admin who initiated the activity.",
                    "schema": {
                      "example": "Joe Bloggs",
                      "type": "string"
                    },
                    "generatedName": "ActivityLogMetadataUpdateByName",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "Additional data provided about Admin activity.",
          "generatedName": "ActivityLogMetadata",
          "title": "Activity Log Metadata",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "groupName": [],
        "type": "nullable"
      },
      "addressable_list": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "addressableListType",
            "key": "type",
            "schema": {
              "generatedName": "addressableListType",
              "title": "Addressable List",
              "value": {
                "description": "The addressable object type",
                "schema": {
                  "format": "uri",
                  "example": "note",
                  "type": "string"
                },
                "generatedName": "AddressableListType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "addressableListId",
            "key": "id",
            "schema": {
              "generatedName": "addressableListId",
              "title": "Addressable List",
              "value": {
                "description": "The id of the addressable object",
                "schema": {
                  "example": "123",
                  "type": "string"
                },
                "generatedName": "AddressableListId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "addressableListUrl",
            "key": "url",
            "schema": {
              "generatedName": "addressableListUrl",
              "title": "Addressable List",
              "value": {
                "description": "Url to get more company resources for this contact",
                "schema": {
                  "format": "uri",
                  "example": "/contacts/5ba682d23d7cf92bef87bfd4/notes",
                  "type": "string"
                },
                "generatedName": "AddressableListUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A list used to access other resources from a parent model.",
        "generatedName": "AddressableList",
        "title": "Addressable List",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "admin": {
        "generatedName": "Admin",
        "nameOverride": "Admin",
        "title": "Admin",
        "description": "Admins are teammate accounts that have access to a workspace.",
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "adminType",
              "key": "type",
              "schema": {
                "generatedName": "adminType",
                "nameOverride": "Admin",
                "title": "Admin",
                "value": {
                  "description": "String representing the object's type. Always has the value `admin`.",
                  "schema": {
                    "example": "admin",
                    "type": "string"
                  },
                  "generatedName": "AdminType",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [
                  "Admins"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "adminId",
              "key": "id",
              "schema": {
                "generatedName": "adminId",
                "nameOverride": "Admin",
                "title": "Admin",
                "value": {
                  "description": "The id representing the admin.",
                  "schema": {
                    "example": "1295",
                    "type": "string"
                  },
                  "generatedName": "AdminId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [
                  "Admins"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "adminName",
              "key": "name",
              "schema": {
                "generatedName": "adminName",
                "nameOverride": "Admin",
                "title": "Admin",
                "value": {
                  "description": "The name of the admin.",
                  "schema": {
                    "example": "Hoban Washburne",
                    "type": "string"
                  },
                  "generatedName": "AdminName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [
                  "Admins"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "adminEmail",
              "key": "email",
              "schema": {
                "generatedName": "adminEmail",
                "nameOverride": "Admin",
                "title": "Admin",
                "value": {
                  "description": "The email of the admin.",
                  "schema": {
                    "example": "wash@serenity.io",
                    "type": "string"
                  },
                  "generatedName": "AdminEmail",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [
                  "Admins"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "adminJobTitle",
              "key": "job_title",
              "schema": {
                "generatedName": "adminJobTitle",
                "nameOverride": "Admin",
                "title": "Admin",
                "value": {
                  "description": "The job title of the admin.",
                  "schema": {
                    "example": "Philosopher",
                    "type": "string"
                  },
                  "generatedName": "AdminJobTitle",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [
                  "Admins"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "adminAwayModeEnabled",
              "key": "away_mode_enabled",
              "schema": {
                "generatedName": "adminAwayModeEnabled",
                "nameOverride": "Admin",
                "title": "Admin",
                "value": {
                  "description": "Identifies if this admin is currently set in away mode.",
                  "schema": {
                    "example": false,
                    "type": "boolean"
                  },
                  "generatedName": "AdminAwayModeEnabled",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [
                  "Admins"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "adminAwayModeReassign",
              "key": "away_mode_reassign",
              "schema": {
                "generatedName": "adminAwayModeReassign",
                "nameOverride": "Admin",
                "title": "Admin",
                "value": {
                  "description": "Identifies if this admin is set to automatically reassign new conversations to the apps default inbox.",
                  "schema": {
                    "example": false,
                    "type": "boolean"
                  },
                  "generatedName": "AdminAwayModeReassign",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [
                  "Admins"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "adminHasInboxSeat",
              "key": "has_inbox_seat",
              "schema": {
                "generatedName": "adminHasInboxSeat",
                "nameOverride": "Admin",
                "title": "Admin",
                "value": {
                  "description": "Identifies if this admin has a paid inbox seat to restrict/allow features that require them.",
                  "schema": {
                    "example": true,
                    "type": "boolean"
                  },
                  "generatedName": "AdminHasInboxSeat",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [
                  "Admins"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "adminTeamIds",
              "key": "team_ids",
              "schema": {
                "generatedName": "adminTeamIds",
                "nameOverride": "Admin",
                "title": "Admin",
                "value": {
                  "description": "This object represents the avatar associated with the admin.",
                  "value": {
                    "schema": {
                      "type": "int"
                    },
                    "generatedName": "AdminTeamIdsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "AdminTeamIds",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [
                  "Admins"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "adminAvatar",
              "key": "avatar",
              "schema": {
                "generatedName": "adminAvatar",
                "nameOverride": "Admin",
                "title": "Admin",
                "value": {
                  "generatedName": "AdminAvatar",
                  "description": "Image for the associated team or teammate",
                  "value": {
                    "description": "Image for the associated team or teammate",
                    "schema": {
                      "format": "uri",
                      "example": "https://picsum.photos/200/300",
                      "type": "string"
                    },
                    "generatedName": "AdminAvatar",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [
                  "Admins"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "adminTeamPriorityLevel",
              "key": "team_priority_level",
              "schema": {
                "generatedName": "adminTeamPriorityLevel",
                "nameOverride": "Admin",
                "title": "Admin",
                "value": {
                  "generatedName": "AdminTeamPriorityLevel",
                  "schema": "team_priority_level",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [
                  "Admins"
                ],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "Admins are teammate accounts that have access to a workspace.",
          "generatedName": "Admin",
          "nameOverride": "Admin",
          "title": "Admin",
          "groupName": [
            "Admins"
          ],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "groupName": [
          "Admins"
        ],
        "type": "nullable"
      },
      "admin_list": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "adminListType",
            "key": "type",
            "schema": {
              "generatedName": "adminListType",
              "nameOverride": "Admins",
              "title": "Admins",
              "value": {
                "description": "String representing the object's type. Always has the value `admin.list`.",
                "schema": {
                  "example": "admin.list",
                  "type": "string"
                },
                "generatedName": "AdminListType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "adminListAdmins",
            "key": "admins",
            "schema": {
              "generatedName": "adminListAdmins",
              "nameOverride": "Admins",
              "title": "Admins",
              "value": {
                "description": "A list of admins associated with a given workspace.",
                "value": {
                  "generatedName": "AdminListAdminsItem",
                  "schema": "admin",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AdminListAdmins",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A list of admins associated with a given workspace.",
        "generatedName": "AdminList",
        "nameOverride": "Admins",
        "title": "Admins",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "admin_priority_level": {
        "generatedName": "AdminPriorityLevel",
        "title": "Admin Priority Level",
        "description": "Admin priority levels for the team",
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "adminPriorityLevelPrimaryAdminIds",
              "key": "primary_admin_ids",
              "schema": {
                "generatedName": "adminPriorityLevelPrimaryAdminIds",
                "title": "Admin Priority Level",
                "value": {
                  "generatedName": "AdminPriorityLevelPrimaryAdminIds",
                  "description": "The primary admin ids for the team",
                  "value": {
                    "description": "The primary admin ids for the team",
                    "value": {
                      "schema": {
                        "type": "int"
                      },
                      "generatedName": "AdminPriorityLevelPrimaryAdminIdsItem",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "generatedName": "AdminPriorityLevelPrimaryAdminIds",
                    "groupName": [],
                    "type": "array"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "adminPriorityLevelSecondaryAdminIds",
              "key": "secondary_admin_ids",
              "schema": {
                "generatedName": "adminPriorityLevelSecondaryAdminIds",
                "title": "Admin Priority Level",
                "value": {
                  "generatedName": "AdminPriorityLevelSecondaryAdminIds",
                  "description": "The secondary admin ids for the team",
                  "value": {
                    "description": "The secondary admin ids for the team",
                    "value": {
                      "schema": {
                        "type": "int"
                      },
                      "generatedName": "AdminPriorityLevelSecondaryAdminIdsItem",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "generatedName": "AdminPriorityLevelSecondaryAdminIds",
                    "groupName": [],
                    "type": "array"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "Admin priority levels for the team",
          "generatedName": "AdminPriorityLevel",
          "title": "Admin Priority Level",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "groupName": [],
        "type": "nullable"
      },
      "admin_reply_conversation_request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "adminReplyConversationRequestMessageType",
            "key": "message_type",
            "schema": {
              "generatedName": "AdminReplyConversationRequestMessageType",
              "values": [
                {
                  "generatedName": "comment",
                  "value": "comment",
                  "casing": {}
                },
                {
                  "generatedName": "note",
                  "value": "note",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "adminReplyConversationRequestType",
            "key": "type",
            "schema": {
              "value": {
                "value": "admin",
                "type": "string"
              },
              "generatedName": "AdminReplyConversationRequestType",
              "groupName": [],
              "type": "literal"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "adminReplyConversationRequestBody",
            "key": "body",
            "schema": {
              "generatedName": "adminReplyConversationRequestBody",
              "title": "Admin Reply",
              "value": {
                "description": "The text body of the reply. Notes accept some HTML formatting. Must be present for comment and note message types.",
                "schema": {
                  "example": "Hello there!",
                  "type": "string"
                },
                "generatedName": "AdminReplyConversationRequestBody",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "adminReplyConversationRequestAdminId",
            "key": "admin_id",
            "schema": {
              "description": "The id of the admin who is authoring the comment.",
              "schema": {
                "example": "3156780",
                "type": "string"
              },
              "generatedName": "AdminReplyConversationRequestAdminId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "adminReplyConversationRequestCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "adminReplyConversationRequestCreatedAt",
              "title": "Admin Reply",
              "value": {
                "description": "The time the reply was created. If not provided, the current time will be used.",
                "schema": {
                  "example": 1590000000,
                  "type": "int"
                },
                "generatedName": "AdminReplyConversationRequestCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "adminReplyConversationRequestAttachmentUrls",
            "key": "attachment_urls",
            "schema": {
              "generatedName": "adminReplyConversationRequestAttachmentUrls",
              "title": "Admin Reply",
              "value": {
                "description": "A list of image URLs that will be added as attachments. You can include up to 10 URLs.",
                "value": {
                  "schema": {
                    "format": "uri",
                    "type": "string"
                  },
                  "generatedName": "AdminReplyConversationRequestAttachmentUrlsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "AdminReplyConversationRequestAttachmentUrls",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "adminReplyConversationRequestAttachmentFiles",
            "key": "attachment_files",
            "schema": {
              "generatedName": "adminReplyConversationRequestAttachmentFiles",
              "title": "Admin Reply",
              "value": {
                "description": "A list of files that will be added as attachments. You can include up to 10 files",
                "value": {
                  "generatedName": "AdminReplyConversationRequestAttachmentFilesItem",
                  "schema": "conversation_attachment_files",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AdminReplyConversationRequestAttachmentFiles",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Payload of the request to reply on behalf of an admin",
        "generatedName": "AdminReplyConversationRequest",
        "title": "Admin Reply",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "admin_reply_ticket_request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "adminReplyTicketRequestMessageType",
            "key": "message_type",
            "schema": {
              "generatedName": "AdminReplyTicketRequestMessageType",
              "values": [
                {
                  "generatedName": "comment",
                  "value": "comment",
                  "casing": {}
                },
                {
                  "generatedName": "note",
                  "value": "note",
                  "casing": {}
                },
                {
                  "generatedName": "quick_reply",
                  "value": "quick_reply",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "adminReplyTicketRequestType",
            "key": "type",
            "schema": {
              "value": {
                "value": "admin",
                "type": "string"
              },
              "generatedName": "AdminReplyTicketRequestType",
              "groupName": [],
              "type": "literal"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "adminReplyTicketRequestBody",
            "key": "body",
            "schema": {
              "generatedName": "adminReplyTicketRequestBody",
              "title": "Admin Reply on ticket",
              "value": {
                "description": "The text body of the reply. Notes accept some HTML formatting. Must be present for comment and note message types.",
                "schema": {
                  "example": "Hello there!",
                  "type": "string"
                },
                "generatedName": "AdminReplyTicketRequestBody",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "adminReplyTicketRequestAdminId",
            "key": "admin_id",
            "schema": {
              "description": "The id of the admin who is authoring the comment.",
              "schema": {
                "example": "3156780",
                "type": "string"
              },
              "generatedName": "AdminReplyTicketRequestAdminId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "adminReplyTicketRequestCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "adminReplyTicketRequestCreatedAt",
              "title": "Admin Reply on ticket",
              "value": {
                "description": "The time the reply was created. If not provided, the current time will be used.",
                "schema": {
                  "example": 1590000000,
                  "type": "int"
                },
                "generatedName": "AdminReplyTicketRequestCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "adminReplyTicketRequestReplyOptions",
            "key": "reply_options",
            "schema": {
              "generatedName": "adminReplyTicketRequestReplyOptions",
              "title": "Admin Reply on ticket",
              "value": {
                "description": "The quick reply options to display. Must be present for quick_reply message types.",
                "value": {
                  "allOf": [],
                  "properties": [
                    {
                      "conflict": {},
                      "generatedName": "adminReplyTicketRequestReplyOptionsItemText",
                      "key": "text",
                      "schema": {
                        "description": "The text to display in this quick reply option.",
                        "schema": {
                          "type": "string"
                        },
                        "generatedName": "AdminReplyTicketRequestReplyOptionsItemText",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "adminReplyTicketRequestReplyOptionsItemUuid",
                      "key": "uuid",
                      "schema": {
                        "description": "A unique identifier for this quick reply option. This value will be available within the metadata of the comment ticket part that is created when a user clicks on this reply option.",
                        "schema": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "generatedName": "AdminReplyTicketRequestReplyOptionsItemUuid",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "audiences": []
                    }
                  ],
                  "allOfPropertyConflicts": [],
                  "generatedName": "AdminReplyTicketRequestReplyOptionsItem",
                  "title": "Quick Reply Option",
                  "groupName": [],
                  "additionalProperties": false,
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "object"
                },
                "generatedName": "AdminReplyTicketRequestReplyOptions",
                "title": "Quick Reply Options",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "adminReplyTicketRequestAttachmentUrls",
            "key": "attachment_urls",
            "schema": {
              "generatedName": "adminReplyTicketRequestAttachmentUrls",
              "title": "Admin Reply on ticket",
              "value": {
                "description": "A list of image URLs that will be added as attachments. You can include up to 10 URLs.",
                "value": {
                  "schema": {
                    "format": "uri",
                    "type": "string"
                  },
                  "generatedName": "AdminReplyTicketRequestAttachmentUrlsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "AdminReplyTicketRequestAttachmentUrls",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Payload of the request to reply on behalf of an admin",
        "generatedName": "AdminReplyTicketRequest",
        "title": "Admin Reply on ticket",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "admin_with_app": {
        "generatedName": "AdminWithApp",
        "nameOverride": "Admin",
        "title": "Admin",
        "description": "Admins are the teammate accounts that have access to a workspace",
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "adminWithAppType",
              "key": "type",
              "schema": {
                "generatedName": "adminWithAppType",
                "nameOverride": "Admin",
                "title": "Admin",
                "value": {
                  "description": "String representing the object's type. Always has the value `admin`.",
                  "schema": {
                    "example": "admin",
                    "type": "string"
                  },
                  "generatedName": "AdminWithAppType",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "adminWithAppId",
              "key": "id",
              "schema": {
                "generatedName": "adminWithAppId",
                "nameOverride": "Admin",
                "title": "Admin",
                "value": {
                  "description": "The id representing the admin.",
                  "schema": {
                    "example": "1295",
                    "type": "string"
                  },
                  "generatedName": "AdminWithAppId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "adminWithAppName",
              "key": "name",
              "schema": {
                "generatedName": "adminWithAppName",
                "nameOverride": "Admin",
                "title": "Admin",
                "value": {
                  "description": "The name of the admin.",
                  "schema": {
                    "example": "Hoban Washburne",
                    "type": "string"
                  },
                  "generatedName": "AdminWithAppName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "adminWithAppEmail",
              "key": "email",
              "schema": {
                "generatedName": "adminWithAppEmail",
                "nameOverride": "Admin",
                "title": "Admin",
                "value": {
                  "description": "The email of the admin.",
                  "schema": {
                    "example": "wash@serenity.io",
                    "type": "string"
                  },
                  "generatedName": "AdminWithAppEmail",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "adminWithAppJobTitle",
              "key": "job_title",
              "schema": {
                "generatedName": "adminWithAppJobTitle",
                "nameOverride": "Admin",
                "title": "Admin",
                "value": {
                  "description": "The job title of the admin.",
                  "schema": {
                    "example": "Philosopher",
                    "type": "string"
                  },
                  "generatedName": "AdminWithAppJobTitle",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "adminWithAppAwayModeEnabled",
              "key": "away_mode_enabled",
              "schema": {
                "generatedName": "adminWithAppAwayModeEnabled",
                "nameOverride": "Admin",
                "title": "Admin",
                "value": {
                  "description": "Identifies if this admin is currently set in away mode.",
                  "schema": {
                    "example": false,
                    "type": "boolean"
                  },
                  "generatedName": "AdminWithAppAwayModeEnabled",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "adminWithAppAwayModeReassign",
              "key": "away_mode_reassign",
              "schema": {
                "generatedName": "adminWithAppAwayModeReassign",
                "nameOverride": "Admin",
                "title": "Admin",
                "value": {
                  "description": "Identifies if this admin is set to automatically reassign new conversations to the apps default inbox.",
                  "schema": {
                    "example": false,
                    "type": "boolean"
                  },
                  "generatedName": "AdminWithAppAwayModeReassign",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "adminWithAppHasInboxSeat",
              "key": "has_inbox_seat",
              "schema": {
                "generatedName": "adminWithAppHasInboxSeat",
                "nameOverride": "Admin",
                "title": "Admin",
                "value": {
                  "description": "Identifies if this admin has a paid inbox seat to restrict/allow features that require them.",
                  "schema": {
                    "example": true,
                    "type": "boolean"
                  },
                  "generatedName": "AdminWithAppHasInboxSeat",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "adminWithAppTeamIds",
              "key": "team_ids",
              "schema": {
                "generatedName": "adminWithAppTeamIds",
                "nameOverride": "Admin",
                "title": "Admin",
                "value": {
                  "description": "This is a list of ids of the teams that this admin is part of.",
                  "value": {
                    "schema": {
                      "type": "int"
                    },
                    "generatedName": "AdminWithAppTeamIdsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "AdminWithAppTeamIds",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "adminWithAppAvatar",
              "key": "avatar",
              "schema": {
                "generatedName": "adminWithAppAvatar",
                "nameOverride": "Admin",
                "title": "Admin",
                "value": {
                  "allOf": [],
                  "properties": [
                    {
                      "conflict": {},
                      "generatedName": "adminWithAppAvatarType",
                      "key": "type",
                      "schema": {
                        "generatedName": "adminWithAppAvatarType",
                        "value": {
                          "description": "This is a string that identifies the type of the object. It will always have the value `avatar`.",
                          "schema": {
                            "default": "avatar",
                            "example": "avatar",
                            "type": "string"
                          },
                          "generatedName": "AdminWithAppAvatarType",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "adminWithAppAvatarImageUrl",
                      "key": "image_url",
                      "schema": {
                        "generatedName": "adminWithAppAvatarImageUrl",
                        "value": {
                          "generatedName": "AdminWithAppAvatarImageUrl",
                          "description": "This object represents the avatar associated with the admin.",
                          "value": {
                            "description": "This object represents the avatar associated with the admin.",
                            "schema": {
                              "format": "uri",
                              "example": "https://example.com/avatar.png",
                              "type": "string"
                            },
                            "generatedName": "AdminWithAppAvatarImageUrl",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "nullable"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    }
                  ],
                  "allOfPropertyConflicts": [],
                  "description": "This object represents the avatar associated with the admin.",
                  "generatedName": "AdminWithAppAvatar",
                  "groupName": [],
                  "additionalProperties": false,
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "object"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "adminWithAppEmailVerified",
              "key": "email_verified",
              "schema": {
                "generatedName": "adminWithAppEmailVerified",
                "nameOverride": "Admin",
                "title": "Admin",
                "value": {
                  "generatedName": "AdminWithAppEmailVerified",
                  "description": "Identifies if this admin's email is verified.",
                  "value": {
                    "description": "Identifies if this admin's email is verified.",
                    "schema": {
                      "example": true,
                      "type": "boolean"
                    },
                    "generatedName": "AdminWithAppEmailVerified",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "adminWithAppApp",
              "key": "app",
              "schema": {
                "generatedName": "adminWithAppApp",
                "nameOverride": "Admin",
                "title": "Admin",
                "value": {
                  "description": "App that the admin belongs to.",
                  "generatedName": "AdminWithAppApp",
                  "schema": "app",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "Admins are the teammate accounts that have access to a workspace",
          "generatedName": "AdminWithApp",
          "nameOverride": "Admin",
          "title": "Admin",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "groupName": [],
        "type": "nullable"
      },
      "ai_agent": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "aiAgentSourceType",
            "key": "source_type",
            "schema": {
              "generatedName": "aiAgentSourceType",
              "title": "AI Agent",
              "value": {
                "description": "The type of the source that triggered AI Agent involvement in the conversation.",
                "generatedName": "AiAgentSourceType",
                "values": [
                  {
                    "generatedName": "essentials_plan_setup",
                    "value": "essentials_plan_setup",
                    "casing": {}
                  },
                  {
                    "generatedName": "profile",
                    "value": "profile",
                    "casing": {}
                  },
                  {
                    "generatedName": "workflow",
                    "value": "workflow",
                    "casing": {}
                  },
                  {
                    "generatedName": "workflow_preview",
                    "value": "workflow_preview",
                    "casing": {}
                  },
                  {
                    "generatedName": "fin_preview",
                    "value": "fin_preview",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [
                "Ai Agent"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "aiAgentSourceTitle",
            "key": "source_title",
            "schema": {
              "generatedName": "aiAgentSourceTitle",
              "title": "AI Agent",
              "value": {
                "generatedName": "AiAgentSourceTitle",
                "description": "The title of the source that triggered AI Agent involvement in the conversation. If this is `essentials_plan_setup` then it will return `null`.",
                "value": {
                  "description": "The title of the source that triggered AI Agent involvement in the conversation. If this is `essentials_plan_setup` then it will return `null`.",
                  "schema": {
                    "example": "My AI Workflow",
                    "type": "string"
                  },
                  "generatedName": "AiAgentSourceTitle",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Ai Agent"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "aiAgentLastAnswerType",
            "key": "last_answer_type",
            "schema": {
              "generatedName": "aiAgentLastAnswerType",
              "title": "AI Agent",
              "value": {
                "generatedName": "AiAgentLastAnswerType",
                "description": "The type of the last answer delivered by AI Agent. If no answer was delivered then this will return `null`",
                "value": {
                  "description": "The type of the last answer delivered by AI Agent. If no answer was delivered then this will return `null`",
                  "schema": {
                    "example": "ai_answer",
                    "type": "string"
                  },
                  "generatedName": "AiAgentLastAnswerType",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Ai Agent"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "aiAgentResolutionState",
            "key": "resolution_state",
            "schema": {
              "generatedName": "aiAgentResolutionState",
              "title": "AI Agent",
              "value": {
                "generatedName": "AiAgentResolutionState",
                "description": "The resolution state of AI Agent. If no AI or custom answer has been delivered then this will return `null`.",
                "value": {
                  "description": "The resolution state of AI Agent. If no AI or custom answer has been delivered then this will return `null`.",
                  "schema": {
                    "example": "assumed_resolution",
                    "type": "string"
                  },
                  "generatedName": "AiAgentResolutionState",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Ai Agent"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "aiAgentRating",
            "key": "rating",
            "schema": {
              "generatedName": "aiAgentRating",
              "title": "AI Agent",
              "value": {
                "generatedName": "AiAgentRating",
                "description": "The customer satisfaction rating given to AI Agent, from 1-5.",
                "value": {
                  "description": "The customer satisfaction rating given to AI Agent, from 1-5.",
                  "schema": {
                    "example": 4,
                    "type": "int"
                  },
                  "generatedName": "AiAgentRating",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Ai Agent"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "aiAgentRatingRemark",
            "key": "rating_remark",
            "schema": {
              "generatedName": "aiAgentRatingRemark",
              "title": "AI Agent",
              "value": {
                "generatedName": "AiAgentRatingRemark",
                "description": "The customer satisfaction rating remark given to AI Agent.",
                "value": {
                  "description": "The customer satisfaction rating remark given to AI Agent.",
                  "schema": {
                    "example": "Very helpful!",
                    "type": "string"
                  },
                  "generatedName": "AiAgentRatingRemark",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Ai Agent"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "aiAgentContentSources",
            "key": "content_sources",
            "schema": {
              "generatedName": "aiAgentContentSources",
              "title": "AI Agent",
              "value": {
                "generatedName": "AiAgentContentSources",
                "schema": "content_sources_list",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [
                "Ai Agent"
              ],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Data related to AI Agent involvement in the conversation.",
        "generatedName": "AiAgent",
        "title": "AI Agent",
        "groupName": [
          "Ai Agent"
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "app": {
        "generatedName": "App",
        "nameOverride": "App",
        "title": "App",
        "description": "App is a workspace on Intercom",
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "appType",
              "key": "type",
              "schema": {
                "generatedName": "appType",
                "nameOverride": "App",
                "title": "App",
                "value": {
                  "description": "",
                  "schema": {
                    "default": "app",
                    "example": "app",
                    "type": "string"
                  },
                  "generatedName": "AppType",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "appIdCode",
              "key": "id_code",
              "schema": {
                "generatedName": "appIdCode",
                "nameOverride": "App",
                "title": "App",
                "value": {
                  "description": "The id of the app.",
                  "schema": {
                    "example": "xyz789",
                    "type": "string"
                  },
                  "generatedName": "AppIdCode",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "appName",
              "key": "name",
              "schema": {
                "generatedName": "appName",
                "nameOverride": "App",
                "title": "App",
                "value": {
                  "description": "The name of the app.",
                  "schema": {
                    "example": "ACME",
                    "type": "string"
                  },
                  "generatedName": "AppName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "appRegion",
              "key": "region",
              "schema": {
                "generatedName": "appRegion",
                "nameOverride": "App",
                "title": "App",
                "value": {
                  "description": "The Intercom region the app is located in.",
                  "schema": {
                    "example": "US",
                    "type": "string"
                  },
                  "generatedName": "AppRegion",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "appTimezone",
              "key": "timezone",
              "schema": {
                "generatedName": "appTimezone",
                "nameOverride": "App",
                "title": "App",
                "value": {
                  "description": "The timezone of the region where the app is located.",
                  "schema": {
                    "example": "America/Los_Angeles",
                    "type": "string"
                  },
                  "generatedName": "AppTimezone",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "appCreatedAt",
              "key": "created_at",
              "schema": {
                "generatedName": "appCreatedAt",
                "nameOverride": "App",
                "title": "App",
                "value": {
                  "description": "When the app was created.",
                  "schema": {
                    "example": 1671465577,
                    "type": "int"
                  },
                  "generatedName": "AppCreatedAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "appIdentityVerification",
              "key": "identity_verification",
              "schema": {
                "generatedName": "appIdentityVerification",
                "nameOverride": "App",
                "title": "App",
                "value": {
                  "description": "Whether or not the app uses identity verification.",
                  "schema": {
                    "example": false,
                    "type": "boolean"
                  },
                  "generatedName": "AppIdentityVerification",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "App is a workspace on Intercom",
          "generatedName": "App",
          "nameOverride": "App",
          "title": "App",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "groupName": [],
        "type": "nullable"
      },
      "article": {
        "allOf": [
          {
            "generatedName": "ArticleListItem",
            "schema": "article_list_item",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "articleStatistics",
            "key": "statistics",
            "schema": {
              "generatedName": "articleStatistics",
              "nameOverride": "Article",
              "title": "Article",
              "value": {
                "generatedName": "ArticleStatistics",
                "schema": "article_statistics",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [
                "Articles"
              ],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The Articles API is a central place to gather all information and take actions on your articles. Articles can live within collections and sections, or alternatively they can stand alone.",
        "generatedName": "Article",
        "nameOverride": "Article",
        "title": "Article",
        "groupName": [
          "Articles"
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "article_content": {
        "generatedName": "ArticleContent",
        "title": "Article Content",
        "description": "The Content of an Article.",
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "articleContentType",
              "key": "type",
              "schema": {
                "generatedName": "articleContentType",
                "title": "Article Content",
                "value": {
                  "generatedName": "ArticleContentType",
                  "description": "The type of object - `article_content` .",
                  "value": {
                    "description": "The type of object - `article_content` .",
                    "schema": {
                      "example": "article_content",
                      "type": "string"
                    },
                    "generatedName": "ArticleContentType",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "articleContentTitle",
              "key": "title",
              "schema": {
                "generatedName": "articleContentTitle",
                "title": "Article Content",
                "value": {
                  "description": "The title of the article.",
                  "schema": {
                    "example": "How to create a new article",
                    "type": "string"
                  },
                  "generatedName": "ArticleContentTitle",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "articleContentDescription",
              "key": "description",
              "schema": {
                "generatedName": "articleContentDescription",
                "title": "Article Content",
                "value": {
                  "description": "The description of the article.",
                  "schema": {
                    "example": "This article will show you how to create a new article.",
                    "type": "string"
                  },
                  "generatedName": "ArticleContentDescription",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "articleContentBody",
              "key": "body",
              "schema": {
                "generatedName": "articleContentBody",
                "title": "Article Content",
                "value": {
                  "description": "The body of the article.",
                  "schema": {
                    "example": "This is the body of the article.",
                    "type": "string"
                  },
                  "generatedName": "ArticleContentBody",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "articleContentAuthorId",
              "key": "author_id",
              "schema": {
                "generatedName": "articleContentAuthorId",
                "title": "Article Content",
                "value": {
                  "description": "The ID of the author of the article.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "ArticleContentAuthorId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "articleContentState",
              "key": "state",
              "schema": {
                "generatedName": "articleContentState",
                "title": "Article Content",
                "value": {
                  "description": "Whether the article is `published` or is a `draft` .",
                  "generatedName": "ArticleContentState",
                  "values": [
                    {
                      "generatedName": "published",
                      "value": "published",
                      "casing": {}
                    },
                    {
                      "generatedName": "draft",
                      "value": "draft",
                      "casing": {}
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "enum"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "articleContentCreatedAt",
              "key": "created_at",
              "schema": {
                "generatedName": "articleContentCreatedAt",
                "title": "Article Content",
                "value": {
                  "description": "The time when the article was created (seconds).",
                  "schema": {
                    "example": 1663597223,
                    "type": "int"
                  },
                  "generatedName": "ArticleContentCreatedAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "articleContentUpdatedAt",
              "key": "updated_at",
              "schema": {
                "generatedName": "articleContentUpdatedAt",
                "title": "Article Content",
                "value": {
                  "description": "The time when the article was last updated (seconds).",
                  "schema": {
                    "example": 1663597260,
                    "type": "int"
                  },
                  "generatedName": "ArticleContentUpdatedAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "articleContentUrl",
              "key": "url",
              "schema": {
                "generatedName": "articleContentUrl",
                "title": "Article Content",
                "value": {
                  "description": "The URL of the article.",
                  "schema": {
                    "example": "http://intercom.test/help/en/articles/3-default-language",
                    "type": "string"
                  },
                  "generatedName": "ArticleContentUrl",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "The Content of an Article.",
          "generatedName": "ArticleContent",
          "title": "Article Content",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "groupName": [],
        "type": "nullable"
      },
      "article_list": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "articleListType",
            "key": "type",
            "schema": {
              "generatedName": "articleListType",
              "nameOverride": "Articles",
              "title": "Articles",
              "value": {
                "description": "The type of the object - `list`.",
                "value": {
                  "value": "list",
                  "type": "string"
                },
                "generatedName": "ArticleListType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "articleListPages",
            "key": "pages",
            "schema": {
              "generatedName": "articleListPages",
              "nameOverride": "Articles",
              "title": "Articles",
              "value": {
                "generatedName": "ArticleListPages",
                "schema": "cursor_pages",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "articleListTotalCount",
            "key": "total_count",
            "schema": {
              "generatedName": "articleListTotalCount",
              "nameOverride": "Articles",
              "title": "Articles",
              "value": {
                "description": "A count of the total number of articles.",
                "schema": {
                  "example": 1,
                  "type": "int"
                },
                "generatedName": "ArticleListTotalCount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "articleListData",
            "key": "data",
            "schema": {
              "generatedName": "articleListData",
              "nameOverride": "Articles",
              "title": "Articles",
              "value": {
                "description": "An array of Article objects",
                "value": {
                  "generatedName": "ArticleListDataItem",
                  "schema": "article_list_item",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ArticleListData",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "This will return a list of articles for the App.",
        "generatedName": "ArticleList",
        "nameOverride": "Articles",
        "title": "Articles",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "article_list_item": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "articleListItemType",
            "key": "type",
            "schema": {
              "generatedName": "articleListItemType",
              "nameOverride": "Articles",
              "title": "Articles",
              "value": {
                "description": "The type of object - `article`.",
                "value": {
                  "value": "article",
                  "type": "string"
                },
                "generatedName": "ArticleListItemType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [
                "Articles"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "articleListItemId",
            "key": "id",
            "schema": {
              "generatedName": "articleListItemId",
              "nameOverride": "Articles",
              "title": "Articles",
              "value": {
                "description": "The unique identifier for the article which is given by Intercom.",
                "schema": {
                  "example": "6871119",
                  "type": "string"
                },
                "generatedName": "ArticleListItemId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Articles"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "articleListItemWorkspaceId",
            "key": "workspace_id",
            "schema": {
              "generatedName": "articleListItemWorkspaceId",
              "nameOverride": "Articles",
              "title": "Articles",
              "value": {
                "description": "The id of the workspace which the article belongs to.",
                "schema": {
                  "example": "hfi1bx4l",
                  "type": "string"
                },
                "generatedName": "ArticleListItemWorkspaceId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Articles"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "articleListItemTitle",
            "key": "title",
            "schema": {
              "generatedName": "articleListItemTitle",
              "nameOverride": "Articles",
              "title": "Articles",
              "value": {
                "description": "The title of the article. For multilingual articles, this will be the title of the default language's content.",
                "schema": {
                  "example": "Default language title",
                  "type": "string"
                },
                "generatedName": "ArticleListItemTitle",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Articles"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "articleListItemDescription",
            "key": "description",
            "schema": {
              "generatedName": "articleListItemDescription",
              "nameOverride": "Articles",
              "title": "Articles",
              "value": {
                "generatedName": "ArticleListItemDescription",
                "description": "The description of the article. For multilingual articles, this will be the description of the default language's content.",
                "value": {
                  "description": "The description of the article. For multilingual articles, this will be the description of the default language's content.",
                  "schema": {
                    "example": "Default language description",
                    "type": "string"
                  },
                  "generatedName": "ArticleListItemDescription",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Articles"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "articleListItemBody",
            "key": "body",
            "schema": {
              "generatedName": "articleListItemBody",
              "nameOverride": "Articles",
              "title": "Articles",
              "value": {
                "generatedName": "ArticleListItemBody",
                "description": "The body of the article in HTML. For multilingual articles, this will be the body of the default language's content.",
                "value": {
                  "description": "The body of the article in HTML. For multilingual articles, this will be the body of the default language's content.",
                  "schema": {
                    "example": "Default language body in html",
                    "type": "string"
                  },
                  "generatedName": "ArticleListItemBody",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Articles"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "articleListItemAuthorId",
            "key": "author_id",
            "schema": {
              "generatedName": "articleListItemAuthorId",
              "nameOverride": "Articles",
              "title": "Articles",
              "value": {
                "description": "The id of the author of the article. For multilingual articles, this will be the id of the author of the default language's content. Must be a teammate on the help center's workspace.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "ArticleListItemAuthorId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Articles"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "articleListItemState",
            "key": "state",
            "schema": {
              "generatedName": "articleListItemState",
              "nameOverride": "Articles",
              "title": "Articles",
              "value": {
                "description": "Whether the article is `published` or is a `draft`. For multilingual articles, this will be the state of the default language's content.",
                "generatedName": "ArticleListItemState",
                "values": [
                  {
                    "generatedName": "published",
                    "value": "published",
                    "casing": {}
                  },
                  {
                    "generatedName": "draft",
                    "value": "draft",
                    "casing": {}
                  }
                ],
                "default": {
                  "generatedName": "draft",
                  "value": "draft",
                  "casing": {}
                },
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [
                "Articles"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "articleListItemCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "articleListItemCreatedAt",
              "nameOverride": "Articles",
              "title": "Articles",
              "value": {
                "description": "The time when the article was created. For multilingual articles, this will be the timestamp of creation of the default language's content in seconds.",
                "schema": {
                  "example": 1672928359,
                  "type": "int"
                },
                "generatedName": "ArticleListItemCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Articles"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "articleListItemUpdatedAt",
            "key": "updated_at",
            "schema": {
              "generatedName": "articleListItemUpdatedAt",
              "nameOverride": "Articles",
              "title": "Articles",
              "value": {
                "description": "The time when the article was last updated. For multilingual articles, this will be the timestamp of last update of the default language's content in seconds.",
                "schema": {
                  "example": 1672928610,
                  "type": "int"
                },
                "generatedName": "ArticleListItemUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Articles"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "articleListItemUrl",
            "key": "url",
            "schema": {
              "generatedName": "articleListItemUrl",
              "nameOverride": "Articles",
              "title": "Articles",
              "value": {
                "generatedName": "ArticleListItemUrl",
                "description": "The URL of the article. For multilingual articles, this will be the URL of the default language's content.",
                "value": {
                  "description": "The URL of the article. For multilingual articles, this will be the URL of the default language's content.",
                  "schema": {
                    "example": "http://intercom.test/help/en/articles/3-default-language",
                    "type": "string"
                  },
                  "generatedName": "ArticleListItemUrl",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Articles"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "articleListItemParentId",
            "key": "parent_id",
            "schema": {
              "generatedName": "articleListItemParentId",
              "nameOverride": "Articles",
              "title": "Articles",
              "value": {
                "generatedName": "ArticleListItemParentId",
                "description": "The id of the article's parent collection or section. An article without this field stands alone.",
                "value": {
                  "description": "The id of the article's parent collection or section. An article without this field stands alone.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "ArticleListItemParentId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Articles"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "articleListItemParentIds",
            "key": "parent_ids",
            "schema": {
              "generatedName": "articleListItemParentIds",
              "nameOverride": "Articles",
              "title": "Articles",
              "value": {
                "description": "The ids of the article's parent collections or sections. An article without this field stands alone.",
                "value": {
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "ArticleListItemParentIdsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "ArticleListItemParentIds",
                "groupName": [],
                "type": "array"
              },
              "groupName": [
                "Articles"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "articleListItemParentType",
            "key": "parent_type",
            "schema": {
              "generatedName": "articleListItemParentType",
              "nameOverride": "Articles",
              "title": "Articles",
              "value": {
                "generatedName": "ArticleListItemParentType",
                "description": "The type of parent, which can either be a `collection` or `section`.",
                "value": {
                  "description": "The type of parent, which can either be a `collection` or `section`.",
                  "schema": {
                    "example": "collection",
                    "type": "string"
                  },
                  "generatedName": "ArticleListItemParentType",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Articles"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "articleListItemDefaultLocale",
            "key": "default_locale",
            "schema": {
              "generatedName": "articleListItemDefaultLocale",
              "nameOverride": "Articles",
              "title": "Articles",
              "value": {
                "description": "The default locale of the help center. This field is only returned for multilingual help centers.",
                "schema": {
                  "example": "en",
                  "type": "string"
                },
                "generatedName": "ArticleListItemDefaultLocale",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Articles"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "articleListItemTranslatedContent",
            "key": "translated_content",
            "schema": {
              "generatedName": "articleListItemTranslatedContent",
              "nameOverride": "Articles",
              "title": "Articles",
              "value": {
                "generatedName": "ArticleListItemTranslatedContent",
                "schema": "article_translated_content",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [
                "Articles"
              ],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The data returned about your articles when you list them.",
        "generatedName": "ArticleListItem",
        "nameOverride": "Articles",
        "title": "Articles",
        "groupName": [
          "Articles"
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "article_search_highlights": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "articleSearchHighlightsArticleId",
            "key": "article_id",
            "schema": {
              "generatedName": "articleSearchHighlightsArticleId",
              "title": "Article Search Highlights",
              "value": {
                "description": "The ID of the corresponding article.",
                "schema": {
                  "example": "123",
                  "type": "string"
                },
                "generatedName": "ArticleSearchHighlightsArticleId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Articles"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "articleSearchHighlightsHighlightedTitle",
            "key": "highlighted_title",
            "schema": {
              "generatedName": "articleSearchHighlightsHighlightedTitle",
              "title": "Article Search Highlights",
              "value": {
                "description": "An Article title highlighted.",
                "value": {
                  "allOf": [],
                  "properties": [
                    {
                      "conflict": {},
                      "generatedName": "articleSearchHighlightsHighlightedTitleItemType",
                      "key": "type",
                      "schema": {
                        "generatedName": "articleSearchHighlightsHighlightedTitleItemType",
                        "value": {
                          "description": "The type of text - `highlight` or `plain`.",
                          "generatedName": "ArticleSearchHighlightsHighlightedTitleItemType",
                          "values": [
                            {
                              "generatedName": "highlight",
                              "value": "highlight",
                              "casing": {}
                            },
                            {
                              "generatedName": "plain",
                              "value": "plain",
                              "casing": {}
                            }
                          ],
                          "groupName": [],
                          "source": {
                            "file": "../openapi.yml",
                            "type": "openapi"
                          },
                          "type": "enum"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "articleSearchHighlightsHighlightedTitleItemText",
                      "key": "text",
                      "schema": {
                        "generatedName": "articleSearchHighlightsHighlightedTitleItemText",
                        "value": {
                          "description": "The text of the title.",
                          "schema": {
                            "example": "my query",
                            "type": "string"
                          },
                          "generatedName": "ArticleSearchHighlightsHighlightedTitleItemText",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    }
                  ],
                  "allOfPropertyConflicts": [],
                  "description": "A highlighted article title.",
                  "generatedName": "ArticleSearchHighlightsHighlightedTitleItem",
                  "groupName": [],
                  "additionalProperties": false,
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "object"
                },
                "generatedName": "ArticleSearchHighlightsHighlightedTitle",
                "groupName": [],
                "type": "array"
              },
              "groupName": [
                "Articles"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "articleSearchHighlightsHighlightedSummary",
            "key": "highlighted_summary",
            "schema": {
              "generatedName": "articleSearchHighlightsHighlightedSummary",
              "title": "Article Search Highlights",
              "value": {
                "description": "An Article description and body text highlighted.",
                "value": {
                  "description": "An array containing the highlighted summary text split into chunks of plain and highlighted text.",
                  "value": {
                    "allOf": [],
                    "properties": [
                      {
                        "conflict": {},
                        "generatedName": "articleSearchHighlightsHighlightedSummaryItemItemType",
                        "key": "type",
                        "schema": {
                          "generatedName": "articleSearchHighlightsHighlightedSummaryItemItemType",
                          "value": {
                            "description": "The type of text - `highlight` or `plain`.",
                            "generatedName": "ArticleSearchHighlightsHighlightedSummaryItemItemType",
                            "values": [
                              {
                                "generatedName": "highlight",
                                "value": "highlight",
                                "casing": {}
                              },
                              {
                                "generatedName": "plain",
                                "value": "plain",
                                "casing": {}
                              }
                            ],
                            "groupName": [],
                            "source": {
                              "file": "../openapi.yml",
                              "type": "openapi"
                            },
                            "type": "enum"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "articleSearchHighlightsHighlightedSummaryItemItemText",
                        "key": "text",
                        "schema": {
                          "generatedName": "articleSearchHighlightsHighlightedSummaryItemItemText",
                          "value": {
                            "description": "The text of the title.",
                            "schema": {
                              "example": "my query",
                              "type": "string"
                            },
                            "generatedName": "ArticleSearchHighlightsHighlightedSummaryItemItemText",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      }
                    ],
                    "allOfPropertyConflicts": [],
                    "description": "An instance of highlighted summary text.",
                    "generatedName": "ArticleSearchHighlightsHighlightedSummaryItemItem",
                    "groupName": [],
                    "additionalProperties": false,
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "object"
                  },
                  "generatedName": "ArticleSearchHighlightsHighlightedSummaryItem",
                  "groupName": [],
                  "type": "array"
                },
                "generatedName": "ArticleSearchHighlightsHighlightedSummary",
                "groupName": [],
                "type": "array"
              },
              "groupName": [
                "Articles"
              ],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The highlighted results of an Article search. In the examples provided my search query is always \"my query\".",
        "generatedName": "ArticleSearchHighlights",
        "title": "Article Search Highlights",
        "groupName": [
          "Articles"
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "article_search_response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "articleSearchResponseType",
            "key": "type",
            "schema": {
              "generatedName": "articleSearchResponseType",
              "title": "Article Search Response",
              "value": {
                "description": "The type of the object - `list`.",
                "value": {
                  "value": "list",
                  "type": "string"
                },
                "generatedName": "ArticleSearchResponseType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [
                "Articles"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "articleSearchResponseTotalCount",
            "key": "total_count",
            "schema": {
              "generatedName": "articleSearchResponseTotalCount",
              "title": "Article Search Response",
              "value": {
                "description": "The total number of Articles matching the search query",
                "schema": {
                  "example": 5,
                  "type": "int"
                },
                "generatedName": "ArticleSearchResponseTotalCount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Articles"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "articleSearchResponseData",
            "key": "data",
            "schema": {
              "generatedName": "articleSearchResponseData",
              "title": "Article Search Response",
              "value": {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "articleSearchResponseDataArticles",
                    "key": "articles",
                    "schema": {
                      "generatedName": "articleSearchResponseDataArticles",
                      "value": {
                        "description": "An array of Article objects",
                        "value": {
                          "generatedName": "ArticleSearchResponseDataArticlesItem",
                          "schema": "article",
                          "source": {
                            "file": "../openapi.yml",
                            "type": "openapi"
                          },
                          "type": "reference"
                        },
                        "generatedName": "ArticleSearchResponseDataArticles",
                        "groupName": [],
                        "type": "array"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "articleSearchResponseDataHighlights",
                    "key": "highlights",
                    "schema": {
                      "generatedName": "articleSearchResponseDataHighlights",
                      "value": {
                        "description": "A corresponding array of highlighted Article content",
                        "value": {
                          "generatedName": "ArticleSearchResponseDataHighlightsItem",
                          "schema": "article_search_highlights",
                          "source": {
                            "file": "../openapi.yml",
                            "type": "openapi"
                          },
                          "type": "reference"
                        },
                        "generatedName": "ArticleSearchResponseDataHighlights",
                        "groupName": [],
                        "type": "array"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "description": "An object containing the results of the search.",
                "generatedName": "ArticleSearchResponseData",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [
                "Articles"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "articleSearchResponsePages",
            "key": "pages",
            "schema": {
              "generatedName": "articleSearchResponsePages",
              "title": "Article Search Response",
              "value": {
                "generatedName": "ArticleSearchResponsePages",
                "schema": "cursor_pages",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [
                "Articles"
              ],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The results of an Article search",
        "generatedName": "ArticleSearchResponse",
        "title": "Article Search Response",
        "groupName": [
          "Articles"
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "article_statistics": {
        "generatedName": "ArticleStatistics",
        "title": "Article Statistics",
        "description": "The statistics of an article.",
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "articleStatisticsType",
              "key": "type",
              "schema": {
                "generatedName": "articleStatisticsType",
                "title": "Article Statistics",
                "value": {
                  "description": "The type of object - `article_statistics`.",
                  "value": {
                    "value": "article_statistics",
                    "type": "string"
                  },
                  "generatedName": "ArticleStatisticsType",
                  "groupName": [],
                  "type": "literal"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "articleStatisticsViews",
              "key": "views",
              "schema": {
                "generatedName": "articleStatisticsViews",
                "title": "Article Statistics",
                "value": {
                  "description": "The number of total views the article has received.",
                  "schema": {
                    "example": 10,
                    "type": "int"
                  },
                  "generatedName": "ArticleStatisticsViews",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "articleStatisticsConversions",
              "key": "conversions",
              "schema": {
                "generatedName": "articleStatisticsConversions",
                "title": "Article Statistics",
                "value": {
                  "description": "The number of conversations started from the article.",
                  "schema": {
                    "example": 0,
                    "type": "int"
                  },
                  "generatedName": "ArticleStatisticsConversions",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "articleStatisticsReactions",
              "key": "reactions",
              "schema": {
                "generatedName": "articleStatisticsReactions",
                "title": "Article Statistics",
                "value": {
                  "description": "The number of total reactions the article has received.",
                  "schema": {
                    "example": 10,
                    "type": "int"
                  },
                  "generatedName": "ArticleStatisticsReactions",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "articleStatisticsHappyReactionPercentage",
              "key": "happy_reaction_percentage",
              "schema": {
                "generatedName": "articleStatisticsHappyReactionPercentage",
                "title": "Article Statistics",
                "value": {
                  "description": "The percentage of happy reactions the article has received against other types of reaction.",
                  "schema": {
                    "type": "float"
                  },
                  "generatedName": "ArticleStatisticsHappyReactionPercentage",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "articleStatisticsNeutralReactionPercentage",
              "key": "neutral_reaction_percentage",
              "schema": {
                "generatedName": "articleStatisticsNeutralReactionPercentage",
                "title": "Article Statistics",
                "value": {
                  "description": "The percentage of neutral reactions the article has received against other types of reaction.",
                  "schema": {
                    "type": "float"
                  },
                  "generatedName": "ArticleStatisticsNeutralReactionPercentage",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "articleStatisticsSadReactionPercentage",
              "key": "sad_reaction_percentage",
              "schema": {
                "generatedName": "articleStatisticsSadReactionPercentage",
                "title": "Article Statistics",
                "value": {
                  "description": "The percentage of sad reactions the article has received against other types of reaction.",
                  "schema": {
                    "type": "float"
                  },
                  "generatedName": "ArticleStatisticsSadReactionPercentage",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "The statistics of an article.",
          "generatedName": "ArticleStatistics",
          "title": "Article Statistics",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "groupName": [],
        "type": "nullable"
      },
      "article_translated_content": {
        "generatedName": "ArticleTranslatedContent",
        "title": "Article Translated Content",
        "description": "The Translated Content of an Article. The keys are the locale codes and the values are the translated content of the article.",
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentType",
              "key": "type",
              "schema": {
                "generatedName": "articleTranslatedContentType",
                "title": "Article Translated Content",
                "value": {
                  "generatedName": "ArticleTranslatedContentType",
                  "description": "The type of object - article_translated_content.",
                  "value": {
                    "description": "The type of object - article_translated_content.",
                    "schema": {
                      "example": "article_translated_content",
                      "type": "string"
                    },
                    "generatedName": "ArticleTranslatedContentType",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentAr",
              "key": "ar",
              "schema": {
                "generatedName": "articleTranslatedContentAr",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in Arabic",
                  "generatedName": "ArticleTranslatedContentAr",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentBg",
              "key": "bg",
              "schema": {
                "generatedName": "articleTranslatedContentBg",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in Bulgarian",
                  "generatedName": "ArticleTranslatedContentBg",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentBs",
              "key": "bs",
              "schema": {
                "generatedName": "articleTranslatedContentBs",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in Bosnian",
                  "generatedName": "ArticleTranslatedContentBs",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentCa",
              "key": "ca",
              "schema": {
                "generatedName": "articleTranslatedContentCa",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in Catalan",
                  "generatedName": "ArticleTranslatedContentCa",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentCs",
              "key": "cs",
              "schema": {
                "generatedName": "articleTranslatedContentCs",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in Czech",
                  "generatedName": "ArticleTranslatedContentCs",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentDa",
              "key": "da",
              "schema": {
                "generatedName": "articleTranslatedContentDa",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in Danish",
                  "generatedName": "ArticleTranslatedContentDa",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentDe",
              "key": "de",
              "schema": {
                "generatedName": "articleTranslatedContentDe",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in German",
                  "generatedName": "ArticleTranslatedContentDe",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentEl",
              "key": "el",
              "schema": {
                "generatedName": "articleTranslatedContentEl",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in Greek",
                  "generatedName": "ArticleTranslatedContentEl",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentEn",
              "key": "en",
              "schema": {
                "generatedName": "articleTranslatedContentEn",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in English",
                  "generatedName": "ArticleTranslatedContentEn",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentEs",
              "key": "es",
              "schema": {
                "generatedName": "articleTranslatedContentEs",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in Spanish",
                  "generatedName": "ArticleTranslatedContentEs",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentEt",
              "key": "et",
              "schema": {
                "generatedName": "articleTranslatedContentEt",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in Estonian",
                  "generatedName": "ArticleTranslatedContentEt",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentFi",
              "key": "fi",
              "schema": {
                "generatedName": "articleTranslatedContentFi",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in Finnish",
                  "generatedName": "ArticleTranslatedContentFi",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentFr",
              "key": "fr",
              "schema": {
                "generatedName": "articleTranslatedContentFr",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in French",
                  "generatedName": "ArticleTranslatedContentFr",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentHe",
              "key": "he",
              "schema": {
                "generatedName": "articleTranslatedContentHe",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in Hebrew",
                  "generatedName": "ArticleTranslatedContentHe",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentHr",
              "key": "hr",
              "schema": {
                "generatedName": "articleTranslatedContentHr",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in Croatian",
                  "generatedName": "ArticleTranslatedContentHr",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentHu",
              "key": "hu",
              "schema": {
                "generatedName": "articleTranslatedContentHu",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in Hungarian",
                  "generatedName": "ArticleTranslatedContentHu",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentId",
              "key": "id",
              "schema": {
                "generatedName": "articleTranslatedContentId",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in Indonesian",
                  "generatedName": "ArticleTranslatedContentId",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentIt",
              "key": "it",
              "schema": {
                "generatedName": "articleTranslatedContentIt",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in Italian",
                  "generatedName": "ArticleTranslatedContentIt",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentJa",
              "key": "ja",
              "schema": {
                "generatedName": "articleTranslatedContentJa",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in Japanese",
                  "generatedName": "ArticleTranslatedContentJa",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentKo",
              "key": "ko",
              "schema": {
                "generatedName": "articleTranslatedContentKo",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in Korean",
                  "generatedName": "ArticleTranslatedContentKo",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentLt",
              "key": "lt",
              "schema": {
                "generatedName": "articleTranslatedContentLt",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in Lithuanian",
                  "generatedName": "ArticleTranslatedContentLt",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentLv",
              "key": "lv",
              "schema": {
                "generatedName": "articleTranslatedContentLv",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in Latvian",
                  "generatedName": "ArticleTranslatedContentLv",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentMn",
              "key": "mn",
              "schema": {
                "generatedName": "articleTranslatedContentMn",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in Mongolian",
                  "generatedName": "ArticleTranslatedContentMn",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentNb",
              "key": "nb",
              "schema": {
                "generatedName": "articleTranslatedContentNb",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in Norwegian",
                  "generatedName": "ArticleTranslatedContentNb",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentNl",
              "key": "nl",
              "schema": {
                "generatedName": "articleTranslatedContentNl",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in Dutch",
                  "generatedName": "ArticleTranslatedContentNl",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentPl",
              "key": "pl",
              "schema": {
                "generatedName": "articleTranslatedContentPl",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in Polish",
                  "generatedName": "ArticleTranslatedContentPl",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentPt",
              "key": "pt",
              "schema": {
                "generatedName": "articleTranslatedContentPt",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in Portuguese (Portugal)",
                  "generatedName": "ArticleTranslatedContentPt",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentRo",
              "key": "ro",
              "schema": {
                "generatedName": "articleTranslatedContentRo",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in Romanian",
                  "generatedName": "ArticleTranslatedContentRo",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentRu",
              "key": "ru",
              "schema": {
                "generatedName": "articleTranslatedContentRu",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in Russian",
                  "generatedName": "ArticleTranslatedContentRu",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentSl",
              "key": "sl",
              "schema": {
                "generatedName": "articleTranslatedContentSl",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in Slovenian",
                  "generatedName": "ArticleTranslatedContentSl",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentSr",
              "key": "sr",
              "schema": {
                "generatedName": "articleTranslatedContentSr",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in Serbian",
                  "generatedName": "ArticleTranslatedContentSr",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentSv",
              "key": "sv",
              "schema": {
                "generatedName": "articleTranslatedContentSv",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in Swedish",
                  "generatedName": "ArticleTranslatedContentSv",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentTr",
              "key": "tr",
              "schema": {
                "generatedName": "articleTranslatedContentTr",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in Turkish",
                  "generatedName": "ArticleTranslatedContentTr",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentVi",
              "key": "vi",
              "schema": {
                "generatedName": "articleTranslatedContentVi",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in Vietnamese",
                  "generatedName": "ArticleTranslatedContentVi",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentPtBr",
              "key": "pt-BR",
              "schema": {
                "generatedName": "articleTranslatedContentPtBr",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in Portuguese (Brazil)",
                  "generatedName": "ArticleTranslatedContentPtBr",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentZhCn",
              "key": "zh-CN",
              "schema": {
                "generatedName": "articleTranslatedContentZhCn",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in Chinese (China)",
                  "generatedName": "ArticleTranslatedContentZhCn",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "articleTranslatedContentZhTw",
              "key": "zh-TW",
              "schema": {
                "generatedName": "articleTranslatedContentZhTw",
                "title": "Article Translated Content",
                "value": {
                  "description": "The content of the article in Chinese (Taiwan)",
                  "generatedName": "ArticleTranslatedContentZhTw",
                  "schema": "article_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "The Translated Content of an Article. The keys are the locale codes and the values are the translated content of the article.",
          "generatedName": "ArticleTranslatedContent",
          "title": "Article Translated Content",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "groupName": [],
        "type": "nullable"
      },
      "assign_conversation_request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "assignConversationRequestMessageType",
            "key": "message_type",
            "schema": {
              "value": {
                "value": "assignment",
                "type": "string"
              },
              "generatedName": "AssignConversationRequestMessageType",
              "groupName": [],
              "type": "literal"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assignConversationRequestType",
            "key": "type",
            "schema": {
              "generatedName": "AssignConversationRequestType",
              "values": [
                {
                  "generatedName": "admin",
                  "value": "admin",
                  "casing": {}
                },
                {
                  "generatedName": "team",
                  "value": "team",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assignConversationRequestAdminId",
            "key": "admin_id",
            "schema": {
              "description": "The id of the admin who is performing the action.",
              "schema": {
                "example": "12345",
                "type": "string"
              },
              "generatedName": "AssignConversationRequestAdminId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assignConversationRequestAssigneeId",
            "key": "assignee_id",
            "schema": {
              "description": "The `id` of the `admin` or `team` which will be assigned the conversation. A conversation can be assigned both an admin and a team.\\nSet `0` if you want this assign to no admin or team (ie. Unassigned).",
              "schema": {
                "example": "4324241",
                "type": "string"
              },
              "generatedName": "AssignConversationRequestAssigneeId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assignConversationRequestBody",
            "key": "body",
            "schema": {
              "generatedName": "assignConversationRequestBody",
              "title": "Assign Conversation Request",
              "value": {
                "description": "Optionally you can send a response in the conversation when it is assigned.",
                "schema": {
                  "example": "Let me pass you over to one of my colleagues.",
                  "type": "string"
                },
                "generatedName": "AssignConversationRequestBody",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Payload of the request to assign a conversation",
        "generatedName": "AssignConversationRequest",
        "title": "Assign Conversation Request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "attach_contact_to_conversation_request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "attachContactToConversationRequestAdminId",
            "key": "admin_id",
            "schema": {
              "generatedName": "attachContactToConversationRequestAdminId",
              "title": "Assign Conversation Request",
              "value": {
                "description": "The `id` of the admin who is adding the new participant.",
                "schema": {
                  "example": "12345",
                  "type": "string"
                },
                "generatedName": "AttachContactToConversationRequestAdminId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "attachContactToConversationRequestCustomer",
            "key": "customer",
            "schema": {
              "generatedName": "attachContactToConversationRequestCustomer",
              "title": "Assign Conversation Request",
              "value": {
                "value": {
                  "generatedName": "AttachContactToConversationRequestCustomer",
                  "schemas": [
                    {
                      "allOf": [],
                      "properties": [
                        {
                          "conflict": {},
                          "generatedName": "attachContactToConversationRequestCustomerIntercomUserIdIntercomUserId",
                          "key": "intercom_user_id",
                          "schema": {
                            "description": "The identifier for the contact as given by Intercom.",
                            "schema": {
                              "example": "6329bd9ffe4e2e91dac76188",
                              "type": "string"
                            },
                            "generatedName": "AttachContactToConversationRequestCustomerIntercomUserIdIntercomUserId",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "audiences": []
                        },
                        {
                          "conflict": {},
                          "generatedName": "attachContactToConversationRequestCustomerIntercomUserIdCustomer",
                          "key": "customer",
                          "schema": {
                            "generatedName": "attachContactToConversationRequestCustomerIntercomUserIdCustomer",
                            "title": "Intercom User ID",
                            "value": {
                              "generatedName": "AttachContactToConversationRequestCustomerIntercomUserIdCustomer",
                              "schema": "customer_request",
                              "source": {
                                "file": "../openapi.yml",
                                "type": "openapi"
                              },
                              "type": "reference"
                            },
                            "groupName": [],
                            "type": "optional"
                          },
                          "audiences": [],
                          "readonly": false
                        }
                      ],
                      "allOfPropertyConflicts": [],
                      "generatedName": "AttachContactToConversationRequestCustomerIntercomUserId",
                      "title": "Intercom User ID",
                      "groupName": [],
                      "additionalProperties": false,
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "object"
                    },
                    {
                      "allOf": [],
                      "properties": [
                        {
                          "conflict": {},
                          "generatedName": "attachContactToConversationRequestCustomerUserIdUserId",
                          "key": "user_id",
                          "schema": {
                            "description": "The external_id you have defined for the contact who is being added as a participant.",
                            "schema": {
                              "example": "6329bd9ffe4e2e91dac76188",
                              "type": "string"
                            },
                            "generatedName": "AttachContactToConversationRequestCustomerUserIdUserId",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "audiences": []
                        },
                        {
                          "conflict": {},
                          "generatedName": "attachContactToConversationRequestCustomerUserIdCustomer",
                          "key": "customer",
                          "schema": {
                            "generatedName": "attachContactToConversationRequestCustomerUserIdCustomer",
                            "title": "User ID",
                            "value": {
                              "generatedName": "AttachContactToConversationRequestCustomerUserIdCustomer",
                              "schema": "customer_request",
                              "source": {
                                "file": "../openapi.yml",
                                "type": "openapi"
                              },
                              "type": "reference"
                            },
                            "groupName": [],
                            "type": "optional"
                          },
                          "audiences": [],
                          "readonly": false
                        }
                      ],
                      "allOfPropertyConflicts": [],
                      "generatedName": "AttachContactToConversationRequestCustomerUserId",
                      "title": "User ID",
                      "groupName": [],
                      "additionalProperties": false,
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "object"
                    },
                    {
                      "allOf": [],
                      "properties": [
                        {
                          "conflict": {},
                          "generatedName": "attachContactToConversationRequestCustomerCustomerEmail",
                          "key": "email",
                          "schema": {
                            "description": "The email you have defined for the contact who is being added as a participant.",
                            "schema": {
                              "example": "winstonsmith@truth.org",
                              "type": "string"
                            },
                            "generatedName": "AttachContactToConversationRequestCustomerCustomerEmail",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "audiences": []
                        },
                        {
                          "conflict": {},
                          "generatedName": "attachContactToConversationRequestCustomerCustomerCustomer",
                          "key": "customer",
                          "schema": {
                            "generatedName": "attachContactToConversationRequestCustomerCustomerCustomer",
                            "nameOverride": "Email",
                            "title": "Email",
                            "value": {
                              "generatedName": "AttachContactToConversationRequestCustomerCustomerCustomer",
                              "schema": "customer_request",
                              "source": {
                                "file": "../openapi.yml",
                                "type": "openapi"
                              },
                              "type": "reference"
                            },
                            "groupName": [],
                            "type": "optional"
                          },
                          "audiences": [],
                          "readonly": false
                        }
                      ],
                      "allOfPropertyConflicts": [],
                      "generatedName": "AttachContactToConversationRequestCustomerCustomer",
                      "nameOverride": "Email",
                      "title": "Email",
                      "groupName": [],
                      "additionalProperties": false,
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "object"
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "undiscriminated"
                },
                "type": "oneOf"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Payload of the request to assign a conversation",
        "generatedName": "AttachContactToConversationRequest",
        "title": "Assign Conversation Request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "close_conversation_request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "closeConversationRequestMessageType",
            "key": "message_type",
            "schema": {
              "value": {
                "value": "close",
                "type": "string"
              },
              "generatedName": "CloseConversationRequestMessageType",
              "groupName": [],
              "type": "literal"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "closeConversationRequestType",
            "key": "type",
            "schema": {
              "value": {
                "value": "admin",
                "type": "string"
              },
              "generatedName": "CloseConversationRequestType",
              "groupName": [],
              "type": "literal"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "closeConversationRequestAdminId",
            "key": "admin_id",
            "schema": {
              "description": "The id of the admin who is performing the action.",
              "schema": {
                "example": "12345",
                "type": "string"
              },
              "generatedName": "CloseConversationRequestAdminId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "closeConversationRequestBody",
            "key": "body",
            "schema": {
              "generatedName": "closeConversationRequestBody",
              "title": "Close Conversation Request",
              "value": {
                "description": "Optionally you can leave a message in the conversation to provide additional context to the user and other teammates.",
                "schema": {
                  "example": " This conversation is now closed!",
                  "type": "string"
                },
                "generatedName": "CloseConversationRequestBody",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Payload of the request to close a conversation",
        "generatedName": "CloseConversationRequest",
        "title": "Close Conversation Request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "collection": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "collectionId",
            "key": "id",
            "schema": {
              "generatedName": "collectionId",
              "nameOverride": "Collection",
              "title": "Collection",
              "value": {
                "description": "The unique identifier for the collection which is given by Intercom.",
                "schema": {
                  "example": "6871119",
                  "type": "string"
                },
                "generatedName": "CollectionId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Help Center"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "collectionWorkspaceId",
            "key": "workspace_id",
            "schema": {
              "generatedName": "collectionWorkspaceId",
              "nameOverride": "Collection",
              "title": "Collection",
              "value": {
                "description": "The id of the workspace which the collection belongs to.",
                "schema": {
                  "example": "hfi1bx4l",
                  "type": "string"
                },
                "generatedName": "CollectionWorkspaceId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Help Center"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "collectionName",
            "key": "name",
            "schema": {
              "generatedName": "collectionName",
              "nameOverride": "Collection",
              "title": "Collection",
              "value": {
                "description": "The name of the collection. For multilingual collections, this will be the name of the default language's content.",
                "schema": {
                  "example": "Default language name",
                  "type": "string"
                },
                "generatedName": "CollectionName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Help Center"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "collectionDescription",
            "key": "description",
            "schema": {
              "generatedName": "collectionDescription",
              "nameOverride": "Collection",
              "title": "Collection",
              "value": {
                "generatedName": "CollectionDescription",
                "description": "The description of the collection. For multilingual help centers, this will be the description of the collection for the default language.",
                "value": {
                  "description": "The description of the collection. For multilingual help centers, this will be the description of the collection for the default language.",
                  "schema": {
                    "example": "Default language description",
                    "type": "string"
                  },
                  "generatedName": "CollectionDescription",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Help Center"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "collectionCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "collectionCreatedAt",
              "nameOverride": "Collection",
              "title": "Collection",
              "value": {
                "description": "The time when the article was created (seconds). For multilingual articles, this will be the timestamp of creation of the default language's content.",
                "schema": {
                  "example": 1672928359,
                  "type": "int"
                },
                "generatedName": "CollectionCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Help Center"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "collectionUpdatedAt",
            "key": "updated_at",
            "schema": {
              "generatedName": "collectionUpdatedAt",
              "nameOverride": "Collection",
              "title": "Collection",
              "value": {
                "description": "The time when the article was last updated (seconds). For multilingual articles, this will be the timestamp of last update of the default language's content.",
                "schema": {
                  "example": 1672928610,
                  "type": "int"
                },
                "generatedName": "CollectionUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Help Center"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "collectionUrl",
            "key": "url",
            "schema": {
              "generatedName": "collectionUrl",
              "nameOverride": "Collection",
              "title": "Collection",
              "value": {
                "generatedName": "CollectionUrl",
                "description": "The URL of the collection. For multilingual help centers, this will be the URL of the collection for the default language.",
                "value": {
                  "description": "The URL of the collection. For multilingual help centers, this will be the URL of the collection for the default language.",
                  "schema": {
                    "example": "http://intercom.test/help/collection/name",
                    "type": "string"
                  },
                  "generatedName": "CollectionUrl",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Help Center"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "collectionIcon",
            "key": "icon",
            "schema": {
              "generatedName": "collectionIcon",
              "nameOverride": "Collection",
              "title": "Collection",
              "value": {
                "generatedName": "CollectionIcon",
                "description": "The icon of the collection.",
                "value": {
                  "description": "The icon of the collection.",
                  "schema": {
                    "example": "book-bookmark",
                    "type": "string"
                  },
                  "generatedName": "CollectionIcon",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Help Center"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "collectionOrder",
            "key": "order",
            "schema": {
              "generatedName": "collectionOrder",
              "nameOverride": "Collection",
              "title": "Collection",
              "value": {
                "description": "The order of the section in relation to others sections within a collection. Values go from `0` upwards. `0` is the default if there's no order.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "CollectionOrder",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Help Center"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "collectionDefaultLocale",
            "key": "default_locale",
            "schema": {
              "generatedName": "collectionDefaultLocale",
              "nameOverride": "Collection",
              "title": "Collection",
              "value": {
                "description": "The default locale of the help center. This field is only returned for multilingual help centers.",
                "schema": {
                  "example": "en",
                  "type": "string"
                },
                "generatedName": "CollectionDefaultLocale",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Help Center"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "collectionTranslatedContent",
            "key": "translated_content",
            "schema": {
              "generatedName": "collectionTranslatedContent",
              "nameOverride": "Collection",
              "title": "Collection",
              "value": {
                "generatedName": "CollectionTranslatedContent",
                "schema": "group_translated_content",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [
                "Help Center"
              ],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "collectionParentId",
            "key": "parent_id",
            "schema": {
              "generatedName": "collectionParentId",
              "nameOverride": "Collection",
              "title": "Collection",
              "value": {
                "generatedName": "CollectionParentId",
                "description": "The id of the parent collection. If `null` then it is the first level collection.",
                "value": {
                  "description": "The id of the parent collection. If `null` then it is the first level collection.",
                  "schema": {
                    "example": "6871118",
                    "type": "string"
                  },
                  "generatedName": "CollectionParentId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Help Center"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "collectionHelpCenterId",
            "key": "help_center_id",
            "schema": {
              "generatedName": "collectionHelpCenterId",
              "nameOverride": "Collection",
              "title": "Collection",
              "value": {
                "generatedName": "CollectionHelpCenterId",
                "description": "The id of the help center the collection is in.",
                "value": {
                  "description": "The id of the help center the collection is in.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "CollectionHelpCenterId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Help Center"
              ],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Collections are top level containers for Articles within the Help Center.",
        "generatedName": "Collection",
        "nameOverride": "Collection",
        "title": "Collection",
        "groupName": [
          "Help Center"
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "collection_list": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "collectionListType",
            "key": "type",
            "schema": {
              "generatedName": "collectionListType",
              "nameOverride": "Collections",
              "title": "Collections",
              "value": {
                "description": "The type of the object - `list`.",
                "value": {
                  "value": "list",
                  "type": "string"
                },
                "generatedName": "CollectionListType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "collectionListPages",
            "key": "pages",
            "schema": {
              "generatedName": "collectionListPages",
              "nameOverride": "Collections",
              "title": "Collections",
              "value": {
                "generatedName": "CollectionListPages",
                "schema": "cursor_pages",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "collectionListTotalCount",
            "key": "total_count",
            "schema": {
              "generatedName": "collectionListTotalCount",
              "nameOverride": "Collections",
              "title": "Collections",
              "value": {
                "description": "A count of the total number of collections.",
                "schema": {
                  "example": 1,
                  "type": "int"
                },
                "generatedName": "CollectionListTotalCount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "collectionListData",
            "key": "data",
            "schema": {
              "generatedName": "collectionListData",
              "nameOverride": "Collections",
              "title": "Collections",
              "value": {
                "description": "An array of collection objects",
                "value": {
                  "generatedName": "CollectionListDataItem",
                  "schema": "collection",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "CollectionListData",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "This will return a list of Collections for the App.",
        "generatedName": "CollectionList",
        "nameOverride": "Collections",
        "title": "Collections",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "company": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "companyType",
            "key": "type",
            "schema": {
              "generatedName": "companyType",
              "nameOverride": "Company",
              "title": "Company",
              "value": {
                "description": "Value is `company`",
                "value": {
                  "value": "company",
                  "type": "string"
                },
                "generatedName": "CompanyType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [
                "Companies"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companyId",
            "key": "id",
            "schema": {
              "generatedName": "companyId",
              "nameOverride": "Company",
              "title": "Company",
              "value": {
                "description": "The Intercom defined id representing the company.",
                "schema": {
                  "example": "531ee472cce572a6ec000006",
                  "type": "string"
                },
                "generatedName": "CompanyId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Companies"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companyName",
            "key": "name",
            "schema": {
              "generatedName": "companyName",
              "nameOverride": "Company",
              "title": "Company",
              "value": {
                "description": "The name of the company.",
                "schema": {
                  "example": "Blue Sun",
                  "type": "string"
                },
                "generatedName": "CompanyName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Companies"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companyAppId",
            "key": "app_id",
            "schema": {
              "generatedName": "companyAppId",
              "nameOverride": "Company",
              "title": "Company",
              "value": {
                "description": "The Intercom defined code of the workspace the company is associated to.",
                "schema": {
                  "example": "ecahpwf5",
                  "type": "string"
                },
                "generatedName": "CompanyAppId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Companies"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companyPlan",
            "key": "plan",
            "schema": {
              "generatedName": "companyPlan",
              "nameOverride": "Company",
              "title": "Company",
              "value": {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "companyPlanType",
                    "key": "type",
                    "schema": {
                      "generatedName": "companyPlanType",
                      "value": {
                        "description": "Value is always \"plan\"",
                        "schema": {
                          "example": "plan",
                          "type": "string"
                        },
                        "generatedName": "CompanyPlanType",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "companyPlanId",
                    "key": "id",
                    "schema": {
                      "generatedName": "companyPlanId",
                      "value": {
                        "description": "The id of the plan",
                        "schema": {
                          "example": "269315",
                          "type": "string"
                        },
                        "generatedName": "CompanyPlanId",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "companyPlanName",
                    "key": "name",
                    "schema": {
                      "generatedName": "companyPlanName",
                      "value": {
                        "description": "The name of the plan",
                        "schema": {
                          "example": "Pro",
                          "type": "string"
                        },
                        "generatedName": "CompanyPlanName",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "generatedName": "CompanyPlan",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [
                "Companies"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companyCompanyId",
            "key": "company_id",
            "schema": {
              "generatedName": "companyCompanyId",
              "nameOverride": "Company",
              "title": "Company",
              "value": {
                "description": "The company id you have defined for the company.",
                "schema": {
                  "example": "6",
                  "type": "string"
                },
                "generatedName": "CompanyCompanyId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Companies"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companyRemoteCreatedAt",
            "key": "remote_created_at",
            "schema": {
              "generatedName": "companyRemoteCreatedAt",
              "nameOverride": "Company",
              "title": "Company",
              "value": {
                "description": "The time the company was created by you.",
                "schema": {
                  "example": 1663597223,
                  "type": "int"
                },
                "generatedName": "CompanyRemoteCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Companies"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companyCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "companyCreatedAt",
              "nameOverride": "Company",
              "title": "Company",
              "value": {
                "description": "The time the company was added in Intercom.",
                "schema": {
                  "example": 1663597223,
                  "type": "int"
                },
                "generatedName": "CompanyCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Companies"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companyUpdatedAt",
            "key": "updated_at",
            "schema": {
              "generatedName": "companyUpdatedAt",
              "nameOverride": "Company",
              "title": "Company",
              "value": {
                "description": "The last time the company was updated.",
                "schema": {
                  "example": 1663597223,
                  "type": "int"
                },
                "generatedName": "CompanyUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Companies"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companyLastRequestAt",
            "key": "last_request_at",
            "schema": {
              "generatedName": "companyLastRequestAt",
              "nameOverride": "Company",
              "title": "Company",
              "value": {
                "description": "The time the company last recorded making a request.",
                "schema": {
                  "example": 1663597223,
                  "type": "int"
                },
                "generatedName": "CompanyLastRequestAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Companies"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companySize",
            "key": "size",
            "schema": {
              "generatedName": "companySize",
              "nameOverride": "Company",
              "title": "Company",
              "value": {
                "description": "The number of employees in the company.",
                "schema": {
                  "example": 100,
                  "type": "int"
                },
                "generatedName": "CompanySize",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Companies"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companyWebsite",
            "key": "website",
            "schema": {
              "generatedName": "companyWebsite",
              "nameOverride": "Company",
              "title": "Company",
              "value": {
                "description": "The URL for the company website.",
                "schema": {
                  "example": "https://www.intercom.com",
                  "type": "string"
                },
                "generatedName": "CompanyWebsite",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Companies"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companyIndustry",
            "key": "industry",
            "schema": {
              "generatedName": "companyIndustry",
              "nameOverride": "Company",
              "title": "Company",
              "value": {
                "description": "The industry that the company operates in.",
                "schema": {
                  "example": "Software",
                  "type": "string"
                },
                "generatedName": "CompanyIndustry",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Companies"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companyMonthlySpend",
            "key": "monthly_spend",
            "schema": {
              "generatedName": "companyMonthlySpend",
              "nameOverride": "Company",
              "title": "Company",
              "value": {
                "description": "How much revenue the company generates for your business.",
                "schema": {
                  "example": 100,
                  "type": "int"
                },
                "generatedName": "CompanyMonthlySpend",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Companies"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companySessionCount",
            "key": "session_count",
            "schema": {
              "generatedName": "companySessionCount",
              "nameOverride": "Company",
              "title": "Company",
              "value": {
                "description": "How many sessions the company has recorded.",
                "schema": {
                  "example": 100,
                  "type": "int"
                },
                "generatedName": "CompanySessionCount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Companies"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companyUserCount",
            "key": "user_count",
            "schema": {
              "generatedName": "companyUserCount",
              "nameOverride": "Company",
              "title": "Company",
              "value": {
                "description": "The number of users in the company.",
                "schema": {
                  "example": 100,
                  "type": "int"
                },
                "generatedName": "CompanyUserCount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Companies"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companyCustomAttributes",
            "key": "custom_attributes",
            "schema": {
              "generatedName": "companyCustomAttributes",
              "nameOverride": "Company",
              "title": "Company",
              "value": {
                "description": "The custom attributes you have set on the company.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "CompanyCustomAttributesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "CompanyCustomAttributesValue",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "CompanyCustomAttributes",
                "groupName": [],
                "type": "map"
              },
              "groupName": [
                "Companies"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companyTags",
            "key": "tags",
            "schema": {
              "generatedName": "companyTags",
              "nameOverride": "Company",
              "title": "Company",
              "value": {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "companyTagsType",
                    "key": "type",
                    "schema": {
                      "generatedName": "companyTagsType",
                      "value": {
                        "description": "The type of the object",
                        "value": {
                          "value": "tag.list",
                          "type": "string"
                        },
                        "generatedName": "CompanyTagsType",
                        "groupName": [],
                        "type": "literal"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "companyTagsTags",
                    "key": "tags",
                    "schema": {
                      "generatedName": "companyTagsTags",
                      "value": {
                        "value": {
                          "generatedName": "CompanyTagsTagsItem",
                          "type": "unknown"
                        },
                        "generatedName": "CompanyTagsTags",
                        "groupName": [],
                        "type": "array"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "description": "The list of tags associated with the company",
                "generatedName": "CompanyTags",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [
                "Companies"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companySegments",
            "key": "segments",
            "schema": {
              "generatedName": "companySegments",
              "nameOverride": "Company",
              "title": "Company",
              "value": {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "companySegmentsType",
                    "key": "type",
                    "schema": {
                      "generatedName": "companySegmentsType",
                      "value": {
                        "description": "The type of the object",
                        "value": {
                          "value": "segment.list",
                          "type": "string"
                        },
                        "generatedName": "CompanySegmentsType",
                        "groupName": [],
                        "type": "literal"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "companySegmentsSegments",
                    "key": "segments",
                    "schema": {
                      "generatedName": "companySegmentsSegments",
                      "value": {
                        "value": {
                          "generatedName": "CompanySegmentsSegmentsItem",
                          "schema": "segment",
                          "source": {
                            "file": "../openapi.yml",
                            "type": "openapi"
                          },
                          "type": "reference"
                        },
                        "generatedName": "CompanySegmentsSegments",
                        "groupName": [],
                        "type": "array"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "description": "The list of segments associated with the company",
                "generatedName": "CompanySegments",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [
                "Companies"
              ],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Companies allow you to represent organizations using your product. Each company will have its own description and be associated with contacts. You can fetch, create, update and list companies.",
        "generatedName": "Company",
        "nameOverride": "Company",
        "title": "Company",
        "groupName": [
          "Companies"
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "company_attached_contacts": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "companyAttachedContactsType",
            "key": "type",
            "schema": {
              "generatedName": "companyAttachedContactsType",
              "title": "Company Attached Contacts",
              "value": {
                "description": "The type of object - `list`",
                "value": {
                  "value": "list",
                  "type": "string"
                },
                "generatedName": "CompanyAttachedContactsType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companyAttachedContactsData",
            "key": "data",
            "schema": {
              "generatedName": "companyAttachedContactsData",
              "title": "Company Attached Contacts",
              "value": {
                "description": "An array containing Contact Objects",
                "value": {
                  "generatedName": "CompanyAttachedContactsDataItem",
                  "schema": "contact",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "CompanyAttachedContactsData",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companyAttachedContactsTotalCount",
            "key": "total_count",
            "schema": {
              "generatedName": "companyAttachedContactsTotalCount",
              "title": "Company Attached Contacts",
              "value": {
                "description": "The total number of contacts",
                "schema": {
                  "example": 100,
                  "type": "int"
                },
                "generatedName": "CompanyAttachedContactsTotalCount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companyAttachedContactsPages",
            "key": "pages",
            "schema": {
              "generatedName": "companyAttachedContactsPages",
              "title": "Company Attached Contacts",
              "value": {
                "generatedName": "CompanyAttachedContactsPages",
                "schema": "cursor_pages",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A list of Contact Objects",
        "generatedName": "CompanyAttachedContacts",
        "title": "Company Attached Contacts",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "company_attached_segments": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "companyAttachedSegmentsType",
            "key": "type",
            "schema": {
              "generatedName": "companyAttachedSegmentsType",
              "title": "Company Attached Segments",
              "value": {
                "description": "The type of object - `list`",
                "value": {
                  "value": "list",
                  "type": "string"
                },
                "generatedName": "CompanyAttachedSegmentsType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companyAttachedSegmentsData",
            "key": "data",
            "schema": {
              "generatedName": "companyAttachedSegmentsData",
              "title": "Company Attached Segments",
              "value": {
                "description": "An array containing Segment Objects",
                "value": {
                  "generatedName": "CompanyAttachedSegmentsDataItem",
                  "schema": "segment",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "CompanyAttachedSegmentsData",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A list of Segment Objects",
        "generatedName": "CompanyAttachedSegments",
        "title": "Company Attached Segments",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "company_list": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "companyListType",
            "key": "type",
            "schema": {
              "generatedName": "companyListType",
              "nameOverride": "Companies",
              "title": "Companies",
              "value": {
                "description": "The type of object - `list`.",
                "value": {
                  "value": "list",
                  "type": "string"
                },
                "generatedName": "CompanyListType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companyListPages",
            "key": "pages",
            "schema": {
              "generatedName": "companyListPages",
              "nameOverride": "Companies",
              "title": "Companies",
              "value": {
                "generatedName": "CompanyListPages",
                "schema": "cursor_pages",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "companyListTotalCount",
            "key": "total_count",
            "schema": {
              "generatedName": "companyListTotalCount",
              "nameOverride": "Companies",
              "title": "Companies",
              "value": {
                "description": "The total number of companies.",
                "schema": {
                  "example": 100,
                  "type": "int"
                },
                "generatedName": "CompanyListTotalCount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "companyListData",
            "key": "data",
            "schema": {
              "generatedName": "companyListData",
              "nameOverride": "Companies",
              "title": "Companies",
              "value": {
                "description": "An array containing Company Objects.",
                "value": {
                  "generatedName": "CompanyListDataItem",
                  "schema": "company",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "CompanyListData",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "This will return a list of companies for the App.",
        "generatedName": "CompanyList",
        "nameOverride": "Companies",
        "title": "Companies",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "company_scroll": {
        "generatedName": "CompanyScroll",
        "title": "Company Scroll",
        "description": "Companies allow you to represent organizations using your product. Each company will have its own description and be associated with contacts. You can fetch, create, update and list companies.",
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "companyScrollType",
              "key": "type",
              "schema": {
                "generatedName": "companyScrollType",
                "title": "Company Scroll",
                "value": {
                  "description": "The type of object - `list`",
                  "value": {
                    "value": "list",
                    "type": "string"
                  },
                  "generatedName": "CompanyScrollType",
                  "groupName": [],
                  "type": "literal"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "companyScrollData",
              "key": "data",
              "schema": {
                "generatedName": "companyScrollData",
                "title": "Company Scroll",
                "value": {
                  "value": {
                    "generatedName": "CompanyScrollDataItem",
                    "schema": "company",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "CompanyScrollData",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "companyScrollPages",
              "key": "pages",
              "schema": {
                "generatedName": "companyScrollPages",
                "title": "Company Scroll",
                "value": {
                  "generatedName": "CompanyScrollPages",
                  "schema": "cursor_pages",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "companyScrollTotalCount",
              "key": "total_count",
              "schema": {
                "generatedName": "companyScrollTotalCount",
                "title": "Company Scroll",
                "value": {
                  "generatedName": "CompanyScrollTotalCount",
                  "description": "The total number of companies",
                  "value": {
                    "description": "The total number of companies",
                    "schema": {
                      "example": 100,
                      "type": "int"
                    },
                    "generatedName": "CompanyScrollTotalCount",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "companyScrollScrollParam",
              "key": "scroll_param",
              "schema": {
                "generatedName": "companyScrollScrollParam",
                "title": "Company Scroll",
                "value": {
                  "description": "The scroll parameter to use in the next request to fetch the next page of results.",
                  "schema": {
                    "example": "25b649f7-4d33-4ef6-88f5-60e5b8244309",
                    "type": "string"
                  },
                  "generatedName": "CompanyScrollScrollParam",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "Companies allow you to represent organizations using your product. Each company will have its own description and be associated with contacts. You can fetch, create, update and list companies.",
          "generatedName": "CompanyScroll",
          "title": "Company Scroll",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "groupName": [],
        "type": "nullable"
      },
      "contact": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "contactType",
            "key": "type",
            "schema": {
              "generatedName": "contactType",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "description": "The type of object.",
                "schema": {
                  "example": "contact",
                  "type": "string"
                },
                "generatedName": "ContactType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactId",
            "key": "id",
            "schema": {
              "generatedName": "contactId",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "description": "The unique identifier for the contact which is given by Intercom.",
                "schema": {
                  "example": "5ba682d23d7cf92bef87bfd4",
                  "type": "string"
                },
                "generatedName": "ContactId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactExternalId",
            "key": "external_id",
            "schema": {
              "generatedName": "contactExternalId",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "generatedName": "ContactExternalId",
                "description": "The unique identifier for the contact which is provided by the Client.",
                "value": {
                  "description": "The unique identifier for the contact which is provided by the Client.",
                  "schema": {
                    "example": "f3b87a2e09d514c6c2e79b9a",
                    "type": "string"
                  },
                  "generatedName": "ContactExternalId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactWorkspaceId",
            "key": "workspace_id",
            "schema": {
              "generatedName": "contactWorkspaceId",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "description": "The id of the workspace which the contact belongs to.",
                "schema": {
                  "example": "ecahpwf5",
                  "type": "string"
                },
                "generatedName": "ContactWorkspaceId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactRole",
            "key": "role",
            "schema": {
              "generatedName": "contactRole",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "description": "The role of the contact.",
                "schema": {
                  "example": "user",
                  "type": "string"
                },
                "generatedName": "ContactRole",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactEmail",
            "key": "email",
            "schema": {
              "generatedName": "contactEmail",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "description": "The contact's email.",
                "schema": {
                  "example": "joe@example.com",
                  "type": "string"
                },
                "generatedName": "ContactEmail",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactEmailDomain",
            "key": "email_domain",
            "schema": {
              "generatedName": "contactEmailDomain",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "description": "The contact's email domain.",
                "schema": {
                  "example": "example.com",
                  "type": "string"
                },
                "generatedName": "ContactEmailDomain",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactPhone",
            "key": "phone",
            "schema": {
              "generatedName": "contactPhone",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "generatedName": "ContactPhone",
                "description": "The contacts phone.",
                "value": {
                  "description": "The contacts phone.",
                  "schema": {
                    "example": "+1123456789",
                    "type": "string"
                  },
                  "generatedName": "ContactPhone",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactFormattedPhone",
            "key": "formatted_phone",
            "schema": {
              "generatedName": "contactFormattedPhone",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "generatedName": "ContactFormattedPhone",
                "description": "The contacts phone number normalized to the E164 format",
                "value": {
                  "description": "The contacts phone number normalized to the E164 format",
                  "schema": {
                    "example": "+1123456789",
                    "type": "string"
                  },
                  "generatedName": "ContactFormattedPhone",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactName",
            "key": "name",
            "schema": {
              "generatedName": "contactName",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "generatedName": "ContactName",
                "description": "The contacts name.",
                "value": {
                  "description": "The contacts name.",
                  "schema": {
                    "example": "John Doe",
                    "type": "string"
                  },
                  "generatedName": "ContactName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactOwnerId",
            "key": "owner_id",
            "schema": {
              "generatedName": "contactOwnerId",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "generatedName": "ContactOwnerId",
                "description": "The id of an admin that has been assigned account ownership of the contact.",
                "value": {
                  "description": "The id of an admin that has been assigned account ownership of the contact.",
                  "schema": {
                    "example": 123,
                    "type": "int"
                  },
                  "generatedName": "ContactOwnerId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactHasHardBounced",
            "key": "has_hard_bounced",
            "schema": {
              "generatedName": "contactHasHardBounced",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "description": "Whether the contact has had an email sent to them hard bounce.",
                "schema": {
                  "example": true,
                  "type": "boolean"
                },
                "generatedName": "ContactHasHardBounced",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactMarkedEmailAsSpam",
            "key": "marked_email_as_spam",
            "schema": {
              "generatedName": "contactMarkedEmailAsSpam",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "description": "Whether the contact has marked an email sent to them as spam.",
                "schema": {
                  "example": true,
                  "type": "boolean"
                },
                "generatedName": "ContactMarkedEmailAsSpam",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactUnsubscribedFromEmails",
            "key": "unsubscribed_from_emails",
            "schema": {
              "generatedName": "contactUnsubscribedFromEmails",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "description": "Whether the contact is unsubscribed from emails.",
                "schema": {
                  "example": true,
                  "type": "boolean"
                },
                "generatedName": "ContactUnsubscribedFromEmails",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "contactCreatedAt",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "description": "(UNIX timestamp) The time when the contact was created.",
                "schema": {
                  "example": 1571672154,
                  "type": "int"
                },
                "generatedName": "ContactCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactUpdatedAt",
            "key": "updated_at",
            "schema": {
              "generatedName": "contactUpdatedAt",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "description": "(UNIX timestamp) The time when the contact was last updated.",
                "schema": {
                  "example": 1571672154,
                  "type": "int"
                },
                "generatedName": "ContactUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactSignedUpAt",
            "key": "signed_up_at",
            "schema": {
              "generatedName": "contactSignedUpAt",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "generatedName": "ContactSignedUpAt",
                "description": "(UNIX timestamp) The time specified for when a contact signed up.",
                "value": {
                  "description": "(UNIX timestamp) The time specified for when a contact signed up.",
                  "schema": {
                    "example": 1571672154,
                    "type": "int"
                  },
                  "generatedName": "ContactSignedUpAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactLastSeenAt",
            "key": "last_seen_at",
            "schema": {
              "generatedName": "contactLastSeenAt",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "generatedName": "ContactLastSeenAt",
                "description": "(UNIX timestamp) The time when the contact was last seen (either where the Intercom Messenger was installed or when specified manually).",
                "value": {
                  "description": "(UNIX timestamp) The time when the contact was last seen (either where the Intercom Messenger was installed or when specified manually).",
                  "schema": {
                    "example": 1571672154,
                    "type": "int"
                  },
                  "generatedName": "ContactLastSeenAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactLastRepliedAt",
            "key": "last_replied_at",
            "schema": {
              "generatedName": "contactLastRepliedAt",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "generatedName": "ContactLastRepliedAt",
                "description": "(UNIX timestamp) The time when the contact last messaged in.",
                "value": {
                  "description": "(UNIX timestamp) The time when the contact last messaged in.",
                  "schema": {
                    "example": 1571672154,
                    "type": "int"
                  },
                  "generatedName": "ContactLastRepliedAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactLastContactedAt",
            "key": "last_contacted_at",
            "schema": {
              "generatedName": "contactLastContactedAt",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "generatedName": "ContactLastContactedAt",
                "description": "(UNIX timestamp) The time when the contact was last messaged.",
                "value": {
                  "description": "(UNIX timestamp) The time when the contact was last messaged.",
                  "schema": {
                    "example": 1571672154,
                    "type": "int"
                  },
                  "generatedName": "ContactLastContactedAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactLastEmailOpenedAt",
            "key": "last_email_opened_at",
            "schema": {
              "generatedName": "contactLastEmailOpenedAt",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "generatedName": "ContactLastEmailOpenedAt",
                "description": "(UNIX timestamp) The time when the contact last opened an email.",
                "value": {
                  "description": "(UNIX timestamp) The time when the contact last opened an email.",
                  "schema": {
                    "example": 1571672154,
                    "type": "int"
                  },
                  "generatedName": "ContactLastEmailOpenedAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactLastEmailClickedAt",
            "key": "last_email_clicked_at",
            "schema": {
              "generatedName": "contactLastEmailClickedAt",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "generatedName": "ContactLastEmailClickedAt",
                "description": "(UNIX timestamp) The time when the contact last clicked a link in an email.",
                "value": {
                  "description": "(UNIX timestamp) The time when the contact last clicked a link in an email.",
                  "schema": {
                    "example": 1571672154,
                    "type": "int"
                  },
                  "generatedName": "ContactLastEmailClickedAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactLanguageOverride",
            "key": "language_override",
            "schema": {
              "generatedName": "contactLanguageOverride",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "generatedName": "ContactLanguageOverride",
                "description": "A preferred language setting for the contact, used by the Intercom Messenger even if their browser settings change.",
                "value": {
                  "description": "A preferred language setting for the contact, used by the Intercom Messenger even if their browser settings change.",
                  "schema": {
                    "example": "en",
                    "type": "string"
                  },
                  "generatedName": "ContactLanguageOverride",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactBrowser",
            "key": "browser",
            "schema": {
              "generatedName": "contactBrowser",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "generatedName": "ContactBrowser",
                "description": "The name of the browser which the contact is using.",
                "value": {
                  "description": "The name of the browser which the contact is using.",
                  "schema": {
                    "example": "Chrome",
                    "type": "string"
                  },
                  "generatedName": "ContactBrowser",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactBrowserVersion",
            "key": "browser_version",
            "schema": {
              "generatedName": "contactBrowserVersion",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "generatedName": "ContactBrowserVersion",
                "description": "The version of the browser which the contact is using.",
                "value": {
                  "description": "The version of the browser which the contact is using.",
                  "schema": {
                    "example": "80.0.3987.132",
                    "type": "string"
                  },
                  "generatedName": "ContactBrowserVersion",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactBrowserLanguage",
            "key": "browser_language",
            "schema": {
              "generatedName": "contactBrowserLanguage",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "generatedName": "ContactBrowserLanguage",
                "description": "The language set by the browser which the contact is using.",
                "value": {
                  "description": "The language set by the browser which the contact is using.",
                  "schema": {
                    "example": "en-US",
                    "type": "string"
                  },
                  "generatedName": "ContactBrowserLanguage",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactOs",
            "key": "os",
            "schema": {
              "generatedName": "contactOs",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "generatedName": "ContactOs",
                "description": "The operating system which the contact is using.",
                "value": {
                  "description": "The operating system which the contact is using.",
                  "schema": {
                    "example": "Mac OS X",
                    "type": "string"
                  },
                  "generatedName": "ContactOs",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactAndroidAppName",
            "key": "android_app_name",
            "schema": {
              "generatedName": "contactAndroidAppName",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "generatedName": "ContactAndroidAppName",
                "description": "The name of the Android app which the contact is using.",
                "value": {
                  "description": "The name of the Android app which the contact is using.",
                  "schema": {
                    "example": "Intercom",
                    "type": "string"
                  },
                  "generatedName": "ContactAndroidAppName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactAndroidAppVersion",
            "key": "android_app_version",
            "schema": {
              "generatedName": "contactAndroidAppVersion",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "generatedName": "ContactAndroidAppVersion",
                "description": "The version of the Android app which the contact is using.",
                "value": {
                  "description": "The version of the Android app which the contact is using.",
                  "schema": {
                    "example": "5.0.0",
                    "type": "string"
                  },
                  "generatedName": "ContactAndroidAppVersion",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactAndroidDevice",
            "key": "android_device",
            "schema": {
              "generatedName": "contactAndroidDevice",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "generatedName": "ContactAndroidDevice",
                "description": "The Android device which the contact is using.",
                "value": {
                  "description": "The Android device which the contact is using.",
                  "schema": {
                    "example": "Pixel 3",
                    "type": "string"
                  },
                  "generatedName": "ContactAndroidDevice",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactAndroidOsVersion",
            "key": "android_os_version",
            "schema": {
              "generatedName": "contactAndroidOsVersion",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "generatedName": "ContactAndroidOsVersion",
                "description": "The version of the Android OS which the contact is using.",
                "value": {
                  "description": "The version of the Android OS which the contact is using.",
                  "schema": {
                    "example": "10",
                    "type": "string"
                  },
                  "generatedName": "ContactAndroidOsVersion",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactAndroidSdkVersion",
            "key": "android_sdk_version",
            "schema": {
              "generatedName": "contactAndroidSdkVersion",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "generatedName": "ContactAndroidSdkVersion",
                "description": "The version of the Android SDK which the contact is using.",
                "value": {
                  "description": "The version of the Android SDK which the contact is using.",
                  "schema": {
                    "example": "28",
                    "type": "string"
                  },
                  "generatedName": "ContactAndroidSdkVersion",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactAndroidLastSeenAt",
            "key": "android_last_seen_at",
            "schema": {
              "generatedName": "contactAndroidLastSeenAt",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "generatedName": "ContactAndroidLastSeenAt",
                "description": "(UNIX timestamp) The time when the contact was last seen on an Android device.",
                "value": {
                  "description": "(UNIX timestamp) The time when the contact was last seen on an Android device.",
                  "schema": {
                    "example": 1571672154,
                    "type": "int"
                  },
                  "generatedName": "ContactAndroidLastSeenAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactIosAppName",
            "key": "ios_app_name",
            "schema": {
              "generatedName": "contactIosAppName",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "generatedName": "ContactIosAppName",
                "description": "The name of the iOS app which the contact is using.",
                "value": {
                  "description": "The name of the iOS app which the contact is using.",
                  "schema": {
                    "example": "Intercom",
                    "type": "string"
                  },
                  "generatedName": "ContactIosAppName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactIosAppVersion",
            "key": "ios_app_version",
            "schema": {
              "generatedName": "contactIosAppVersion",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "generatedName": "ContactIosAppVersion",
                "description": "The version of the iOS app which the contact is using.",
                "value": {
                  "description": "The version of the iOS app which the contact is using.",
                  "schema": {
                    "example": "5.0.0",
                    "type": "string"
                  },
                  "generatedName": "ContactIosAppVersion",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactIosDevice",
            "key": "ios_device",
            "schema": {
              "generatedName": "contactIosDevice",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "generatedName": "ContactIosDevice",
                "description": "The iOS device which the contact is using.",
                "value": {
                  "description": "The iOS device which the contact is using.",
                  "schema": {
                    "example": "iPhone 11",
                    "type": "string"
                  },
                  "generatedName": "ContactIosDevice",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactIosOsVersion",
            "key": "ios_os_version",
            "schema": {
              "generatedName": "contactIosOsVersion",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "generatedName": "ContactIosOsVersion",
                "description": "The version of iOS which the contact is using.",
                "value": {
                  "description": "The version of iOS which the contact is using.",
                  "schema": {
                    "example": "13.3.1",
                    "type": "string"
                  },
                  "generatedName": "ContactIosOsVersion",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactIosSdkVersion",
            "key": "ios_sdk_version",
            "schema": {
              "generatedName": "contactIosSdkVersion",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "generatedName": "ContactIosSdkVersion",
                "description": "The version of the iOS SDK which the contact is using.",
                "value": {
                  "description": "The version of the iOS SDK which the contact is using.",
                  "schema": {
                    "example": "13.3.1",
                    "type": "string"
                  },
                  "generatedName": "ContactIosSdkVersion",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactIosLastSeenAt",
            "key": "ios_last_seen_at",
            "schema": {
              "generatedName": "contactIosLastSeenAt",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "generatedName": "ContactIosLastSeenAt",
                "description": "(UNIX timestamp) The last time the contact used the iOS app.",
                "value": {
                  "description": "(UNIX timestamp) The last time the contact used the iOS app.",
                  "schema": {
                    "example": 1571672154,
                    "type": "int"
                  },
                  "generatedName": "ContactIosLastSeenAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactCustomAttributes",
            "key": "custom_attributes",
            "schema": {
              "generatedName": "contactCustomAttributes",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "description": "The custom attributes which are set for the contact.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ContactCustomAttributesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ContactCustomAttributesValue",
                  "type": "unknown"
                },
                "generatedName": "ContactCustomAttributes",
                "groupName": [],
                "type": "map"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactAvatar",
            "key": "avatar",
            "schema": {
              "generatedName": "contactAvatar",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "generatedName": "ContactAvatar",
                "value": {
                  "allOf": [],
                  "properties": [
                    {
                      "conflict": {},
                      "generatedName": "contactAvatarType",
                      "key": "type",
                      "schema": {
                        "generatedName": "contactAvatarType",
                        "value": {
                          "description": "The type of object",
                          "schema": {
                            "example": "avatar",
                            "type": "string"
                          },
                          "generatedName": "ContactAvatarType",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "contactAvatarImageUrl",
                      "key": "image_url",
                      "schema": {
                        "generatedName": "contactAvatarImageUrl",
                        "value": {
                          "generatedName": "ContactAvatarImageUrl",
                          "description": "An image URL containing the avatar of a contact.",
                          "value": {
                            "description": "An image URL containing the avatar of a contact.",
                            "schema": {
                              "format": "uri",
                              "example": "https://example.org/128Wash.jpg",
                              "type": "string"
                            },
                            "generatedName": "ContactAvatarImageUrl",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "nullable"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    }
                  ],
                  "allOfPropertyConflicts": [],
                  "generatedName": "ContactAvatar",
                  "groupName": [],
                  "additionalProperties": false,
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "object"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactTags",
            "key": "tags",
            "schema": {
              "generatedName": "contactTags",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "generatedName": "ContactTags",
                "schema": "contact_tags",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "contactNotes",
            "key": "notes",
            "schema": {
              "generatedName": "contactNotes",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "generatedName": "ContactNotes",
                "schema": "contact_notes",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "contactCompanies",
            "key": "companies",
            "schema": {
              "generatedName": "contactCompanies",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "generatedName": "ContactCompanies",
                "schema": "contact_companies",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "contactLocation",
            "key": "location",
            "schema": {
              "generatedName": "contactLocation",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "generatedName": "ContactLocation",
                "schema": "contact_location",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "contactSocialProfiles",
            "key": "social_profiles",
            "schema": {
              "generatedName": "contactSocialProfiles",
              "nameOverride": "Contact",
              "title": "Contact",
              "value": {
                "generatedName": "ContactSocialProfiles",
                "schema": "contact_social_profiles",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [
                "Contacts"
              ],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Contact are the objects that represent your leads and users in Intercom.",
        "generatedName": "Contact",
        "nameOverride": "Contact",
        "title": "Contact",
        "groupName": [
          "Contacts"
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "contact_archived": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "contactArchivedType",
            "key": "type",
            "schema": {
              "generatedName": "contactArchivedType",
              "title": "Contact Archived",
              "value": {
                "description": "always contact",
                "value": {
                  "value": "contact",
                  "type": "string"
                },
                "generatedName": "ContactArchivedType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactArchivedId",
            "key": "id",
            "schema": {
              "generatedName": "contactArchivedId",
              "title": "Contact Archived",
              "value": {
                "description": "The unique identifier for the contact which is given by Intercom.",
                "schema": {
                  "example": "5ba682d23d7cf92bef87bfd4",
                  "type": "string"
                },
                "generatedName": "ContactArchivedId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactArchivedExternalId",
            "key": "external_id",
            "schema": {
              "generatedName": "contactArchivedExternalId",
              "title": "Contact Archived",
              "value": {
                "generatedName": "ContactArchivedExternalId",
                "description": "The unique identifier for the contact which is provided by the Client.",
                "value": {
                  "description": "The unique identifier for the contact which is provided by the Client.",
                  "schema": {
                    "example": "f3b87a2e09d514c6c2e79b9a",
                    "type": "string"
                  },
                  "generatedName": "ContactArchivedExternalId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactArchivedArchived",
            "key": "archived",
            "schema": {
              "generatedName": "contactArchivedArchived",
              "title": "Contact Archived",
              "value": {
                "description": "Whether the contact is archived or not.",
                "schema": {
                  "example": true,
                  "type": "boolean"
                },
                "generatedName": "ContactArchivedArchived",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "archived contact object",
        "generatedName": "ContactArchived",
        "title": "Contact Archived",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "contact_attached_companies": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "contactAttachedCompaniesType",
            "key": "type",
            "schema": {
              "generatedName": "contactAttachedCompaniesType",
              "title": "Contact Attached Companies",
              "value": {
                "description": "The type of object",
                "value": {
                  "value": "list",
                  "type": "string"
                },
                "generatedName": "ContactAttachedCompaniesType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactAttachedCompaniesCompanies",
            "key": "companies",
            "schema": {
              "generatedName": "contactAttachedCompaniesCompanies",
              "title": "Contact Attached Companies",
              "value": {
                "description": "An array containing Company Objects",
                "value": {
                  "generatedName": "ContactAttachedCompaniesCompaniesItem",
                  "schema": "company",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ContactAttachedCompaniesCompanies",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactAttachedCompaniesTotalCount",
            "key": "total_count",
            "schema": {
              "generatedName": "contactAttachedCompaniesTotalCount",
              "title": "Contact Attached Companies",
              "value": {
                "description": "The total number of companies associated to this contact",
                "schema": {
                  "example": 100,
                  "type": "int"
                },
                "generatedName": "ContactAttachedCompaniesTotalCount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactAttachedCompaniesPages",
            "key": "pages",
            "schema": {
              "generatedName": "contactAttachedCompaniesPages",
              "title": "Contact Attached Companies",
              "value": {
                "generatedName": "ContactAttachedCompaniesPages",
                "schema": "pages_link",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A list of Company Objects",
        "generatedName": "ContactAttachedCompanies",
        "title": "Contact Attached Companies",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "contact_companies": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "contactCompaniesUrl",
            "key": "url",
            "schema": {
              "generatedName": "contactCompaniesUrl",
              "title": "Contact companies",
              "value": {
                "description": "Url to get more company resources for this contact",
                "schema": {
                  "format": "uri",
                  "example": "/contacts/5ba682d23d7cf92bef87bfd4/companies",
                  "type": "string"
                },
                "generatedName": "ContactCompaniesUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactCompaniesTotalCount",
            "key": "total_count",
            "schema": {
              "generatedName": "contactCompaniesTotalCount",
              "title": "Contact companies",
              "value": {
                "description": "Int representing the total number of companyies attached to this contact",
                "schema": {
                  "example": 100,
                  "type": "int"
                },
                "generatedName": "ContactCompaniesTotalCount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactCompaniesHasMore",
            "key": "has_more",
            "schema": {
              "generatedName": "contactCompaniesHasMore",
              "title": "Contact companies",
              "value": {
                "description": "Whether there's more Addressable Objects to be viewed. If true, use the url to view all",
                "schema": {
                  "example": true,
                  "type": "boolean"
                },
                "generatedName": "ContactCompaniesHasMore",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "An object containing companies meta data about the companies that a contact has. Up to 10 will be displayed here. Use the url to get more.",
        "generatedName": "ContactCompanies",
        "title": "Contact companies",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "contact_deleted": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "contactDeletedType",
            "key": "type",
            "schema": {
              "generatedName": "contactDeletedType",
              "title": "Contact Deleted",
              "value": {
                "description": "always contact",
                "value": {
                  "value": "contact",
                  "type": "string"
                },
                "generatedName": "ContactDeletedType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactDeletedId",
            "key": "id",
            "schema": {
              "generatedName": "contactDeletedId",
              "title": "Contact Deleted",
              "value": {
                "description": "The unique identifier for the contact which is given by Intercom.",
                "schema": {
                  "example": "5ba682d23d7cf92bef87bfd4",
                  "type": "string"
                },
                "generatedName": "ContactDeletedId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactDeletedExternalId",
            "key": "external_id",
            "schema": {
              "generatedName": "contactDeletedExternalId",
              "title": "Contact Deleted",
              "value": {
                "generatedName": "ContactDeletedExternalId",
                "description": "The unique identifier for the contact which is provided by the Client.",
                "value": {
                  "description": "The unique identifier for the contact which is provided by the Client.",
                  "schema": {
                    "example": "f3b87a2e09d514c6c2e79b9a",
                    "type": "string"
                  },
                  "generatedName": "ContactDeletedExternalId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactDeletedDeleted",
            "key": "deleted",
            "schema": {
              "generatedName": "contactDeletedDeleted",
              "title": "Contact Deleted",
              "value": {
                "description": "Whether the contact is deleted or not.",
                "schema": {
                  "example": true,
                  "type": "boolean"
                },
                "generatedName": "ContactDeletedDeleted",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "deleted contact object",
        "generatedName": "ContactDeleted",
        "title": "Contact Deleted",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "contact_list": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "contactListType",
            "key": "type",
            "schema": {
              "generatedName": "contactListType",
              "title": "Contact List",
              "value": {
                "description": "Always list",
                "value": {
                  "value": "list",
                  "type": "string"
                },
                "generatedName": "ContactListType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactListData",
            "key": "data",
            "schema": {
              "generatedName": "contactListData",
              "title": "Contact List",
              "value": {
                "description": "The list of contact objects",
                "value": {
                  "generatedName": "ContactListDataItem",
                  "schema": "contact",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ContactListData",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactListTotalCount",
            "key": "total_count",
            "schema": {
              "generatedName": "contactListTotalCount",
              "title": "Contact List",
              "value": {
                "description": "A count of the total number of objects.",
                "schema": {
                  "example": 100,
                  "type": "int"
                },
                "generatedName": "ContactListTotalCount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactListPages",
            "key": "pages",
            "schema": {
              "generatedName": "contactListPages",
              "title": "Contact List",
              "value": {
                "generatedName": "ContactListPages",
                "schema": "cursor_pages",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Contacts are your users in Intercom.",
        "generatedName": "ContactList",
        "title": "Contact List",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "contact_location": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "contactLocationType",
            "key": "type",
            "schema": {
              "generatedName": "contactLocationType",
              "title": "Contact Location",
              "value": {
                "generatedName": "ContactLocationType",
                "description": "Always location",
                "value": {
                  "description": "Always location",
                  "schema": {
                    "example": "location",
                    "type": "string"
                  },
                  "generatedName": "ContactLocationType",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactLocationCountry",
            "key": "country",
            "schema": {
              "generatedName": "contactLocationCountry",
              "title": "Contact Location",
              "value": {
                "generatedName": "ContactLocationCountry",
                "description": "The country that the contact is located in",
                "value": {
                  "description": "The country that the contact is located in",
                  "schema": {
                    "example": "Ireland",
                    "type": "string"
                  },
                  "generatedName": "ContactLocationCountry",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactLocationRegion",
            "key": "region",
            "schema": {
              "generatedName": "contactLocationRegion",
              "title": "Contact Location",
              "value": {
                "generatedName": "ContactLocationRegion",
                "description": "The overal region that the contact is located in",
                "value": {
                  "description": "The overal region that the contact is located in",
                  "schema": {
                    "example": "Dublin",
                    "type": "string"
                  },
                  "generatedName": "ContactLocationRegion",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactLocationCity",
            "key": "city",
            "schema": {
              "generatedName": "contactLocationCity",
              "title": "Contact Location",
              "value": {
                "generatedName": "ContactLocationCity",
                "description": "The city that the contact is located in",
                "value": {
                  "description": "The city that the contact is located in",
                  "schema": {
                    "example": "Dublin",
                    "type": "string"
                  },
                  "generatedName": "ContactLocationCity",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "An object containing location meta data about a Intercom contact.",
        "generatedName": "ContactLocation",
        "title": "Contact Location",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "contact_notes": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "contactNotesData",
            "key": "data",
            "schema": {
              "generatedName": "contactNotesData",
              "title": "Contact notes",
              "value": {
                "description": "This object represents the notes attached to a contact.",
                "value": {
                  "generatedName": "ContactNotesDataItem",
                  "schema": "addressable_list",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ContactNotesData",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactNotesUrl",
            "key": "url",
            "schema": {
              "generatedName": "contactNotesUrl",
              "title": "Contact notes",
              "value": {
                "description": "Url to get more company resources for this contact",
                "schema": {
                  "format": "uri",
                  "example": "/contacts/5ba682d23d7cf92bef87bfd4/notes",
                  "type": "string"
                },
                "generatedName": "ContactNotesUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactNotesTotalCount",
            "key": "total_count",
            "schema": {
              "generatedName": "contactNotesTotalCount",
              "title": "Contact notes",
              "value": {
                "description": "Int representing the total number of companyies attached to this contact",
                "schema": {
                  "example": 100,
                  "type": "int"
                },
                "generatedName": "ContactNotesTotalCount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactNotesHasMore",
            "key": "has_more",
            "schema": {
              "generatedName": "contactNotesHasMore",
              "title": "Contact notes",
              "value": {
                "description": "Whether there's more Addressable Objects to be viewed. If true, use the url to view all",
                "schema": {
                  "example": true,
                  "type": "boolean"
                },
                "generatedName": "ContactNotesHasMore",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "An object containing notes meta data about the notes that a contact has. Up to 10 will be displayed here. Use the url to get more.",
        "generatedName": "ContactNotes",
        "title": "Contact notes",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "contact_reference": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "contactReferenceType",
            "key": "type",
            "schema": {
              "generatedName": "contactReferenceType",
              "title": "Contact Reference",
              "value": {
                "description": "always contact",
                "value": {
                  "value": "contact",
                  "type": "string"
                },
                "generatedName": "ContactReferenceType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactReferenceId",
            "key": "id",
            "schema": {
              "generatedName": "contactReferenceId",
              "title": "Contact Reference",
              "value": {
                "description": "The unique identifier for the contact which is given by Intercom.",
                "schema": {
                  "example": "5ba682d23d7cf92bef87bfd4",
                  "type": "string"
                },
                "generatedName": "ContactReferenceId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactReferenceExternalId",
            "key": "external_id",
            "schema": {
              "generatedName": "contactReferenceExternalId",
              "title": "Contact Reference",
              "value": {
                "generatedName": "ContactReferenceExternalId",
                "description": "The unique identifier for the contact which is provided by the Client.",
                "value": {
                  "description": "The unique identifier for the contact which is provided by the Client.",
                  "schema": {
                    "example": "f3b87a2e09d514c6c2e79b9a",
                    "type": "string"
                  },
                  "generatedName": "ContactReferenceExternalId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "reference to contact object",
        "generatedName": "ContactReference",
        "title": "Contact Reference",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "contact_reply_base_request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "contactReplyBaseRequestMessageType",
            "key": "message_type",
            "schema": {
              "value": {
                "value": "comment",
                "type": "string"
              },
              "generatedName": "ContactReplyBaseRequestMessageType",
              "groupName": [],
              "type": "literal"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactReplyBaseRequestType",
            "key": "type",
            "schema": {
              "value": {
                "value": "user",
                "type": "string"
              },
              "generatedName": "ContactReplyBaseRequestType",
              "groupName": [],
              "type": "literal"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactReplyBaseRequestBody",
            "key": "body",
            "schema": {
              "description": "The text body of the comment.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ContactReplyBaseRequestBody",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactReplyBaseRequestCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "contactReplyBaseRequestCreatedAt",
              "title": "Contact Reply Base Object",
              "value": {
                "description": "The time the reply was created. If not provided, the current time will be used.",
                "schema": {
                  "example": 1590000000,
                  "type": "int"
                },
                "generatedName": "ContactReplyBaseRequestCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactReplyBaseRequestAttachmentUrls",
            "key": "attachment_urls",
            "schema": {
              "generatedName": "contactReplyBaseRequestAttachmentUrls",
              "title": "Contact Reply Base Object",
              "value": {
                "description": "A list of image URLs that will be added as attachments. You can include up to 10 URLs.",
                "value": {
                  "schema": {
                    "format": "uri",
                    "type": "string"
                  },
                  "generatedName": "ContactReplyBaseRequestAttachmentUrlsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "ContactReplyBaseRequestAttachmentUrls",
                "title": "Attachment URLs",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ContactReplyBaseRequest",
        "title": "Contact Reply Base Object",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "contact_reply_conversation_request": {
        "value": {
          "generatedName": "ContactReplyConversationRequest",
          "title": "Contact Reply",
          "schemas": [
            {
              "generatedName": "ContactReplyConversationRequestZero",
              "schema": "contact_reply_intercom_user_id_request",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            {
              "generatedName": "ContactReplyConversationRequestOne",
              "schema": "contact_reply_email_request",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            {
              "generatedName": "ContactReplyConversationRequestTwo",
              "schema": "contact_reply_user_id_request",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            }
          ],
          "groupName": [],
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "undiscriminated"
        },
        "type": "oneOf"
      },
      "contact_reply_email_request": {
        "allOf": [
          {
            "generatedName": "ContactReplyBaseRequest",
            "schema": "contact_reply_base_request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "contactReplyEmailRequestEmail",
            "key": "email",
            "schema": {
              "description": "The email you have defined for the user.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ContactReplyEmailRequestEmail",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactReplyEmailRequestAttachmentFiles",
            "key": "attachment_files",
            "schema": {
              "generatedName": "contactReplyEmailRequestAttachmentFiles",
              "nameOverride": "Email",
              "title": "Email",
              "value": {
                "description": "A list of files that will be added as attachments.",
                "value": {
                  "generatedName": "ContactReplyEmailRequestAttachmentFilesItem",
                  "schema": "conversation_attachment_files",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ContactReplyEmailRequestAttachmentFiles",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Payload of the request to reply on behalf of a contact using their `email`",
        "generatedName": "ContactReplyEmailRequest",
        "nameOverride": "Email",
        "title": "Email",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "contact_reply_intercom_user_id_request": {
        "allOf": [
          {
            "generatedName": "ContactReplyBaseRequest",
            "schema": "contact_reply_base_request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "contactReplyIntercomUserIdRequestIntercomUserId",
            "key": "intercom_user_id",
            "schema": {
              "description": "The identifier for the contact as given by Intercom.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ContactReplyIntercomUserIdRequestIntercomUserId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactReplyIntercomUserIdRequestAttachmentFiles",
            "key": "attachment_files",
            "schema": {
              "generatedName": "contactReplyIntercomUserIdRequestAttachmentFiles",
              "title": "Intercom User ID",
              "value": {
                "description": "A list of files that will be added as attachments.",
                "value": {
                  "generatedName": "ContactReplyIntercomUserIdRequestAttachmentFilesItem",
                  "schema": "conversation_attachment_files",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ContactReplyIntercomUserIdRequestAttachmentFiles",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Payload of the request to reply on behalf of a contact using their `intercom_user_id`",
        "generatedName": "ContactReplyIntercomUserIdRequest",
        "title": "Intercom User ID",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "contact_reply_ticket_email_request": {
        "allOf": [
          {
            "generatedName": "ContactReplyBaseRequest",
            "schema": "contact_reply_base_request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "contactReplyTicketEmailRequestEmail",
            "key": "email",
            "schema": {
              "description": "The email you have defined for the user.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ContactReplyTicketEmailRequestEmail",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Payload of the request to reply on behalf of a contact using their `email`",
        "generatedName": "ContactReplyTicketEmailRequest",
        "nameOverride": "Email",
        "title": "Email",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "contact_reply_ticket_intercom_user_id_request": {
        "allOf": [
          {
            "generatedName": "ContactReplyBaseRequest",
            "schema": "contact_reply_base_request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "contactReplyTicketIntercomUserIdRequestIntercomUserId",
            "key": "intercom_user_id",
            "schema": {
              "description": "The identifier for the contact as given by Intercom.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ContactReplyTicketIntercomUserIdRequestIntercomUserId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Payload of the request to reply on behalf of a contact using their `intercom_user_id`",
        "generatedName": "ContactReplyTicketIntercomUserIdRequest",
        "title": "Intercom User ID",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "contact_reply_ticket_request": {
        "value": {
          "generatedName": "ContactReplyTicketRequest",
          "title": "Contact Reply on ticket",
          "schemas": [
            {
              "generatedName": "ContactReplyTicketRequestZero",
              "schema": "contact_reply_ticket_intercom_user_id_request",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            {
              "generatedName": "ContactReplyTicketRequestOne",
              "schema": "contact_reply_ticket_user_id_request",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            {
              "generatedName": "ContactReplyTicketRequestTwo",
              "schema": "contact_reply_ticket_email_request",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            }
          ],
          "groupName": [],
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "undiscriminated"
        },
        "type": "oneOf"
      },
      "contact_reply_ticket_user_id_request": {
        "allOf": [
          {
            "generatedName": "ContactReplyBaseRequest",
            "schema": "contact_reply_base_request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "contactReplyTicketUserIdRequestUserId",
            "key": "user_id",
            "schema": {
              "description": "The external_id you have defined for the contact.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ContactReplyTicketUserIdRequestUserId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Payload of the request to reply on behalf of a contact using their `user_id`",
        "generatedName": "ContactReplyTicketUserIdRequest",
        "title": "User ID",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "contact_reply_user_id_request": {
        "allOf": [
          {
            "generatedName": "ContactReplyBaseRequest",
            "schema": "contact_reply_base_request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "contactReplyUserIdRequestUserId",
            "key": "user_id",
            "schema": {
              "description": "The external_id you have defined for the contact.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ContactReplyUserIdRequestUserId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactReplyUserIdRequestAttachmentFiles",
            "key": "attachment_files",
            "schema": {
              "generatedName": "contactReplyUserIdRequestAttachmentFiles",
              "title": "User ID",
              "value": {
                "description": "A list of files that will be added as attachments. You can include up to 10 files.",
                "value": {
                  "generatedName": "ContactReplyUserIdRequestAttachmentFilesItem",
                  "schema": "conversation_attachment_files",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ContactReplyUserIdRequestAttachmentFiles",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Payload of the request to reply on behalf of a contact using their `user_id`",
        "generatedName": "ContactReplyUserIdRequest",
        "title": "User ID",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "contact_segments": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "contactSegmentsType",
            "key": "type",
            "schema": {
              "generatedName": "contactSegmentsType",
              "nameOverride": "Segments",
              "title": "Segments",
              "value": {
                "description": "The type of the object",
                "value": {
                  "value": "list",
                  "type": "string"
                },
                "generatedName": "ContactSegmentsType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactSegmentsData",
            "key": "data",
            "schema": {
              "generatedName": "contactSegmentsData",
              "nameOverride": "Segments",
              "title": "Segments",
              "value": {
                "description": "Segment objects associated with the contact.",
                "value": {
                  "generatedName": "ContactSegmentsDataItem",
                  "schema": "segment",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ContactSegmentsData",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A list of segments objects attached to a specific contact.",
        "generatedName": "ContactSegments",
        "nameOverride": "Segments",
        "title": "Segments",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "contact_social_profiles": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "contactSocialProfilesData",
            "key": "data",
            "schema": {
              "generatedName": "contactSocialProfilesData",
              "title": "Social Profile",
              "value": {
                "description": "A list of social profiles objects associated with the contact.",
                "value": {
                  "generatedName": "ContactSocialProfilesDataItem",
                  "schema": "social_profile",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ContactSocialProfilesData",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "An object containing social profiles that a contact has.",
        "generatedName": "ContactSocialProfiles",
        "title": "Social Profile",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "contact_subscription_types": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "contactSubscriptionTypesData",
            "key": "data",
            "schema": {
              "generatedName": "contactSubscriptionTypesData",
              "title": "Contact Subscription Types",
              "value": {
                "description": "This object represents the subscriptions attached to a contact.",
                "value": {
                  "generatedName": "ContactSubscriptionTypesDataItem",
                  "schema": "addressable_list",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ContactSubscriptionTypesData",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactSubscriptionTypesUrl",
            "key": "url",
            "schema": {
              "generatedName": "contactSubscriptionTypesUrl",
              "title": "Contact Subscription Types",
              "value": {
                "description": "Url to get more subscription type resources for this contact",
                "schema": {
                  "format": "uri",
                  "example": "/contacts/5ba682d23d7cf92bef87bfd4/subscriptions",
                  "type": "string"
                },
                "generatedName": "ContactSubscriptionTypesUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactSubscriptionTypesTotalCount",
            "key": "total_count",
            "schema": {
              "generatedName": "contactSubscriptionTypesTotalCount",
              "title": "Contact Subscription Types",
              "value": {
                "description": "Int representing the total number of subscription types attached to this contact",
                "schema": {
                  "example": 100,
                  "type": "int"
                },
                "generatedName": "ContactSubscriptionTypesTotalCount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactSubscriptionTypesHasMore",
            "key": "has_more",
            "schema": {
              "generatedName": "contactSubscriptionTypesHasMore",
              "title": "Contact Subscription Types",
              "value": {
                "description": "Whether there's more Addressable Objects to be viewed. If true, use the url to view all",
                "schema": {
                  "example": true,
                  "type": "boolean"
                },
                "generatedName": "ContactSubscriptionTypesHasMore",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "An object containing Subscription Types meta data about the SubscriptionTypes that a contact has.",
        "generatedName": "ContactSubscriptionTypes",
        "title": "Contact Subscription Types",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "contact_tags": {
        "generatedName": "ContactTags",
        "title": "Contact Tags",
        "description": "An object containing tags meta data about the tags that a contact has. Up to 10 will be displayed here. Use the url to get more.",
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "contactTagsData",
              "key": "data",
              "schema": {
                "generatedName": "contactTagsData",
                "title": "Contact Tags",
                "value": {
                  "description": "This object represents the tags attached to a contact.",
                  "value": {
                    "generatedName": "ContactTagsDataItem",
                    "schema": "addressable_list",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "ContactTagsData",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "contactTagsUrl",
              "key": "url",
              "schema": {
                "generatedName": "contactTagsUrl",
                "title": "Contact Tags",
                "value": {
                  "description": "url to get more tag resources for this contact",
                  "schema": {
                    "format": "uri",
                    "example": "/contacts/5ba682d23d7cf92bef87bfd4/tags",
                    "type": "string"
                  },
                  "generatedName": "ContactTagsUrl",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "contactTagsTotalCount",
              "key": "total_count",
              "schema": {
                "generatedName": "contactTagsTotalCount",
                "title": "Contact Tags",
                "value": {
                  "description": "Int representing the total number of tags attached to this contact",
                  "schema": {
                    "example": 100,
                    "type": "int"
                  },
                  "generatedName": "ContactTagsTotalCount",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "contactTagsHasMore",
              "key": "has_more",
              "schema": {
                "generatedName": "contactTagsHasMore",
                "title": "Contact Tags",
                "value": {
                  "description": "Whether there's more Addressable Objects to be viewed. If true, use the url to view all",
                  "schema": {
                    "example": true,
                    "type": "boolean"
                  },
                  "generatedName": "ContactTagsHasMore",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "An object containing tags meta data about the tags that a contact has. Up to 10 will be displayed here. Use the url to get more.",
          "generatedName": "ContactTags",
          "title": "Contact Tags",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "groupName": [],
        "type": "nullable"
      },
      "contact_unarchived": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "contactUnarchivedType",
            "key": "type",
            "schema": {
              "generatedName": "contactUnarchivedType",
              "title": "Contact Unarchived",
              "value": {
                "description": "always contact",
                "value": {
                  "value": "contact",
                  "type": "string"
                },
                "generatedName": "ContactUnarchivedType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactUnarchivedId",
            "key": "id",
            "schema": {
              "generatedName": "contactUnarchivedId",
              "title": "Contact Unarchived",
              "value": {
                "description": "The unique identifier for the contact which is given by Intercom.",
                "schema": {
                  "example": "5ba682d23d7cf92bef87bfd4",
                  "type": "string"
                },
                "generatedName": "ContactUnarchivedId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactUnarchivedExternalId",
            "key": "external_id",
            "schema": {
              "generatedName": "contactUnarchivedExternalId",
              "title": "Contact Unarchived",
              "value": {
                "generatedName": "ContactUnarchivedExternalId",
                "description": "The unique identifier for the contact which is provided by the Client.",
                "value": {
                  "description": "The unique identifier for the contact which is provided by the Client.",
                  "schema": {
                    "example": "f3b87a2e09d514c6c2e79b9a",
                    "type": "string"
                  },
                  "generatedName": "ContactUnarchivedExternalId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contactUnarchivedArchived",
            "key": "archived",
            "schema": {
              "generatedName": "contactUnarchivedArchived",
              "title": "Contact Unarchived",
              "value": {
                "description": "Whether the contact is archived or not.",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "ContactUnarchivedArchived",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "unarchived contact object",
        "generatedName": "ContactUnarchived",
        "title": "Contact Unarchived",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "content_source": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "contentSourceContentType",
            "key": "content_type",
            "schema": {
              "generatedName": "contentSourceContentType",
              "title": "Content Source",
              "value": {
                "description": "The type of the content source.",
                "generatedName": "ContentSourceContentType",
                "values": [
                  {
                    "generatedName": "file",
                    "value": "file",
                    "casing": {}
                  },
                  {
                    "generatedName": "article",
                    "value": "article",
                    "casing": {}
                  },
                  {
                    "generatedName": "external_content",
                    "value": "external_content",
                    "casing": {}
                  },
                  {
                    "generatedName": "content_snippet",
                    "value": "content_snippet",
                    "casing": {}
                  },
                  {
                    "generatedName": "workflow_connector_action",
                    "value": "workflow_connector_action",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [
                "AI Content Source"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contentSourceUrl",
            "key": "url",
            "schema": {
              "generatedName": "contentSourceUrl",
              "title": "Content Source",
              "value": {
                "description": "The internal URL linking to the content source for teammates.",
                "schema": {
                  "example": "/fin-ai-agent/content?content=content_snippet&id=3234924",
                  "type": "string"
                },
                "generatedName": "ContentSourceUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "AI Content Source"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contentSourceTitle",
            "key": "title",
            "schema": {
              "generatedName": "contentSourceTitle",
              "title": "Content Source",
              "value": {
                "description": "The title of the content source.",
                "schema": {
                  "example": "My internal content snippet",
                  "type": "string"
                },
                "generatedName": "ContentSourceTitle",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "AI Content Source"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contentSourceLocale",
            "key": "locale",
            "schema": {
              "generatedName": "contentSourceLocale",
              "title": "Content Source",
              "value": {
                "description": "The ISO 639 language code of the content source.",
                "schema": {
                  "example": "en",
                  "type": "string"
                },
                "generatedName": "ContentSourceLocale",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "AI Content Source"
              ],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The content source used by AI Agent in the conversation.",
        "generatedName": "ContentSource",
        "title": "Content Source",
        "groupName": [
          "AI Content Source"
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "content_sources_list": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "contentSourcesListType",
            "key": "type",
            "schema": {
              "generatedName": "contentSourcesListType",
              "title": "Content Source List",
              "value": {
                "value": {
                  "value": "content_source.list",
                  "type": "string"
                },
                "generatedName": "ContentSourcesListType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contentSourcesListTotalCount",
            "key": "total_count",
            "schema": {
              "generatedName": "contentSourcesListTotalCount",
              "title": "Content Source List",
              "value": {
                "description": "The total number of content sources used by AI Agent in the conversation.",
                "schema": {
                  "example": 1,
                  "type": "int"
                },
                "generatedName": "ContentSourcesListTotalCount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contentSourcesListContentSources",
            "key": "content_sources",
            "schema": {
              "generatedName": "contentSourcesListContentSources",
              "title": "Content Source List",
              "value": {
                "description": "The content sources used by AI Agent in the conversation.",
                "value": {
                  "generatedName": "ContentSourcesListContentSourcesItem",
                  "schema": "content_source",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ContentSourcesListContentSources",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ContentSourcesList",
        "title": "Content Source List",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "conversation": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "conversationType",
            "key": "type",
            "schema": {
              "generatedName": "conversationType",
              "nameOverride": "Conversation",
              "title": "Conversation",
              "value": {
                "description": "Always conversation.",
                "schema": {
                  "example": "conversation",
                  "type": "string"
                },
                "generatedName": "ConversationType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Conversations"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationId",
            "key": "id",
            "schema": {
              "generatedName": "conversationId",
              "nameOverride": "Conversation",
              "title": "Conversation",
              "value": {
                "description": "The id representing the conversation.",
                "schema": {
                  "example": "1295",
                  "type": "string"
                },
                "generatedName": "ConversationId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Conversations"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationTitle",
            "key": "title",
            "schema": {
              "generatedName": "conversationTitle",
              "nameOverride": "Conversation",
              "title": "Conversation",
              "value": {
                "generatedName": "ConversationTitle",
                "description": "The title given to the conversation.",
                "value": {
                  "description": "The title given to the conversation.",
                  "schema": {
                    "example": "Conversation Title",
                    "type": "string"
                  },
                  "generatedName": "ConversationTitle",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Conversations"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "conversationCreatedAt",
              "nameOverride": "Conversation",
              "title": "Conversation",
              "value": {
                "description": "The time the conversation was created.",
                "schema": {
                  "example": 1663597223,
                  "type": "int"
                },
                "generatedName": "ConversationCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Conversations"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationUpdatedAt",
            "key": "updated_at",
            "schema": {
              "generatedName": "conversationUpdatedAt",
              "nameOverride": "Conversation",
              "title": "Conversation",
              "value": {
                "description": "The last time the conversation was updated.",
                "schema": {
                  "example": 1663597260,
                  "type": "int"
                },
                "generatedName": "ConversationUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Conversations"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationWaitingSince",
            "key": "waiting_since",
            "schema": {
              "generatedName": "conversationWaitingSince",
              "nameOverride": "Conversation",
              "title": "Conversation",
              "value": {
                "generatedName": "ConversationWaitingSince",
                "description": "The last time a Contact responded to an Admin. In other words, the time a customer started waiting for a response. Set to null if last reply is from an Admin.",
                "value": {
                  "description": "The last time a Contact responded to an Admin. In other words, the time a customer started waiting for a response. Set to null if last reply is from an Admin.",
                  "schema": {
                    "example": 1663597260,
                    "type": "int"
                  },
                  "generatedName": "ConversationWaitingSince",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Conversations"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationSnoozedUntil",
            "key": "snoozed_until",
            "schema": {
              "generatedName": "conversationSnoozedUntil",
              "nameOverride": "Conversation",
              "title": "Conversation",
              "value": {
                "generatedName": "ConversationSnoozedUntil",
                "description": "If set this is the time in the future when this conversation will be marked as open. i.e. it will be in a snoozed state until this time. i.e. it will be in a snoozed state until this time.",
                "value": {
                  "description": "If set this is the time in the future when this conversation will be marked as open. i.e. it will be in a snoozed state until this time. i.e. it will be in a snoozed state until this time.",
                  "schema": {
                    "example": 1663597260,
                    "type": "int"
                  },
                  "generatedName": "ConversationSnoozedUntil",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Conversations"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationOpen",
            "key": "open",
            "schema": {
              "generatedName": "conversationOpen",
              "nameOverride": "Conversation",
              "title": "Conversation",
              "value": {
                "description": "Indicates whether a conversation is open (true) or closed (false).",
                "schema": {
                  "example": true,
                  "type": "boolean"
                },
                "generatedName": "ConversationOpen",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Conversations"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationState",
            "key": "state",
            "schema": {
              "generatedName": "conversationState",
              "nameOverride": "Conversation",
              "title": "Conversation",
              "value": {
                "description": "Can be set to \"open\", \"closed\" or \"snoozed\".",
                "generatedName": "ConversationState",
                "values": [
                  {
                    "generatedName": "open",
                    "value": "open",
                    "casing": {}
                  },
                  {
                    "generatedName": "closed",
                    "value": "closed",
                    "casing": {}
                  },
                  {
                    "generatedName": "snoozed",
                    "value": "snoozed",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [
                "Conversations"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationRead",
            "key": "read",
            "schema": {
              "generatedName": "conversationRead",
              "nameOverride": "Conversation",
              "title": "Conversation",
              "value": {
                "description": "Indicates whether a conversation has been read.",
                "schema": {
                  "example": true,
                  "type": "boolean"
                },
                "generatedName": "ConversationRead",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Conversations"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationPriority",
            "key": "priority",
            "schema": {
              "generatedName": "conversationPriority",
              "nameOverride": "Conversation",
              "title": "Conversation",
              "value": {
                "description": "If marked as priority, it will return priority or else not_priority.",
                "generatedName": "ConversationPriority",
                "values": [
                  {
                    "generatedName": "priority",
                    "value": "priority",
                    "casing": {}
                  },
                  {
                    "generatedName": "not_priority",
                    "value": "not_priority",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [
                "Conversations"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationAdminAssigneeId",
            "key": "admin_assignee_id",
            "schema": {
              "generatedName": "conversationAdminAssigneeId",
              "nameOverride": "Conversation",
              "title": "Conversation",
              "value": {
                "generatedName": "ConversationAdminAssigneeId",
                "description": "The id of the admin assigned to the conversation. If it's not assigned to an admin it will return null.",
                "value": {
                  "description": "The id of the admin assigned to the conversation. If it's not assigned to an admin it will return null.",
                  "schema": {
                    "example": 0,
                    "type": "int"
                  },
                  "generatedName": "ConversationAdminAssigneeId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Conversations"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationTeamAssigneeId",
            "key": "team_assignee_id",
            "schema": {
              "generatedName": "conversationTeamAssigneeId",
              "nameOverride": "Conversation",
              "title": "Conversation",
              "value": {
                "generatedName": "ConversationTeamAssigneeId",
                "description": "The id of the team assigned to the conversation. If it's not assigned to a team it will return null.",
                "value": {
                  "description": "The id of the team assigned to the conversation. If it's not assigned to a team it will return null.",
                  "schema": {
                    "example": "5017691",
                    "type": "string"
                  },
                  "generatedName": "ConversationTeamAssigneeId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Conversations"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationTags",
            "key": "tags",
            "schema": {
              "generatedName": "conversationTags",
              "nameOverride": "Conversation",
              "title": "Conversation",
              "value": {
                "generatedName": "ConversationTags",
                "schema": "tags",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [
                "Conversations"
              ],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "conversationConversationRating",
            "key": "conversation_rating",
            "schema": {
              "generatedName": "conversationConversationRating",
              "nameOverride": "Conversation",
              "title": "Conversation",
              "value": {
                "generatedName": "ConversationConversationRating",
                "schema": "conversation_rating",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [
                "Conversations"
              ],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "conversationSource",
            "key": "source",
            "schema": {
              "generatedName": "conversationSource",
              "nameOverride": "Conversation",
              "title": "Conversation",
              "value": {
                "generatedName": "ConversationSource",
                "schema": "conversation_source",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [
                "Conversations"
              ],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "conversationContacts",
            "key": "contacts",
            "schema": {
              "generatedName": "conversationContacts",
              "nameOverride": "Conversation",
              "title": "Conversation",
              "value": {
                "generatedName": "ConversationContacts",
                "schema": "conversation_contacts",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [
                "Conversations"
              ],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "conversationTeammates",
            "key": "teammates",
            "schema": {
              "generatedName": "conversationTeammates",
              "nameOverride": "Conversation",
              "title": "Conversation",
              "value": {
                "generatedName": "ConversationTeammates",
                "schema": "conversation_teammates",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [
                "Conversations"
              ],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "conversationCustomAttributes",
            "key": "custom_attributes",
            "schema": {
              "generatedName": "conversationCustomAttributes",
              "nameOverride": "Conversation",
              "title": "Conversation",
              "value": {
                "generatedName": "ConversationCustomAttributes",
                "schema": "custom_attributes",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [
                "Conversations"
              ],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "conversationFirstContactReply",
            "key": "first_contact_reply",
            "schema": {
              "generatedName": "conversationFirstContactReply",
              "nameOverride": "Conversation",
              "title": "Conversation",
              "value": {
                "generatedName": "ConversationFirstContactReply",
                "schema": "conversation_first_contact_reply",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [
                "Conversations"
              ],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "conversationSlaApplied",
            "key": "sla_applied",
            "schema": {
              "generatedName": "conversationSlaApplied",
              "nameOverride": "Conversation",
              "title": "Conversation",
              "value": {
                "generatedName": "ConversationSlaApplied",
                "schema": "sla_applied",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [
                "Conversations"
              ],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "conversationStatistics",
            "key": "statistics",
            "schema": {
              "generatedName": "conversationStatistics",
              "nameOverride": "Conversation",
              "title": "Conversation",
              "value": {
                "generatedName": "ConversationStatistics",
                "schema": "conversation_statistics",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [
                "Conversations"
              ],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "conversationConversationParts",
            "key": "conversation_parts",
            "schema": {
              "generatedName": "conversationConversationParts",
              "nameOverride": "Conversation",
              "title": "Conversation",
              "value": {
                "generatedName": "ConversationConversationParts",
                "schema": "conversation_parts",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [
                "Conversations"
              ],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "conversationLinkedObjects",
            "key": "linked_objects",
            "schema": {
              "generatedName": "conversationLinkedObjects",
              "nameOverride": "Conversation",
              "title": "Conversation",
              "value": {
                "generatedName": "ConversationLinkedObjects",
                "schema": "linked_object_list",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [
                "Conversations"
              ],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "conversationAiAgentParticipated",
            "key": "ai_agent_participated",
            "schema": {
              "generatedName": "conversationAiAgentParticipated",
              "nameOverride": "Conversation",
              "title": "Conversation",
              "value": {
                "description": "Indicates whether the AI Agent participated in the conversation.",
                "schema": {
                  "example": true,
                  "type": "boolean"
                },
                "generatedName": "ConversationAiAgentParticipated",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Conversations"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationAiAgent",
            "key": "ai_agent",
            "schema": {
              "generatedName": "conversationAiAgent",
              "nameOverride": "Conversation",
              "title": "Conversation",
              "value": {
                "generatedName": "ConversationAiAgent",
                "schema": "ai_agent",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [
                "Conversations"
              ],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Conversations are how you can communicate with users in Intercom. They are created when a contact replies to an outbound message, or when one admin directly sends a message to a single contact.",
        "generatedName": "Conversation",
        "nameOverride": "Conversation",
        "title": "Conversation",
        "groupName": [
          "Conversations"
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "conversation_attachment_files": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "conversationAttachmentFilesContentType",
            "key": "content_type",
            "schema": {
              "generatedName": "conversationAttachmentFilesContentType",
              "title": "Conversation attachment files",
              "value": {
                "description": "The content type of the file",
                "schema": {
                  "example": "application/json",
                  "type": "string"
                },
                "generatedName": "ConversationAttachmentFilesContentType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationAttachmentFilesData",
            "key": "data",
            "schema": {
              "generatedName": "conversationAttachmentFilesData",
              "title": "Conversation attachment files",
              "value": {
                "description": "The base64 encoded file data.",
                "schema": {
                  "example": "ewogICJ0ZXN0IjogMQp9",
                  "type": "string"
                },
                "generatedName": "ConversationAttachmentFilesData",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationAttachmentFilesName",
            "key": "name",
            "schema": {
              "generatedName": "conversationAttachmentFilesName",
              "title": "Conversation attachment files",
              "value": {
                "description": "The name of the file.",
                "schema": {
                  "example": "test.json",
                  "type": "string"
                },
                "generatedName": "ConversationAttachmentFilesName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Properties of the attachment files in a conversation part",
        "generatedName": "ConversationAttachmentFiles",
        "title": "Conversation attachment files",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "conversation_contacts": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "conversationContactsType",
            "key": "type",
            "schema": {
              "generatedName": "conversationContactsType",
              "nameOverride": "Contacts",
              "title": "Contacts",
              "value": {
                "description": "",
                "value": {
                  "value": "contact.list",
                  "type": "string"
                },
                "generatedName": "ConversationContactsType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationContactsContacts",
            "key": "contacts",
            "schema": {
              "generatedName": "conversationContactsContacts",
              "nameOverride": "Contacts",
              "title": "Contacts",
              "value": {
                "description": "The list of contacts (users or leads) involved in this conversation. This will only contain one customer unless more were added via the group conversation feature.",
                "value": {
                  "generatedName": "ConversationContactsContactsItem",
                  "schema": "contact_reference",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ConversationContactsContacts",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The list of contacts (users or leads) involved in this conversation. This will only contain one customer unless more were added via the group conversation feature.",
        "generatedName": "ConversationContacts",
        "nameOverride": "Contacts",
        "title": "Contacts",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "conversation_first_contact_reply": {
        "generatedName": "ConversationFirstContactReply",
        "title": "First contact reply",
        "description": "An object containing information on the first users message. For a contact initiated message this will represent the users original message.",
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "conversationFirstContactReplyCreatedAt",
              "key": "created_at",
              "schema": {
                "generatedName": "conversationFirstContactReplyCreatedAt",
                "title": "First contact reply",
                "value": {
                  "description": "",
                  "schema": {
                    "example": 1663597223,
                    "type": "int"
                  },
                  "generatedName": "ConversationFirstContactReplyCreatedAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "conversationFirstContactReplyType",
              "key": "type",
              "schema": {
                "generatedName": "conversationFirstContactReplyType",
                "title": "First contact reply",
                "value": {
                  "description": "",
                  "schema": {
                    "example": "conversation",
                    "type": "string"
                  },
                  "generatedName": "ConversationFirstContactReplyType",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "conversationFirstContactReplyUrl",
              "key": "url",
              "schema": {
                "generatedName": "conversationFirstContactReplyUrl",
                "title": "First contact reply",
                "value": {
                  "generatedName": "ConversationFirstContactReplyUrl",
                  "description": "",
                  "value": {
                    "description": "",
                    "schema": {
                      "example": "https://developers.intercom.com/",
                      "type": "string"
                    },
                    "generatedName": "ConversationFirstContactReplyUrl",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "An object containing information on the first users message. For a contact initiated message this will represent the users original message.",
          "generatedName": "ConversationFirstContactReply",
          "title": "First contact reply",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "groupName": [],
        "type": "nullable"
      },
      "conversation_list": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "conversationListType",
            "key": "type",
            "schema": {
              "generatedName": "conversationListType",
              "title": "Conversation List",
              "value": {
                "description": "Always conversation.list",
                "value": {
                  "value": "conversation.list",
                  "type": "string"
                },
                "generatedName": "ConversationListType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationListConversations",
            "key": "conversations",
            "schema": {
              "generatedName": "conversationListConversations",
              "title": "Conversation List",
              "value": {
                "description": "The list of conversation objects",
                "value": {
                  "generatedName": "ConversationListConversationsItem",
                  "schema": "conversation",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ConversationListConversations",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationListTotalCount",
            "key": "total_count",
            "schema": {
              "generatedName": "conversationListTotalCount",
              "title": "Conversation List",
              "value": {
                "description": "A count of the total number of objects.",
                "schema": {
                  "example": 12345,
                  "type": "int"
                },
                "generatedName": "ConversationListTotalCount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationListPages",
            "key": "pages",
            "schema": {
              "generatedName": "conversationListPages",
              "title": "Conversation List",
              "value": {
                "generatedName": "ConversationListPages",
                "schema": "cursor_pages",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Conversations are how you can communicate with users in Intercom. They are created when a contact replies to an outbound message, or when one admin directly sends a message to a single contact.",
        "generatedName": "ConversationList",
        "title": "Conversation List",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "conversation_part": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "conversationPartType",
            "key": "type",
            "schema": {
              "generatedName": "conversationPartType",
              "title": "Conversation Part",
              "value": {
                "description": "Always conversation_part",
                "schema": {
                  "example": "conversation_part",
                  "type": "string"
                },
                "generatedName": "ConversationPartType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationPartId",
            "key": "id",
            "schema": {
              "generatedName": "conversationPartId",
              "title": "Conversation Part",
              "value": {
                "description": "The id representing the conversation part.",
                "schema": {
                  "example": "3",
                  "type": "string"
                },
                "generatedName": "ConversationPartId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationPartPartType",
            "key": "part_type",
            "schema": {
              "generatedName": "conversationPartPartType",
              "title": "Conversation Part",
              "value": {
                "description": "The type of conversation part.",
                "schema": {
                  "example": "comment",
                  "type": "string"
                },
                "generatedName": "ConversationPartPartType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationPartBody",
            "key": "body",
            "schema": {
              "generatedName": "conversationPartBody",
              "title": "Conversation Part",
              "value": {
                "generatedName": "ConversationPartBody",
                "description": "The message body, which may contain HTML. For Twitter, this will show a generic message regarding why the body is obscured.",
                "value": {
                  "description": "The message body, which may contain HTML. For Twitter, this will show a generic message regarding why the body is obscured.",
                  "schema": {
                    "example": "<p>Okay!</p>",
                    "type": "string"
                  },
                  "generatedName": "ConversationPartBody",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationPartCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "conversationPartCreatedAt",
              "title": "Conversation Part",
              "value": {
                "description": "The time the conversation part was created.",
                "schema": {
                  "example": 1663597223,
                  "type": "int"
                },
                "generatedName": "ConversationPartCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationPartUpdatedAt",
            "key": "updated_at",
            "schema": {
              "generatedName": "conversationPartUpdatedAt",
              "title": "Conversation Part",
              "value": {
                "description": "The last time the conversation part was updated.",
                "schema": {
                  "example": 1663597260,
                  "type": "int"
                },
                "generatedName": "ConversationPartUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationPartNotifiedAt",
            "key": "notified_at",
            "schema": {
              "generatedName": "conversationPartNotifiedAt",
              "title": "Conversation Part",
              "value": {
                "description": "The time the user was notified with the conversation part.",
                "schema": {
                  "example": 1663597260,
                  "type": "int"
                },
                "generatedName": "ConversationPartNotifiedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationPartAssignedTo",
            "key": "assigned_to",
            "schema": {
              "generatedName": "conversationPartAssignedTo",
              "title": "Conversation Part",
              "value": {
                "description": "The id of the admin that was assigned the conversation by this conversation_part (null if there has been no change in assignment.)",
                "generatedName": "ConversationPartAssignedTo",
                "schema": "reference",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "conversationPartAuthor",
            "key": "author",
            "schema": {
              "generatedName": "conversationPartAuthor",
              "title": "Conversation Part",
              "value": {
                "generatedName": "ConversationPartAuthor",
                "schema": "conversation_part_author",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "conversationPartAttachments",
            "key": "attachments",
            "schema": {
              "generatedName": "conversationPartAttachments",
              "title": "Conversation Part",
              "value": {
                "description": "A list of attachments for the part.",
                "value": {
                  "generatedName": "ConversationPartAttachmentsItem",
                  "schema": "part_attachment",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ConversationPartAttachments",
                "title": "Conversation part attachments",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationPartExternalId",
            "key": "external_id",
            "schema": {
              "generatedName": "conversationPartExternalId",
              "title": "Conversation Part",
              "value": {
                "generatedName": "ConversationPartExternalId",
                "description": "The external id of the conversation part",
                "value": {
                  "description": "The external id of the conversation part",
                  "schema": {
                    "example": "abcd1234",
                    "type": "string"
                  },
                  "generatedName": "ConversationPartExternalId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationPartRedacted",
            "key": "redacted",
            "schema": {
              "generatedName": "conversationPartRedacted",
              "title": "Conversation Part",
              "value": {
                "description": "Whether or not the conversation part has been redacted.",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "ConversationPartRedacted",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A Conversation Part represents a message in the conversation.",
        "generatedName": "ConversationPart",
        "title": "Conversation Part",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "conversation_part_author": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "conversationPartAuthorType",
            "key": "type",
            "schema": {
              "generatedName": "conversationPartAuthorType",
              "title": "Conversation part author",
              "value": {
                "description": "The type of the author",
                "schema": {
                  "example": "admin",
                  "type": "string"
                },
                "generatedName": "ConversationPartAuthorType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationPartAuthorId",
            "key": "id",
            "schema": {
              "generatedName": "conversationPartAuthorId",
              "title": "Conversation part author",
              "value": {
                "description": "The id of the author",
                "schema": {
                  "example": "274",
                  "type": "string"
                },
                "generatedName": "ConversationPartAuthorId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationPartAuthorName",
            "key": "name",
            "schema": {
              "generatedName": "conversationPartAuthorName",
              "title": "Conversation part author",
              "value": {
                "description": "The name of the author",
                "schema": {
                  "example": "Operator",
                  "type": "string"
                },
                "generatedName": "ConversationPartAuthorName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationPartAuthorEmail",
            "key": "email",
            "schema": {
              "generatedName": "conversationPartAuthorEmail",
              "title": "Conversation part author",
              "value": {
                "description": "The email of the author",
                "schema": {
                  "format": "email",
                  "example": "operator+abcd1234@intercom.io",
                  "type": "string"
                },
                "generatedName": "ConversationPartAuthorEmail",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The object who initiated the conversation, which can be a Contact, Admin or Team. Bots and campaigns send messages on behalf of Admins or Teams. For Twitter, this will be blank.",
        "generatedName": "ConversationPartAuthor",
        "title": "Conversation part author",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "conversation_parts": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "conversationPartsType",
            "key": "type",
            "schema": {
              "generatedName": "conversationPartsType",
              "title": "Conversation Parts",
              "value": {
                "description": "",
                "value": {
                  "value": "conversation_part.list",
                  "type": "string"
                },
                "generatedName": "ConversationPartsType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationPartsConversationParts",
            "key": "conversation_parts",
            "schema": {
              "generatedName": "conversationPartsConversationParts",
              "title": "Conversation Parts",
              "value": {
                "description": "A list of Conversation Part objects for each part message in the conversation. This is only returned when Retrieving a Conversation, and ignored when Listing all Conversations. There is a limit of 500 parts.",
                "value": {
                  "generatedName": "ConversationPartsConversationPartsItem",
                  "schema": "conversation_part",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ConversationPartsConversationParts",
                "title": "Conversation Parts",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationPartsTotalCount",
            "key": "total_count",
            "schema": {
              "generatedName": "conversationPartsTotalCount",
              "title": "Conversation Parts",
              "value": {
                "description": "",
                "schema": {
                  "example": 2,
                  "type": "int"
                },
                "generatedName": "ConversationPartsTotalCount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A list of Conversation Part objects for each part message in the conversation. This is only returned when Retrieving a Conversation, and ignored when Listing all Conversations. There is a limit of 500 parts.",
        "generatedName": "ConversationParts",
        "title": "Conversation Parts",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "conversation_rating": {
        "generatedName": "ConversationRating",
        "title": "Conversation Rating",
        "description": "The Conversation Rating object which contains information on the rating and/or remark added by a Contact and the Admin assigned to the conversation.",
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "conversationRatingRating",
              "key": "rating",
              "schema": {
                "generatedName": "conversationRatingRating",
                "title": "Conversation Rating",
                "value": {
                  "description": "The rating, between 1 and 5, for the conversation.",
                  "schema": {
                    "example": 5,
                    "type": "int"
                  },
                  "generatedName": "ConversationRatingRating",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "conversationRatingRemark",
              "key": "remark",
              "schema": {
                "generatedName": "conversationRatingRemark",
                "title": "Conversation Rating",
                "value": {
                  "description": "An optional field to add a remark to correspond to the number rating",
                  "schema": {
                    "example": "",
                    "type": "string"
                  },
                  "generatedName": "ConversationRatingRemark",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "conversationRatingCreatedAt",
              "key": "created_at",
              "schema": {
                "generatedName": "conversationRatingCreatedAt",
                "title": "Conversation Rating",
                "value": {
                  "description": "The time the rating was requested in the conversation being rated.",
                  "schema": {
                    "example": 1671028894,
                    "type": "int"
                  },
                  "generatedName": "ConversationRatingCreatedAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "conversationRatingContact",
              "key": "contact",
              "schema": {
                "generatedName": "conversationRatingContact",
                "title": "Conversation Rating",
                "value": {
                  "generatedName": "ConversationRatingContact",
                  "schema": "contact_reference",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "conversationRatingTeammate",
              "key": "teammate",
              "schema": {
                "generatedName": "conversationRatingTeammate",
                "title": "Conversation Rating",
                "value": {
                  "generatedName": "ConversationRatingTeammate",
                  "schema": "reference",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "The Conversation Rating object which contains information on the rating and/or remark added by a Contact and the Admin assigned to the conversation.",
          "generatedName": "ConversationRating",
          "title": "Conversation Rating",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "groupName": [],
        "type": "nullable"
      },
      "conversation_source": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "conversationSourceType",
            "key": "type",
            "schema": {
              "generatedName": "conversationSourceType",
              "title": "Conversation source",
              "value": {
                "description": "This includes conversation, email, facebook, instagram, phone_call, phone_switch, push, sms, twitter and whatsapp.",
                "schema": {
                  "example": "conversation",
                  "type": "string"
                },
                "generatedName": "ConversationSourceType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationSourceId",
            "key": "id",
            "schema": {
              "generatedName": "conversationSourceId",
              "title": "Conversation source",
              "value": {
                "description": "The id representing the message.",
                "schema": {
                  "example": "3",
                  "type": "string"
                },
                "generatedName": "ConversationSourceId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationSourceDeliveredAs",
            "key": "delivered_as",
            "schema": {
              "generatedName": "conversationSourceDeliveredAs",
              "title": "Conversation source",
              "value": {
                "description": "The conversation's initiation type. Possible values are customer_initiated, campaigns_initiated (legacy campaigns), operator_initiated (Custom bot), automated (Series and other outbounds with dynamic audience message) and admin_initiated (fixed audience message, ticket initiated by an admin, group email).",
                "schema": {
                  "example": "operator_initiated",
                  "type": "string"
                },
                "generatedName": "ConversationSourceDeliveredAs",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationSourceSubject",
            "key": "subject",
            "schema": {
              "generatedName": "conversationSourceSubject",
              "title": "Conversation source",
              "value": {
                "description": "Optional. The message subject. For Twitter, this will show a generic message regarding why the subject is obscured.",
                "schema": {
                  "example": "",
                  "type": "string"
                },
                "generatedName": "ConversationSourceSubject",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationSourceBody",
            "key": "body",
            "schema": {
              "generatedName": "conversationSourceBody",
              "title": "Conversation source",
              "value": {
                "description": "The message body, which may contain HTML. For Twitter, this will show a generic message regarding why the body is obscured.",
                "schema": {
                  "example": "<p>Hey there!</p>",
                  "type": "string"
                },
                "generatedName": "ConversationSourceBody",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationSourceAuthor",
            "key": "author",
            "schema": {
              "generatedName": "conversationSourceAuthor",
              "title": "Conversation source",
              "value": {
                "generatedName": "ConversationSourceAuthor",
                "schema": "conversation_part_author",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "conversationSourceAttachments",
            "key": "attachments",
            "schema": {
              "generatedName": "conversationSourceAttachments",
              "title": "Conversation source",
              "value": {
                "description": "A list of attachments for the part.",
                "value": {
                  "generatedName": "ConversationSourceAttachmentsItem",
                  "schema": "part_attachment",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ConversationSourceAttachments",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationSourceUrl",
            "key": "url",
            "schema": {
              "generatedName": "conversationSourceUrl",
              "title": "Conversation source",
              "value": {
                "generatedName": "ConversationSourceUrl",
                "description": "The URL where the conversation was started. For Twitter, Email, and Bots, this will be blank.",
                "value": {
                  "description": "The URL where the conversation was started. For Twitter, Email, and Bots, this will be blank.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ConversationSourceUrl",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "conversationSourceRedacted",
            "key": "redacted",
            "schema": {
              "generatedName": "conversationSourceRedacted",
              "title": "Conversation source",
              "value": {
                "description": "Whether or not the source message has been redacted. Only applicable for contact initiated messages.",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "ConversationSourceRedacted",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The Conversation Part that originated this conversation, which can be Contact, Admin, Campaign, Automated or Operator initiated.",
        "generatedName": "ConversationSource",
        "title": "Conversation source",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "conversation_statistics": {
        "generatedName": "ConversationStatistics",
        "title": "Conversation statistics",
        "description": "A Statistics object containing all information required for reporting, with timestamps and calculated metrics.",
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "conversationStatisticsType",
              "key": "type",
              "schema": {
                "generatedName": "conversationStatisticsType",
                "title": "Conversation statistics",
                "value": {
                  "description": "",
                  "schema": {
                    "example": "conversation_statistics",
                    "type": "string"
                  },
                  "generatedName": "ConversationStatisticsType",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "conversationStatisticsTimeToAssignment",
              "key": "time_to_assignment",
              "schema": {
                "generatedName": "conversationStatisticsTimeToAssignment",
                "title": "Conversation statistics",
                "value": {
                  "description": "Duration until last assignment before first admin reply. In seconds.",
                  "schema": {
                    "example": 2310,
                    "type": "int"
                  },
                  "generatedName": "ConversationStatisticsTimeToAssignment",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "conversationStatisticsTimeToAdminReply",
              "key": "time_to_admin_reply",
              "schema": {
                "generatedName": "conversationStatisticsTimeToAdminReply",
                "title": "Conversation statistics",
                "value": {
                  "description": "Duration until first admin reply. Subtracts out of business hours. In seconds.",
                  "schema": {
                    "example": 2310,
                    "type": "int"
                  },
                  "generatedName": "ConversationStatisticsTimeToAdminReply",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "conversationStatisticsTimeToFirstClose",
              "key": "time_to_first_close",
              "schema": {
                "generatedName": "conversationStatisticsTimeToFirstClose",
                "title": "Conversation statistics",
                "value": {
                  "description": "Duration until conversation was closed first time. Subtracts out of business hours. In seconds.",
                  "schema": {
                    "example": 2310,
                    "type": "int"
                  },
                  "generatedName": "ConversationStatisticsTimeToFirstClose",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "conversationStatisticsTimeToLastClose",
              "key": "time_to_last_close",
              "schema": {
                "generatedName": "conversationStatisticsTimeToLastClose",
                "title": "Conversation statistics",
                "value": {
                  "description": "Duration until conversation was closed last time. Subtracts out of business hours. In seconds.",
                  "schema": {
                    "example": 2310,
                    "type": "int"
                  },
                  "generatedName": "ConversationStatisticsTimeToLastClose",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "conversationStatisticsMedianTimeToReply",
              "key": "median_time_to_reply",
              "schema": {
                "generatedName": "conversationStatisticsMedianTimeToReply",
                "title": "Conversation statistics",
                "value": {
                  "description": "Median based on all admin replies after a contact reply. Subtracts out of business hours. In seconds.",
                  "schema": {
                    "example": 2310,
                    "type": "int"
                  },
                  "generatedName": "ConversationStatisticsMedianTimeToReply",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "conversationStatisticsFirstContactReplyAt",
              "key": "first_contact_reply_at",
              "schema": {
                "generatedName": "conversationStatisticsFirstContactReplyAt",
                "title": "Conversation statistics",
                "value": {
                  "description": "Time of first text conversation part from a contact.",
                  "schema": {
                    "example": 1663597233,
                    "type": "int"
                  },
                  "generatedName": "ConversationStatisticsFirstContactReplyAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "conversationStatisticsFirstAssignmentAt",
              "key": "first_assignment_at",
              "schema": {
                "generatedName": "conversationStatisticsFirstAssignmentAt",
                "title": "Conversation statistics",
                "value": {
                  "description": "Time of first assignment after first_contact_reply_at.",
                  "schema": {
                    "example": 1663597233,
                    "type": "int"
                  },
                  "generatedName": "ConversationStatisticsFirstAssignmentAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "conversationStatisticsFirstAdminReplyAt",
              "key": "first_admin_reply_at",
              "schema": {
                "generatedName": "conversationStatisticsFirstAdminReplyAt",
                "title": "Conversation statistics",
                "value": {
                  "description": "Time of first admin reply after first_contact_reply_at.",
                  "schema": {
                    "example": 1663597233,
                    "type": "int"
                  },
                  "generatedName": "ConversationStatisticsFirstAdminReplyAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "conversationStatisticsFirstCloseAt",
              "key": "first_close_at",
              "schema": {
                "generatedName": "conversationStatisticsFirstCloseAt",
                "title": "Conversation statistics",
                "value": {
                  "description": "Time of first close after first_contact_reply_at.",
                  "schema": {
                    "example": 1663597233,
                    "type": "int"
                  },
                  "generatedName": "ConversationStatisticsFirstCloseAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "conversationStatisticsLastAssignmentAt",
              "key": "last_assignment_at",
              "schema": {
                "generatedName": "conversationStatisticsLastAssignmentAt",
                "title": "Conversation statistics",
                "value": {
                  "description": "Time of last assignment after first_contact_reply_at.",
                  "schema": {
                    "example": 1663597233,
                    "type": "int"
                  },
                  "generatedName": "ConversationStatisticsLastAssignmentAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "conversationStatisticsLastAssignmentAdminReplyAt",
              "key": "last_assignment_admin_reply_at",
              "schema": {
                "generatedName": "conversationStatisticsLastAssignmentAdminReplyAt",
                "title": "Conversation statistics",
                "value": {
                  "description": "Time of first admin reply since most recent assignment.",
                  "schema": {
                    "example": 1663597233,
                    "type": "int"
                  },
                  "generatedName": "ConversationStatisticsLastAssignmentAdminReplyAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "conversationStatisticsLastContactReplyAt",
              "key": "last_contact_reply_at",
              "schema": {
                "generatedName": "conversationStatisticsLastContactReplyAt",
                "title": "Conversation statistics",
                "value": {
                  "description": "Time of the last conversation part from a contact.",
                  "schema": {
                    "example": 1663597233,
                    "type": "int"
                  },
                  "generatedName": "ConversationStatisticsLastContactReplyAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "conversationStatisticsLastAdminReplyAt",
              "key": "last_admin_reply_at",
              "schema": {
                "generatedName": "conversationStatisticsLastAdminReplyAt",
                "title": "Conversation statistics",
                "value": {
                  "description": "Time of the last conversation part from an admin.",
                  "schema": {
                    "example": 1663597233,
                    "type": "int"
                  },
                  "generatedName": "ConversationStatisticsLastAdminReplyAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "conversationStatisticsLastCloseAt",
              "key": "last_close_at",
              "schema": {
                "generatedName": "conversationStatisticsLastCloseAt",
                "title": "Conversation statistics",
                "value": {
                  "description": "Time of the last conversation close.",
                  "schema": {
                    "example": 1663597233,
                    "type": "int"
                  },
                  "generatedName": "ConversationStatisticsLastCloseAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "conversationStatisticsLastClosedById",
              "key": "last_closed_by_id",
              "schema": {
                "generatedName": "conversationStatisticsLastClosedById",
                "title": "Conversation statistics",
                "value": {
                  "description": "The last admin who closed the conversation. Returns a reference to an Admin object.",
                  "schema": {
                    "example": "c3po",
                    "type": "string"
                  },
                  "generatedName": "ConversationStatisticsLastClosedById",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "conversationStatisticsCountReopens",
              "key": "count_reopens",
              "schema": {
                "generatedName": "conversationStatisticsCountReopens",
                "title": "Conversation statistics",
                "value": {
                  "description": "Number of reopens after first_contact_reply_at.",
                  "schema": {
                    "example": 1,
                    "type": "int"
                  },
                  "generatedName": "ConversationStatisticsCountReopens",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "conversationStatisticsCountAssignments",
              "key": "count_assignments",
              "schema": {
                "generatedName": "conversationStatisticsCountAssignments",
                "title": "Conversation statistics",
                "value": {
                  "description": "Number of assignments after first_contact_reply_at.",
                  "schema": {
                    "example": 1,
                    "type": "int"
                  },
                  "generatedName": "ConversationStatisticsCountAssignments",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "conversationStatisticsCountConversationParts",
              "key": "count_conversation_parts",
              "schema": {
                "generatedName": "conversationStatisticsCountConversationParts",
                "title": "Conversation statistics",
                "value": {
                  "description": "Total number of conversation parts.",
                  "schema": {
                    "example": 1,
                    "type": "int"
                  },
                  "generatedName": "ConversationStatisticsCountConversationParts",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "A Statistics object containing all information required for reporting, with timestamps and calculated metrics.",
          "generatedName": "ConversationStatistics",
          "title": "Conversation statistics",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "groupName": [],
        "type": "nullable"
      },
      "conversation_teammates": {
        "generatedName": "ConversationTeammates",
        "title": "Conversation teammates",
        "description": "The list of teammates who participated in the conversation (wrote at least one conversation part).",
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "conversationTeammatesType",
              "key": "type",
              "schema": {
                "generatedName": "conversationTeammatesType",
                "title": "Conversation teammates",
                "value": {
                  "description": "The type of the object - `admin.list`.",
                  "schema": {
                    "example": "admin.list",
                    "type": "string"
                  },
                  "generatedName": "ConversationTeammatesType",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "conversationTeammatesTeammates",
              "key": "teammates",
              "schema": {
                "generatedName": "conversationTeammatesTeammates",
                "title": "Conversation teammates",
                "value": {
                  "description": "The list of teammates who participated in the conversation (wrote at least one conversation part).",
                  "value": {
                    "generatedName": "ConversationTeammatesTeammatesItem",
                    "schema": "reference",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "ConversationTeammatesTeammates",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "The list of teammates who participated in the conversation (wrote at least one conversation part).",
          "generatedName": "ConversationTeammates",
          "title": "Conversation teammates",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "groupName": [],
        "type": "nullable"
      },
      "convert_conversation_to_ticket_request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "convertConversationToTicketRequestTicketTypeId",
            "key": "ticket_type_id",
            "schema": {
              "description": "The ID of the type of ticket you want to convert the conversation to",
              "schema": {
                "example": "1234",
                "type": "string"
              },
              "generatedName": "ConvertConversationToTicketRequestTicketTypeId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "convertConversationToTicketRequestAttributes",
            "key": "attributes",
            "schema": {
              "generatedName": "convertConversationToTicketRequestAttributes",
              "title": "Convert Ticket Request Payload",
              "value": {
                "generatedName": "ConvertConversationToTicketRequestAttributes",
                "schema": "ticket_request_custom_attributes",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "You can convert a Conversation to a Ticket",
        "generatedName": "ConvertConversationToTicketRequest",
        "title": "Convert Ticket Request Payload",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "convert_visitor_request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "convertVisitorRequestType",
            "key": "type",
            "schema": {
              "description": "Represents the role of the Contact model. Accepts `lead` or `user`.",
              "schema": {
                "example": "user",
                "type": "string"
              },
              "generatedName": "ConvertVisitorRequestType",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "convertVisitorRequestUser",
            "key": "user",
            "schema": {
              "generatedName": "ConvertVisitorRequestUserOne",
              "type": "unknown"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "convertVisitorRequestVisitor",
            "key": "visitor",
            "schema": {
              "generatedName": "ConvertVisitorRequestVisitorTwo",
              "type": "unknown"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "You can merge a Visitor to a Contact of role type lead or user.",
        "generatedName": "ConvertVisitorRequest",
        "title": "Convert Visitor Request Payload",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "create_article_request": {
        "generatedName": "CreateArticleRequest",
        "title": "Create Article Request Payload",
        "description": "You can create an Article",
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "createArticleRequestTitle",
              "key": "title",
              "schema": {
                "description": "The title of the article.For multilingual articles, this will be the title of the default language's content.",
                "schema": {
                  "example": "Thanks for everything",
                  "type": "string"
                },
                "generatedName": "CreateArticleRequestTitle",
                "groupName": [],
                "type": "primitive"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "createArticleRequestDescription",
              "key": "description",
              "schema": {
                "generatedName": "createArticleRequestDescription",
                "title": "Create Article Request Payload",
                "value": {
                  "description": "The description of the article. For multilingual articles, this will be the description of the default language's content.",
                  "schema": {
                    "example": "Description of the Article",
                    "type": "string"
                  },
                  "generatedName": "CreateArticleRequestDescription",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "createArticleRequestBody",
              "key": "body",
              "schema": {
                "generatedName": "createArticleRequestBody",
                "title": "Create Article Request Payload",
                "value": {
                  "description": "The content of the article. For multilingual articles, this will be the body of the default language's content.",
                  "schema": {
                    "example": "<p>This is the body in html</p>",
                    "type": "string"
                  },
                  "generatedName": "CreateArticleRequestBody",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "createArticleRequestAuthorId",
              "key": "author_id",
              "schema": {
                "description": "The id of the author of the article. For multilingual articles, this will be the id of the author of the default language's content. Must be a teammate on the help center's workspace.",
                "schema": {
                  "example": 1295,
                  "type": "int"
                },
                "generatedName": "CreateArticleRequestAuthorId",
                "groupName": [],
                "type": "primitive"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "createArticleRequestState",
              "key": "state",
              "schema": {
                "generatedName": "createArticleRequestState",
                "title": "Create Article Request Payload",
                "value": {
                  "description": "Whether the article will be `published` or will be a `draft`. Defaults to draft. For multilingual articles, this will be the state of the default language's content.",
                  "generatedName": "CreateArticleRequestState",
                  "values": [
                    {
                      "generatedName": "published",
                      "value": "published",
                      "casing": {}
                    },
                    {
                      "generatedName": "draft",
                      "value": "draft",
                      "casing": {}
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "enum"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "createArticleRequestParentId",
              "key": "parent_id",
              "schema": {
                "generatedName": "createArticleRequestParentId",
                "title": "Create Article Request Payload",
                "value": {
                  "description": "The id of the article's parent collection or section. An article without this field stands alone.",
                  "schema": {
                    "example": 18,
                    "type": "int"
                  },
                  "generatedName": "CreateArticleRequestParentId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "createArticleRequestParentType",
              "key": "parent_type",
              "schema": {
                "generatedName": "createArticleRequestParentType",
                "title": "Create Article Request Payload",
                "value": {
                  "description": "The type of parent, which can either be a `collection` or `section`.",
                  "schema": {
                    "example": "collection",
                    "type": "string"
                  },
                  "generatedName": "CreateArticleRequestParentType",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "createArticleRequestTranslatedContent",
              "key": "translated_content",
              "schema": {
                "generatedName": "createArticleRequestTranslatedContent",
                "title": "Create Article Request Payload",
                "value": {
                  "generatedName": "CreateArticleRequestTranslatedContent",
                  "schema": "article_translated_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "You can create an Article",
          "generatedName": "CreateArticleRequest",
          "title": "Create Article Request Payload",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "groupName": [],
        "type": "nullable"
      },
      "create_collection_request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "createCollectionRequestName",
            "key": "name",
            "schema": {
              "description": "The name of the collection. For multilingual collections, this will be the name of the default language's content.",
              "schema": {
                "example": "collection 51",
                "type": "string"
              },
              "generatedName": "CreateCollectionRequestName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createCollectionRequestDescription",
            "key": "description",
            "schema": {
              "generatedName": "createCollectionRequestDescription",
              "title": "Create Collection Request Payload",
              "value": {
                "description": "The description of the collection. For multilingual collections, this will be the description of the default language's content.",
                "schema": {
                  "example": "English description",
                  "type": "string"
                },
                "generatedName": "CreateCollectionRequestDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createCollectionRequestTranslatedContent",
            "key": "translated_content",
            "schema": {
              "generatedName": "createCollectionRequestTranslatedContent",
              "title": "Create Collection Request Payload",
              "value": {
                "generatedName": "CreateCollectionRequestTranslatedContent",
                "schema": "group_translated_content",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "createCollectionRequestParentId",
            "key": "parent_id",
            "schema": {
              "generatedName": "createCollectionRequestParentId",
              "title": "Create Collection Request Payload",
              "value": {
                "generatedName": "CreateCollectionRequestParentId",
                "description": "The id of the parent collection. If `null` then it will be created as the first level collection.",
                "value": {
                  "description": "The id of the parent collection. If `null` then it will be created as the first level collection.",
                  "schema": {
                    "example": "6871118",
                    "type": "string"
                  },
                  "generatedName": "CreateCollectionRequestParentId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createCollectionRequestHelpCenterId",
            "key": "help_center_id",
            "schema": {
              "generatedName": "createCollectionRequestHelpCenterId",
              "title": "Create Collection Request Payload",
              "value": {
                "generatedName": "CreateCollectionRequestHelpCenterId",
                "description": "The id of the help center where the collection will be created. If `null` then it will be created in the default help center.",
                "value": {
                  "description": "The id of the help center where the collection will be created. If `null` then it will be created in the default help center.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "CreateCollectionRequestHelpCenterId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "You can create a collection",
        "generatedName": "CreateCollectionRequest",
        "title": "Create Collection Request Payload",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "create_contact_request": {
        "generatedName": "CreateContactRequestTwo",
        "type": "unknown"
      },
      "create_conversation_request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "createConversationRequestFrom",
            "key": "from",
            "schema": {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "createConversationRequestFromType",
                  "key": "type",
                  "schema": {
                    "description": "The role associated to the contact - user or lead.",
                    "generatedName": "CreateConversationRequestFromType",
                    "values": [
                      {
                        "generatedName": "lead",
                        "value": "lead",
                        "casing": {}
                      },
                      {
                        "generatedName": "user",
                        "value": "user",
                        "casing": {}
                      },
                      {
                        "generatedName": "contact",
                        "value": "contact",
                        "casing": {}
                      }
                    ],
                    "groupName": [],
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "enum"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "createConversationRequestFromId",
                  "key": "id",
                  "schema": {
                    "description": "The identifier for the contact which is given by Intercom.",
                    "schema": {
                      "format": "uuid",
                      "minLength": 24,
                      "maxLength": 24,
                      "example": "536e564f316c83104c000020",
                      "type": "string"
                    },
                    "generatedName": "CreateConversationRequestFromId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "CreateConversationRequestFrom",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createConversationRequestBody",
            "key": "body",
            "schema": {
              "description": "The content of the message. HTML is not supported.",
              "schema": {
                "example": "Hello",
                "type": "string"
              },
              "generatedName": "CreateConversationRequestBody",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Conversations are how you can communicate with users in Intercom. They are created when a contact replies to an outbound message, or when one admin directly sends a message to a single contact.",
        "generatedName": "CreateConversationRequest",
        "title": "Create Conversation Request Payload",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "create_data_attribute_request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "createDataAttributeRequestName",
            "key": "name",
            "schema": {
              "description": "The name of the data attribute.",
              "schema": {
                "example": "My Data Attribute",
                "type": "string"
              },
              "generatedName": "CreateDataAttributeRequestName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createDataAttributeRequestModel",
            "key": "model",
            "schema": {
              "description": "The model that the data attribute belongs to.",
              "generatedName": "CreateDataAttributeRequestModel",
              "values": [
                {
                  "generatedName": "contact",
                  "value": "contact",
                  "casing": {}
                },
                {
                  "generatedName": "company",
                  "value": "company",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createDataAttributeRequestDataType",
            "key": "data_type",
            "schema": {
              "description": "The type of data stored for this attribute.",
              "generatedName": "CreateDataAttributeRequestDataType",
              "values": [
                {
                  "generatedName": "string",
                  "value": "string",
                  "casing": {}
                },
                {
                  "generatedName": "integer",
                  "value": "integer",
                  "casing": {}
                },
                {
                  "generatedName": "float",
                  "value": "float",
                  "casing": {}
                },
                {
                  "generatedName": "boolean",
                  "value": "boolean",
                  "casing": {}
                },
                {
                  "generatedName": "datetime",
                  "value": "datetime",
                  "casing": {}
                },
                {
                  "generatedName": "date",
                  "value": "date",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createDataAttributeRequestDescription",
            "key": "description",
            "schema": {
              "generatedName": "createDataAttributeRequestDescription",
              "title": "Create Data Attribute Request",
              "value": {
                "description": "The readable description you see in the UI for the attribute.",
                "schema": {
                  "example": "My Data Attribute Description",
                  "type": "string"
                },
                "generatedName": "CreateDataAttributeRequestDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createDataAttributeRequestOptions",
            "key": "options",
            "schema": {
              "generatedName": "createDataAttributeRequestOptions",
              "title": "Create Data Attribute Request",
              "value": {
                "description": "To create list attributes. Provide a set of hashes with `value` as the key of the options you want to make. `data_type` must be `string`.",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "CreateDataAttributeRequestOptionsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "CreateDataAttributeRequestOptions",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createDataAttributeRequestMessengerWritable",
            "key": "messenger_writable",
            "schema": {
              "generatedName": "createDataAttributeRequestMessengerWritable",
              "title": "Create Data Attribute Request",
              "value": {
                "description": "Can this attribute be updated by the Messenger",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "CreateDataAttributeRequestMessengerWritable",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "",
        "generatedName": "CreateDataAttributeRequest",
        "title": "Create Data Attribute Request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "create_data_event_request": {
        "generatedName": "CreateDataEventRequestTwo",
        "type": "unknown"
      },
      "create_data_event_summaries_request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "createDataEventSummariesRequestUserId",
            "key": "user_id",
            "schema": {
              "generatedName": "createDataEventSummariesRequestUserId",
              "title": "Create Data Event Summaries Request",
              "value": {
                "description": "Your identifier for the user.",
                "schema": {
                  "example": "314159",
                  "type": "string"
                },
                "generatedName": "CreateDataEventSummariesRequestUserId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createDataEventSummariesRequestEventSummaries",
            "key": "event_summaries",
            "schema": {
              "generatedName": "createDataEventSummariesRequestEventSummaries",
              "title": "Create Data Event Summaries Request",
              "value": {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "createDataEventSummariesRequestEventSummariesEventName",
                    "key": "event_name",
                    "schema": {
                      "generatedName": "createDataEventSummariesRequestEventSummariesEventName",
                      "value": {
                        "description": "The name of the event that occurred. A good event name is typically a past tense 'verb-noun' combination, to improve readability, for example `updated-plan`.",
                        "schema": {
                          "example": "invited-friend",
                          "type": "string"
                        },
                        "generatedName": "CreateDataEventSummariesRequestEventSummariesEventName",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "createDataEventSummariesRequestEventSummariesCount",
                    "key": "count",
                    "schema": {
                      "generatedName": "createDataEventSummariesRequestEventSummariesCount",
                      "value": {
                        "description": "The number of times the event occurred.",
                        "schema": {
                          "example": 1,
                          "type": "int"
                        },
                        "generatedName": "CreateDataEventSummariesRequestEventSummariesCount",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "createDataEventSummariesRequestEventSummariesFirst",
                    "key": "first",
                    "schema": {
                      "generatedName": "createDataEventSummariesRequestEventSummariesFirst",
                      "value": {
                        "description": "The first time the event was sent",
                        "schema": {
                          "example": 1671028894,
                          "type": "int"
                        },
                        "generatedName": "CreateDataEventSummariesRequestEventSummariesFirst",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "createDataEventSummariesRequestEventSummariesLast",
                    "key": "last",
                    "schema": {
                      "generatedName": "createDataEventSummariesRequestEventSummariesLast",
                      "value": {
                        "description": "The last time the event was sent",
                        "schema": {
                          "example": 1671028894,
                          "type": "int"
                        },
                        "generatedName": "CreateDataEventSummariesRequestEventSummariesLast",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "description": "A list of event summaries for the user. Each event summary should contain the event name, the time the event occurred, and the number of times the event occurred. The event name should be a past tense 'verb-noun' combination, to improve readability, for example `updated-plan`.",
                "generatedName": "CreateDataEventSummariesRequestEventSummaries",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "You can send a list of event summaries for a user. Each event summary should contain the event name, the time the event occurred, and the number of times the event occurred. The event name should be a past tense \"verb-noun\" combination, to improve readability, for example `updated-plan`.",
        "generatedName": "CreateDataEventSummariesRequest",
        "title": "Create Data Event Summaries Request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "create_data_exports_request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "createDataExportsRequestCreatedAtAfter",
            "key": "created_at_after",
            "schema": {
              "description": "The start date that you request data for. It must be formatted as a unix timestamp.",
              "schema": {
                "example": 1527811200,
                "type": "int"
              },
              "generatedName": "CreateDataExportsRequestCreatedAtAfter",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createDataExportsRequestCreatedAtBefore",
            "key": "created_at_before",
            "schema": {
              "description": "The end date that you request data for. It must be formatted as a unix timestamp.",
              "schema": {
                "example": 1527811200,
                "type": "int"
              },
              "generatedName": "CreateDataExportsRequestCreatedAtBefore",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Request for creating a data export",
        "generatedName": "CreateDataExportsRequest",
        "title": "Create Data Export Request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "create_message_request": {
        "generatedName": "CreateMessageRequestOne",
        "type": "unknown"
      },
      "create_or_update_company_request": {
        "generatedName": "CreateOrUpdateCompanyRequest",
        "title": "Create Or Update Company Request Payload",
        "description": "You can create or update a Company",
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "createOrUpdateCompanyRequestName",
              "key": "name",
              "schema": {
                "generatedName": "createOrUpdateCompanyRequestName",
                "title": "Create Or Update Company Request Payload",
                "value": {
                  "description": "The name of the Company",
                  "schema": {
                    "example": "Intercom",
                    "type": "string"
                  },
                  "generatedName": "CreateOrUpdateCompanyRequestName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "createOrUpdateCompanyRequestCompanyId",
              "key": "company_id",
              "schema": {
                "generatedName": "createOrUpdateCompanyRequestCompanyId",
                "title": "Create Or Update Company Request Payload",
                "value": {
                  "description": "The company id you have defined for the company. Can't be updated",
                  "schema": {
                    "example": "625e90fc55ab113b6d92175f",
                    "type": "string"
                  },
                  "generatedName": "CreateOrUpdateCompanyRequestCompanyId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "createOrUpdateCompanyRequestPlan",
              "key": "plan",
              "schema": {
                "generatedName": "createOrUpdateCompanyRequestPlan",
                "title": "Create Or Update Company Request Payload",
                "value": {
                  "description": "The name of the plan you have associated with the company.",
                  "schema": {
                    "example": "Enterprise",
                    "type": "string"
                  },
                  "generatedName": "CreateOrUpdateCompanyRequestPlan",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "createOrUpdateCompanyRequestSize",
              "key": "size",
              "schema": {
                "generatedName": "createOrUpdateCompanyRequestSize",
                "title": "Create Or Update Company Request Payload",
                "value": {
                  "description": "The number of employees in this company.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "CreateOrUpdateCompanyRequestSize",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "createOrUpdateCompanyRequestWebsite",
              "key": "website",
              "schema": {
                "generatedName": "createOrUpdateCompanyRequestWebsite",
                "title": "Create Or Update Company Request Payload",
                "value": {
                  "description": "The URL for this company's website. Please note that the value specified here is not validated. Accepts any string.",
                  "schema": {
                    "example": "https://www.example.com",
                    "type": "string"
                  },
                  "generatedName": "CreateOrUpdateCompanyRequestWebsite",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "createOrUpdateCompanyRequestIndustry",
              "key": "industry",
              "schema": {
                "generatedName": "createOrUpdateCompanyRequestIndustry",
                "title": "Create Or Update Company Request Payload",
                "value": {
                  "description": "The industry that this company operates in.",
                  "schema": {
                    "example": "Manufacturing",
                    "type": "string"
                  },
                  "generatedName": "CreateOrUpdateCompanyRequestIndustry",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "createOrUpdateCompanyRequestCustomAttributes",
              "key": "custom_attributes",
              "schema": {
                "generatedName": "createOrUpdateCompanyRequestCustomAttributes",
                "title": "Create Or Update Company Request Payload",
                "value": {
                  "description": "A hash of key/value pairs containing any other data about the company you want Intercom to store.",
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "CreateOrUpdateCompanyRequestCustomAttributesKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "CreateOrUpdateCompanyRequestCustomAttributesValue",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "CreateOrUpdateCompanyRequestCustomAttributes",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "createOrUpdateCompanyRequestRemoteCreatedAt",
              "key": "remote_created_at",
              "schema": {
                "generatedName": "createOrUpdateCompanyRequestRemoteCreatedAt",
                "title": "Create Or Update Company Request Payload",
                "value": {
                  "description": "The time the company was created by you.",
                  "schema": {
                    "example": 1394531169,
                    "type": "int"
                  },
                  "generatedName": "CreateOrUpdateCompanyRequestRemoteCreatedAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "createOrUpdateCompanyRequestMonthlySpend",
              "key": "monthly_spend",
              "schema": {
                "generatedName": "createOrUpdateCompanyRequestMonthlySpend",
                "title": "Create Or Update Company Request Payload",
                "value": {
                  "description": "How much revenue the company generates for your business. Note that this will truncate floats. i.e. it only allow for whole integers, 155.98 will be truncated to 155. Note that this has an upper limit of 2**31-1 or 2147483647..",
                  "schema": {
                    "example": 1000,
                    "type": "int"
                  },
                  "generatedName": "CreateOrUpdateCompanyRequestMonthlySpend",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "You can create or update a Company",
          "generatedName": "CreateOrUpdateCompanyRequest",
          "title": "Create Or Update Company Request Payload",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "groupName": [],
        "type": "nullable"
      },
      "create_or_update_tag_request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "createOrUpdateTagRequestName",
            "key": "name",
            "schema": {
              "description": "The name of the tag, which will be created if not found, or the new name for the tag if this is an update request. Names are case insensitive.",
              "schema": {
                "example": "Independent",
                "type": "string"
              },
              "generatedName": "CreateOrUpdateTagRequestName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createOrUpdateTagRequestId",
            "key": "id",
            "schema": {
              "generatedName": "createOrUpdateTagRequestId",
              "title": "Create or Update Tag Request Payload",
              "value": {
                "description": "The id of tag to updates.",
                "schema": {
                  "example": "656452352",
                  "type": "string"
                },
                "generatedName": "CreateOrUpdateTagRequestId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "You can create or update an existing tag.",
        "generatedName": "CreateOrUpdateTagRequest",
        "title": "Create or Update Tag Request Payload",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "create_phone_switch_request": {
        "generatedName": "CreatePhoneSwitchRequest",
        "title": "Create Phone Switch Request Payload",
        "description": "You can create an phone switch",
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "createPhoneSwitchRequestPhone",
              "key": "phone",
              "schema": {
                "description": "Phone number in E.164 format, that will receive the SMS to continue the conversation in the Messenger.",
                "schema": {
                  "example": "+1 1234567890",
                  "type": "string"
                },
                "generatedName": "CreatePhoneSwitchRequestPhone",
                "groupName": [],
                "type": "primitive"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "createPhoneSwitchRequestCustomAttributes",
              "key": "custom_attributes",
              "schema": {
                "generatedName": "createPhoneSwitchRequestCustomAttributes",
                "title": "Create Phone Switch Request Payload",
                "value": {
                  "generatedName": "CreatePhoneSwitchRequestCustomAttributes",
                  "schema": "custom_attributes",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "You can create an phone switch",
          "generatedName": "CreatePhoneSwitchRequest",
          "title": "Create Phone Switch Request Payload",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "groupName": [],
        "type": "nullable"
      },
      "create_ticket_reply_with_comment_request": {
        "value": {
          "generatedName": "CreateTicketReplyWithCommentRequest",
          "title": "Create Ticket Reply Request Payload",
          "schemas": [
            {
              "generatedName": "CreateTicketReplyWithCommentRequestZero",
              "schema": "contact_reply_ticket_request",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            {
              "generatedName": "CreateTicketReplyWithCommentRequestOne",
              "schema": "admin_reply_ticket_request",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            }
          ],
          "groupName": [],
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "undiscriminated"
        },
        "type": "oneOf"
      },
      "create_ticket_request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "createTicketRequestTicketTypeId",
            "key": "ticket_type_id",
            "schema": {
              "description": "The ID of the type of ticket you want to create",
              "schema": {
                "example": "1234",
                "type": "string"
              },
              "generatedName": "CreateTicketRequestTicketTypeId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createTicketRequestContacts",
            "key": "contacts",
            "schema": {
              "description": "The list of contacts (users or leads) affected by this ticket. Currently only one is allowed",
              "value": {
                "value": {
                  "generatedName": "CreateTicketRequestContactsItem",
                  "schemas": [
                    {
                      "allOf": [],
                      "properties": [
                        {
                          "conflict": {},
                          "generatedName": "createTicketRequestContactsItemIdId",
                          "key": "id",
                          "schema": {
                            "description": "The identifier for the contact as given by Intercom.",
                            "schema": {
                              "type": "string"
                            },
                            "generatedName": "CreateTicketRequestContactsItemIdId",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "audiences": []
                        }
                      ],
                      "allOfPropertyConflicts": [],
                      "generatedName": "CreateTicketRequestContactsItemId",
                      "nameOverride": "ID",
                      "title": "ID",
                      "groupName": [],
                      "additionalProperties": false,
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "object"
                    },
                    {
                      "allOf": [],
                      "properties": [
                        {
                          "conflict": {},
                          "generatedName": "createTicketRequestContactsItemExternalIdExternalId",
                          "key": "external_id",
                          "schema": {
                            "description": "The external_id you have defined for the contact who is being added as a participant.",
                            "schema": {
                              "type": "string"
                            },
                            "generatedName": "CreateTicketRequestContactsItemExternalIdExternalId",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "audiences": []
                        }
                      ],
                      "allOfPropertyConflicts": [],
                      "generatedName": "CreateTicketRequestContactsItemExternalId",
                      "title": "External ID",
                      "groupName": [],
                      "additionalProperties": false,
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "object"
                    },
                    {
                      "allOf": [],
                      "properties": [
                        {
                          "conflict": {},
                          "generatedName": "createTicketRequestContactsItemEmailEmail",
                          "key": "email",
                          "schema": {
                            "description": "The email you have defined for the contact who is being added as a participant. If a contact with this email does not exist, one will be created.",
                            "schema": {
                              "type": "string"
                            },
                            "generatedName": "CreateTicketRequestContactsItemEmailEmail",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "audiences": []
                        }
                      ],
                      "allOfPropertyConflicts": [],
                      "generatedName": "CreateTicketRequestContactsItemEmail",
                      "nameOverride": "Email",
                      "title": "Email",
                      "groupName": [],
                      "additionalProperties": false,
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "object"
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "undiscriminated"
                },
                "type": "oneOf"
              },
              "generatedName": "CreateTicketRequestContacts",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createTicketRequestCompanyId",
            "key": "company_id",
            "schema": {
              "generatedName": "createTicketRequestCompanyId",
              "title": "Create Ticket Request Payload",
              "value": {
                "description": "The ID of the company that the ticket is associated with. The ID that you set upon company creation.",
                "schema": {
                  "example": "1234",
                  "type": "string"
                },
                "generatedName": "CreateTicketRequestCompanyId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createTicketRequestCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "createTicketRequestCreatedAt",
              "title": "Create Ticket Request Payload",
              "value": {
                "description": "The time the ticket was created. If not provided, the current time will be used.",
                "schema": {
                  "example": 1590000000,
                  "type": "int"
                },
                "generatedName": "CreateTicketRequestCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createTicketRequestTicketAttributes",
            "key": "ticket_attributes",
            "schema": {
              "generatedName": "createTicketRequestTicketAttributes",
              "title": "Create Ticket Request Payload",
              "value": {
                "generatedName": "CreateTicketRequestTicketAttributes",
                "schema": "ticket_request_custom_attributes",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "You can create a Ticket",
        "generatedName": "CreateTicketRequest",
        "title": "Create Ticket Request Payload",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "create_ticket_type_attribute_request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "createTicketTypeAttributeRequestName",
            "key": "name",
            "schema": {
              "description": "The name of the ticket type attribute",
              "schema": {
                "example": "Bug Priority",
                "type": "string"
              },
              "generatedName": "CreateTicketTypeAttributeRequestName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createTicketTypeAttributeRequestDescription",
            "key": "description",
            "schema": {
              "description": "The description of the attribute presented to the teammate or contact",
              "schema": {
                "example": "Priority level of the bug",
                "type": "string"
              },
              "generatedName": "CreateTicketTypeAttributeRequestDescription",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createTicketTypeAttributeRequestDataType",
            "key": "data_type",
            "schema": {
              "description": "The data type of the attribute",
              "generatedName": "CreateTicketTypeAttributeRequestDataType",
              "values": [
                {
                  "generatedName": "string",
                  "value": "string",
                  "casing": {}
                },
                {
                  "generatedName": "list",
                  "value": "list",
                  "casing": {}
                },
                {
                  "generatedName": "integer",
                  "value": "integer",
                  "casing": {}
                },
                {
                  "generatedName": "decimal",
                  "value": "decimal",
                  "casing": {}
                },
                {
                  "generatedName": "boolean",
                  "value": "boolean",
                  "casing": {}
                },
                {
                  "generatedName": "datetime",
                  "value": "datetime",
                  "casing": {}
                },
                {
                  "generatedName": "files",
                  "value": "files",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createTicketTypeAttributeRequestRequiredToCreate",
            "key": "required_to_create",
            "schema": {
              "generatedName": "createTicketTypeAttributeRequestRequiredToCreate",
              "title": "Create Ticket Type Attribute Request Payload",
              "value": {
                "description": "Whether the attribute is required to be filled in when teammates are creating the ticket in Inbox.",
                "schema": {
                  "default": false,
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "CreateTicketTypeAttributeRequestRequiredToCreate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createTicketTypeAttributeRequestRequiredToCreateForContacts",
            "key": "required_to_create_for_contacts",
            "schema": {
              "generatedName": "createTicketTypeAttributeRequestRequiredToCreateForContacts",
              "title": "Create Ticket Type Attribute Request Payload",
              "value": {
                "description": "Whether the attribute is required to be filled in when contacts are creating the ticket in Messenger.",
                "schema": {
                  "default": false,
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "CreateTicketTypeAttributeRequestRequiredToCreateForContacts",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createTicketTypeAttributeRequestVisibleOnCreate",
            "key": "visible_on_create",
            "schema": {
              "generatedName": "createTicketTypeAttributeRequestVisibleOnCreate",
              "title": "Create Ticket Type Attribute Request Payload",
              "value": {
                "description": "Whether the attribute is visible to teammates when creating a ticket in Inbox.",
                "schema": {
                  "default": true,
                  "example": true,
                  "type": "boolean"
                },
                "generatedName": "CreateTicketTypeAttributeRequestVisibleOnCreate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createTicketTypeAttributeRequestVisibleToContacts",
            "key": "visible_to_contacts",
            "schema": {
              "generatedName": "createTicketTypeAttributeRequestVisibleToContacts",
              "title": "Create Ticket Type Attribute Request Payload",
              "value": {
                "description": "Whether the attribute is visible to contacts when creating a ticket in Messenger.",
                "schema": {
                  "default": true,
                  "example": true,
                  "type": "boolean"
                },
                "generatedName": "CreateTicketTypeAttributeRequestVisibleToContacts",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createTicketTypeAttributeRequestMultiline",
            "key": "multiline",
            "schema": {
              "generatedName": "createTicketTypeAttributeRequestMultiline",
              "title": "Create Ticket Type Attribute Request Payload",
              "value": {
                "description": "Whether the attribute allows multiple lines of text (only applicable to string attributes)",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "CreateTicketTypeAttributeRequestMultiline",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createTicketTypeAttributeRequestListItems",
            "key": "list_items",
            "schema": {
              "generatedName": "createTicketTypeAttributeRequestListItems",
              "title": "Create Ticket Type Attribute Request Payload",
              "value": {
                "description": "A comma delimited list of items for the attribute value (only applicable to list attributes)",
                "schema": {
                  "example": "Low Priority,Medium Priority,High Priority",
                  "type": "string"
                },
                "generatedName": "CreateTicketTypeAttributeRequestListItems",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createTicketTypeAttributeRequestAllowMultipleValues",
            "key": "allow_multiple_values",
            "schema": {
              "generatedName": "createTicketTypeAttributeRequestAllowMultipleValues",
              "title": "Create Ticket Type Attribute Request Payload",
              "value": {
                "description": "Whether the attribute allows multiple files to be attached to it (only applicable to file attributes)",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "CreateTicketTypeAttributeRequestAllowMultipleValues",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "You can create a Ticket Type Attribute",
        "generatedName": "CreateTicketTypeAttributeRequest",
        "title": "Create Ticket Type Attribute Request Payload",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "create_ticket_type_request": {
        "generatedName": "CreateTicketTypeRequest",
        "title": "Create Ticket Type Request Payload",
        "description": "The request payload for creating a ticket type.\n  You can copy the `icon` property for your ticket type from [Twemoji Cheatsheet](https://twemoji-cheatsheet.vercel.app/)\n",
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "createTicketTypeRequestName",
              "key": "name",
              "schema": {
                "description": "The name of the ticket type.",
                "schema": {
                  "example": "Bug",
                  "type": "string"
                },
                "generatedName": "CreateTicketTypeRequestName",
                "groupName": [],
                "type": "primitive"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "createTicketTypeRequestDescription",
              "key": "description",
              "schema": {
                "generatedName": "createTicketTypeRequestDescription",
                "title": "Create Ticket Type Request Payload",
                "value": {
                  "description": "The description of the ticket type.",
                  "schema": {
                    "example": "Used for tracking bugs",
                    "type": "string"
                  },
                  "generatedName": "CreateTicketTypeRequestDescription",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "createTicketTypeRequestCategory",
              "key": "category",
              "schema": {
                "generatedName": "createTicketTypeRequestCategory",
                "title": "Create Ticket Type Request Payload",
                "value": {
                  "description": "Category of the Ticket Type.",
                  "generatedName": "CreateTicketTypeRequestCategory",
                  "values": [
                    {
                      "generatedName": "Customer",
                      "value": "Customer",
                      "casing": {}
                    },
                    {
                      "generatedName": "BackOffice",
                      "value": "Back-office",
                      "casing": {}
                    },
                    {
                      "generatedName": "Tracker",
                      "value": "Tracker",
                      "casing": {}
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "enum"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "createTicketTypeRequestIcon",
              "key": "icon",
              "schema": {
                "generatedName": "createTicketTypeRequestIcon",
                "title": "Create Ticket Type Request Payload",
                "value": {
                  "description": "The icon of the ticket type.",
                  "schema": {
                    "default": "🎟️",
                    "example": "🐞",
                    "type": "string"
                  },
                  "generatedName": "CreateTicketTypeRequestIcon",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "createTicketTypeRequestIsInternal",
              "key": "is_internal",
              "schema": {
                "generatedName": "createTicketTypeRequestIsInternal",
                "title": "Create Ticket Type Request Payload",
                "value": {
                  "description": "Whether the tickets associated with this ticket type are intended for internal use only or will be shared with customers. This is currently a limited attribute.",
                  "schema": {
                    "default": false,
                    "example": false,
                    "type": "boolean"
                  },
                  "generatedName": "CreateTicketTypeRequestIsInternal",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "The request payload for creating a ticket type.\n  You can copy the `icon` property for your ticket type from [Twemoji Cheatsheet](https://twemoji-cheatsheet.vercel.app/)\n",
          "generatedName": "CreateTicketTypeRequest",
          "title": "Create Ticket Type Request Payload",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "groupName": [],
        "type": "nullable"
      },
      "cursor_pages": {
        "generatedName": "CursorPages",
        "title": "Cursor based pages",
        "description": "Cursor-based pagination is a technique used in the Intercom API to navigate through large amounts of data.\nA \"cursor\" or pointer is used to keep track of the current position in the result set, allowing the API to return the data in small chunks or \"pages\" as needed.\n",
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "cursorPagesType",
              "key": "type",
              "schema": {
                "generatedName": "cursorPagesType",
                "title": "Cursor based pages",
                "value": {
                  "description": "the type of object `pages`.",
                  "value": {
                    "value": "pages",
                    "type": "string"
                  },
                  "generatedName": "CursorPagesType",
                  "groupName": [],
                  "type": "literal"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "cursorPagesPage",
              "key": "page",
              "schema": {
                "generatedName": "cursorPagesPage",
                "title": "Cursor based pages",
                "value": {
                  "description": "The current page",
                  "schema": {
                    "example": 1,
                    "type": "int"
                  },
                  "generatedName": "CursorPagesPage",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "cursorPagesNext",
              "key": "next",
              "schema": {
                "generatedName": "cursorPagesNext",
                "title": "Cursor based pages",
                "value": {
                  "generatedName": "CursorPagesNext",
                  "schema": "starting_after_paging",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "cursorPagesPerPage",
              "key": "per_page",
              "schema": {
                "generatedName": "cursorPagesPerPage",
                "title": "Cursor based pages",
                "value": {
                  "description": "Number of results per page",
                  "schema": {
                    "example": 2,
                    "type": "int"
                  },
                  "generatedName": "CursorPagesPerPage",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "cursorPagesTotalPages",
              "key": "total_pages",
              "schema": {
                "generatedName": "cursorPagesTotalPages",
                "title": "Cursor based pages",
                "value": {
                  "description": "Total number of pages",
                  "schema": {
                    "example": 13,
                    "type": "int"
                  },
                  "generatedName": "CursorPagesTotalPages",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "Cursor-based pagination is a technique used in the Intercom API to navigate through large amounts of data.\nA \"cursor\" or pointer is used to keep track of the current position in the result set, allowing the API to return the data in small chunks or \"pages\" as needed.\n",
          "generatedName": "CursorPages",
          "title": "Cursor based pages",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "groupName": [],
        "type": "nullable"
      },
      "custom_attributes": {
        "description": "An object containing the different custom attributes associated to the conversation as key-value pairs. For relationship attributes the value will be a list of custom object instance models.",
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "CustomAttributesKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "value": {
            "generatedName": "CustomAttributesValue",
            "schemas": [
              {
                "schema": {
                  "type": "string"
                },
                "generatedName": "CustomAttributesValue",
                "groupName": [],
                "type": "primitive"
              },
              {
                "generatedName": "CustomAttributesValueOne",
                "schema": "custom_object_instance",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              }
            ],
            "groupName": [],
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "inline": true,
            "type": "undiscriminated"
          },
          "type": "oneOf"
        },
        "generatedName": "CustomAttributes",
        "title": "Custom Attributes",
        "groupName": [],
        "type": "map"
      },
      "custom_object_instance": {
        "generatedName": "CustomObjectInstance",
        "title": "Custom Object Instance",
        "description": "A Custom Object Instance represents an instance of a custom object type. This allows you to create and set custom attributes to store data about your customers that is not already captured by Intercom. The parent object includes recommended default attributes and you can add your own custom attributes.",
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "customObjectInstanceId",
              "key": "id",
              "schema": {
                "generatedName": "customObjectInstanceId",
                "title": "Custom Object Instance",
                "value": {
                  "description": "The Intercom defined id representing the custom object instance.",
                  "schema": {
                    "example": "5a7a19e9f59ae20001d1c1e6",
                    "type": "string"
                  },
                  "generatedName": "CustomObjectInstanceId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [
                  "Custom Object Instances"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "customObjectInstanceExternalId",
              "key": "external_id",
              "schema": {
                "generatedName": "customObjectInstanceExternalId",
                "title": "Custom Object Instance",
                "value": {
                  "description": "The id you have defined for the custom object instance.",
                  "schema": {
                    "example": "0001d1c1e65a7a19e9f59ae2",
                    "type": "string"
                  },
                  "generatedName": "CustomObjectInstanceExternalId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [
                  "Custom Object Instances"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "customObjectInstanceType",
              "key": "type",
              "schema": {
                "generatedName": "customObjectInstanceType",
                "title": "Custom Object Instance",
                "value": {
                  "description": "The identifier of the custom object type that defines the structure of the custom object instance.",
                  "schema": {
                    "example": "Order",
                    "type": "string"
                  },
                  "generatedName": "CustomObjectInstanceType",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [
                  "Custom Object Instances"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "customObjectInstanceCustomAttributes",
              "key": "custom_attributes",
              "schema": {
                "generatedName": "customObjectInstanceCustomAttributes",
                "title": "Custom Object Instance",
                "value": {
                  "description": "The custom attributes you have set on the custom object instance.",
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "CustomObjectInstanceCustomAttributesKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "CustomObjectInstanceCustomAttributesValue",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "CustomObjectInstanceCustomAttributes",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [
                  "Custom Object Instances"
                ],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "A Custom Object Instance represents an instance of a custom object type. This allows you to create and set custom attributes to store data about your customers that is not already captured by Intercom. The parent object includes recommended default attributes and you can add your own custom attributes.",
          "generatedName": "CustomObjectInstance",
          "title": "Custom Object Instance",
          "groupName": [
            "Custom Object Instances"
          ],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "groupName": [
          "Custom Object Instances"
        ],
        "type": "nullable"
      },
      "customer_request": {
        "generatedName": "CustomerRequest",
        "value": {
          "value": {
            "generatedName": "CustomerRequest",
            "schemas": [
              {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "customerRequestIntercomUserIdIntercomUserId",
                    "key": "intercom_user_id",
                    "schema": {
                      "description": "The identifier for the contact as given by Intercom.",
                      "schema": {
                        "example": "6329bd9ffe4e2e91dac76188",
                        "type": "string"
                      },
                      "generatedName": "CustomerRequestIntercomUserIdIntercomUserId",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "generatedName": "CustomerRequestIntercomUserId",
                "title": "Intercom User ID",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "customerRequestUserIdUserId",
                    "key": "user_id",
                    "schema": {
                      "description": "The external_id you have defined for the contact who is being added as a participant.",
                      "schema": {
                        "example": "2e91dac761886329bd9ffe4e",
                        "type": "string"
                      },
                      "generatedName": "CustomerRequestUserIdUserId",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "generatedName": "CustomerRequestUserId",
                "title": "User ID",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "customerRequestEmailEmail",
                    "key": "email",
                    "schema": {
                      "description": "The email you have defined for the contact who is being added as a participant.",
                      "schema": {
                        "example": "sam.sung@example.com",
                        "type": "string"
                      },
                      "generatedName": "CustomerRequestEmailEmail",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "generatedName": "CustomerRequestEmail",
                "nameOverride": "Email",
                "title": "Email",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              }
            ],
            "groupName": [],
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "undiscriminated"
          },
          "type": "oneOf"
        },
        "groupName": [],
        "type": "nullable"
      },
      "data_attribute": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "dataAttributeType",
            "key": "type",
            "schema": {
              "generatedName": "dataAttributeType",
              "title": "Data Attribute",
              "value": {
                "description": "Value is `data_attribute`.",
                "value": {
                  "value": "data_attribute",
                  "type": "string"
                },
                "generatedName": "DataAttributeType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [
                "Data Attributes"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataAttributeId",
            "key": "id",
            "schema": {
              "generatedName": "dataAttributeId",
              "title": "Data Attribute",
              "value": {
                "description": "The unique identifier for the data attribute which is given by Intercom. Only available for custom attributes.",
                "schema": {
                  "example": 12878,
                  "type": "int"
                },
                "generatedName": "DataAttributeId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Data Attributes"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataAttributeModel",
            "key": "model",
            "schema": {
              "generatedName": "dataAttributeModel",
              "title": "Data Attribute",
              "value": {
                "description": "Value is `contact` for user/lead attributes and `company` for company attributes.",
                "generatedName": "DataAttributeModel",
                "values": [
                  {
                    "generatedName": "contact",
                    "value": "contact",
                    "casing": {}
                  },
                  {
                    "generatedName": "company",
                    "value": "company",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [
                "Data Attributes"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataAttributeName",
            "key": "name",
            "schema": {
              "generatedName": "dataAttributeName",
              "title": "Data Attribute",
              "value": {
                "description": "Name of the attribute.",
                "schema": {
                  "example": "paid_subscriber",
                  "type": "string"
                },
                "generatedName": "DataAttributeName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Data Attributes"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataAttributeFullName",
            "key": "full_name",
            "schema": {
              "generatedName": "dataAttributeFullName",
              "title": "Data Attribute",
              "value": {
                "description": "Full name of the attribute. Should match the name unless it's a nested attribute. We can split full_name on `.` to access nested user object values.",
                "schema": {
                  "example": "custom_attributes.paid_subscriber",
                  "type": "string"
                },
                "generatedName": "DataAttributeFullName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Data Attributes"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataAttributeLabel",
            "key": "label",
            "schema": {
              "generatedName": "dataAttributeLabel",
              "title": "Data Attribute",
              "value": {
                "description": "Readable name of the attribute (i.e. name you see in the UI)",
                "schema": {
                  "example": "Paid Subscriber",
                  "type": "string"
                },
                "generatedName": "DataAttributeLabel",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Data Attributes"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataAttributeDescription",
            "key": "description",
            "schema": {
              "generatedName": "dataAttributeDescription",
              "title": "Data Attribute",
              "value": {
                "description": "Readable description of the attribute.",
                "schema": {
                  "example": "Whether the user is a paid subscriber.",
                  "type": "string"
                },
                "generatedName": "DataAttributeDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Data Attributes"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataAttributeDataType",
            "key": "data_type",
            "schema": {
              "generatedName": "dataAttributeDataType",
              "title": "Data Attribute",
              "value": {
                "description": "The data type of the attribute.",
                "generatedName": "DataAttributeDataType",
                "values": [
                  {
                    "generatedName": "string",
                    "value": "string",
                    "casing": {}
                  },
                  {
                    "generatedName": "integer",
                    "value": "integer",
                    "casing": {}
                  },
                  {
                    "generatedName": "float",
                    "value": "float",
                    "casing": {}
                  },
                  {
                    "generatedName": "boolean",
                    "value": "boolean",
                    "casing": {}
                  },
                  {
                    "generatedName": "date",
                    "value": "date",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [
                "Data Attributes"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataAttributeOptions",
            "key": "options",
            "schema": {
              "generatedName": "dataAttributeOptions",
              "title": "Data Attribute",
              "value": {
                "description": "List of predefined options for attribute value.",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "DataAttributeOptionsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "DataAttributeOptions",
                "groupName": [],
                "type": "array"
              },
              "groupName": [
                "Data Attributes"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataAttributeApiWritable",
            "key": "api_writable",
            "schema": {
              "generatedName": "dataAttributeApiWritable",
              "title": "Data Attribute",
              "value": {
                "description": "Can this attribute be updated through API",
                "schema": {
                  "example": true,
                  "type": "boolean"
                },
                "generatedName": "DataAttributeApiWritable",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Data Attributes"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataAttributeMessengerWritable",
            "key": "messenger_writable",
            "schema": {
              "generatedName": "dataAttributeMessengerWritable",
              "title": "Data Attribute",
              "value": {
                "description": "Can this attribute be updated by the Messenger",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "DataAttributeMessengerWritable",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Data Attributes"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataAttributeUiWritable",
            "key": "ui_writable",
            "schema": {
              "generatedName": "dataAttributeUiWritable",
              "title": "Data Attribute",
              "value": {
                "description": "Can this attribute be updated in the UI",
                "schema": {
                  "example": true,
                  "type": "boolean"
                },
                "generatedName": "DataAttributeUiWritable",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Data Attributes"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataAttributeCustom",
            "key": "custom",
            "schema": {
              "generatedName": "dataAttributeCustom",
              "title": "Data Attribute",
              "value": {
                "description": "Set to true if this is a CDA",
                "schema": {
                  "example": true,
                  "type": "boolean"
                },
                "generatedName": "DataAttributeCustom",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Data Attributes"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataAttributeArchived",
            "key": "archived",
            "schema": {
              "generatedName": "dataAttributeArchived",
              "title": "Data Attribute",
              "value": {
                "description": "Is this attribute archived. (Only applicable to CDAs)",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "DataAttributeArchived",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Data Attributes"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataAttributeCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "dataAttributeCreatedAt",
              "title": "Data Attribute",
              "value": {
                "description": "The time the attribute was created as a UTC Unix timestamp",
                "schema": {
                  "example": 1671028894,
                  "type": "int"
                },
                "generatedName": "DataAttributeCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Data Attributes"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataAttributeUpdatedAt",
            "key": "updated_at",
            "schema": {
              "generatedName": "dataAttributeUpdatedAt",
              "title": "Data Attribute",
              "value": {
                "description": "The time the attribute was last updated as a UTC Unix timestamp",
                "schema": {
                  "example": 1671028894,
                  "type": "int"
                },
                "generatedName": "DataAttributeUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Data Attributes"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataAttributeAdminId",
            "key": "admin_id",
            "schema": {
              "generatedName": "dataAttributeAdminId",
              "title": "Data Attribute",
              "value": {
                "description": "Teammate who created the attribute. Only applicable to CDAs",
                "schema": {
                  "example": "5712945",
                  "type": "string"
                },
                "generatedName": "DataAttributeAdminId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Data Attributes"
              ],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Data Attributes are metadata used to describe your contact, company and conversation models. These include standard and custom attributes. By using the data attributes endpoint, you can get the global list of attributes for your workspace, as well as create and archive custom attributes.",
        "generatedName": "DataAttribute",
        "title": "Data Attribute",
        "groupName": [
          "Data Attributes"
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "data_attribute_list": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "dataAttributeListType",
            "key": "type",
            "schema": {
              "generatedName": "dataAttributeListType",
              "title": "Data Attribute List",
              "value": {
                "description": "The type of the object",
                "value": {
                  "value": "list",
                  "type": "string"
                },
                "generatedName": "DataAttributeListType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataAttributeListData",
            "key": "data",
            "schema": {
              "generatedName": "dataAttributeListData",
              "title": "Data Attribute List",
              "value": {
                "description": "A list of data attributes",
                "value": {
                  "generatedName": "DataAttributeListDataItem",
                  "schema": "data_attribute",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "DataAttributeListData",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A list of all data attributes belonging to a workspace for contacts, companies or conversations.",
        "generatedName": "DataAttributeList",
        "title": "Data Attribute List",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "data_event": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "dataEventType",
            "key": "type",
            "schema": {
              "generatedName": "dataEventType",
              "title": "Data Event",
              "value": {
                "description": "The type of the object",
                "value": {
                  "value": "event",
                  "type": "string"
                },
                "generatedName": "DataEventType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [
                "Data Events"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataEventEventName",
            "key": "event_name",
            "schema": {
              "description": "The name of the event that occurred. This is presented to your App's admins when filtering and creating segments - a good event name is typically a past tense 'verb-noun' combination, to improve readability, for example `updated-plan`.",
              "schema": {
                "example": "invited-friend",
                "type": "string"
              },
              "generatedName": "DataEventEventName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataEventCreatedAt",
            "key": "created_at",
            "schema": {
              "description": "The time the event occurred as a UTC Unix timestamp",
              "schema": {
                "example": 1671028894,
                "type": "int"
              },
              "generatedName": "DataEventCreatedAt",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataEventUserId",
            "key": "user_id",
            "schema": {
              "generatedName": "dataEventUserId",
              "title": "Data Event",
              "value": {
                "description": "Your identifier for the user.",
                "schema": {
                  "example": "314159",
                  "type": "string"
                },
                "generatedName": "DataEventUserId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Data Events"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataEventId",
            "key": "id",
            "schema": {
              "generatedName": "dataEventId",
              "title": "Data Event",
              "value": {
                "description": "Your identifier for a lead or a user.",
                "schema": {
                  "example": "8a88a590-e1c3-41e2-a502-e0649dbf721c",
                  "type": "string"
                },
                "generatedName": "DataEventId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Data Events"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataEventIntercomUserId",
            "key": "intercom_user_id",
            "schema": {
              "generatedName": "dataEventIntercomUserId",
              "title": "Data Event",
              "value": {
                "description": "The Intercom identifier for the user.",
                "schema": {
                  "example": "63a0979a5eeebeaf28dd56ba",
                  "type": "string"
                },
                "generatedName": "DataEventIntercomUserId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Data Events"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataEventEmail",
            "key": "email",
            "schema": {
              "generatedName": "dataEventEmail",
              "title": "Data Event",
              "value": {
                "description": "An email address for your user. An email should only be used where your application uses email to uniquely identify users.",
                "schema": {
                  "example": "frodo.baggins@example.com",
                  "type": "string"
                },
                "generatedName": "DataEventEmail",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Data Events"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataEventMetadata",
            "key": "metadata",
            "schema": {
              "generatedName": "dataEventMetadata",
              "title": "Data Event",
              "value": {
                "description": "Optional metadata about the event.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "DataEventMetadataKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "DataEventMetadataValue",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "DataEventMetadata",
                "groupName": [],
                "type": "map"
              },
              "groupName": [
                "Data Events"
              ],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Data events are used to notify Intercom of changes to your data.",
        "generatedName": "DataEvent",
        "title": "Data Event",
        "groupName": [
          "Data Events"
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "data_event_list": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "dataEventListType",
            "key": "type",
            "schema": {
              "generatedName": "dataEventListType",
              "title": "Data Event List",
              "value": {
                "description": "The type of the object",
                "value": {
                  "value": "event.list",
                  "type": "string"
                },
                "generatedName": "DataEventListType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataEventListEvents",
            "key": "events",
            "schema": {
              "generatedName": "dataEventListEvents",
              "title": "Data Event List",
              "value": {
                "description": "A list of data events",
                "value": {
                  "generatedName": "DataEventListEventsItem",
                  "schema": "data_event",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "DataEventListEvents",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataEventListPages",
            "key": "pages",
            "schema": {
              "generatedName": "dataEventListPages",
              "title": "Data Event List",
              "value": {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "dataEventListPagesNext",
                    "key": "next",
                    "schema": {
                      "generatedName": "dataEventListPagesNext",
                      "value": {
                        "schema": {
                          "example": "https://api.intercom.io/events?per_page=2&before=1389913941064&intercom_user_id=63a0979a5eeebeaf28dd56ba&type=user\"",
                          "type": "string"
                        },
                        "generatedName": "DataEventListPagesNext",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "dataEventListPagesSince",
                    "key": "since",
                    "schema": {
                      "generatedName": "dataEventListPagesSince",
                      "value": {
                        "schema": {
                          "example": "https://api.intercom.io/events?intercom_user_id=63a0979a5eeebeaf28dd56ba&type=user&since=1389913941065",
                          "type": "string"
                        },
                        "generatedName": "DataEventListPagesSince",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "description": "Pagination",
                "generatedName": "DataEventListPages",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "This will return a list of data events for the App.",
        "generatedName": "DataEventList",
        "title": "Data Event List",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "data_event_summary": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "dataEventSummaryType",
            "key": "type",
            "schema": {
              "generatedName": "dataEventSummaryType",
              "title": "Data Event Summary",
              "value": {
                "description": "The type of the object",
                "value": {
                  "value": "event.summary",
                  "type": "string"
                },
                "generatedName": "DataEventSummaryType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataEventSummaryEmail",
            "key": "email",
            "schema": {
              "generatedName": "dataEventSummaryEmail",
              "title": "Data Event Summary",
              "value": {
                "description": "The email address of the user",
                "schema": {
                  "example": "Sam.Sung@example.com",
                  "type": "string"
                },
                "generatedName": "DataEventSummaryEmail",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataEventSummaryIntercomUserId",
            "key": "intercom_user_id",
            "schema": {
              "generatedName": "dataEventSummaryIntercomUserId",
              "title": "Data Event Summary",
              "value": {
                "description": "The Intercom user ID of the user",
                "schema": {
                  "example": "63a0979a5eeebeaf28dd56ba",
                  "type": "string"
                },
                "generatedName": "DataEventSummaryIntercomUserId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataEventSummaryUserId",
            "key": "user_id",
            "schema": {
              "generatedName": "dataEventSummaryUserId",
              "title": "Data Event Summary",
              "value": {
                "description": "The user ID of the user",
                "schema": {
                  "example": "62b997f288e14803c5006932",
                  "type": "string"
                },
                "generatedName": "DataEventSummaryUserId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataEventSummaryEvents",
            "key": "events",
            "schema": {
              "generatedName": "dataEventSummaryEvents",
              "title": "Data Event Summary",
              "value": {
                "description": "A summary of data events",
                "value": {
                  "generatedName": "DataEventSummaryEventsItem",
                  "schema": "data_event_summary_item",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "DataEventSummaryEvents",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "This will return a summary of data events for the App.",
        "generatedName": "DataEventSummary",
        "title": "Data Event Summary",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "data_event_summary_item": {
        "generatedName": "DataEventSummaryItem",
        "title": "Data Event Summary Item",
        "description": "This will return a summary of a data event for the App.",
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "dataEventSummaryItemName",
              "key": "name",
              "schema": {
                "generatedName": "dataEventSummaryItemName",
                "title": "Data Event Summary Item",
                "value": {
                  "description": "The name of the event",
                  "schema": {
                    "example": "placed-order",
                    "type": "string"
                  },
                  "generatedName": "DataEventSummaryItemName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "dataEventSummaryItemFirst",
              "key": "first",
              "schema": {
                "generatedName": "dataEventSummaryItemFirst",
                "title": "Data Event Summary Item",
                "value": {
                  "description": "The first time the event was sent",
                  "schema": {
                    "example": "2014-01-16T23:12:21.000+00:00",
                    "type": "string"
                  },
                  "generatedName": "DataEventSummaryItemFirst",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "dataEventSummaryItemLast",
              "key": "last",
              "schema": {
                "generatedName": "dataEventSummaryItemLast",
                "title": "Data Event Summary Item",
                "value": {
                  "description": "The last time the event was sent",
                  "schema": {
                    "example": "2014-01-16T23:12:21.000+00:00 ",
                    "type": "string"
                  },
                  "generatedName": "DataEventSummaryItemLast",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "dataEventSummaryItemCount",
              "key": "count",
              "schema": {
                "generatedName": "dataEventSummaryItemCount",
                "title": "Data Event Summary Item",
                "value": {
                  "description": "The number of times the event was sent",
                  "schema": {
                    "example": 1,
                    "type": "int"
                  },
                  "generatedName": "DataEventSummaryItemCount",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "dataEventSummaryItemDescription",
              "key": "description",
              "schema": {
                "generatedName": "dataEventSummaryItemDescription",
                "title": "Data Event Summary Item",
                "value": {
                  "description": "The description of the event",
                  "schema": {
                    "example": "A user placed an order",
                    "type": "string"
                  },
                  "generatedName": "DataEventSummaryItemDescription",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "This will return a summary of a data event for the App.",
          "generatedName": "DataEventSummaryItem",
          "title": "Data Event Summary Item",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "groupName": [],
        "type": "nullable"
      },
      "data_export": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "dataExportJobIdentfier",
            "key": "job_identfier",
            "schema": {
              "generatedName": "dataExportJobIdentfier",
              "title": "Data Export",
              "value": {
                "description": "The identifier for your job.",
                "schema": {
                  "example": "orzzsbd7hk67xyu",
                  "type": "string"
                },
                "generatedName": "DataExportJobIdentfier",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Data Export"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataExportStatus",
            "key": "status",
            "schema": {
              "generatedName": "dataExportStatus",
              "title": "Data Export",
              "value": {
                "description": "The current state of your job.",
                "generatedName": "DataExportStatus",
                "values": [
                  {
                    "generatedName": "pending",
                    "value": "pending",
                    "casing": {}
                  },
                  {
                    "generatedName": "in_progress",
                    "value": "in_progress",
                    "casing": {}
                  },
                  {
                    "generatedName": "failed",
                    "value": "failed",
                    "casing": {}
                  },
                  {
                    "generatedName": "completed",
                    "value": "completed",
                    "casing": {}
                  },
                  {
                    "generatedName": "no_data",
                    "value": "no_data",
                    "casing": {}
                  },
                  {
                    "generatedName": "canceled",
                    "value": "canceled",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [
                "Data Export"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataExportDownloadExpiresAt",
            "key": "download_expires_at",
            "schema": {
              "generatedName": "dataExportDownloadExpiresAt",
              "title": "Data Export",
              "value": {
                "description": "The time after which you will not be able to access the data.",
                "schema": {
                  "example": "1674917488",
                  "type": "string"
                },
                "generatedName": "DataExportDownloadExpiresAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Data Export"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataExportDownloadUrl",
            "key": "download_url",
            "schema": {
              "generatedName": "dataExportDownloadUrl",
              "title": "Data Export",
              "value": {
                "description": "The location where you can download your data.",
                "schema": {
                  "example": "https://api.intercom.test/download/messages/data/example",
                  "type": "string"
                },
                "generatedName": "DataExportDownloadUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Data Export"
              ],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The data export api is used to view all message sent & viewed in a given timeframe.",
        "generatedName": "DataExport",
        "title": "Data Export",
        "groupName": [
          "Data Export"
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "data_export_csv": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "dataExportCsvUserId",
            "key": "user_id",
            "schema": {
              "generatedName": "dataExportCsvUserId",
              "title": "Data Export CSV",
              "value": {
                "description": "The user_id of the user who was sent the message.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "DataExportCsvUserId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataExportCsvUserExternalId",
            "key": "user_external_id",
            "schema": {
              "generatedName": "dataExportCsvUserExternalId",
              "title": "Data Export CSV",
              "value": {
                "description": "The external_user_id of the user who was sent the message",
                "schema": {
                  "type": "string"
                },
                "generatedName": "DataExportCsvUserExternalId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataExportCsvCompanyId",
            "key": "company_id",
            "schema": {
              "generatedName": "dataExportCsvCompanyId",
              "title": "Data Export CSV",
              "value": {
                "description": "The company ID of the user in relation to the message that was sent. Will return -1 if no company is present.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "DataExportCsvCompanyId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataExportCsvEmail",
            "key": "email",
            "schema": {
              "generatedName": "dataExportCsvEmail",
              "title": "Data Export CSV",
              "value": {
                "description": "The users email who was sent the message.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "DataExportCsvEmail",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataExportCsvName",
            "key": "name",
            "schema": {
              "generatedName": "dataExportCsvName",
              "title": "Data Export CSV",
              "value": {
                "description": "The full name of the user receiving the message",
                "schema": {
                  "type": "string"
                },
                "generatedName": "DataExportCsvName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataExportCsvRulesetId",
            "key": "ruleset_id",
            "schema": {
              "generatedName": "dataExportCsvRulesetId",
              "title": "Data Export CSV",
              "value": {
                "description": "The id of the message.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "DataExportCsvRulesetId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataExportCsvContentId",
            "key": "content_id",
            "schema": {
              "generatedName": "dataExportCsvContentId",
              "title": "Data Export CSV",
              "value": {
                "description": "The specific content that was received. In an A/B test each version has its own Content ID.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "DataExportCsvContentId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataExportCsvContentType",
            "key": "content_type",
            "schema": {
              "generatedName": "dataExportCsvContentType",
              "title": "Data Export CSV",
              "value": {
                "description": "Email, Chat, Post etc.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "DataExportCsvContentType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataExportCsvContentTitle",
            "key": "content_title",
            "schema": {
              "generatedName": "dataExportCsvContentTitle",
              "title": "Data Export CSV",
              "value": {
                "description": "The title of the content you see in your Intercom workspace.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "DataExportCsvContentTitle",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataExportCsvRulesetVersionId",
            "key": "ruleset_version_id",
            "schema": {
              "generatedName": "dataExportCsvRulesetVersionId",
              "title": "Data Export CSV",
              "value": {
                "description": "As you edit content we record new versions. This ID can help you determine which version of a piece of content that was received.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "DataExportCsvRulesetVersionId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataExportCsvReceiptId",
            "key": "receipt_id",
            "schema": {
              "generatedName": "dataExportCsvReceiptId",
              "title": "Data Export CSV",
              "value": {
                "description": "ID for this receipt. Will be included with any related stats in other files to identify this specific delivery of a message.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "DataExportCsvReceiptId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataExportCsvReceivedAt",
            "key": "received_at",
            "schema": {
              "generatedName": "dataExportCsvReceivedAt",
              "title": "Data Export CSV",
              "value": {
                "description": "Timestamp for when the receipt was recorded.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "DataExportCsvReceivedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataExportCsvSeriesId",
            "key": "series_id",
            "schema": {
              "generatedName": "dataExportCsvSeriesId",
              "title": "Data Export CSV",
              "value": {
                "description": "The id of the series that this content is part of. Will return -1 if not part of a series.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "DataExportCsvSeriesId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataExportCsvSeriesTitle",
            "key": "series_title",
            "schema": {
              "generatedName": "dataExportCsvSeriesTitle",
              "title": "Data Export CSV",
              "value": {
                "description": "The title of the series that this content is part of.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "DataExportCsvSeriesTitle",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataExportCsvNodeId",
            "key": "node_id",
            "schema": {
              "generatedName": "dataExportCsvNodeId",
              "title": "Data Export CSV",
              "value": {
                "description": "The id of the series node that this ruleset is associated with. Each block in a series has a corresponding node_id.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "DataExportCsvNodeId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataExportCsvFirstReply",
            "key": "first_reply",
            "schema": {
              "generatedName": "dataExportCsvFirstReply",
              "title": "Data Export CSV",
              "value": {
                "description": "The first time a user replied to this message if the content was able to receive replies.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "DataExportCsvFirstReply",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataExportCsvFirstCompletion",
            "key": "first_completion",
            "schema": {
              "generatedName": "dataExportCsvFirstCompletion",
              "title": "Data Export CSV",
              "value": {
                "description": "The first time a user completed this message if the content was able to be completed e.g. Tours, Surveys.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "DataExportCsvFirstCompletion",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataExportCsvFirstSeriesCompletion",
            "key": "first_series_completion",
            "schema": {
              "generatedName": "dataExportCsvFirstSeriesCompletion",
              "title": "Data Export CSV",
              "value": {
                "description": "The first time the series this message was a part of was completed by the user.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "DataExportCsvFirstSeriesCompletion",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataExportCsvFirstSeriesDisengagement",
            "key": "first_series_disengagement",
            "schema": {
              "generatedName": "dataExportCsvFirstSeriesDisengagement",
              "title": "Data Export CSV",
              "value": {
                "description": "The first time the series this message was a part of was disengaged by the user.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "DataExportCsvFirstSeriesDisengagement",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataExportCsvFirstSeriesExit",
            "key": "first_series_exit",
            "schema": {
              "generatedName": "dataExportCsvFirstSeriesExit",
              "title": "Data Export CSV",
              "value": {
                "description": "The first time the series this message was a part of was exited by the user.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "DataExportCsvFirstSeriesExit",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataExportCsvFirstGoalSuccess",
            "key": "first_goal_success",
            "schema": {
              "generatedName": "dataExportCsvFirstGoalSuccess",
              "title": "Data Export CSV",
              "value": {
                "description": "The first time the user met this messages associated goal if one exists.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "DataExportCsvFirstGoalSuccess",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataExportCsvFirstOpen",
            "key": "first_open",
            "schema": {
              "generatedName": "dataExportCsvFirstOpen",
              "title": "Data Export CSV",
              "value": {
                "description": "The first time the user opened this message.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "DataExportCsvFirstOpen",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataExportCsvFirstClick",
            "key": "first_click",
            "schema": {
              "generatedName": "dataExportCsvFirstClick",
              "title": "Data Export CSV",
              "value": {
                "description": "The first time the series the user clicked on a link within this message.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "DataExportCsvFirstClick",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataExportCsvFirstDismisall",
            "key": "first_dismisall",
            "schema": {
              "generatedName": "dataExportCsvFirstDismisall",
              "title": "Data Export CSV",
              "value": {
                "description": "The first time the series the user dismissed this message.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "DataExportCsvFirstDismisall",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataExportCsvFirstUnsubscribe",
            "key": "first_unsubscribe",
            "schema": {
              "generatedName": "dataExportCsvFirstUnsubscribe",
              "title": "Data Export CSV",
              "value": {
                "description": "The first time the user unsubscribed from this message.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "DataExportCsvFirstUnsubscribe",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dataExportCsvFirstHardBounce",
            "key": "first_hard_bounce",
            "schema": {
              "generatedName": "dataExportCsvFirstHardBounce",
              "title": "Data Export CSV",
              "value": {
                "description": "The first time this message hard bounced for this user",
                "schema": {
                  "type": "int"
                },
                "generatedName": "DataExportCsvFirstHardBounce",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A CSV output file",
        "generatedName": "DataExportCsv",
        "title": "Data Export CSV",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "deleted_article_object": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "deletedArticleObjectId",
            "key": "id",
            "schema": {
              "generatedName": "deletedArticleObjectId",
              "title": "Deleted Article Object",
              "value": {
                "description": "The unique identifier for the article which you provided in the URL.",
                "schema": {
                  "example": "6890762",
                  "type": "string"
                },
                "generatedName": "DeletedArticleObjectId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "deletedArticleObjectObject",
            "key": "object",
            "schema": {
              "generatedName": "deletedArticleObjectObject",
              "title": "Deleted Article Object",
              "value": {
                "description": "The type of object which was deleted. - article",
                "value": {
                  "value": "article",
                  "type": "string"
                },
                "generatedName": "DeletedArticleObjectObject",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "deletedArticleObjectDeleted",
            "key": "deleted",
            "schema": {
              "generatedName": "deletedArticleObjectDeleted",
              "title": "Deleted Article Object",
              "value": {
                "description": "Whether the article was deleted successfully or not.",
                "schema": {
                  "example": true,
                  "type": "boolean"
                },
                "generatedName": "DeletedArticleObjectDeleted",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Response returned when an object is deleted",
        "generatedName": "DeletedArticleObject",
        "title": "Deleted Article Object",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "deleted_collection_object": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "deletedCollectionObjectId",
            "key": "id",
            "schema": {
              "generatedName": "deletedCollectionObjectId",
              "title": "Deleted Collection Object",
              "value": {
                "description": "The unique identifier for the collection which you provided in the URL.",
                "schema": {
                  "example": "6890762",
                  "type": "string"
                },
                "generatedName": "DeletedCollectionObjectId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "deletedCollectionObjectObject",
            "key": "object",
            "schema": {
              "generatedName": "deletedCollectionObjectObject",
              "title": "Deleted Collection Object",
              "value": {
                "description": "The type of object which was deleted. - `collection`",
                "value": {
                  "value": "collection",
                  "type": "string"
                },
                "generatedName": "DeletedCollectionObjectObject",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "deletedCollectionObjectDeleted",
            "key": "deleted",
            "schema": {
              "generatedName": "deletedCollectionObjectDeleted",
              "title": "Deleted Collection Object",
              "value": {
                "description": "Whether the collection was deleted successfully or not.",
                "schema": {
                  "example": true,
                  "type": "boolean"
                },
                "generatedName": "DeletedCollectionObjectDeleted",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Response returned when an object is deleted",
        "generatedName": "DeletedCollectionObject",
        "title": "Deleted Collection Object",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "deleted_company_object": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "deletedCompanyObjectId",
            "key": "id",
            "schema": {
              "generatedName": "deletedCompanyObjectId",
              "title": "Deleted Company Object",
              "value": {
                "description": "The unique identifier for the company which is given by Intercom.",
                "schema": {
                  "example": "5b7e8b2f-7a1a-4e6c-8e1b-4f9d4f4c4d4f",
                  "type": "string"
                },
                "generatedName": "DeletedCompanyObjectId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "deletedCompanyObjectObject",
            "key": "object",
            "schema": {
              "generatedName": "deletedCompanyObjectObject",
              "title": "Deleted Company Object",
              "value": {
                "description": "The type of object which was deleted. - `company`",
                "value": {
                  "value": "company",
                  "type": "string"
                },
                "generatedName": "DeletedCompanyObjectObject",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "deletedCompanyObjectDeleted",
            "key": "deleted",
            "schema": {
              "generatedName": "deletedCompanyObjectDeleted",
              "title": "Deleted Company Object",
              "value": {
                "description": "Whether the company was deleted successfully or not.",
                "schema": {
                  "example": true,
                  "type": "boolean"
                },
                "generatedName": "DeletedCompanyObjectDeleted",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Response returned when an object is deleted",
        "generatedName": "DeletedCompanyObject",
        "title": "Deleted Company Object",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "deleted_object": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "deletedObjectId",
            "key": "id",
            "schema": {
              "generatedName": "deletedObjectId",
              "title": "Deleted Object",
              "value": {
                "description": "The unique identifier for the news item which you provided in the URL.",
                "schema": {
                  "example": "6890762",
                  "type": "string"
                },
                "generatedName": "DeletedObjectId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "deletedObjectObject",
            "key": "object",
            "schema": {
              "generatedName": "deletedObjectObject",
              "title": "Deleted Object",
              "value": {
                "description": "The type of object which was deleted - news-item.",
                "value": {
                  "value": "news-item",
                  "type": "string"
                },
                "generatedName": "DeletedObjectObject",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "deletedObjectDeleted",
            "key": "deleted",
            "schema": {
              "generatedName": "deletedObjectDeleted",
              "title": "Deleted Object",
              "value": {
                "description": "Whether the news item was deleted successfully or not.",
                "schema": {
                  "example": true,
                  "type": "boolean"
                },
                "generatedName": "DeletedObjectDeleted",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Response returned when an object is deleted",
        "generatedName": "DeletedObject",
        "title": "Deleted Object",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "detach_contact_from_conversation_request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "detachContactFromConversationRequestAdminId",
            "key": "admin_id",
            "schema": {
              "description": "The `id` of the admin who is performing the action.",
              "schema": {
                "example": "5017690",
                "type": "string"
              },
              "generatedName": "DetachContactFromConversationRequestAdminId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "DetachContactFromConversationRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "error": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "errorType",
            "key": "type",
            "schema": {
              "description": "The type is error.list",
              "schema": {
                "example": "error.list",
                "type": "string"
              },
              "generatedName": "ErrorType",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "errorRequestId",
            "key": "request_id",
            "schema": {
              "generatedName": "errorRequestId",
              "nameOverride": "Error",
              "title": "Error",
              "value": {
                "generatedName": "ErrorRequestId",
                "description": "",
                "value": {
                  "description": "",
                  "schema": {
                    "format": "uuid",
                    "example": "f93ecfa8-d08a-4325-8694-89aeb89c8f85",
                    "type": "string"
                  },
                  "generatedName": "ErrorRequestId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "errorErrors",
            "key": "errors",
            "schema": {
              "description": "An array of one or more error objects",
              "value": {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "errorErrorsItemCode",
                    "key": "code",
                    "schema": {
                      "description": "A string indicating the kind of error, used to further qualify the HTTP response code",
                      "schema": {
                        "example": "unauthorized",
                        "type": "string"
                      },
                      "generatedName": "ErrorErrorsItemCode",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "errorErrorsItemMessage",
                    "key": "message",
                    "schema": {
                      "generatedName": "errorErrorsItemMessage",
                      "value": {
                        "generatedName": "ErrorErrorsItemMessage",
                        "description": "Optional. Human readable description of the error.",
                        "value": {
                          "description": "Optional. Human readable description of the error.",
                          "schema": {
                            "example": "Access Token Invalid",
                            "type": "string"
                          },
                          "generatedName": "ErrorErrorsItemMessage",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "nullable"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "errorErrorsItemField",
                    "key": "field",
                    "schema": {
                      "generatedName": "errorErrorsItemField",
                      "value": {
                        "generatedName": "ErrorErrorsItemField",
                        "description": "Optional. Used to identify a particular field or query parameter that was in error.",
                        "value": {
                          "description": "Optional. Used to identify a particular field or query parameter that was in error.",
                          "schema": {
                            "example": "email",
                            "type": "string"
                          },
                          "generatedName": "ErrorErrorsItemField",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "nullable"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "generatedName": "ErrorErrorsItem",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "generatedName": "ErrorErrors",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The API will return an Error List for a failed request, which will contain one or more Error objects.",
        "generatedName": "Error",
        "nameOverride": "Error",
        "title": "Error",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "file_attribute": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "fileAttributeType",
            "key": "type",
            "schema": {
              "generatedName": "fileAttributeType",
              "nameOverride": "File",
              "title": "File",
              "value": {
                "schema": {
                  "example": "upload",
                  "type": "string"
                },
                "generatedName": "FileAttributeType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "fileAttributeName",
            "key": "name",
            "schema": {
              "generatedName": "fileAttributeName",
              "nameOverride": "File",
              "title": "File",
              "value": {
                "description": "The name of the file",
                "schema": {
                  "example": "Screenshot.png",
                  "type": "string"
                },
                "generatedName": "FileAttributeName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "fileAttributeUrl",
            "key": "url",
            "schema": {
              "generatedName": "fileAttributeUrl",
              "nameOverride": "File",
              "title": "File",
              "value": {
                "description": "The url of the file. This is a temporary URL and will expire after 30 minutes.",
                "schema": {
                  "example": "https://intercom-attachments-1.com/.../Screenshot.png",
                  "type": "string"
                },
                "generatedName": "FileAttributeUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "fileAttributeContentType",
            "key": "content_type",
            "schema": {
              "generatedName": "fileAttributeContentType",
              "nameOverride": "File",
              "title": "File",
              "value": {
                "description": "The type of file",
                "schema": {
                  "example": "image/png",
                  "type": "string"
                },
                "generatedName": "FileAttributeContentType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "fileAttributeFilesize",
            "key": "filesize",
            "schema": {
              "generatedName": "fileAttributeFilesize",
              "nameOverride": "File",
              "title": "File",
              "value": {
                "description": "The size of the file in bytes",
                "schema": {
                  "example": 11308309,
                  "type": "int"
                },
                "generatedName": "FileAttributeFilesize",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "fileAttributeWidth",
            "key": "width",
            "schema": {
              "generatedName": "fileAttributeWidth",
              "nameOverride": "File",
              "title": "File",
              "value": {
                "description": "The width of the file in pixels, if applicable",
                "schema": {
                  "example": 3024,
                  "type": "int"
                },
                "generatedName": "FileAttributeWidth",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "fileAttributeHeight",
            "key": "height",
            "schema": {
              "generatedName": "fileAttributeHeight",
              "nameOverride": "File",
              "title": "File",
              "value": {
                "description": "The height of the file in pixels, if applicable",
                "schema": {
                  "example": 1964,
                  "type": "int"
                },
                "generatedName": "FileAttributeHeight",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The value describing a file upload set for a custom attribute",
        "generatedName": "FileAttribute",
        "nameOverride": "File",
        "title": "File",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "group_content": {
        "generatedName": "GroupContent",
        "title": "Group Content",
        "description": "The Content of a Group.",
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "groupContentType",
              "key": "type",
              "schema": {
                "generatedName": "groupContentType",
                "title": "Group Content",
                "value": {
                  "generatedName": "GroupContentType",
                  "description": "The type of object - `group_content` .",
                  "value": {
                    "description": "The type of object - `group_content` .",
                    "schema": {
                      "example": "group_content",
                      "type": "string"
                    },
                    "generatedName": "GroupContentType",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "groupContentName",
              "key": "name",
              "schema": {
                "generatedName": "groupContentName",
                "title": "Group Content",
                "value": {
                  "description": "The name of the collection or section.",
                  "schema": {
                    "example": "Collection name",
                    "type": "string"
                  },
                  "generatedName": "GroupContentName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "groupContentDescription",
              "key": "description",
              "schema": {
                "generatedName": "groupContentDescription",
                "title": "Group Content",
                "value": {
                  "description": "The description of the collection. Only available for collections.",
                  "schema": {
                    "example": " Collection description",
                    "type": "string"
                  },
                  "generatedName": "GroupContentDescription",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "The Content of a Group.",
          "generatedName": "GroupContent",
          "title": "Group Content",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "groupName": [],
        "type": "nullable"
      },
      "group_translated_content": {
        "generatedName": "GroupTranslatedContent",
        "title": "Group Translated Content",
        "description": "The Translated Content of an Group. The keys are the locale codes and the values are the translated content of the Group.",
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentType",
              "key": "type",
              "schema": {
                "generatedName": "groupTranslatedContentType",
                "title": "Group Translated Content",
                "value": {
                  "generatedName": "GroupTranslatedContentType",
                  "description": "The type of object - group_translated_content.",
                  "value": {
                    "description": "The type of object - group_translated_content.",
                    "schema": {
                      "example": "group_translated_content",
                      "type": "string"
                    },
                    "generatedName": "GroupTranslatedContentType",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentAr",
              "key": "ar",
              "schema": {
                "generatedName": "groupTranslatedContentAr",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in Arabic",
                  "generatedName": "GroupTranslatedContentAr",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentBg",
              "key": "bg",
              "schema": {
                "generatedName": "groupTranslatedContentBg",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in Bulgarian",
                  "generatedName": "GroupTranslatedContentBg",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentBs",
              "key": "bs",
              "schema": {
                "generatedName": "groupTranslatedContentBs",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in Bosnian",
                  "generatedName": "GroupTranslatedContentBs",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentCa",
              "key": "ca",
              "schema": {
                "generatedName": "groupTranslatedContentCa",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in Catalan",
                  "generatedName": "GroupTranslatedContentCa",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentCs",
              "key": "cs",
              "schema": {
                "generatedName": "groupTranslatedContentCs",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in Czech",
                  "generatedName": "GroupTranslatedContentCs",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentDa",
              "key": "da",
              "schema": {
                "generatedName": "groupTranslatedContentDa",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in Danish",
                  "generatedName": "GroupTranslatedContentDa",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentDe",
              "key": "de",
              "schema": {
                "generatedName": "groupTranslatedContentDe",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in German",
                  "generatedName": "GroupTranslatedContentDe",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentEl",
              "key": "el",
              "schema": {
                "generatedName": "groupTranslatedContentEl",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in Greek",
                  "generatedName": "GroupTranslatedContentEl",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentEn",
              "key": "en",
              "schema": {
                "generatedName": "groupTranslatedContentEn",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in English",
                  "generatedName": "GroupTranslatedContentEn",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentEs",
              "key": "es",
              "schema": {
                "generatedName": "groupTranslatedContentEs",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in Spanish",
                  "generatedName": "GroupTranslatedContentEs",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentEt",
              "key": "et",
              "schema": {
                "generatedName": "groupTranslatedContentEt",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in Estonian",
                  "generatedName": "GroupTranslatedContentEt",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentFi",
              "key": "fi",
              "schema": {
                "generatedName": "groupTranslatedContentFi",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in Finnish",
                  "generatedName": "GroupTranslatedContentFi",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentFr",
              "key": "fr",
              "schema": {
                "generatedName": "groupTranslatedContentFr",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in French",
                  "generatedName": "GroupTranslatedContentFr",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentHe",
              "key": "he",
              "schema": {
                "generatedName": "groupTranslatedContentHe",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in Hebrew",
                  "generatedName": "GroupTranslatedContentHe",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentHr",
              "key": "hr",
              "schema": {
                "generatedName": "groupTranslatedContentHr",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in Croatian",
                  "generatedName": "GroupTranslatedContentHr",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentHu",
              "key": "hu",
              "schema": {
                "generatedName": "groupTranslatedContentHu",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in Hungarian",
                  "generatedName": "GroupTranslatedContentHu",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentId",
              "key": "id",
              "schema": {
                "generatedName": "groupTranslatedContentId",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in Indonesian",
                  "generatedName": "GroupTranslatedContentId",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentIt",
              "key": "it",
              "schema": {
                "generatedName": "groupTranslatedContentIt",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in Italian",
                  "generatedName": "GroupTranslatedContentIt",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentJa",
              "key": "ja",
              "schema": {
                "generatedName": "groupTranslatedContentJa",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in Japanese",
                  "generatedName": "GroupTranslatedContentJa",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentKo",
              "key": "ko",
              "schema": {
                "generatedName": "groupTranslatedContentKo",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in Korean",
                  "generatedName": "GroupTranslatedContentKo",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentLt",
              "key": "lt",
              "schema": {
                "generatedName": "groupTranslatedContentLt",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in Lithuanian",
                  "generatedName": "GroupTranslatedContentLt",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentLv",
              "key": "lv",
              "schema": {
                "generatedName": "groupTranslatedContentLv",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in Latvian",
                  "generatedName": "GroupTranslatedContentLv",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentMn",
              "key": "mn",
              "schema": {
                "generatedName": "groupTranslatedContentMn",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in Mongolian",
                  "generatedName": "GroupTranslatedContentMn",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentNb",
              "key": "nb",
              "schema": {
                "generatedName": "groupTranslatedContentNb",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in Norwegian",
                  "generatedName": "GroupTranslatedContentNb",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentNl",
              "key": "nl",
              "schema": {
                "generatedName": "groupTranslatedContentNl",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in Dutch",
                  "generatedName": "GroupTranslatedContentNl",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentPl",
              "key": "pl",
              "schema": {
                "generatedName": "groupTranslatedContentPl",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in Polish",
                  "generatedName": "GroupTranslatedContentPl",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentPt",
              "key": "pt",
              "schema": {
                "generatedName": "groupTranslatedContentPt",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in Portuguese (Portugal)",
                  "generatedName": "GroupTranslatedContentPt",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentRo",
              "key": "ro",
              "schema": {
                "generatedName": "groupTranslatedContentRo",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in Romanian",
                  "generatedName": "GroupTranslatedContentRo",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentRu",
              "key": "ru",
              "schema": {
                "generatedName": "groupTranslatedContentRu",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in Russian",
                  "generatedName": "GroupTranslatedContentRu",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentSl",
              "key": "sl",
              "schema": {
                "generatedName": "groupTranslatedContentSl",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in Slovenian",
                  "generatedName": "GroupTranslatedContentSl",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentSr",
              "key": "sr",
              "schema": {
                "generatedName": "groupTranslatedContentSr",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in Serbian",
                  "generatedName": "GroupTranslatedContentSr",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentSv",
              "key": "sv",
              "schema": {
                "generatedName": "groupTranslatedContentSv",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in Swedish",
                  "generatedName": "GroupTranslatedContentSv",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentTr",
              "key": "tr",
              "schema": {
                "generatedName": "groupTranslatedContentTr",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in Turkish",
                  "generatedName": "GroupTranslatedContentTr",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentVi",
              "key": "vi",
              "schema": {
                "generatedName": "groupTranslatedContentVi",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in Vietnamese",
                  "generatedName": "GroupTranslatedContentVi",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentPtBr",
              "key": "pt-BR",
              "schema": {
                "generatedName": "groupTranslatedContentPtBr",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in Portuguese (Brazil)",
                  "generatedName": "GroupTranslatedContentPtBr",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentZhCn",
              "key": "zh-CN",
              "schema": {
                "generatedName": "groupTranslatedContentZhCn",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in Chinese (China)",
                  "generatedName": "GroupTranslatedContentZhCn",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "groupTranslatedContentZhTw",
              "key": "zh-TW",
              "schema": {
                "generatedName": "groupTranslatedContentZhTw",
                "title": "Group Translated Content",
                "value": {
                  "description": "The content of the group in Chinese (Taiwan)",
                  "generatedName": "GroupTranslatedContentZhTw",
                  "schema": "group_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "The Translated Content of an Group. The keys are the locale codes and the values are the translated content of the Group.",
          "generatedName": "GroupTranslatedContent",
          "title": "Group Translated Content",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "groupName": [],
        "type": "nullable"
      },
      "help_center": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "helpCenterId",
            "key": "id",
            "schema": {
              "generatedName": "helpCenterId",
              "title": "Help Center",
              "value": {
                "description": "The unique identifier for the Help Center which is given by Intercom.",
                "schema": {
                  "example": "123",
                  "type": "string"
                },
                "generatedName": "HelpCenterId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Help Center"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "helpCenterWorkspaceId",
            "key": "workspace_id",
            "schema": {
              "generatedName": "helpCenterWorkspaceId",
              "title": "Help Center",
              "value": {
                "description": "The id of the workspace which the Help Center belongs to.",
                "schema": {
                  "example": "hfi1bx4l",
                  "type": "string"
                },
                "generatedName": "HelpCenterWorkspaceId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Help Center"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "helpCenterCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "helpCenterCreatedAt",
              "title": "Help Center",
              "value": {
                "description": "The time when the Help Center was created.",
                "schema": {
                  "example": 1672928359,
                  "type": "int"
                },
                "generatedName": "HelpCenterCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Help Center"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "helpCenterUpdatedAt",
            "key": "updated_at",
            "schema": {
              "generatedName": "helpCenterUpdatedAt",
              "title": "Help Center",
              "value": {
                "description": "The time when the Help Center was last updated.",
                "schema": {
                  "example": 1672928610,
                  "type": "int"
                },
                "generatedName": "HelpCenterUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Help Center"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "helpCenterIdentifier",
            "key": "identifier",
            "schema": {
              "generatedName": "helpCenterIdentifier",
              "title": "Help Center",
              "value": {
                "description": "The identifier of the Help Center. This is used in the URL of the Help Center.",
                "schema": {
                  "example": "intercom",
                  "type": "string"
                },
                "generatedName": "HelpCenterIdentifier",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Help Center"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "helpCenterWebsiteTurnedOn",
            "key": "website_turned_on",
            "schema": {
              "generatedName": "helpCenterWebsiteTurnedOn",
              "title": "Help Center",
              "value": {
                "description": "Whether the Help Center is turned on or not. This is controlled in your Help Center settings.",
                "schema": {
                  "example": true,
                  "type": "boolean"
                },
                "generatedName": "HelpCenterWebsiteTurnedOn",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Help Center"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "helpCenterDisplayName",
            "key": "display_name",
            "schema": {
              "generatedName": "helpCenterDisplayName",
              "title": "Help Center",
              "value": {
                "description": "The display name of the Help Center only seen by teammates.",
                "schema": {
                  "example": "Intercom Help Center",
                  "type": "string"
                },
                "generatedName": "HelpCenterDisplayName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Help Center"
              ],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Help Centers contain collections",
        "generatedName": "HelpCenter",
        "title": "Help Center",
        "groupName": [
          "Help Center"
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "help_center_list": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "helpCenterListType",
            "key": "type",
            "schema": {
              "generatedName": "helpCenterListType",
              "title": "Help Centers",
              "value": {
                "description": "The type of the object - `list`.",
                "value": {
                  "value": "list",
                  "type": "string"
                },
                "generatedName": "HelpCenterListType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [
                "Help Center"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "helpCenterListData",
            "key": "data",
            "schema": {
              "generatedName": "helpCenterListData",
              "title": "Help Centers",
              "value": {
                "description": "An array of Help Center objects",
                "value": {
                  "generatedName": "HelpCenterListDataItem",
                  "schema": "help_center",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "HelpCenterListData",
                "groupName": [],
                "type": "array"
              },
              "groupName": [
                "Help Center"
              ],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A list of Help Centers belonging to the App",
        "generatedName": "HelpCenterList",
        "title": "Help Centers",
        "groupName": [
          "Help Center"
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "intercom_version": {
        "description": "Intercom API version.</br>By default, it's equal to the version set in the app package.",
        "generatedName": "IntercomVersion",
        "values": [
          {
            "generatedName": "One0",
            "value": "1.0",
            "casing": {}
          },
          {
            "generatedName": "One1",
            "value": "1.1",
            "casing": {}
          },
          {
            "generatedName": "One2",
            "value": "1.2",
            "casing": {}
          },
          {
            "generatedName": "One3",
            "value": "1.3",
            "casing": {}
          },
          {
            "generatedName": "One4",
            "value": "1.4",
            "casing": {}
          },
          {
            "generatedName": "Two0",
            "value": "2.0",
            "casing": {}
          },
          {
            "generatedName": "Two1",
            "value": "2.1",
            "casing": {}
          },
          {
            "generatedName": "Two2",
            "value": "2.2",
            "casing": {}
          },
          {
            "generatedName": "Two3",
            "value": "2.3",
            "casing": {}
          },
          {
            "generatedName": "Two4",
            "value": "2.4",
            "casing": {}
          },
          {
            "generatedName": "Two5",
            "value": "2.5",
            "casing": {}
          },
          {
            "generatedName": "Two6",
            "value": "2.6",
            "casing": {}
          },
          {
            "generatedName": "Two7",
            "value": "2.7",
            "casing": {}
          },
          {
            "generatedName": "Two8",
            "value": "2.8",
            "casing": {}
          },
          {
            "generatedName": "Two9",
            "value": "2.9",
            "casing": {}
          },
          {
            "generatedName": "Two10",
            "value": "2.10",
            "casing": {}
          },
          {
            "generatedName": "Two11",
            "value": "2.11",
            "casing": {}
          },
          {
            "generatedName": "Unstable",
            "value": "Unstable",
            "casing": {}
          }
        ],
        "default": {
          "generatedName": "Two11",
          "value": "2.11",
          "casing": {}
        },
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "linked_object": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "linkedObjectType",
            "key": "type",
            "schema": {
              "generatedName": "linkedObjectType",
              "title": "Linked Object",
              "value": {
                "description": "ticket or conversation",
                "generatedName": "LinkedObjectType",
                "values": [
                  {
                    "generatedName": "ticket",
                    "value": "ticket",
                    "casing": {}
                  },
                  {
                    "generatedName": "conversation",
                    "value": "conversation",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "linkedObjectId",
            "key": "id",
            "schema": {
              "generatedName": "linkedObjectId",
              "title": "Linked Object",
              "value": {
                "description": "The ID of the linked object",
                "schema": {
                  "example": "7583",
                  "type": "string"
                },
                "generatedName": "LinkedObjectId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "linkedObjectCategory",
            "key": "category",
            "schema": {
              "generatedName": "linkedObjectCategory",
              "title": "Linked Object",
              "value": {
                "generatedName": "LinkedObjectCategory",
                "description": "Category of the Linked Ticket Object.",
                "value": {
                  "description": "Category of the Linked Ticket Object.",
                  "schema": {
                    "example": "Customer",
                    "type": "string"
                  },
                  "generatedName": "LinkedObjectCategory",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A linked conversation or ticket.",
        "generatedName": "LinkedObject",
        "title": "Linked Object",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "linked_object_list": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "linkedObjectListType",
            "key": "type",
            "schema": {
              "generatedName": "linkedObjectListType",
              "title": "Linked Objects",
              "value": {
                "description": "Always list.",
                "value": {
                  "value": "list",
                  "type": "string"
                },
                "generatedName": "LinkedObjectListType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "linkedObjectListTotalCount",
            "key": "total_count",
            "schema": {
              "generatedName": "linkedObjectListTotalCount",
              "title": "Linked Objects",
              "value": {
                "description": "The total number of linked objects.",
                "schema": {
                  "example": 100,
                  "type": "int"
                },
                "generatedName": "LinkedObjectListTotalCount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "linkedObjectListHasMore",
            "key": "has_more",
            "schema": {
              "generatedName": "linkedObjectListHasMore",
              "title": "Linked Objects",
              "value": {
                "description": "Whether or not there are more linked objects than returned.",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "LinkedObjectListHasMore",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "linkedObjectListData",
            "key": "data",
            "schema": {
              "generatedName": "linkedObjectListData",
              "title": "Linked Objects",
              "value": {
                "description": "An array containing the linked conversations and linked tickets.",
                "value": {
                  "generatedName": "LinkedObjectListDataItem",
                  "schema": "linked_object",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "LinkedObjectListData",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "An object containing metadata about linked conversations and linked tickets. Up to 1000 can be returned.",
        "generatedName": "LinkedObjectList",
        "title": "Linked Objects",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "merge_contacts_request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "mergeContactsRequestFrom",
            "key": "from",
            "schema": {
              "generatedName": "mergeContactsRequestFrom",
              "title": "Merge contact data",
              "value": {
                "description": "The unique identifier for the contact to merge away from. Must be a lead.",
                "schema": {
                  "example": "5d70dd30de4efd54f42fd526",
                  "type": "string"
                },
                "generatedName": "MergeContactsRequestFrom",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "mergeContactsRequestInto",
            "key": "into",
            "schema": {
              "generatedName": "mergeContactsRequestInto",
              "title": "Merge contact data",
              "value": {
                "description": "The unique identifier for the contact to merge into. Must be a user.",
                "schema": {
                  "example": "5ba682d23d7cf92bef87bfd4",
                  "type": "string"
                },
                "generatedName": "MergeContactsRequestInto",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Merge contact data.",
        "generatedName": "MergeContactsRequest",
        "title": "Merge contact data",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "message": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "messageType",
            "key": "type",
            "schema": {
              "description": "The type of the message",
              "schema": {
                "example": "user_message",
                "type": "string"
              },
              "generatedName": "MessageType",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "messageId",
            "key": "id",
            "schema": {
              "description": "The id representing the message.",
              "schema": {
                "example": "1488971108",
                "type": "string"
              },
              "generatedName": "MessageId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "messageCreatedAt",
            "key": "created_at",
            "schema": {
              "description": "The time the conversation was created.",
              "schema": {
                "example": 1667560812,
                "type": "int"
              },
              "generatedName": "MessageCreatedAt",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "messageSubject",
            "key": "subject",
            "schema": {
              "generatedName": "messageSubject",
              "nameOverride": "Message",
              "title": "Message",
              "value": {
                "description": "The subject of the message. Only present if message_type: email.",
                "schema": {
                  "example": "Greetings",
                  "type": "string"
                },
                "generatedName": "MessageSubject",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Messages"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "messageBody",
            "key": "body",
            "schema": {
              "description": "The message body, which may contain HTML.",
              "schema": {
                "example": "Hello",
                "type": "string"
              },
              "generatedName": "MessageBody",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "messageMessageType",
            "key": "message_type",
            "schema": {
              "description": "The type of message that was sent. Can be email, inapp, facebook or twitter.",
              "generatedName": "MessageMessageType",
              "values": [
                {
                  "generatedName": "email",
                  "value": "email",
                  "casing": {}
                },
                {
                  "generatedName": "inapp",
                  "value": "inapp",
                  "casing": {}
                },
                {
                  "generatedName": "facebook",
                  "value": "facebook",
                  "casing": {}
                },
                {
                  "generatedName": "twitter",
                  "value": "twitter",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "messageConversationId",
            "key": "conversation_id",
            "schema": {
              "generatedName": "messageConversationId",
              "nameOverride": "Message",
              "title": "Message",
              "value": {
                "description": "The associated conversation_id",
                "schema": {
                  "example": "64619700005570",
                  "type": "string"
                },
                "generatedName": "MessageConversationId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Messages"
              ],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Message are how you reach out to contacts in Intercom. They are created when an admin sends an outbound message to a contact.",
        "generatedName": "Message",
        "nameOverride": "Message",
        "title": "Message",
        "groupName": [
          "Messages"
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "multiple_filter_search_request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "multipleFilterSearchRequestOperator",
            "key": "operator",
            "schema": {
              "generatedName": "multipleFilterSearchRequestOperator",
              "title": "Multiple Filter Search Request",
              "value": {
                "description": "An operator to allow boolean inspection between multiple fields.",
                "generatedName": "MultipleFilterSearchRequestOperator",
                "values": [
                  {
                    "generatedName": "AND",
                    "value": "AND",
                    "casing": {}
                  },
                  {
                    "generatedName": "OR",
                    "value": "OR",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "multipleFilterSearchRequestValue",
            "key": "value",
            "schema": {
              "generatedName": "multipleFilterSearchRequestValue",
              "title": "Multiple Filter Search Request",
              "value": {
                "value": {
                  "generatedName": "MultipleFilterSearchRequestValue",
                  "schemas": [
                    {
                      "description": "Add mutiple filters.",
                      "value": {
                        "generatedName": "MultipleFilterSearchRequestValueItem",
                        "schema": "multiple_filter_search_request",
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "reference"
                      },
                      "generatedName": "MultipleFilterSearchRequestValue",
                      "title": "multiple filter search request",
                      "groupName": [],
                      "type": "array"
                    },
                    {
                      "description": "Add a single filter field.",
                      "value": {
                        "generatedName": "MultipleFilterSearchRequestValueItem",
                        "schema": "single_filter_search_request",
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "reference"
                      },
                      "generatedName": "MultipleFilterSearchRequestValue",
                      "title": "single filter search request",
                      "groupName": [],
                      "type": "array"
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "undiscriminated"
                },
                "type": "oneOf"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Search using Intercoms Search APIs with more than one filter.",
        "generatedName": "MultipleFilterSearchRequest",
        "title": "Multiple Filter Search Request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "news_item": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "newsItemId",
            "key": "id",
            "schema": {
              "generatedName": "newsItemId",
              "title": "News Item",
              "value": {
                "description": "The unique identifier for the news item which is given by Intercom.",
                "schema": {
                  "example": "141",
                  "type": "string"
                },
                "generatedName": "NewsItemId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "News"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "newsItemWorkspaceId",
            "key": "workspace_id",
            "schema": {
              "generatedName": "newsItemWorkspaceId",
              "title": "News Item",
              "value": {
                "description": "The id of the workspace which the news item belongs to.",
                "schema": {
                  "example": "t74hdn32",
                  "type": "string"
                },
                "generatedName": "NewsItemWorkspaceId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "News"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "newsItemTitle",
            "key": "title",
            "schema": {
              "generatedName": "newsItemTitle",
              "title": "News Item",
              "value": {
                "description": "The title of the news item.",
                "schema": {
                  "example": "New feature: News Items",
                  "type": "string"
                },
                "generatedName": "NewsItemTitle",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "News"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "newsItemBody",
            "key": "body",
            "schema": {
              "generatedName": "newsItemBody",
              "title": "News Item",
              "value": {
                "description": "The news item body, which may contain HTML.",
                "schema": {
                  "example": "We are excited to announce the launch of News Items, a new content type in Intercom enabling you to announce product updates, company news, promotions, events and more with your customers.",
                  "type": "string"
                },
                "generatedName": "NewsItemBody",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "News"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "newsItemSenderId",
            "key": "sender_id",
            "schema": {
              "generatedName": "newsItemSenderId",
              "title": "News Item",
              "value": {
                "description": "The id of the sender of the news item. Must be a teammate on the workspace.",
                "schema": {
                  "example": 123,
                  "type": "int"
                },
                "generatedName": "NewsItemSenderId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "News"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "newsItemState",
            "key": "state",
            "schema": {
              "generatedName": "newsItemState",
              "title": "News Item",
              "value": {
                "description": "News items will not be visible to your users in the assigned newsfeeds until they are set live.",
                "generatedName": "NewsItemState",
                "values": [
                  {
                    "generatedName": "draft",
                    "value": "draft",
                    "casing": {}
                  },
                  {
                    "generatedName": "live",
                    "value": "live",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [
                "News"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "newsItemNewsfeedAssignments",
            "key": "newsfeed_assignments",
            "schema": {
              "generatedName": "newsItemNewsfeedAssignments",
              "title": "News Item",
              "value": {
                "description": "A list of newsfeed_assignments to assign to the specified newsfeed.",
                "value": {
                  "generatedName": "NewsItemNewsfeedAssignmentsItem",
                  "schema": "newsfeed_assignment",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "NewsItemNewsfeedAssignments",
                "groupName": [],
                "type": "array"
              },
              "groupName": [
                "News"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "newsItemLabels",
            "key": "labels",
            "schema": {
              "generatedName": "newsItemLabels",
              "title": "News Item",
              "value": {
                "description": "Label names displayed to users to categorize the news item.",
                "value": {
                  "generatedName": "NewsItemLabelsItem",
                  "description": "The label name.",
                  "value": {
                    "description": "The label name.",
                    "schema": {
                      "example": "Product Update",
                      "type": "string"
                    },
                    "generatedName": "NewsItemLabelsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "generatedName": "NewsItemLabels",
                "groupName": [],
                "type": "array"
              },
              "groupName": [
                "News"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "newsItemCoverImageUrl",
            "key": "cover_image_url",
            "schema": {
              "generatedName": "newsItemCoverImageUrl",
              "title": "News Item",
              "value": {
                "generatedName": "NewsItemCoverImageUrl",
                "description": "URL of the image used as cover. Must have .jpg or .png extension.",
                "value": {
                  "description": "URL of the image used as cover. Must have .jpg or .png extension.",
                  "schema": {
                    "format": "uri",
                    "example": "https://example.com/cover.jpg",
                    "type": "string"
                  },
                  "generatedName": "NewsItemCoverImageUrl",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "News"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "newsItemReactions",
            "key": "reactions",
            "schema": {
              "generatedName": "newsItemReactions",
              "title": "News Item",
              "value": {
                "description": "Ordered list of emoji reactions to the news item. When empty, reactions are disabled.",
                "value": {
                  "generatedName": "NewsItemReactionsItem",
                  "description": "The emoji reaction to the news item.",
                  "value": {
                    "description": "The emoji reaction to the news item.",
                    "schema": {
                      "example": "👍",
                      "type": "string"
                    },
                    "generatedName": "NewsItemReactionsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "generatedName": "NewsItemReactions",
                "groupName": [],
                "type": "array"
              },
              "groupName": [
                "News"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "newsItemDeliverSilently",
            "key": "deliver_silently",
            "schema": {
              "generatedName": "newsItemDeliverSilently",
              "title": "News Item",
              "value": {
                "description": "When set to true, the news item will appear in the messenger newsfeed without showing a notification badge.",
                "schema": {
                  "example": true,
                  "type": "boolean"
                },
                "generatedName": "NewsItemDeliverSilently",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "News"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "newsItemCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "newsItemCreatedAt",
              "title": "News Item",
              "value": {
                "description": "Timestamp for when the news item was created.",
                "schema": {
                  "example": 1610589632,
                  "type": "int"
                },
                "generatedName": "NewsItemCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "News"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "newsItemUpdatedAt",
            "key": "updated_at",
            "schema": {
              "generatedName": "newsItemUpdatedAt",
              "title": "News Item",
              "value": {
                "description": "Timestamp for when the news item was last updated.",
                "schema": {
                  "example": 1610589632,
                  "type": "int"
                },
                "generatedName": "NewsItemUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "News"
              ],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A News Item is a content type in Intercom enabling you to announce product updates, company news, promotions, events and more with your customers.",
        "generatedName": "NewsItem",
        "title": "News Item",
        "groupName": [
          "News"
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "news_item_request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "newsItemRequestTitle",
            "key": "title",
            "schema": {
              "description": "The title of the news item.",
              "schema": {
                "example": "Halloween is here!",
                "type": "string"
              },
              "generatedName": "NewsItemRequestTitle",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "newsItemRequestBody",
            "key": "body",
            "schema": {
              "generatedName": "newsItemRequestBody",
              "title": "Create News Item Request",
              "value": {
                "description": "The news item body, which may contain HTML.",
                "schema": {
                  "example": "<p>New costumes in store for this spooky season</p>",
                  "type": "string"
                },
                "generatedName": "NewsItemRequestBody",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "newsItemRequestSenderId",
            "key": "sender_id",
            "schema": {
              "description": "The id of the sender of the news item. Must be a teammate on the workspace.",
              "schema": {
                "example": 123,
                "type": "int"
              },
              "generatedName": "NewsItemRequestSenderId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "newsItemRequestState",
            "key": "state",
            "schema": {
              "generatedName": "newsItemRequestState",
              "title": "Create News Item Request",
              "value": {
                "description": "News items will not be visible to your users in the assigned newsfeeds until they are set live.",
                "generatedName": "NewsItemRequestState",
                "values": [
                  {
                    "generatedName": "draft",
                    "value": "draft",
                    "casing": {}
                  },
                  {
                    "generatedName": "live",
                    "value": "live",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "newsItemRequestDeliverSilently",
            "key": "deliver_silently",
            "schema": {
              "generatedName": "newsItemRequestDeliverSilently",
              "title": "Create News Item Request",
              "value": {
                "description": "When set to `true`, the news item will appear in the messenger newsfeed without showing a notification badge.",
                "schema": {
                  "example": true,
                  "type": "boolean"
                },
                "generatedName": "NewsItemRequestDeliverSilently",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "newsItemRequestLabels",
            "key": "labels",
            "schema": {
              "generatedName": "newsItemRequestLabels",
              "title": "Create News Item Request",
              "value": {
                "description": "Label names displayed to users to categorize the news item.",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "NewsItemRequestLabelsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "NewsItemRequestLabels",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "newsItemRequestReactions",
            "key": "reactions",
            "schema": {
              "generatedName": "newsItemRequestReactions",
              "title": "Create News Item Request",
              "value": {
                "description": "Ordered list of emoji reactions to the news item. When empty, reactions are disabled.",
                "value": {
                  "generatedName": "NewsItemRequestReactionsItem",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NewsItemRequestReactionsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "generatedName": "NewsItemRequestReactions",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "newsItemRequestNewsfeedAssignments",
            "key": "newsfeed_assignments",
            "schema": {
              "generatedName": "newsItemRequestNewsfeedAssignments",
              "title": "Create News Item Request",
              "value": {
                "description": "A list of newsfeed_assignments to assign to the specified newsfeed.",
                "value": {
                  "generatedName": "NewsItemRequestNewsfeedAssignmentsItem",
                  "schema": "newsfeed_assignment",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "NewsItemRequestNewsfeedAssignments",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A News Item is a content type in Intercom enabling you to announce product updates, company news, promotions, events and more with your customers.",
        "generatedName": "NewsItemRequest",
        "title": "Create News Item Request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "newsfeed": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "newsfeedId",
            "key": "id",
            "schema": {
              "generatedName": "newsfeedId",
              "nameOverride": "Newsfeed",
              "title": "Newsfeed",
              "value": {
                "description": "The unique identifier for the newsfeed which is given by Intercom.",
                "schema": {
                  "example": "12312",
                  "type": "string"
                },
                "generatedName": "NewsfeedId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "News"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "newsfeedName",
            "key": "name",
            "schema": {
              "generatedName": "newsfeedName",
              "nameOverride": "Newsfeed",
              "title": "Newsfeed",
              "value": {
                "description": "The name of the newsfeed. This name will never be visible to your users.",
                "schema": {
                  "example": "My Newsfeed",
                  "type": "string"
                },
                "generatedName": "NewsfeedName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "News"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "newsfeedCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "newsfeedCreatedAt",
              "nameOverride": "Newsfeed",
              "title": "Newsfeed",
              "value": {
                "description": "Timestamp for when the newsfeed was created.",
                "schema": {
                  "example": 1674917488,
                  "type": "int"
                },
                "generatedName": "NewsfeedCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "News"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "newsfeedUpdatedAt",
            "key": "updated_at",
            "schema": {
              "generatedName": "newsfeedUpdatedAt",
              "nameOverride": "Newsfeed",
              "title": "Newsfeed",
              "value": {
                "description": "Timestamp for when the newsfeed was last updated.",
                "schema": {
                  "example": 1674917488,
                  "type": "int"
                },
                "generatedName": "NewsfeedUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "News"
              ],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A newsfeed is a collection of news items, targeted to a specific audience.\n\nNewsfeeds currently cannot be edited through the API, please refer to [this article](https://www.intercom.com/help/en/articles/6362267-getting-started-with-news) to set up your newsfeeds in Intercom.\n",
        "generatedName": "Newsfeed",
        "nameOverride": "Newsfeed",
        "title": "Newsfeed",
        "groupName": [
          "News"
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "newsfeed_assignment": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "newsfeedAssignmentNewsfeedId",
            "key": "newsfeed_id",
            "schema": {
              "generatedName": "newsfeedAssignmentNewsfeedId",
              "title": "Newsfeed Assignment",
              "value": {
                "description": "The unique identifier for the newsfeed which is given by Intercom. Publish dates cannot be in the future, to schedule news items use the dedicated feature in app (see this article).",
                "schema": {
                  "example": 198313,
                  "type": "int"
                },
                "generatedName": "NewsfeedAssignmentNewsfeedId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "News"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "newsfeedAssignmentPublishedAt",
            "key": "published_at",
            "schema": {
              "generatedName": "newsfeedAssignmentPublishedAt",
              "title": "Newsfeed Assignment",
              "value": {
                "description": "Publish date of the news item on the newsfeed, use this field if you want to set a publish date in the past (e.g. when importing existing news items). On write, this field will be ignored if the news item state is \"draft\".",
                "schema": {
                  "example": 1674917488,
                  "type": "int"
                },
                "generatedName": "NewsfeedAssignmentPublishedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "News"
              ],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Assigns a news item to a newsfeed.",
        "generatedName": "NewsfeedAssignment",
        "title": "Newsfeed Assignment",
        "groupName": [
          "News"
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "note": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "noteType",
            "key": "type",
            "schema": {
              "generatedName": "noteType",
              "nameOverride": "Note",
              "title": "Note",
              "value": {
                "description": "String representing the object's type. Always has the value `note`.",
                "schema": {
                  "example": "note",
                  "type": "string"
                },
                "generatedName": "NoteType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Notes"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "noteId",
            "key": "id",
            "schema": {
              "generatedName": "noteId",
              "nameOverride": "Note",
              "title": "Note",
              "value": {
                "description": "The id of the note.",
                "schema": {
                  "example": "17495962",
                  "type": "string"
                },
                "generatedName": "NoteId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Notes"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "noteCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "noteCreatedAt",
              "nameOverride": "Note",
              "title": "Note",
              "value": {
                "description": "The time the note was created.",
                "schema": {
                  "example": 1674589321,
                  "type": "int"
                },
                "generatedName": "NoteCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Notes"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "noteContact",
            "key": "contact",
            "schema": {
              "generatedName": "noteContact",
              "nameOverride": "Note",
              "title": "Note",
              "value": {
                "generatedName": "NoteContact",
                "description": "Represents the contact that the note was created about.",
                "value": {
                  "allOf": [],
                  "properties": [
                    {
                      "conflict": {},
                      "generatedName": "noteContactType",
                      "key": "type",
                      "schema": {
                        "generatedName": "noteContactType",
                        "value": {
                          "description": "String representing the object's type. Always has the value `contact`.",
                          "schema": {
                            "type": "string"
                          },
                          "generatedName": "NoteContactType",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "noteContactId",
                      "key": "id",
                      "schema": {
                        "generatedName": "noteContactId",
                        "value": {
                          "description": "The id of the contact.",
                          "schema": {
                            "example": "214656d0c743eafcfde7f248",
                            "type": "string"
                          },
                          "generatedName": "NoteContactId",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    }
                  ],
                  "allOfPropertyConflicts": [],
                  "description": "Represents the contact that the note was created about.",
                  "generatedName": "NoteContact",
                  "groupName": [],
                  "additionalProperties": false,
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "object"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Notes"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "noteAuthor",
            "key": "author",
            "schema": {
              "generatedName": "noteAuthor",
              "nameOverride": "Note",
              "title": "Note",
              "value": {
                "description": "Optional. Represents the Admin that created the note.",
                "generatedName": "NoteAuthor",
                "schema": "admin",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [
                "Notes"
              ],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "noteBody",
            "key": "body",
            "schema": {
              "generatedName": "noteBody",
              "nameOverride": "Note",
              "title": "Note",
              "value": {
                "description": "The body text of the note.",
                "schema": {
                  "example": "<p>Text for the note.</p>",
                  "type": "string"
                },
                "generatedName": "NoteBody",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Notes"
              ],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Notes allow you to annotate and comment on your contacts.",
        "generatedName": "Note",
        "nameOverride": "Note",
        "title": "Note",
        "groupName": [
          "Notes"
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "note_list": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "noteListType",
            "key": "type",
            "schema": {
              "generatedName": "noteListType",
              "title": "Paginated Response",
              "value": {
                "description": "String representing the object's type. Always has the value `list`.",
                "schema": {
                  "example": "list",
                  "type": "string"
                },
                "generatedName": "NoteListType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "noteListData",
            "key": "data",
            "schema": {
              "generatedName": "noteListData",
              "title": "Paginated Response",
              "value": {
                "description": "An array of notes.",
                "value": {
                  "generatedName": "NoteListDataItem",
                  "schema": "note",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "NoteListData",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "noteListTotalCount",
            "key": "total_count",
            "schema": {
              "generatedName": "noteListTotalCount",
              "title": "Paginated Response",
              "value": {
                "description": "A count of the total number of notes.",
                "schema": {
                  "example": 1,
                  "type": "int"
                },
                "generatedName": "NoteListTotalCount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "noteListPages",
            "key": "pages",
            "schema": {
              "generatedName": "noteListPages",
              "title": "Paginated Response",
              "value": {
                "generatedName": "NoteListPages",
                "schema": "cursor_pages",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A paginated list of notes associated with a contact.",
        "generatedName": "NoteList",
        "title": "Paginated Response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "open_conversation_request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "openConversationRequestMessageType",
            "key": "message_type",
            "schema": {
              "value": {
                "value": "open",
                "type": "string"
              },
              "generatedName": "OpenConversationRequestMessageType",
              "groupName": [],
              "type": "literal"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "openConversationRequestAdminId",
            "key": "admin_id",
            "schema": {
              "description": "The id of the admin who is performing the action.",
              "schema": {
                "example": "5017690",
                "type": "string"
              },
              "generatedName": "OpenConversationRequestAdminId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Payload of the request to open a conversation",
        "generatedName": "OpenConversationRequest",
        "title": "Open Conversation Request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "pages_link": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "pagesLinkType",
            "key": "type",
            "schema": {
              "generatedName": "pagesLinkType",
              "title": "Pagination Object",
              "value": {
                "value": {
                  "value": "pages",
                  "type": "string"
                },
                "generatedName": "PagesLinkType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "pagesLinkPage",
            "key": "page",
            "schema": {
              "generatedName": "pagesLinkPage",
              "title": "Pagination Object",
              "value": {
                "schema": {
                  "example": 1,
                  "type": "int"
                },
                "generatedName": "PagesLinkPage",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "pagesLinkNext",
            "key": "next",
            "schema": {
              "generatedName": "pagesLinkNext",
              "title": "Pagination Object",
              "value": {
                "generatedName": "PagesLinkNext",
                "description": "A link to the next page of results. A response that does not contain a next link does not have further data to fetch.",
                "value": {
                  "description": "A link to the next page of results. A response that does not contain a next link does not have further data to fetch.",
                  "schema": {
                    "format": "uri",
                    "type": "string"
                  },
                  "generatedName": "PagesLinkNext",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "pagesLinkPerPage",
            "key": "per_page",
            "schema": {
              "generatedName": "pagesLinkPerPage",
              "title": "Pagination Object",
              "value": {
                "schema": {
                  "example": 50,
                  "type": "int"
                },
                "generatedName": "PagesLinkPerPage",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "pagesLinkTotalPages",
            "key": "total_pages",
            "schema": {
              "generatedName": "pagesLinkTotalPages",
              "title": "Pagination Object",
              "value": {
                "schema": {
                  "example": 1,
                  "type": "int"
                },
                "generatedName": "PagesLinkTotalPages",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The majority of list resources in the API are paginated to allow clients to traverse data over multiple requests.\n\nTheir responses are likely to contain a pages object that hosts pagination links which a client can use to paginate through the data without having to construct a query. The link relations for the pages field are as follows.\n",
        "generatedName": "PagesLink",
        "title": "Pagination Object",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "paginated_response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "paginatedResponseType",
            "key": "type",
            "schema": {
              "generatedName": "paginatedResponseType",
              "title": "Paginated Response",
              "value": {
                "description": "The type of object",
                "generatedName": "PaginatedResponseType",
                "values": [
                  {
                    "generatedName": "list",
                    "value": "list",
                    "casing": {}
                  },
                  {
                    "generatedName": "ConversationList",
                    "value": "conversation.list",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedResponsePages",
            "key": "pages",
            "schema": {
              "generatedName": "paginatedResponsePages",
              "title": "Paginated Response",
              "value": {
                "generatedName": "PaginatedResponsePages",
                "schema": "cursor_pages",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "paginatedResponseTotalCount",
            "key": "total_count",
            "schema": {
              "generatedName": "paginatedResponseTotalCount",
              "title": "Paginated Response",
              "value": {
                "description": "A count of the total number of objects.",
                "schema": {
                  "example": 1,
                  "type": "int"
                },
                "generatedName": "PaginatedResponseTotalCount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedResponseData",
            "key": "data",
            "schema": {
              "generatedName": "paginatedResponseData",
              "title": "Paginated Response",
              "value": {
                "description": "An array of Objects",
                "value": {
                  "value": {
                    "commonProperties": [],
                    "discriminantProperty": "type",
                    "generatedName": "PaginatedResponseDataItem",
                    "schemas": {
                      "news-item": {
                        "generatedName": "ComponentsSchemasNewsItem",
                        "schema": "news_item",
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "reference"
                      },
                      "newsfeed": {
                        "generatedName": "ComponentsSchemasNewsfeed",
                        "schema": "newsfeed",
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "reference"
                      }
                    },
                    "groupName": [],
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "discriminated"
                  },
                  "type": "oneOf"
                },
                "generatedName": "PaginatedResponseData",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Paginated Response",
        "generatedName": "PaginatedResponse",
        "title": "Paginated Response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "part_attachment": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "partAttachmentType",
            "key": "type",
            "schema": {
              "generatedName": "partAttachmentType",
              "title": "Part attachment",
              "value": {
                "description": "The type of attachment",
                "schema": {
                  "example": "upload",
                  "type": "string"
                },
                "generatedName": "PartAttachmentType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "partAttachmentName",
            "key": "name",
            "schema": {
              "generatedName": "partAttachmentName",
              "title": "Part attachment",
              "value": {
                "description": "The name of the attachment",
                "schema": {
                  "example": "example.png",
                  "type": "string"
                },
                "generatedName": "PartAttachmentName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "partAttachmentUrl",
            "key": "url",
            "schema": {
              "generatedName": "partAttachmentUrl",
              "title": "Part attachment",
              "value": {
                "description": "The URL of the attachment",
                "schema": {
                  "example": "https://picsum.photos/200/300",
                  "type": "string"
                },
                "generatedName": "PartAttachmentUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "partAttachmentContentType",
            "key": "content_type",
            "schema": {
              "generatedName": "partAttachmentContentType",
              "title": "Part attachment",
              "value": {
                "description": "The content type of the attachment",
                "schema": {
                  "example": "image/png",
                  "type": "string"
                },
                "generatedName": "PartAttachmentContentType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "partAttachmentFilesize",
            "key": "filesize",
            "schema": {
              "generatedName": "partAttachmentFilesize",
              "title": "Part attachment",
              "value": {
                "description": "The size of the attachment",
                "schema": {
                  "example": 100,
                  "type": "int"
                },
                "generatedName": "PartAttachmentFilesize",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "partAttachmentWidth",
            "key": "width",
            "schema": {
              "generatedName": "partAttachmentWidth",
              "title": "Part attachment",
              "value": {
                "description": "The width of the attachment",
                "schema": {
                  "example": 100,
                  "type": "int"
                },
                "generatedName": "PartAttachmentWidth",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "partAttachmentHeight",
            "key": "height",
            "schema": {
              "generatedName": "partAttachmentHeight",
              "title": "Part attachment",
              "value": {
                "description": "The height of the attachment",
                "schema": {
                  "example": 100,
                  "type": "int"
                },
                "generatedName": "PartAttachmentHeight",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The file attached to a part",
        "generatedName": "PartAttachment",
        "title": "Part attachment",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "phone_switch": {
        "generatedName": "PhoneSwitch",
        "title": "Phone Switch",
        "description": "Phone Switch Response",
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "phoneSwitchType",
              "key": "type",
              "schema": {
                "generatedName": "phoneSwitchType",
                "title": "Phone Switch",
                "value": {
                  "description": "",
                  "value": {
                    "value": "phone_call_redirect",
                    "type": "string"
                  },
                  "generatedName": "PhoneSwitchType",
                  "groupName": [],
                  "type": "literal"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "phoneSwitchPhone",
              "key": "phone",
              "schema": {
                "generatedName": "phoneSwitchPhone",
                "title": "Phone Switch",
                "value": {
                  "description": "Phone number in E.164 format, that has received the SMS to continue the conversation in the Messenger.",
                  "schema": {
                    "example": "+1 1234567890",
                    "type": "string"
                  },
                  "generatedName": "PhoneSwitchPhone",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "Phone Switch Response",
          "generatedName": "PhoneSwitch",
          "title": "Phone Switch",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "groupName": [],
        "type": "nullable"
      },
      "redact_conversation_request": {
        "value": {
          "commonProperties": [],
          "discriminantProperty": "type",
          "generatedName": "RedactConversationRequest",
          "schemas": {
            "conversation_part": {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "redactConversationRequestConversationPartConversationId",
                  "key": "conversation_id",
                  "schema": {
                    "description": "The id of the conversation.",
                    "schema": {
                      "example": "19894788788",
                      "type": "string"
                    },
                    "generatedName": "RedactConversationRequestConversationPartConversationId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "redactConversationRequestConversationPartConversationPartId",
                  "key": "conversation_part_id",
                  "schema": {
                    "description": "The id of the conversation_part.",
                    "schema": {
                      "example": "19381789428",
                      "type": "string"
                    },
                    "generatedName": "RedactConversationRequestConversationPartConversationPartId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "description": "Payload of the request to redact a conversation part",
              "generatedName": "RedactConversationRequestConversationPart",
              "title": "Redact Conversation Part Request",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            "source": {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "redactConversationRequestSourceConversationId",
                  "key": "conversation_id",
                  "schema": {
                    "description": "The id of the conversation.",
                    "schema": {
                      "example": "19894788788",
                      "type": "string"
                    },
                    "generatedName": "RedactConversationRequestSourceConversationId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "redactConversationRequestSourceSourceId",
                  "key": "source_id",
                  "schema": {
                    "description": "The id of the source.",
                    "schema": {
                      "example": "19894781231",
                      "type": "string"
                    },
                    "generatedName": "RedactConversationRequestSourceSourceId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "description": "Payload of the request to redact a conversation source",
              "generatedName": "RedactConversationRequestSource",
              "title": "Redact Conversation Source Request",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            }
          },
          "groupName": [],
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "discriminated"
        },
        "type": "oneOf"
      },
      "reference": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "referenceType",
            "key": "type",
            "schema": {
              "generatedName": "referenceType",
              "nameOverride": "Reference",
              "title": "Reference",
              "value": {
                "description": "",
                "schema": {
                  "example": "contact",
                  "type": "string"
                },
                "generatedName": "ReferenceType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "referenceId",
            "key": "id",
            "schema": {
              "generatedName": "referenceId",
              "nameOverride": "Reference",
              "title": "Reference",
              "value": {
                "generatedName": "ReferenceId",
                "description": "",
                "value": {
                  "description": "",
                  "schema": {
                    "example": "1a2b3c",
                    "type": "string"
                  },
                  "generatedName": "ReferenceId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "reference to another object",
        "generatedName": "Reference",
        "nameOverride": "Reference",
        "title": "Reference",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "reply_conversation_request": {
        "value": {
          "generatedName": "ReplyConversationRequest",
          "schemas": [
            {
              "generatedName": "ReplyConversationRequestZero",
              "schema": "contact_reply_conversation_request",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            {
              "generatedName": "ReplyConversationRequestOne",
              "schema": "admin_reply_conversation_request",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            }
          ],
          "groupName": [],
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "undiscriminated"
        },
        "type": "oneOf"
      },
      "search_request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "searchRequestQuery",
            "key": "query",
            "schema": {
              "value": {
                "generatedName": "SearchRequestQuery",
                "schemas": [
                  {
                    "generatedName": "SearchRequestQueryZero",
                    "schema": "single_filter_search_request",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  {
                    "generatedName": "SearchRequestQueryOne",
                    "schema": "multiple_filter_search_request",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "undiscriminated"
              },
              "type": "oneOf"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "searchRequestPagination",
            "key": "pagination",
            "schema": {
              "generatedName": "searchRequestPagination",
              "title": "Search data",
              "value": {
                "generatedName": "SearchRequestPagination",
                "schema": "starting_after_paging",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Search using Intercoms Search APIs.",
        "generatedName": "SearchRequest",
        "title": "Search data",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "segment": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "segmentType",
            "key": "type",
            "schema": {
              "generatedName": "segmentType",
              "nameOverride": "Segment",
              "title": "Segment",
              "value": {
                "description": "The type of object.",
                "value": {
                  "value": "segment",
                  "type": "string"
                },
                "generatedName": "SegmentType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [
                "Segments"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "segmentId",
            "key": "id",
            "schema": {
              "generatedName": "segmentId",
              "nameOverride": "Segment",
              "title": "Segment",
              "value": {
                "description": "The unique identifier representing the segment.",
                "schema": {
                  "example": "56203d253cba154d39010062",
                  "type": "string"
                },
                "generatedName": "SegmentId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Segments"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "segmentName",
            "key": "name",
            "schema": {
              "generatedName": "segmentName",
              "nameOverride": "Segment",
              "title": "Segment",
              "value": {
                "description": "The name of the segment.",
                "schema": {
                  "example": "Active",
                  "type": "string"
                },
                "generatedName": "SegmentName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Segments"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "segmentCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "segmentCreatedAt",
              "nameOverride": "Segment",
              "title": "Segment",
              "value": {
                "description": "The time the segment was created.",
                "schema": {
                  "example": 1394621988,
                  "type": "int"
                },
                "generatedName": "SegmentCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Segments"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "segmentUpdatedAt",
            "key": "updated_at",
            "schema": {
              "generatedName": "segmentUpdatedAt",
              "nameOverride": "Segment",
              "title": "Segment",
              "value": {
                "description": "The time the segment was updated.",
                "schema": {
                  "example": 1394622004,
                  "type": "int"
                },
                "generatedName": "SegmentUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Segments"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "segmentPersonType",
            "key": "person_type",
            "schema": {
              "generatedName": "segmentPersonType",
              "nameOverride": "Segment",
              "title": "Segment",
              "value": {
                "description": "Type of the contact: contact (lead) or user.",
                "generatedName": "SegmentPersonType",
                "values": [
                  {
                    "generatedName": "contact",
                    "value": "contact",
                    "casing": {}
                  },
                  {
                    "generatedName": "user",
                    "value": "user",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [
                "Segments"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "segmentCount",
            "key": "count",
            "schema": {
              "generatedName": "segmentCount",
              "nameOverride": "Segment",
              "title": "Segment",
              "value": {
                "generatedName": "SegmentCount",
                "description": "The number of items in the user segment. It's returned when `include_count=true` is included in the request.",
                "value": {
                  "description": "The number of items in the user segment. It's returned when `include_count=true` is included in the request.",
                  "schema": {
                    "example": 3,
                    "type": "int"
                  },
                  "generatedName": "SegmentCount",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Segments"
              ],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A segment is a group of your contacts defined by the rules that you set.",
        "generatedName": "Segment",
        "nameOverride": "Segment",
        "title": "Segment",
        "groupName": [
          "Segments"
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "segment_list": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "segmentListType",
            "key": "type",
            "schema": {
              "generatedName": "segmentListType",
              "title": "Segment List",
              "value": {
                "description": "The type of the object",
                "value": {
                  "value": "segment.list",
                  "type": "string"
                },
                "generatedName": "SegmentListType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "segmentListSegments",
            "key": "segments",
            "schema": {
              "generatedName": "segmentListSegments",
              "title": "Segment List",
              "value": {
                "description": "A list of Segment objects",
                "value": {
                  "generatedName": "SegmentListSegmentsItem",
                  "schema": "segment",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SegmentListSegments",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "segmentListPages",
            "key": "pages",
            "schema": {
              "generatedName": "segmentListPages",
              "title": "Segment List",
              "value": {
                "description": "A pagination object, which may be empty, indicating no further pages to fetch.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SegmentListPagesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "SegmentListPagesValue",
                  "type": "unknown"
                },
                "generatedName": "SegmentListPages",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "This will return a list of Segment Objects. The result may also have a pages object if the response is paginated.",
        "generatedName": "SegmentList",
        "title": "Segment List",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "single_filter_search_request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "singleFilterSearchRequestField",
            "key": "field",
            "schema": {
              "generatedName": "singleFilterSearchRequestField",
              "title": "Single Filter Search Request",
              "value": {
                "description": "The accepted field that you want to search on.",
                "schema": {
                  "example": "created_at",
                  "type": "string"
                },
                "generatedName": "SingleFilterSearchRequestField",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "singleFilterSearchRequestOperator",
            "key": "operator",
            "schema": {
              "generatedName": "singleFilterSearchRequestOperator",
              "title": "Single Filter Search Request",
              "value": {
                "description": "The accepted operators you can use to define how you want to search for the value.",
                "generatedName": "SingleFilterSearchRequestOperator",
                "values": [
                  {
                    "generatedName": "EQUAL_TO",
                    "value": "=",
                    "casing": {}
                  },
                  {
                    "generatedName": "NOT_EQUALS",
                    "value": "!=",
                    "casing": {}
                  },
                  {
                    "generatedName": "IN",
                    "value": "IN",
                    "casing": {}
                  },
                  {
                    "generatedName": "NIN",
                    "value": "NIN",
                    "casing": {}
                  },
                  {
                    "generatedName": "LESS_THAN",
                    "value": "<",
                    "casing": {}
                  },
                  {
                    "generatedName": "GREATER_THAN",
                    "value": ">",
                    "casing": {}
                  },
                  {
                    "generatedName": "",
                    "value": "~",
                    "casing": {}
                  },
                  {
                    "generatedName": "",
                    "value": "!~",
                    "casing": {}
                  },
                  {
                    "generatedName": "",
                    "value": "^",
                    "casing": {}
                  },
                  {
                    "generatedName": "",
                    "value": "$",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "singleFilterSearchRequestValue",
            "key": "value",
            "schema": {
              "generatedName": "singleFilterSearchRequestValue",
              "title": "Single Filter Search Request",
              "value": {
                "description": "The value that you want to search on.",
                "schema": {
                  "example": "73732934",
                  "type": "string"
                },
                "generatedName": "SingleFilterSearchRequestValue",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Search using Intercoms Search APIs with a single filter.",
        "generatedName": "SingleFilterSearchRequest",
        "title": "Single Filter Search Request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "sla_applied": {
        "generatedName": "SlaApplied",
        "title": "Applied SLA",
        "description": "The SLA Applied object contains the details for which SLA has been applied to this conversation.\nImportant: if there are any canceled sla_events for the conversation - meaning an SLA has been manually removed from a conversation, the sla_status will always be returned as null.\n",
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "slaAppliedType",
              "key": "type",
              "schema": {
                "generatedName": "slaAppliedType",
                "title": "Applied SLA",
                "value": {
                  "description": "object type",
                  "schema": {
                    "example": "conversation_sla_summary",
                    "type": "string"
                  },
                  "generatedName": "SlaAppliedType",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "slaAppliedSlaName",
              "key": "sla_name",
              "schema": {
                "generatedName": "slaAppliedSlaName",
                "title": "Applied SLA",
                "value": {
                  "description": "The name of the SLA as given by the teammate when it was created.",
                  "schema": {
                    "example": "",
                    "type": "string"
                  },
                  "generatedName": "SlaAppliedSlaName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "slaAppliedSlaStatus",
              "key": "sla_status",
              "schema": {
                "generatedName": "slaAppliedSlaStatus",
                "title": "Applied SLA",
                "value": {
                  "description": "SLA statuses:\n            - `hit`: If there’s at least one hit event in the underlying sla_events table, and no “missed” or “canceled” events for the conversation.\n            - `missed`: If there are any missed sla_events for the conversation and no canceled events. If there’s even a single missed sla event, the status will always be missed. A missed status is not applied when the SLA expires, only the next time a teammate replies.\n            - `active`: An SLA has been applied to a conversation, but has not yet been fulfilled. SLA status is active only if there are no “hit, “missed”, or “canceled” events.",
                  "generatedName": "SlaAppliedSlaStatus",
                  "values": [
                    {
                      "generatedName": "hit",
                      "value": "hit",
                      "casing": {}
                    },
                    {
                      "generatedName": "missed",
                      "value": "missed",
                      "casing": {}
                    },
                    {
                      "generatedName": "cancelled",
                      "value": "cancelled",
                      "casing": {}
                    },
                    {
                      "generatedName": "active",
                      "value": "active",
                      "casing": {}
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "enum"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "The SLA Applied object contains the details for which SLA has been applied to this conversation.\nImportant: if there are any canceled sla_events for the conversation - meaning an SLA has been manually removed from a conversation, the sla_status will always be returned as null.\n",
          "generatedName": "SlaApplied",
          "title": "Applied SLA",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "groupName": [],
        "type": "nullable"
      },
      "snooze_conversation_request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "snoozeConversationRequestMessageType",
            "key": "message_type",
            "schema": {
              "value": {
                "value": "snoozed",
                "type": "string"
              },
              "generatedName": "SnoozeConversationRequestMessageType",
              "groupName": [],
              "type": "literal"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "snoozeConversationRequestAdminId",
            "key": "admin_id",
            "schema": {
              "description": "The id of the admin who is performing the action.",
              "schema": {
                "example": "5017691",
                "type": "string"
              },
              "generatedName": "SnoozeConversationRequestAdminId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "snoozeConversationRequestSnoozedUntil",
            "key": "snoozed_until",
            "schema": {
              "description": "The time you want the conversation to reopen.",
              "schema": {
                "example": 1673609604,
                "type": "int"
              },
              "generatedName": "SnoozeConversationRequestSnoozedUntil",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Payload of the request to snooze a conversation",
        "generatedName": "SnoozeConversationRequest",
        "title": "Snooze Conversation Request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "social_profile": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "socialProfileType",
            "key": "type",
            "schema": {
              "generatedName": "socialProfileType",
              "title": "Social Profile",
              "value": {
                "description": "value is \"social_profile\"",
                "schema": {
                  "example": "social_profile",
                  "type": "string"
                },
                "generatedName": "SocialProfileType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "socialProfileName",
            "key": "name",
            "schema": {
              "generatedName": "socialProfileName",
              "title": "Social Profile",
              "value": {
                "description": "The name of the Social media profile",
                "schema": {
                  "example": "Facebook",
                  "type": "string"
                },
                "generatedName": "SocialProfileName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "socialProfileUrl",
            "key": "url",
            "schema": {
              "generatedName": "socialProfileUrl",
              "title": "Social Profile",
              "value": {
                "description": "The name of the Social media profile",
                "schema": {
                  "format": "uri",
                  "example": "http://twitter.com/th1sland",
                  "type": "string"
                },
                "generatedName": "SocialProfileUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A Social Profile allows you to label your contacts, companies, and conversations and list them using that Social Profile.",
        "generatedName": "SocialProfile",
        "title": "Social Profile",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "starting_after_paging": {
        "generatedName": "StartingAfterPaging",
        "title": "Pagination: Starting After",
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "startingAfterPagingPerPage",
              "key": "per_page",
              "schema": {
                "generatedName": "startingAfterPagingPerPage",
                "title": "Pagination: Starting After",
                "value": {
                  "description": "The number of results to fetch per page.",
                  "schema": {
                    "example": 2,
                    "type": "int"
                  },
                  "generatedName": "StartingAfterPagingPerPage",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "startingAfterPagingStartingAfter",
              "key": "starting_after",
              "schema": {
                "generatedName": "startingAfterPagingStartingAfter",
                "title": "Pagination: Starting After",
                "value": {
                  "generatedName": "StartingAfterPagingStartingAfter",
                  "description": "The cursor to use in the next request to get the next page of results.",
                  "value": {
                    "description": "The cursor to use in the next request to get the next page of results.",
                    "schema": {
                      "example": "your-cursor-from-response",
                      "type": "string"
                    },
                    "generatedName": "StartingAfterPagingStartingAfter",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "StartingAfterPaging",
          "title": "Pagination: Starting After",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "groupName": [],
        "type": "nullable"
      },
      "subscription_type": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "subscriptionTypeType",
            "key": "type",
            "schema": {
              "generatedName": "subscriptionTypeType",
              "title": "Subscription Types",
              "value": {
                "description": "The type of the object - subscription",
                "schema": {
                  "example": "subscription",
                  "type": "string"
                },
                "generatedName": "SubscriptionTypeType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Subscription Types"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "subscriptionTypeId",
            "key": "id",
            "schema": {
              "generatedName": "subscriptionTypeId",
              "title": "Subscription Types",
              "value": {
                "description": "The unique identifier representing the subscription type.",
                "schema": {
                  "example": "123456",
                  "type": "string"
                },
                "generatedName": "SubscriptionTypeId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Subscription Types"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "subscriptionTypeState",
            "key": "state",
            "schema": {
              "generatedName": "subscriptionTypeState",
              "title": "Subscription Types",
              "value": {
                "description": "The state of the subscription type.",
                "generatedName": "SubscriptionTypeState",
                "values": [
                  {
                    "generatedName": "live",
                    "value": "live",
                    "casing": {}
                  },
                  {
                    "generatedName": "draft",
                    "value": "draft",
                    "casing": {}
                  },
                  {
                    "generatedName": "archived",
                    "value": "archived",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [
                "Subscription Types"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "subscriptionTypeDefaultTranslation",
            "key": "default_translation",
            "schema": {
              "generatedName": "subscriptionTypeDefaultTranslation",
              "title": "Subscription Types",
              "value": {
                "generatedName": "SubscriptionTypeDefaultTranslation",
                "schema": "translation",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [
                "Subscription Types"
              ],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "subscriptionTypeTranslations",
            "key": "translations",
            "schema": {
              "generatedName": "subscriptionTypeTranslations",
              "title": "Subscription Types",
              "value": {
                "description": "An array of translations objects with the localised version of the subscription type in each available locale within your translation settings.",
                "value": {
                  "generatedName": "SubscriptionTypeTranslationsItem",
                  "schema": "translation",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SubscriptionTypeTranslations",
                "groupName": [],
                "type": "array"
              },
              "groupName": [
                "Subscription Types"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "subscriptionTypeConsentType",
            "key": "consent_type",
            "schema": {
              "generatedName": "subscriptionTypeConsentType",
              "title": "Subscription Types",
              "value": {
                "description": "Describes the type of consent.",
                "generatedName": "SubscriptionTypeConsentType",
                "values": [
                  {
                    "generatedName": "opt_out",
                    "value": "opt_out",
                    "casing": {}
                  },
                  {
                    "generatedName": "opt_in",
                    "value": "opt_in",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [
                "Subscription Types"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "subscriptionTypeContentTypes",
            "key": "content_types",
            "schema": {
              "generatedName": "subscriptionTypeContentTypes",
              "title": "Subscription Types",
              "value": {
                "description": "The message types that this subscription supports - can contain `email` or `sms_message`.",
                "value": {
                  "generatedName": "SubscriptionTypeContentTypesItem",
                  "values": [
                    {
                      "generatedName": "email",
                      "value": "email",
                      "casing": {}
                    },
                    {
                      "generatedName": "sms_message",
                      "value": "sms_message",
                      "casing": {}
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "enum"
                },
                "generatedName": "SubscriptionTypeContentTypes",
                "groupName": [],
                "type": "array"
              },
              "groupName": [
                "Subscription Types"
              ],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A subscription type lets customers easily opt out of non-essential communications without missing what's important to them.",
        "generatedName": "SubscriptionType",
        "title": "Subscription Types",
        "groupName": [
          "Subscription Types"
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "subscription_type_list": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "subscriptionTypeListType",
            "key": "type",
            "schema": {
              "generatedName": "subscriptionTypeListType",
              "title": "Subscription Types",
              "value": {
                "description": "The type of the object",
                "value": {
                  "value": "list",
                  "type": "string"
                },
                "generatedName": "SubscriptionTypeListType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "subscriptionTypeListData",
            "key": "data",
            "schema": {
              "generatedName": "subscriptionTypeListData",
              "title": "Subscription Types",
              "value": {
                "description": "A list of subscription type objects associated with the workspace .",
                "value": {
                  "generatedName": "SubscriptionTypeListDataItem",
                  "schema": "subscription_type",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SubscriptionTypeListData",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A list of subscription type objects.",
        "generatedName": "SubscriptionTypeList",
        "title": "Subscription Types",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "tag": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "tagType",
            "key": "type",
            "schema": {
              "generatedName": "tagType",
              "nameOverride": "Tag",
              "title": "Tag",
              "value": {
                "description": "value is \"tag\"",
                "schema": {
                  "example": "tag",
                  "type": "string"
                },
                "generatedName": "TagType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Tags"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tagId",
            "key": "id",
            "schema": {
              "generatedName": "tagId",
              "nameOverride": "Tag",
              "title": "Tag",
              "value": {
                "description": "The id of the tag",
                "schema": {
                  "example": "123456",
                  "type": "string"
                },
                "generatedName": "TagId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Tags"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tagName",
            "key": "name",
            "schema": {
              "generatedName": "tagName",
              "nameOverride": "Tag",
              "title": "Tag",
              "value": {
                "description": "The name of the tag",
                "schema": {
                  "example": "Test tag",
                  "type": "string"
                },
                "generatedName": "TagName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Tags"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tagAppliedAt",
            "key": "applied_at",
            "schema": {
              "generatedName": "tagAppliedAt",
              "nameOverride": "Tag",
              "title": "Tag",
              "value": {
                "description": "The time when the tag was applied to the object",
                "schema": {
                  "example": 1663597223,
                  "type": "int"
                },
                "generatedName": "TagAppliedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Tags"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tagAppliedBy",
            "key": "applied_by",
            "schema": {
              "generatedName": "tagAppliedBy",
              "nameOverride": "Tag",
              "title": "Tag",
              "value": {
                "generatedName": "TagAppliedBy",
                "schema": "reference",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [
                "Tags"
              ],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A tag allows you to label your contacts, companies, and conversations and list them using that tag.",
        "generatedName": "Tag",
        "nameOverride": "Tag",
        "title": "Tag",
        "groupName": [
          "Tags"
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "tag_company_request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "tagCompanyRequestName",
            "key": "name",
            "schema": {
              "description": "The name of the tag, which will be created if not found.",
              "schema": {
                "example": "Independent",
                "type": "string"
              },
              "generatedName": "TagCompanyRequestName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tagCompanyRequestCompanies",
            "key": "companies",
            "schema": {
              "description": "The id or company_id of the company can be passed as input parameters.",
              "value": {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "tagCompanyRequestCompaniesItemId",
                    "key": "id",
                    "schema": {
                      "generatedName": "tagCompanyRequestCompaniesItemId",
                      "value": {
                        "description": "The Intercom defined id representing the company.",
                        "schema": {
                          "example": "531ee472cce572a6ec000006",
                          "type": "string"
                        },
                        "generatedName": "TagCompanyRequestCompaniesItemId",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "tagCompanyRequestCompaniesItemCompanyId",
                    "key": "company_id",
                    "schema": {
                      "generatedName": "tagCompanyRequestCompaniesItemCompanyId",
                      "value": {
                        "description": "The company id you have defined for the company.",
                        "schema": {
                          "example": "6",
                          "type": "string"
                        },
                        "generatedName": "TagCompanyRequestCompaniesItemCompanyId",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "generatedName": "TagCompanyRequestCompaniesItem",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "generatedName": "TagCompanyRequestCompanies",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "You can tag a single company or a list of companies.",
        "generatedName": "TagCompanyRequest",
        "title": "Tag Company Request Payload",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "tag_list": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "tagListType",
            "key": "type",
            "schema": {
              "generatedName": "tagListType",
              "nameOverride": "Tags",
              "title": "Tags",
              "value": {
                "description": "The type of the object",
                "value": {
                  "value": "list",
                  "type": "string"
                },
                "generatedName": "TagListType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tagListData",
            "key": "data",
            "schema": {
              "generatedName": "tagListData",
              "nameOverride": "Tags",
              "title": "Tags",
              "value": {
                "description": "A list of tags objects associated with the workspace .",
                "value": {
                  "generatedName": "TagListDataItem",
                  "schema": "tag",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "TagListData",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A list of tags objects in the workspace.",
        "generatedName": "TagList",
        "nameOverride": "Tags",
        "title": "Tags",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "tag_multiple_users_request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "tagMultipleUsersRequestName",
            "key": "name",
            "schema": {
              "description": "The name of the tag, which will be created if not found.",
              "schema": {
                "example": "Independent",
                "type": "string"
              },
              "generatedName": "TagMultipleUsersRequestName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tagMultipleUsersRequestUsers",
            "key": "users",
            "schema": {
              "value": {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "tagMultipleUsersRequestUsersItemId",
                    "key": "id",
                    "schema": {
                      "generatedName": "tagMultipleUsersRequestUsersItemId",
                      "value": {
                        "description": "The Intercom defined id representing the user.",
                        "schema": {
                          "example": "5f7f0d217289f8d2f4262080",
                          "type": "string"
                        },
                        "generatedName": "TagMultipleUsersRequestUsersItemId",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "generatedName": "TagMultipleUsersRequestUsersItem",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "generatedName": "TagMultipleUsersRequestUsers",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "You can tag a list of users.",
        "generatedName": "TagMultipleUsersRequest",
        "title": "Tag Users Request Payload",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "tags": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "tagsType",
            "key": "type",
            "schema": {
              "generatedName": "tagsType",
              "nameOverride": "Tags",
              "title": "Tags",
              "value": {
                "description": "The type of the object",
                "value": {
                  "value": "tag.list",
                  "type": "string"
                },
                "generatedName": "TagsType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tagsTags",
            "key": "tags",
            "schema": {
              "generatedName": "tagsTags",
              "nameOverride": "Tags",
              "title": "Tags",
              "value": {
                "description": "A list of tags objects associated with the conversation.",
                "value": {
                  "generatedName": "TagsTagsItem",
                  "schema": "tag",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "TagsTags",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A list of tags objects associated with a conversation",
        "generatedName": "Tags",
        "nameOverride": "Tags",
        "title": "Tags",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "team": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "teamType",
            "key": "type",
            "schema": {
              "generatedName": "teamType",
              "nameOverride": "Team",
              "title": "Team",
              "value": {
                "description": "Value is always \"team\"",
                "schema": {
                  "example": "team",
                  "type": "string"
                },
                "generatedName": "TeamType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Teams"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "teamId",
            "key": "id",
            "schema": {
              "generatedName": "teamId",
              "nameOverride": "Team",
              "title": "Team",
              "value": {
                "description": "The id of the team",
                "schema": {
                  "example": "814865",
                  "type": "string"
                },
                "generatedName": "TeamId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Teams"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "teamName",
            "key": "name",
            "schema": {
              "generatedName": "teamName",
              "nameOverride": "Team",
              "title": "Team",
              "value": {
                "description": "The name of the team",
                "schema": {
                  "example": "Example Team",
                  "type": "string"
                },
                "generatedName": "TeamName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Teams"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "teamAdminIds",
            "key": "admin_ids",
            "schema": {
              "generatedName": "teamAdminIds",
              "nameOverride": "Team",
              "title": "Team",
              "value": {
                "description": "The list of admin IDs that are a part of the team.",
                "value": {
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "TeamAdminIdsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "TeamAdminIds",
                "groupName": [],
                "type": "array"
              },
              "groupName": [
                "Teams"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "teamAdminPriorityLevel",
            "key": "admin_priority_level",
            "schema": {
              "generatedName": "teamAdminPriorityLevel",
              "nameOverride": "Team",
              "title": "Team",
              "value": {
                "generatedName": "TeamAdminPriorityLevel",
                "schema": "admin_priority_level",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [
                "Teams"
              ],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Teams are groups of admins in Intercom.",
        "generatedName": "Team",
        "nameOverride": "Team",
        "title": "Team",
        "groupName": [
          "Teams"
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "team_list": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "teamListType",
            "key": "type",
            "schema": {
              "generatedName": "teamListType",
              "title": "Team List",
              "value": {
                "description": "The type of the object",
                "value": {
                  "value": "team.list",
                  "type": "string"
                },
                "generatedName": "TeamListType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "teamListTeams",
            "key": "teams",
            "schema": {
              "generatedName": "teamListTeams",
              "title": "Team List",
              "value": {
                "description": "A list of team objects",
                "value": {
                  "generatedName": "TeamListTeamsItem",
                  "schema": "team",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "TeamListTeams",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "This will return a list of team objects for the App.",
        "generatedName": "TeamList",
        "title": "Team List",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "team_priority_level": {
        "generatedName": "TeamPriorityLevel",
        "title": "Team Priority Level",
        "description": "Admin priority levels for teams",
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "teamPriorityLevelPrimaryTeamIds",
              "key": "primary_team_ids",
              "schema": {
                "generatedName": "teamPriorityLevelPrimaryTeamIds",
                "title": "Team Priority Level",
                "value": {
                  "generatedName": "TeamPriorityLevelPrimaryTeamIds",
                  "description": "The primary team ids for the team",
                  "value": {
                    "description": "The primary team ids for the team",
                    "value": {
                      "schema": {
                        "type": "int"
                      },
                      "generatedName": "TeamPriorityLevelPrimaryTeamIdsItem",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "generatedName": "TeamPriorityLevelPrimaryTeamIds",
                    "groupName": [],
                    "type": "array"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "teamPriorityLevelSecondaryTeamIds",
              "key": "secondary_team_ids",
              "schema": {
                "generatedName": "teamPriorityLevelSecondaryTeamIds",
                "title": "Team Priority Level",
                "value": {
                  "generatedName": "TeamPriorityLevelSecondaryTeamIds",
                  "description": "The secondary team ids for the team",
                  "value": {
                    "description": "The secondary team ids for the team",
                    "value": {
                      "schema": {
                        "type": "int"
                      },
                      "generatedName": "TeamPriorityLevelSecondaryTeamIdsItem",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "generatedName": "TeamPriorityLevelSecondaryTeamIds",
                    "groupName": [],
                    "type": "array"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "Admin priority levels for teams",
          "generatedName": "TeamPriorityLevel",
          "title": "Team Priority Level",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "groupName": [],
        "type": "nullable"
      },
      "ticket": {
        "generatedName": "Ticket",
        "nameOverride": "Ticket",
        "title": "Ticket",
        "description": "Tickets are how you track requests from your users.",
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "ticketType",
              "key": "type",
              "schema": {
                "generatedName": "ticketType",
                "nameOverride": "Ticket",
                "title": "Ticket",
                "value": {
                  "description": "Always ticket",
                  "value": {
                    "value": "ticket",
                    "type": "string"
                  },
                  "generatedName": "TicketType",
                  "groupName": [],
                  "type": "literal"
                },
                "groupName": [
                  "Tickets"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketId",
              "key": "id",
              "schema": {
                "generatedName": "ticketId",
                "nameOverride": "Ticket",
                "title": "Ticket",
                "value": {
                  "description": "The unique identifier for the ticket which is given by Intercom.",
                  "schema": {
                    "example": "1295",
                    "type": "string"
                  },
                  "generatedName": "TicketId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [
                  "Tickets"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketTicketId",
              "key": "ticket_id",
              "schema": {
                "generatedName": "ticketTicketId",
                "nameOverride": "Ticket",
                "title": "Ticket",
                "value": {
                  "description": "The ID of the Ticket used in the Intercom Inbox and Messenger. Do not use ticket_id for API queries.",
                  "schema": {
                    "example": "1390",
                    "type": "string"
                  },
                  "generatedName": "TicketTicketId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [
                  "Tickets"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketCategory",
              "key": "category",
              "schema": {
                "generatedName": "ticketCategory",
                "nameOverride": "Ticket",
                "title": "Ticket",
                "value": {
                  "description": "Category of the Ticket.",
                  "generatedName": "TicketCategory",
                  "values": [
                    {
                      "generatedName": "Customer",
                      "value": "Customer",
                      "casing": {}
                    },
                    {
                      "generatedName": "BackOffice",
                      "value": "Back-office",
                      "casing": {}
                    },
                    {
                      "generatedName": "Tracker",
                      "value": "Tracker",
                      "casing": {}
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "enum"
                },
                "groupName": [
                  "Tickets"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketTicketAttributes",
              "key": "ticket_attributes",
              "schema": {
                "generatedName": "ticketTicketAttributes",
                "nameOverride": "Ticket",
                "title": "Ticket",
                "value": {
                  "generatedName": "TicketTicketAttributes",
                  "schema": "ticket_custom_attributes",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [
                  "Tickets"
                ],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "ticketTicketState",
              "key": "ticket_state",
              "schema": {
                "generatedName": "ticketTicketState",
                "nameOverride": "Ticket",
                "title": "Ticket",
                "value": {
                  "description": "The state the ticket is currently in",
                  "generatedName": "TicketTicketState",
                  "values": [
                    {
                      "generatedName": "submitted",
                      "value": "submitted",
                      "casing": {}
                    },
                    {
                      "generatedName": "in_progress",
                      "value": "in_progress",
                      "casing": {}
                    },
                    {
                      "generatedName": "waiting_on_customer",
                      "value": "waiting_on_customer",
                      "casing": {}
                    },
                    {
                      "generatedName": "resolved",
                      "value": "resolved",
                      "casing": {}
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "enum"
                },
                "groupName": [
                  "Tickets"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketTicketType",
              "key": "ticket_type",
              "schema": {
                "generatedName": "ticketTicketType",
                "nameOverride": "Ticket",
                "title": "Ticket",
                "value": {
                  "generatedName": "TicketTicketType",
                  "schema": "ticket_type",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [
                  "Tickets"
                ],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "ticketContacts",
              "key": "contacts",
              "schema": {
                "generatedName": "ticketContacts",
                "nameOverride": "Ticket",
                "title": "Ticket",
                "value": {
                  "generatedName": "TicketContacts",
                  "schema": "ticket_contacts",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [
                  "Tickets"
                ],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "ticketAdminAssigneeId",
              "key": "admin_assignee_id",
              "schema": {
                "generatedName": "ticketAdminAssigneeId",
                "nameOverride": "Ticket",
                "title": "Ticket",
                "value": {
                  "description": "The id representing the admin assigned to the ticket.",
                  "schema": {
                    "example": "1295",
                    "type": "string"
                  },
                  "generatedName": "TicketAdminAssigneeId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [
                  "Tickets"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketTeamAssigneeId",
              "key": "team_assignee_id",
              "schema": {
                "generatedName": "ticketTeamAssigneeId",
                "nameOverride": "Ticket",
                "title": "Ticket",
                "value": {
                  "description": "The id representing the team assigned to the ticket.",
                  "schema": {
                    "example": "1295",
                    "type": "string"
                  },
                  "generatedName": "TicketTeamAssigneeId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [
                  "Tickets"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketCreatedAt",
              "key": "created_at",
              "schema": {
                "generatedName": "ticketCreatedAt",
                "nameOverride": "Ticket",
                "title": "Ticket",
                "value": {
                  "description": "The time the ticket was created as a UTC Unix timestamp.",
                  "schema": {
                    "example": 1663597223,
                    "type": "int"
                  },
                  "generatedName": "TicketCreatedAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [
                  "Tickets"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketUpdatedAt",
              "key": "updated_at",
              "schema": {
                "generatedName": "ticketUpdatedAt",
                "nameOverride": "Ticket",
                "title": "Ticket",
                "value": {
                  "description": "The last time the ticket was updated as a UTC Unix timestamp.",
                  "schema": {
                    "example": 1663597260,
                    "type": "int"
                  },
                  "generatedName": "TicketUpdatedAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [
                  "Tickets"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketOpen",
              "key": "open",
              "schema": {
                "generatedName": "ticketOpen",
                "nameOverride": "Ticket",
                "title": "Ticket",
                "value": {
                  "description": "Whether or not the ticket is open. If false, the ticket is closed.",
                  "schema": {
                    "example": true,
                    "type": "boolean"
                  },
                  "generatedName": "TicketOpen",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [
                  "Tickets"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketSnoozedUntil",
              "key": "snoozed_until",
              "schema": {
                "generatedName": "ticketSnoozedUntil",
                "nameOverride": "Ticket",
                "title": "Ticket",
                "value": {
                  "description": "The time the ticket will be snoozed until as a UTC Unix timestamp. If null, the ticket is not currently snoozed.",
                  "schema": {
                    "example": 1663597260,
                    "type": "int"
                  },
                  "generatedName": "TicketSnoozedUntil",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [
                  "Tickets"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketLinkedObjects",
              "key": "linked_objects",
              "schema": {
                "generatedName": "ticketLinkedObjects",
                "nameOverride": "Ticket",
                "title": "Ticket",
                "value": {
                  "generatedName": "TicketLinkedObjects",
                  "schema": "linked_object_list",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [
                  "Tickets"
                ],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "ticketTicketParts",
              "key": "ticket_parts",
              "schema": {
                "generatedName": "ticketTicketParts",
                "nameOverride": "Ticket",
                "title": "Ticket",
                "value": {
                  "generatedName": "TicketTicketParts",
                  "schema": "ticket_parts",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [
                  "Tickets"
                ],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "ticketIsShared",
              "key": "is_shared",
              "schema": {
                "generatedName": "ticketIsShared",
                "nameOverride": "Ticket",
                "title": "Ticket",
                "value": {
                  "description": "Whether or not the ticket is shared with the customer.",
                  "schema": {
                    "example": true,
                    "type": "boolean"
                  },
                  "generatedName": "TicketIsShared",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [
                  "Tickets"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketTicketStateInternalLabel",
              "key": "ticket_state_internal_label",
              "schema": {
                "generatedName": "ticketTicketStateInternalLabel",
                "nameOverride": "Ticket",
                "title": "Ticket",
                "value": {
                  "description": "The state the ticket is currently in, in a human readable form - visible in Intercom",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "TicketTicketStateInternalLabel",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [
                  "Tickets"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketTicketStateExternalLabel",
              "key": "ticket_state_external_label",
              "schema": {
                "generatedName": "ticketTicketStateExternalLabel",
                "nameOverride": "Ticket",
                "title": "Ticket",
                "value": {
                  "description": "The state the ticket is currently in, in a human readable form - visible to customers, in the messenger, email and tickets portal.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "TicketTicketStateExternalLabel",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [
                  "Tickets"
                ],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "Tickets are how you track requests from your users.",
          "generatedName": "Ticket",
          "nameOverride": "Ticket",
          "title": "Ticket",
          "groupName": [
            "Tickets"
          ],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "groupName": [
          "Tickets"
        ],
        "type": "nullable"
      },
      "ticket_contacts": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "ticketContactsType",
            "key": "type",
            "schema": {
              "generatedName": "ticketContactsType",
              "nameOverride": "Contacts",
              "title": "Contacts",
              "value": {
                "description": "always contact.list",
                "value": {
                  "value": "contact.list",
                  "type": "string"
                },
                "generatedName": "TicketContactsType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [
                "Tickets"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ticketContactsContacts",
            "key": "contacts",
            "schema": {
              "generatedName": "ticketContactsContacts",
              "nameOverride": "Contacts",
              "title": "Contacts",
              "value": {
                "description": "The list of contacts affected by this ticket.",
                "value": {
                  "generatedName": "TicketContactsContactsItem",
                  "schema": "contact_reference",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "TicketContactsContacts",
                "groupName": [],
                "type": "array"
              },
              "groupName": [
                "Tickets"
              ],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The list of contacts affected by a ticket.",
        "generatedName": "TicketContacts",
        "nameOverride": "Contacts",
        "title": "Contacts",
        "groupName": [
          "Tickets"
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ticket_custom_attributes": {
        "description": "An object containing the different attributes associated to the ticket as key-value pairs. For the default title and description attributes, the keys are `_default_title_` and `_default_description_`.",
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "TicketCustomAttributesKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "value": {
            "generatedName": "TicketCustomAttributesValue",
            "schemas": [
              {
                "generatedName": "TicketCustomAttributesValue",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "TicketCustomAttributesValue",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              {
                "schema": {
                  "type": "double"
                },
                "generatedName": "TicketCustomAttributesValue",
                "groupName": [],
                "type": "primitive"
              },
              {
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "TicketCustomAttributesValue",
                "groupName": [],
                "type": "primitive"
              },
              {
                "value": {
                  "generatedName": "TicketCustomAttributesValue",
                  "type": "unknown"
                },
                "generatedName": "TicketCustomAttributesValue",
                "groupName": [],
                "type": "array"
              },
              {
                "generatedName": "TicketCustomAttributesValueFour",
                "schema": "file_attribute",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              }
            ],
            "groupName": [],
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "inline": true,
            "type": "undiscriminated"
          },
          "type": "oneOf"
        },
        "generatedName": "TicketCustomAttributes",
        "title": "Ticket Attributes",
        "groupName": [],
        "type": "map"
      },
      "ticket_list": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "ticketListType",
            "key": "type",
            "schema": {
              "generatedName": "ticketListType",
              "title": "Ticket List",
              "value": {
                "description": "Always ticket.list",
                "value": {
                  "value": "ticket.list",
                  "type": "string"
                },
                "generatedName": "TicketListType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ticketListTickets",
            "key": "tickets",
            "schema": {
              "generatedName": "ticketListTickets",
              "title": "Ticket List",
              "value": {
                "description": "The list of ticket objects",
                "value": {
                  "generatedName": "TicketListTicketsItem",
                  "schema": "ticket",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "TicketListTickets",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ticketListTotalCount",
            "key": "total_count",
            "schema": {
              "generatedName": "ticketListTotalCount",
              "title": "Ticket List",
              "value": {
                "description": "A count of the total number of objects.",
                "schema": {
                  "example": 12345,
                  "type": "int"
                },
                "generatedName": "TicketListTotalCount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ticketListPages",
            "key": "pages",
            "schema": {
              "generatedName": "ticketListPages",
              "title": "Ticket List",
              "value": {
                "generatedName": "TicketListPages",
                "schema": "cursor_pages",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Tickets are how you track requests from your users.",
        "generatedName": "TicketList",
        "title": "Ticket List",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ticket_part": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "ticketPartType",
            "key": "type",
            "schema": {
              "generatedName": "ticketPartType",
              "title": "Ticket Part",
              "value": {
                "description": "Always ticket_part",
                "schema": {
                  "example": "ticket_part",
                  "type": "string"
                },
                "generatedName": "TicketPartType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Tickets"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ticketPartId",
            "key": "id",
            "schema": {
              "generatedName": "ticketPartId",
              "title": "Ticket Part",
              "value": {
                "description": "The id representing the ticket part.",
                "schema": {
                  "example": "3",
                  "type": "string"
                },
                "generatedName": "TicketPartId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Tickets"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ticketPartPartType",
            "key": "part_type",
            "schema": {
              "generatedName": "ticketPartPartType",
              "title": "Ticket Part",
              "value": {
                "description": "The type of ticket part.",
                "schema": {
                  "example": "comment",
                  "type": "string"
                },
                "generatedName": "TicketPartPartType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Tickets"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ticketPartBody",
            "key": "body",
            "schema": {
              "generatedName": "ticketPartBody",
              "title": "Ticket Part",
              "value": {
                "generatedName": "TicketPartBody",
                "description": "The message body, which may contain HTML.",
                "value": {
                  "description": "The message body, which may contain HTML.",
                  "schema": {
                    "example": "<p>Okay!</p>",
                    "type": "string"
                  },
                  "generatedName": "TicketPartBody",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Tickets"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ticketPartPreviousTicketState",
            "key": "previous_ticket_state",
            "schema": {
              "generatedName": "ticketPartPreviousTicketState",
              "title": "Ticket Part",
              "value": {
                "description": "The previous state of the ticket.",
                "generatedName": "TicketPartPreviousTicketState",
                "values": [
                  {
                    "generatedName": "submitted",
                    "value": "submitted",
                    "casing": {}
                  },
                  {
                    "generatedName": "in_progress",
                    "value": "in_progress",
                    "casing": {}
                  },
                  {
                    "generatedName": "waiting_on_customer",
                    "value": "waiting_on_customer",
                    "casing": {}
                  },
                  {
                    "generatedName": "resolved",
                    "value": "resolved",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [
                "Tickets"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ticketPartTicketState",
            "key": "ticket_state",
            "schema": {
              "generatedName": "ticketPartTicketState",
              "title": "Ticket Part",
              "value": {
                "description": "The state of the ticket.",
                "generatedName": "TicketPartTicketState",
                "values": [
                  {
                    "generatedName": "submitted",
                    "value": "submitted",
                    "casing": {}
                  },
                  {
                    "generatedName": "in_progress",
                    "value": "in_progress",
                    "casing": {}
                  },
                  {
                    "generatedName": "waiting_on_customer",
                    "value": "waiting_on_customer",
                    "casing": {}
                  },
                  {
                    "generatedName": "resolved",
                    "value": "resolved",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [
                "Tickets"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ticketPartCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "ticketPartCreatedAt",
              "title": "Ticket Part",
              "value": {
                "description": "The time the ticket part was created.",
                "schema": {
                  "example": 1663597223,
                  "type": "int"
                },
                "generatedName": "TicketPartCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Tickets"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ticketPartUpdatedAt",
            "key": "updated_at",
            "schema": {
              "generatedName": "ticketPartUpdatedAt",
              "title": "Ticket Part",
              "value": {
                "description": "The last time the ticket part was updated.",
                "schema": {
                  "example": 1663597260,
                  "type": "int"
                },
                "generatedName": "TicketPartUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Tickets"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ticketPartAssignedTo",
            "key": "assigned_to",
            "schema": {
              "generatedName": "ticketPartAssignedTo",
              "title": "Ticket Part",
              "value": {
                "description": "The id of the admin that was assigned the ticket by this ticket_part (null if there has been no change in assignment.)",
                "generatedName": "TicketPartAssignedTo",
                "schema": "reference",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [
                "Tickets"
              ],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "ticketPartAuthor",
            "key": "author",
            "schema": {
              "generatedName": "ticketPartAuthor",
              "title": "Ticket Part",
              "value": {
                "generatedName": "TicketPartAuthor",
                "schema": "ticket_part_author",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [
                "Tickets"
              ],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "ticketPartAttachments",
            "key": "attachments",
            "schema": {
              "generatedName": "ticketPartAttachments",
              "title": "Ticket Part",
              "value": {
                "description": "A list of attachments for the part.",
                "value": {
                  "generatedName": "TicketPartAttachmentsItem",
                  "schema": "part_attachment",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "TicketPartAttachments",
                "title": "Ticket part attachments",
                "groupName": [],
                "type": "array"
              },
              "groupName": [
                "Tickets"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ticketPartExternalId",
            "key": "external_id",
            "schema": {
              "generatedName": "ticketPartExternalId",
              "title": "Ticket Part",
              "value": {
                "generatedName": "TicketPartExternalId",
                "description": "The external id of the ticket part",
                "value": {
                  "description": "The external id of the ticket part",
                  "schema": {
                    "example": "abcd1234",
                    "type": "string"
                  },
                  "generatedName": "TicketPartExternalId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [
                "Tickets"
              ],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ticketPartRedacted",
            "key": "redacted",
            "schema": {
              "generatedName": "ticketPartRedacted",
              "title": "Ticket Part",
              "value": {
                "description": "Whether or not the ticket part has been redacted.",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "TicketPartRedacted",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [
                "Tickets"
              ],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A Ticket Part represents a message in the ticket.",
        "generatedName": "TicketPart",
        "title": "Ticket Part",
        "groupName": [
          "Tickets"
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ticket_part_author": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "ticketPartAuthorType",
            "key": "type",
            "schema": {
              "generatedName": "ticketPartAuthorType",
              "title": "Ticket part author",
              "value": {
                "description": "The type of the author",
                "generatedName": "TicketPartAuthorType",
                "values": [
                  {
                    "generatedName": "admin",
                    "value": "admin",
                    "casing": {}
                  },
                  {
                    "generatedName": "bot",
                    "value": "bot",
                    "casing": {}
                  },
                  {
                    "generatedName": "team",
                    "value": "team",
                    "casing": {}
                  },
                  {
                    "generatedName": "user",
                    "value": "user",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ticketPartAuthorId",
            "key": "id",
            "schema": {
              "generatedName": "ticketPartAuthorId",
              "title": "Ticket part author",
              "value": {
                "description": "The id of the author",
                "schema": {
                  "example": "274",
                  "type": "string"
                },
                "generatedName": "TicketPartAuthorId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ticketPartAuthorName",
            "key": "name",
            "schema": {
              "generatedName": "ticketPartAuthorName",
              "title": "Ticket part author",
              "value": {
                "generatedName": "TicketPartAuthorName",
                "description": "The name of the author",
                "value": {
                  "description": "The name of the author",
                  "schema": {
                    "example": "Operator",
                    "type": "string"
                  },
                  "generatedName": "TicketPartAuthorName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ticketPartAuthorEmail",
            "key": "email",
            "schema": {
              "generatedName": "ticketPartAuthorEmail",
              "title": "Ticket part author",
              "value": {
                "description": "The email of the author",
                "schema": {
                  "format": "email",
                  "example": "operator+abcd1234@intercom.io",
                  "type": "string"
                },
                "generatedName": "TicketPartAuthorEmail",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The author that wrote or triggered the part. Can be a bot, admin, team or user.",
        "generatedName": "TicketPartAuthor",
        "title": "Ticket part author",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ticket_parts": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "ticketPartsType",
            "key": "type",
            "schema": {
              "generatedName": "ticketPartsType",
              "title": "Ticket Parts",
              "value": {
                "description": "",
                "value": {
                  "value": "ticket_part.list",
                  "type": "string"
                },
                "generatedName": "TicketPartsType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ticketPartsTicketParts",
            "key": "ticket_parts",
            "schema": {
              "generatedName": "ticketPartsTicketParts",
              "title": "Ticket Parts",
              "value": {
                "description": "A list of Ticket Part objects for each ticket. There is a limit of 500 parts.",
                "value": {
                  "generatedName": "TicketPartsTicketPartsItem",
                  "schema": "ticket_part",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "TicketPartsTicketParts",
                "title": "Tickt Parts",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ticketPartsTotalCount",
            "key": "total_count",
            "schema": {
              "generatedName": "ticketPartsTotalCount",
              "title": "Ticket Parts",
              "value": {
                "description": "",
                "schema": {
                  "example": 2,
                  "type": "int"
                },
                "generatedName": "TicketPartsTotalCount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A list of Ticket Part objects for each note and event in the ticket. There is a limit of 500 parts.",
        "generatedName": "TicketParts",
        "title": "Ticket Parts",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ticket_reply": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "ticketReplyType",
            "key": "type",
            "schema": {
              "generatedName": "ticketReplyType",
              "title": "A Ticket Part representing a note, comment, or quick_reply on a ticket",
              "value": {
                "description": "Always ticket_part",
                "value": {
                  "value": "ticket_part",
                  "type": "string"
                },
                "generatedName": "TicketReplyType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ticketReplyId",
            "key": "id",
            "schema": {
              "generatedName": "ticketReplyId",
              "title": "A Ticket Part representing a note, comment, or quick_reply on a ticket",
              "value": {
                "description": "The id representing the part.",
                "schema": {
                  "example": "3",
                  "type": "string"
                },
                "generatedName": "TicketReplyId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ticketReplyPartType",
            "key": "part_type",
            "schema": {
              "generatedName": "ticketReplyPartType",
              "title": "A Ticket Part representing a note, comment, or quick_reply on a ticket",
              "value": {
                "description": "Type of the part",
                "generatedName": "TicketReplyPartType",
                "values": [
                  {
                    "generatedName": "note",
                    "value": "note",
                    "casing": {}
                  },
                  {
                    "generatedName": "comment",
                    "value": "comment",
                    "casing": {}
                  },
                  {
                    "generatedName": "quick_reply",
                    "value": "quick_reply",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ticketReplyBody",
            "key": "body",
            "schema": {
              "generatedName": "ticketReplyBody",
              "title": "A Ticket Part representing a note, comment, or quick_reply on a ticket",
              "value": {
                "generatedName": "TicketReplyBody",
                "description": "The message body, which may contain HTML.",
                "value": {
                  "description": "The message body, which may contain HTML.",
                  "schema": {
                    "example": "<p>Okay!</p>",
                    "type": "string"
                  },
                  "generatedName": "TicketReplyBody",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ticketReplyCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "ticketReplyCreatedAt",
              "title": "A Ticket Part representing a note, comment, or quick_reply on a ticket",
              "value": {
                "description": "The time the note was created.",
                "schema": {
                  "example": 1663597223,
                  "type": "int"
                },
                "generatedName": "TicketReplyCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ticketReplyUpdatedAt",
            "key": "updated_at",
            "schema": {
              "generatedName": "ticketReplyUpdatedAt",
              "title": "A Ticket Part representing a note, comment, or quick_reply on a ticket",
              "value": {
                "description": "The last time the note was updated.",
                "schema": {
                  "example": 1663597260,
                  "type": "int"
                },
                "generatedName": "TicketReplyUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ticketReplyAuthor",
            "key": "author",
            "schema": {
              "generatedName": "ticketReplyAuthor",
              "title": "A Ticket Part representing a note, comment, or quick_reply on a ticket",
              "value": {
                "generatedName": "TicketReplyAuthor",
                "schema": "ticket_part_author",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "ticketReplyAttachments",
            "key": "attachments",
            "schema": {
              "generatedName": "ticketReplyAttachments",
              "title": "A Ticket Part representing a note, comment, or quick_reply on a ticket",
              "value": {
                "description": "A list of attachments for the part.",
                "value": {
                  "generatedName": "TicketReplyAttachmentsItem",
                  "schema": "part_attachment",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "TicketReplyAttachments",
                "title": "Ticket part attachments",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ticketReplyRedacted",
            "key": "redacted",
            "schema": {
              "generatedName": "ticketReplyRedacted",
              "title": "A Ticket Part representing a note, comment, or quick_reply on a ticket",
              "value": {
                "description": "Whether or not the ticket part has been redacted.",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "TicketReplyRedacted",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A Ticket Part representing a note, comment, or quick_reply on a ticket",
        "generatedName": "TicketReply",
        "title": "A Ticket Part representing a note, comment, or quick_reply on a ticket",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ticket_request_custom_attributes": {
        "description": "The attributes set on the ticket. When setting the default title and description attributes, the attribute keys that should be used are `_default_title_` and `_default_description_`. When setting ticket type attributes of the list attribute type, the key should be the attribute name and the value of the attribute should be the list item id, obtainable by [listing the ticket type](ref:get_ticket-types). For example, if the ticket type has an attribute called `priority` of type `list`, the key should be `priority` and the value of the attribute should be the guid of the list item (e.g. `de1825a0-0164-4070-8ca6-13e22462fa7e`).",
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "TicketRequestCustomAttributesKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "value": {
            "generatedName": "TicketRequestCustomAttributesValue",
            "schemas": [
              {
                "generatedName": "TicketRequestCustomAttributesValue",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "TicketRequestCustomAttributesValue",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              {
                "schema": {
                  "type": "double"
                },
                "generatedName": "TicketRequestCustomAttributesValue",
                "groupName": [],
                "type": "primitive"
              },
              {
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "TicketRequestCustomAttributesValue",
                "groupName": [],
                "type": "primitive"
              },
              {
                "value": {
                  "generatedName": "TicketRequestCustomAttributesValue",
                  "type": "unknown"
                },
                "generatedName": "TicketRequestCustomAttributesValue",
                "groupName": [],
                "type": "array"
              }
            ],
            "groupName": [],
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "inline": true,
            "type": "undiscriminated"
          },
          "type": "oneOf"
        },
        "generatedName": "TicketRequestCustomAttributes",
        "title": "Ticket Attributes",
        "groupName": [],
        "type": "map"
      },
      "ticket_type": {
        "generatedName": "TicketType",
        "title": "Ticket Type",
        "description": "A ticket type, used to define the data fields to be captured in a ticket.",
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "ticketTypeType",
              "key": "type",
              "schema": {
                "generatedName": "ticketTypeType",
                "title": "Ticket Type",
                "value": {
                  "description": "String representing the object's type. Always has the value `ticket_type`.",
                  "schema": {
                    "example": "ticket_type",
                    "type": "string"
                  },
                  "generatedName": "TicketTypeType",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [
                  "Tickets"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketTypeId",
              "key": "id",
              "schema": {
                "generatedName": "ticketTypeId",
                "title": "Ticket Type",
                "value": {
                  "description": "The id representing the ticket type.",
                  "schema": {
                    "example": "1295",
                    "type": "string"
                  },
                  "generatedName": "TicketTypeId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [
                  "Tickets"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketTypeCategory",
              "key": "category",
              "schema": {
                "generatedName": "ticketTypeCategory",
                "title": "Ticket Type",
                "value": {
                  "description": "Category of the Ticket Type.",
                  "generatedName": "TicketTypeCategory",
                  "values": [
                    {
                      "generatedName": "Customer",
                      "value": "Customer",
                      "casing": {}
                    },
                    {
                      "generatedName": "BackOffice",
                      "value": "Back-office",
                      "casing": {}
                    },
                    {
                      "generatedName": "Tracker",
                      "value": "Tracker",
                      "casing": {}
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "enum"
                },
                "groupName": [
                  "Tickets"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketTypeName",
              "key": "name",
              "schema": {
                "generatedName": "ticketTypeName",
                "title": "Ticket Type",
                "value": {
                  "description": "The name of the ticket type",
                  "schema": {
                    "example": "Bug",
                    "type": "string"
                  },
                  "generatedName": "TicketTypeName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [
                  "Tickets"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketTypeDescription",
              "key": "description",
              "schema": {
                "generatedName": "ticketTypeDescription",
                "title": "Ticket Type",
                "value": {
                  "description": "The description of the ticket type",
                  "schema": {
                    "example": "A bug that has been reported.",
                    "type": "string"
                  },
                  "generatedName": "TicketTypeDescription",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [
                  "Tickets"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketTypeIcon",
              "key": "icon",
              "schema": {
                "generatedName": "ticketTypeIcon",
                "title": "Ticket Type",
                "value": {
                  "description": "The icon of the ticket type",
                  "schema": {
                    "example": "🐞",
                    "type": "string"
                  },
                  "generatedName": "TicketTypeIcon",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [
                  "Tickets"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketTypeWorkspaceId",
              "key": "workspace_id",
              "schema": {
                "generatedName": "ticketTypeWorkspaceId",
                "title": "Ticket Type",
                "value": {
                  "description": "The id of the workspace that the ticket type belongs to.",
                  "schema": {
                    "example": "ecahpwf5",
                    "type": "string"
                  },
                  "generatedName": "TicketTypeWorkspaceId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [
                  "Tickets"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketTypeTicketTypeAttributes",
              "key": "ticket_type_attributes",
              "schema": {
                "generatedName": "ticketTypeTicketTypeAttributes",
                "title": "Ticket Type",
                "value": {
                  "generatedName": "TicketTypeTicketTypeAttributes",
                  "schema": "ticket_type_attribute_list",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [
                  "Tickets"
                ],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            },
            {
              "conflict": {},
              "generatedName": "ticketTypeArchived",
              "key": "archived",
              "schema": {
                "generatedName": "ticketTypeArchived",
                "title": "Ticket Type",
                "value": {
                  "description": "Whether the ticket type is archived or not.",
                  "schema": {
                    "example": false,
                    "type": "boolean"
                  },
                  "generatedName": "TicketTypeArchived",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [
                  "Tickets"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketTypeCreatedAt",
              "key": "created_at",
              "schema": {
                "generatedName": "ticketTypeCreatedAt",
                "title": "Ticket Type",
                "value": {
                  "description": "The date and time the ticket type was created.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "TicketTypeCreatedAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [
                  "Tickets"
                ],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketTypeUpdatedAt",
              "key": "updated_at",
              "schema": {
                "generatedName": "ticketTypeUpdatedAt",
                "title": "Ticket Type",
                "value": {
                  "description": "The date and time the ticket type was last updated.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "TicketTypeUpdatedAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [
                  "Tickets"
                ],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "A ticket type, used to define the data fields to be captured in a ticket.",
          "generatedName": "TicketType",
          "title": "Ticket Type",
          "groupName": [
            "Tickets"
          ],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "groupName": [
          "Tickets"
        ],
        "type": "nullable"
      },
      "ticket_type_attribute": {
        "generatedName": "TicketTypeAttribute",
        "title": "Ticket Type Attribute",
        "description": "Ticket type attribute, used to define each data field to be captured in a ticket.",
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "ticketTypeAttributeType",
              "key": "type",
              "schema": {
                "generatedName": "ticketTypeAttributeType",
                "title": "Ticket Type Attribute",
                "value": {
                  "description": "String representing the object's type. Always has the value `ticket_type_attribute`.",
                  "schema": {
                    "example": "ticket_type_attribute",
                    "type": "string"
                  },
                  "generatedName": "TicketTypeAttributeType",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketTypeAttributeId",
              "key": "id",
              "schema": {
                "generatedName": "ticketTypeAttributeId",
                "title": "Ticket Type Attribute",
                "value": {
                  "description": "The id representing the ticket type attribute.",
                  "schema": {
                    "example": "1",
                    "type": "string"
                  },
                  "generatedName": "TicketTypeAttributeId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketTypeAttributeWorkspaceId",
              "key": "workspace_id",
              "schema": {
                "generatedName": "ticketTypeAttributeWorkspaceId",
                "title": "Ticket Type Attribute",
                "value": {
                  "description": "The id of the workspace that the ticket type attribute belongs to.",
                  "schema": {
                    "example": "ecahpwf5",
                    "type": "string"
                  },
                  "generatedName": "TicketTypeAttributeWorkspaceId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketTypeAttributeName",
              "key": "name",
              "schema": {
                "generatedName": "ticketTypeAttributeName",
                "title": "Ticket Type Attribute",
                "value": {
                  "description": "The name of the ticket type attribute",
                  "schema": {
                    "example": "Title",
                    "type": "string"
                  },
                  "generatedName": "TicketTypeAttributeName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketTypeAttributeDescription",
              "key": "description",
              "schema": {
                "generatedName": "ticketTypeAttributeDescription",
                "title": "Ticket Type Attribute",
                "value": {
                  "description": "The description of the ticket type attribute",
                  "schema": {
                    "example": "Bug title.",
                    "type": "string"
                  },
                  "generatedName": "TicketTypeAttributeDescription",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketTypeAttributeDataType",
              "key": "data_type",
              "schema": {
                "generatedName": "ticketTypeAttributeDataType",
                "title": "Ticket Type Attribute",
                "value": {
                  "description": "The type of the data attribute (allowed values: \"string list integer decimal boolean datetime files\")",
                  "schema": {
                    "example": "string",
                    "type": "string"
                  },
                  "generatedName": "TicketTypeAttributeDataType",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketTypeAttributeInputOptions",
              "key": "input_options",
              "schema": {
                "generatedName": "ticketTypeAttributeInputOptions",
                "title": "Ticket Type Attribute",
                "value": {
                  "description": "Input options for the attribute",
                  "key": {
                    "schema": {
                      "example": "multiline: true",
                      "type": "string"
                    },
                    "generatedName": "TicketTypeAttributeInputOptionsKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "TicketTypeAttributeInputOptionsValue",
                    "type": "unknown"
                  },
                  "generatedName": "TicketTypeAttributeInputOptions",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketTypeAttributeOrder",
              "key": "order",
              "schema": {
                "generatedName": "ticketTypeAttributeOrder",
                "title": "Ticket Type Attribute",
                "value": {
                  "description": "The order of the attribute against other attributes",
                  "schema": {
                    "example": 1,
                    "type": "int"
                  },
                  "generatedName": "TicketTypeAttributeOrder",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketTypeAttributeRequiredToCreate",
              "key": "required_to_create",
              "schema": {
                "generatedName": "ticketTypeAttributeRequiredToCreate",
                "title": "Ticket Type Attribute",
                "value": {
                  "description": "Whether the attribute is required or not for teammates.",
                  "schema": {
                    "default": false,
                    "example": false,
                    "type": "boolean"
                  },
                  "generatedName": "TicketTypeAttributeRequiredToCreate",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketTypeAttributeRequiredToCreateForContacts",
              "key": "required_to_create_for_contacts",
              "schema": {
                "generatedName": "ticketTypeAttributeRequiredToCreateForContacts",
                "title": "Ticket Type Attribute",
                "value": {
                  "description": "Whether the attribute is required or not for contacts.",
                  "schema": {
                    "default": false,
                    "example": false,
                    "type": "boolean"
                  },
                  "generatedName": "TicketTypeAttributeRequiredToCreateForContacts",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketTypeAttributeVisibleOnCreate",
              "key": "visible_on_create",
              "schema": {
                "generatedName": "ticketTypeAttributeVisibleOnCreate",
                "title": "Ticket Type Attribute",
                "value": {
                  "description": "Whether the attribute is visible or not to teammates.",
                  "schema": {
                    "default": true,
                    "example": false,
                    "type": "boolean"
                  },
                  "generatedName": "TicketTypeAttributeVisibleOnCreate",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketTypeAttributeVisibleToContacts",
              "key": "visible_to_contacts",
              "schema": {
                "generatedName": "ticketTypeAttributeVisibleToContacts",
                "title": "Ticket Type Attribute",
                "value": {
                  "description": "Whether the attribute is visible or not to contacts.",
                  "schema": {
                    "default": true,
                    "example": false,
                    "type": "boolean"
                  },
                  "generatedName": "TicketTypeAttributeVisibleToContacts",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketTypeAttributeDefault",
              "key": "default",
              "schema": {
                "generatedName": "ticketTypeAttributeDefault",
                "title": "Ticket Type Attribute",
                "value": {
                  "description": "Whether the attribute is built in or not.",
                  "schema": {
                    "example": true,
                    "type": "boolean"
                  },
                  "generatedName": "TicketTypeAttributeDefault",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketTypeAttributeTicketTypeId",
              "key": "ticket_type_id",
              "schema": {
                "generatedName": "ticketTypeAttributeTicketTypeId",
                "title": "Ticket Type Attribute",
                "value": {
                  "description": "The id of the ticket type that the attribute belongs to.",
                  "schema": {
                    "example": 42,
                    "type": "int"
                  },
                  "generatedName": "TicketTypeAttributeTicketTypeId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketTypeAttributeArchived",
              "key": "archived",
              "schema": {
                "generatedName": "ticketTypeAttributeArchived",
                "title": "Ticket Type Attribute",
                "value": {
                  "description": "Whether the ticket type attribute is archived or not.",
                  "schema": {
                    "example": false,
                    "type": "boolean"
                  },
                  "generatedName": "TicketTypeAttributeArchived",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketTypeAttributeCreatedAt",
              "key": "created_at",
              "schema": {
                "generatedName": "ticketTypeAttributeCreatedAt",
                "title": "Ticket Type Attribute",
                "value": {
                  "description": "The date and time the ticket type attribute was created.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "TicketTypeAttributeCreatedAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ticketTypeAttributeUpdatedAt",
              "key": "updated_at",
              "schema": {
                "generatedName": "ticketTypeAttributeUpdatedAt",
                "title": "Ticket Type Attribute",
                "value": {
                  "description": "The date and time the ticket type attribute was last updated.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "TicketTypeAttributeUpdatedAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "Ticket type attribute, used to define each data field to be captured in a ticket.",
          "generatedName": "TicketTypeAttribute",
          "title": "Ticket Type Attribute",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "groupName": [],
        "type": "nullable"
      },
      "ticket_type_attribute_list": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "ticketTypeAttributeListType",
            "key": "type",
            "schema": {
              "generatedName": "ticketTypeAttributeListType",
              "title": "Ticket Type Attributes",
              "value": {
                "description": "String representing the object's type. Always has the value `ticket_type_attributes.list`.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TicketTypeAttributeListType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ticketTypeAttributeListTicketTypeAttributes",
            "key": "ticket_type_attributes",
            "schema": {
              "generatedName": "ticketTypeAttributeListTicketTypeAttributes",
              "title": "Ticket Type Attributes",
              "value": {
                "description": "A list of ticket type attributes associated with a given ticket type.",
                "value": {
                  "generatedName": "TicketTypeAttributeListTicketTypeAttributesItem",
                  "schema": "ticket_type_attribute",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "TicketTypeAttributeListTicketTypeAttributes",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A list of attributes associated with a given ticket type.",
        "generatedName": "TicketTypeAttributeList",
        "title": "Ticket Type Attributes",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ticket_type_list": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "ticketTypeListType",
            "key": "type",
            "schema": {
              "generatedName": "ticketTypeListType",
              "title": "Ticket Types",
              "value": {
                "description": "String representing the object's type. Always has the value `ticket_type.list`.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TicketTypeListType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ticketTypeListTicketTypes",
            "key": "ticket_types",
            "schema": {
              "generatedName": "ticketTypeListTicketTypes",
              "title": "Ticket Types",
              "value": {
                "description": "A list of ticket_types associated with a given workspace.",
                "value": {
                  "generatedName": "TicketTypeListTicketTypesItem",
                  "schema": "ticket_type",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "TicketTypeListTicketTypes",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A list of ticket types associated with a given workspace.",
        "generatedName": "TicketTypeList",
        "title": "Ticket Types",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "translation": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "translationName",
            "key": "name",
            "schema": {
              "generatedName": "translationName",
              "nameOverride": "Translation",
              "title": "Translation",
              "value": {
                "description": "The localised name of the subscription type.",
                "schema": {
                  "example": "Announcements",
                  "type": "string"
                },
                "generatedName": "TranslationName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "translationDescription",
            "key": "description",
            "schema": {
              "generatedName": "translationDescription",
              "nameOverride": "Translation",
              "title": "Translation",
              "value": {
                "description": "The localised description of the subscription type.",
                "schema": {
                  "example": "Offers, product and feature announcements",
                  "type": "string"
                },
                "generatedName": "TranslationDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "translationLocale",
            "key": "locale",
            "schema": {
              "generatedName": "translationLocale",
              "nameOverride": "Translation",
              "title": "Translation",
              "value": {
                "description": "The two character identifier for the language of the translation object.",
                "schema": {
                  "example": "en",
                  "type": "string"
                },
                "generatedName": "TranslationLocale",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A translation object contains the localised details of a subscription type.",
        "generatedName": "Translation",
        "nameOverride": "Translation",
        "title": "Translation",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "untag_company_request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "untagCompanyRequestName",
            "key": "name",
            "schema": {
              "description": "The name of the tag which will be untagged from the company",
              "schema": {
                "example": "Independent",
                "type": "string"
              },
              "generatedName": "UntagCompanyRequestName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "untagCompanyRequestCompanies",
            "key": "companies",
            "schema": {
              "description": "The id or company_id of the company can be passed as input parameters.",
              "value": {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "untagCompanyRequestCompaniesItemId",
                    "key": "id",
                    "schema": {
                      "generatedName": "untagCompanyRequestCompaniesItemId",
                      "value": {
                        "description": "The Intercom defined id representing the company.",
                        "schema": {
                          "example": "531ee472cce572a6ec000006",
                          "type": "string"
                        },
                        "generatedName": "UntagCompanyRequestCompaniesItemId",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "untagCompanyRequestCompaniesItemCompanyId",
                    "key": "company_id",
                    "schema": {
                      "generatedName": "untagCompanyRequestCompaniesItemCompanyId",
                      "value": {
                        "description": "The company id you have defined for the company.",
                        "schema": {
                          "example": "6",
                          "type": "string"
                        },
                        "generatedName": "UntagCompanyRequestCompaniesItemCompanyId",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "untagCompanyRequestCompaniesItemUntag",
                    "key": "untag",
                    "schema": {
                      "generatedName": "untagCompanyRequestCompaniesItemUntag",
                      "value": {
                        "description": "Always set to true",
                        "schema": {
                          "type": "boolean"
                        },
                        "generatedName": "UntagCompanyRequestCompaniesItemUntag",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "generatedName": "UntagCompanyRequestCompaniesItem",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "generatedName": "UntagCompanyRequestCompanies",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "You can tag a single company or a list of companies.",
        "generatedName": "UntagCompanyRequest",
        "title": "Untag Company Request Payload",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "update_article_request": {
        "generatedName": "UpdateArticleRequest",
        "title": "Update Article Request Payload",
        "description": "You can Update an Article",
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "updateArticleRequestTitle",
              "key": "title",
              "schema": {
                "generatedName": "updateArticleRequestTitle",
                "title": "Update Article Request Payload",
                "value": {
                  "description": "The title of the article.For multilingual articles, this will be the title of the default language's content.",
                  "schema": {
                    "example": "Thanks for everything",
                    "type": "string"
                  },
                  "generatedName": "UpdateArticleRequestTitle",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "updateArticleRequestDescription",
              "key": "description",
              "schema": {
                "generatedName": "updateArticleRequestDescription",
                "title": "Update Article Request Payload",
                "value": {
                  "description": "The description of the article. For multilingual articles, this will be the description of the default language's content.",
                  "schema": {
                    "example": "Description of the Article",
                    "type": "string"
                  },
                  "generatedName": "UpdateArticleRequestDescription",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "updateArticleRequestBody",
              "key": "body",
              "schema": {
                "generatedName": "updateArticleRequestBody",
                "title": "Update Article Request Payload",
                "value": {
                  "description": "The content of the article. For multilingual articles, this will be the body of the default language's content.",
                  "schema": {
                    "example": "<p>This is the body in html</p>",
                    "type": "string"
                  },
                  "generatedName": "UpdateArticleRequestBody",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "updateArticleRequestAuthorId",
              "key": "author_id",
              "schema": {
                "generatedName": "updateArticleRequestAuthorId",
                "title": "Update Article Request Payload",
                "value": {
                  "description": "The id of the author of the article. For multilingual articles, this will be the id of the author of the default language's content. Must be a teammate on the help center's workspace.",
                  "schema": {
                    "example": 1295,
                    "type": "int"
                  },
                  "generatedName": "UpdateArticleRequestAuthorId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "updateArticleRequestState",
              "key": "state",
              "schema": {
                "generatedName": "updateArticleRequestState",
                "title": "Update Article Request Payload",
                "value": {
                  "description": "Whether the article will be `published` or will be a `draft`. Defaults to draft. For multilingual articles, this will be the state of the default language's content.",
                  "generatedName": "UpdateArticleRequestState",
                  "values": [
                    {
                      "generatedName": "published",
                      "value": "published",
                      "casing": {}
                    },
                    {
                      "generatedName": "draft",
                      "value": "draft",
                      "casing": {}
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "enum"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "updateArticleRequestParentId",
              "key": "parent_id",
              "schema": {
                "generatedName": "updateArticleRequestParentId",
                "title": "Update Article Request Payload",
                "value": {
                  "description": "The id of the article's parent collection or section. An article without this field stands alone.",
                  "schema": {
                    "example": "18",
                    "type": "string"
                  },
                  "generatedName": "UpdateArticleRequestParentId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "updateArticleRequestParentType",
              "key": "parent_type",
              "schema": {
                "generatedName": "updateArticleRequestParentType",
                "title": "Update Article Request Payload",
                "value": {
                  "description": "The type of parent, which can either be a `collection` or `section`.",
                  "schema": {
                    "example": "collection",
                    "type": "string"
                  },
                  "generatedName": "UpdateArticleRequestParentType",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "updateArticleRequestTranslatedContent",
              "key": "translated_content",
              "schema": {
                "generatedName": "updateArticleRequestTranslatedContent",
                "title": "Update Article Request Payload",
                "value": {
                  "generatedName": "UpdateArticleRequestTranslatedContent",
                  "schema": "article_translated_content",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "You can Update an Article",
          "generatedName": "UpdateArticleRequest",
          "title": "Update Article Request Payload",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "groupName": [],
        "type": "nullable"
      },
      "update_collection_request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "updateCollectionRequestName",
            "key": "name",
            "schema": {
              "generatedName": "updateCollectionRequestName",
              "title": "Update Collection Request Payload",
              "value": {
                "description": "The name of the collection. For multilingual collections, this will be the name of the default language's content.",
                "schema": {
                  "example": "collection 51",
                  "type": "string"
                },
                "generatedName": "UpdateCollectionRequestName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateCollectionRequestDescription",
            "key": "description",
            "schema": {
              "generatedName": "updateCollectionRequestDescription",
              "title": "Update Collection Request Payload",
              "value": {
                "description": "The description of the collection. For multilingual collections, this will be the description of the default language's content.",
                "schema": {
                  "example": "English description",
                  "type": "string"
                },
                "generatedName": "UpdateCollectionRequestDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateCollectionRequestTranslatedContent",
            "key": "translated_content",
            "schema": {
              "generatedName": "updateCollectionRequestTranslatedContent",
              "title": "Update Collection Request Payload",
              "value": {
                "generatedName": "UpdateCollectionRequestTranslatedContent",
                "schema": "group_translated_content",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "updateCollectionRequestParentId",
            "key": "parent_id",
            "schema": {
              "generatedName": "updateCollectionRequestParentId",
              "title": "Update Collection Request Payload",
              "value": {
                "generatedName": "UpdateCollectionRequestParentId",
                "description": "The id of the parent collection. If `null` then it will be updated as the first level collection.",
                "value": {
                  "description": "The id of the parent collection. If `null` then it will be updated as the first level collection.",
                  "schema": {
                    "example": "6871118",
                    "type": "string"
                  },
                  "generatedName": "UpdateCollectionRequestParentId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "You can update a collection",
        "generatedName": "UpdateCollectionRequest",
        "title": "Update Collection Request Payload",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "update_contact_request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "updateContactRequestRole",
            "key": "role",
            "schema": {
              "generatedName": "updateContactRequestRole",
              "title": "Update Contact Request Payload",
              "value": {
                "description": "The role of the contact.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "UpdateContactRequestRole",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateContactRequestExternalId",
            "key": "external_id",
            "schema": {
              "generatedName": "updateContactRequestExternalId",
              "title": "Update Contact Request Payload",
              "value": {
                "description": "A unique identifier for the contact which is given to Intercom",
                "schema": {
                  "type": "string"
                },
                "generatedName": "UpdateContactRequestExternalId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateContactRequestEmail",
            "key": "email",
            "schema": {
              "generatedName": "updateContactRequestEmail",
              "title": "Update Contact Request Payload",
              "value": {
                "description": "The contacts email",
                "schema": {
                  "example": "jdoe@example.com",
                  "type": "string"
                },
                "generatedName": "UpdateContactRequestEmail",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateContactRequestPhone",
            "key": "phone",
            "schema": {
              "generatedName": "updateContactRequestPhone",
              "title": "Update Contact Request Payload",
              "value": {
                "generatedName": "UpdateContactRequestPhone",
                "description": "The contacts phone",
                "value": {
                  "description": "The contacts phone",
                  "schema": {
                    "example": "+353871234567",
                    "type": "string"
                  },
                  "generatedName": "UpdateContactRequestPhone",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateContactRequestName",
            "key": "name",
            "schema": {
              "generatedName": "updateContactRequestName",
              "title": "Update Contact Request Payload",
              "value": {
                "generatedName": "UpdateContactRequestName",
                "description": "The contacts name",
                "value": {
                  "description": "The contacts name",
                  "schema": {
                    "example": "John Doe",
                    "type": "string"
                  },
                  "generatedName": "UpdateContactRequestName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateContactRequestAvatar",
            "key": "avatar",
            "schema": {
              "generatedName": "updateContactRequestAvatar",
              "title": "Update Contact Request Payload",
              "value": {
                "generatedName": "UpdateContactRequestAvatar",
                "description": "An image URL containing the avatar of a contact",
                "value": {
                  "description": "An image URL containing the avatar of a contact",
                  "schema": {
                    "example": "https://www.example.com/avatar_image.jpg",
                    "type": "string"
                  },
                  "generatedName": "UpdateContactRequestAvatar",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateContactRequestSignedUpAt",
            "key": "signed_up_at",
            "schema": {
              "generatedName": "updateContactRequestSignedUpAt",
              "title": "Update Contact Request Payload",
              "value": {
                "generatedName": "UpdateContactRequestSignedUpAt",
                "description": "The time specified for when a contact signed up",
                "value": {
                  "description": "The time specified for when a contact signed up",
                  "schema": {
                    "example": 1571672154,
                    "type": "int"
                  },
                  "generatedName": "UpdateContactRequestSignedUpAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateContactRequestLastSeenAt",
            "key": "last_seen_at",
            "schema": {
              "generatedName": "updateContactRequestLastSeenAt",
              "title": "Update Contact Request Payload",
              "value": {
                "generatedName": "UpdateContactRequestLastSeenAt",
                "description": "The time when the contact was last seen (either where the Intercom Messenger was installed or when specified manually)",
                "value": {
                  "description": "The time when the contact was last seen (either where the Intercom Messenger was installed or when specified manually)",
                  "schema": {
                    "example": 1571672154,
                    "type": "int"
                  },
                  "generatedName": "UpdateContactRequestLastSeenAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateContactRequestOwnerId",
            "key": "owner_id",
            "schema": {
              "generatedName": "updateContactRequestOwnerId",
              "title": "Update Contact Request Payload",
              "value": {
                "generatedName": "UpdateContactRequestOwnerId",
                "description": "The id of an admin that has been assigned account ownership of the contact",
                "value": {
                  "description": "The id of an admin that has been assigned account ownership of the contact",
                  "schema": {
                    "example": 123,
                    "type": "int"
                  },
                  "generatedName": "UpdateContactRequestOwnerId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateContactRequestUnsubscribedFromEmails",
            "key": "unsubscribed_from_emails",
            "schema": {
              "generatedName": "updateContactRequestUnsubscribedFromEmails",
              "title": "Update Contact Request Payload",
              "value": {
                "generatedName": "UpdateContactRequestUnsubscribedFromEmails",
                "description": "Whether the contact is unsubscribed from emails",
                "value": {
                  "description": "Whether the contact is unsubscribed from emails",
                  "schema": {
                    "example": true,
                    "type": "boolean"
                  },
                  "generatedName": "UpdateContactRequestUnsubscribedFromEmails",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateContactRequestCustomAttributes",
            "key": "custom_attributes",
            "schema": {
              "generatedName": "updateContactRequestCustomAttributes",
              "title": "Update Contact Request Payload",
              "value": {
                "generatedName": "UpdateContactRequestCustomAttributes",
                "description": "The custom attributes which are set for the contact",
                "value": {
                  "description": "The custom attributes which are set for the contact",
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "UpdateContactRequestCustomAttributesKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "UpdateContactRequestCustomAttributesValue",
                    "type": "unknown"
                  },
                  "generatedName": "UpdateContactRequestCustomAttributes",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "You can update a contact",
        "generatedName": "UpdateContactRequest",
        "title": "Update Contact Request Payload",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "update_conversation_request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "updateConversationRequestRead",
            "key": "read",
            "schema": {
              "generatedName": "updateConversationRequestRead",
              "title": "Update Conversation Request",
              "value": {
                "description": "Mark a conversation as read within Intercom.",
                "schema": {
                  "example": true,
                  "type": "boolean"
                },
                "generatedName": "UpdateConversationRequestRead",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateConversationRequestCustomAttributes",
            "key": "custom_attributes",
            "schema": {
              "generatedName": "updateConversationRequestCustomAttributes",
              "title": "Update Conversation Request",
              "value": {
                "generatedName": "UpdateConversationRequestCustomAttributes",
                "schema": "custom_attributes",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Payload of the request to update a conversation",
        "generatedName": "UpdateConversationRequest",
        "title": "Update Conversation Request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "update_data_attribute_request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "updateDataAttributeRequestArchived",
            "key": "archived",
            "schema": {
              "generatedName": "updateDataAttributeRequestArchived",
              "title": "Update Data Attribute Request",
              "value": {
                "description": "Whether the attribute is to be archived or not.",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "UpdateDataAttributeRequestArchived",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateDataAttributeRequestDescription",
            "key": "description",
            "schema": {
              "generatedName": "updateDataAttributeRequestDescription",
              "title": "Update Data Attribute Request",
              "value": {
                "description": "The readable description you see in the UI for the attribute.",
                "schema": {
                  "example": "My Data Attribute Description",
                  "type": "string"
                },
                "generatedName": "UpdateDataAttributeRequestDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateDataAttributeRequestOptions",
            "key": "options",
            "schema": {
              "generatedName": "updateDataAttributeRequestOptions",
              "title": "Update Data Attribute Request",
              "value": {
                "description": "To create list attributes. Provide a set of hashes with `value` as the key of the options you want to make. `data_type` must be `string`.",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "UpdateDataAttributeRequestOptionsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "UpdateDataAttributeRequestOptions",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateDataAttributeRequestMessengerWritable",
            "key": "messenger_writable",
            "schema": {
              "generatedName": "updateDataAttributeRequestMessengerWritable",
              "title": "Update Data Attribute Request",
              "value": {
                "description": "Can this attribute be updated by the Messenger",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "UpdateDataAttributeRequestMessengerWritable",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "",
        "generatedName": "UpdateDataAttributeRequest",
        "title": "Update Data Attribute Request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "update_ticket_request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "updateTicketRequestTicketAttributes",
            "key": "ticket_attributes",
            "schema": {
              "generatedName": "updateTicketRequestTicketAttributes",
              "title": "Update Ticket Request Payload",
              "value": {
                "description": "The attributes set on the ticket.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "UpdateTicketRequestTicketAttributesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "UpdateTicketRequestTicketAttributesValue",
                  "type": "unknown"
                },
                "generatedName": "UpdateTicketRequestTicketAttributes",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateTicketRequestState",
            "key": "state",
            "schema": {
              "generatedName": "updateTicketRequestState",
              "title": "Update Ticket Request Payload",
              "value": {
                "description": "The state of the ticket.",
                "generatedName": "UpdateTicketRequestState",
                "values": [
                  {
                    "generatedName": "in_progress",
                    "value": "in_progress",
                    "casing": {}
                  },
                  {
                    "generatedName": "waiting_on_customer",
                    "value": "waiting_on_customer",
                    "casing": {}
                  },
                  {
                    "generatedName": "resolved",
                    "value": "resolved",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateTicketRequestOpen",
            "key": "open",
            "schema": {
              "generatedName": "updateTicketRequestOpen",
              "title": "Update Ticket Request Payload",
              "value": {
                "description": "Specify if a ticket is open. Set to false to close a ticket. Closing a ticket will also unsnooze it.",
                "schema": {
                  "example": true,
                  "type": "boolean"
                },
                "generatedName": "UpdateTicketRequestOpen",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateTicketRequestIsShared",
            "key": "is_shared",
            "schema": {
              "generatedName": "updateTicketRequestIsShared",
              "title": "Update Ticket Request Payload",
              "value": {
                "description": "Specify whether the ticket is visible to users.",
                "schema": {
                  "example": true,
                  "type": "boolean"
                },
                "generatedName": "UpdateTicketRequestIsShared",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateTicketRequestSnoozedUntil",
            "key": "snoozed_until",
            "schema": {
              "generatedName": "updateTicketRequestSnoozedUntil",
              "title": "Update Ticket Request Payload",
              "value": {
                "description": "The time you want the ticket to reopen.",
                "schema": {
                  "example": 1673609604,
                  "type": "int"
                },
                "generatedName": "UpdateTicketRequestSnoozedUntil",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateTicketRequestAssignment",
            "key": "assignment",
            "schema": {
              "generatedName": "updateTicketRequestAssignment",
              "title": "Update Ticket Request Payload",
              "value": {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "updateTicketRequestAssignmentAdminId",
                    "key": "admin_id",
                    "schema": {
                      "generatedName": "updateTicketRequestAssignmentAdminId",
                      "value": {
                        "description": "The ID of the admin performing the action.",
                        "schema": {
                          "example": "123",
                          "type": "string"
                        },
                        "generatedName": "UpdateTicketRequestAssignmentAdminId",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "updateTicketRequestAssignmentAssigneeId",
                    "key": "assignee_id",
                    "schema": {
                      "generatedName": "updateTicketRequestAssignmentAssigneeId",
                      "value": {
                        "description": "The ID of the admin or team to which the ticket is assigned. Set this 0 to unassign it.",
                        "schema": {
                          "example": "123",
                          "type": "string"
                        },
                        "generatedName": "UpdateTicketRequestAssignmentAssigneeId",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "generatedName": "UpdateTicketRequestAssignment",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "You can update a Ticket",
        "generatedName": "UpdateTicketRequest",
        "title": "Update Ticket Request Payload",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "update_ticket_type_attribute_request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "updateTicketTypeAttributeRequestName",
            "key": "name",
            "schema": {
              "generatedName": "updateTicketTypeAttributeRequestName",
              "title": "Update Ticket Type Attribute Request Payload",
              "value": {
                "description": "The name of the ticket type attribute",
                "schema": {
                  "example": "Bug Priority",
                  "type": "string"
                },
                "generatedName": "UpdateTicketTypeAttributeRequestName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateTicketTypeAttributeRequestDescription",
            "key": "description",
            "schema": {
              "generatedName": "updateTicketTypeAttributeRequestDescription",
              "title": "Update Ticket Type Attribute Request Payload",
              "value": {
                "description": "The description of the attribute presented to the teammate or contact",
                "schema": {
                  "example": "Priority level of the bug",
                  "type": "string"
                },
                "generatedName": "UpdateTicketTypeAttributeRequestDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateTicketTypeAttributeRequestRequiredToCreate",
            "key": "required_to_create",
            "schema": {
              "generatedName": "updateTicketTypeAttributeRequestRequiredToCreate",
              "title": "Update Ticket Type Attribute Request Payload",
              "value": {
                "description": "Whether the attribute is required to be filled in when teammates are creating the ticket in Inbox.",
                "schema": {
                  "default": false,
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "UpdateTicketTypeAttributeRequestRequiredToCreate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateTicketTypeAttributeRequestRequiredToCreateForContacts",
            "key": "required_to_create_for_contacts",
            "schema": {
              "generatedName": "updateTicketTypeAttributeRequestRequiredToCreateForContacts",
              "title": "Update Ticket Type Attribute Request Payload",
              "value": {
                "description": "Whether the attribute is required to be filled in when contacts are creating the ticket in Messenger.",
                "schema": {
                  "default": false,
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "UpdateTicketTypeAttributeRequestRequiredToCreateForContacts",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateTicketTypeAttributeRequestVisibleOnCreate",
            "key": "visible_on_create",
            "schema": {
              "generatedName": "updateTicketTypeAttributeRequestVisibleOnCreate",
              "title": "Update Ticket Type Attribute Request Payload",
              "value": {
                "description": "Whether the attribute is visible to teammates when creating a ticket in Inbox.",
                "schema": {
                  "default": true,
                  "example": true,
                  "type": "boolean"
                },
                "generatedName": "UpdateTicketTypeAttributeRequestVisibleOnCreate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateTicketTypeAttributeRequestVisibleToContacts",
            "key": "visible_to_contacts",
            "schema": {
              "generatedName": "updateTicketTypeAttributeRequestVisibleToContacts",
              "title": "Update Ticket Type Attribute Request Payload",
              "value": {
                "description": "Whether the attribute is visible to contacts when creating a ticket in Messenger.",
                "schema": {
                  "default": true,
                  "example": true,
                  "type": "boolean"
                },
                "generatedName": "UpdateTicketTypeAttributeRequestVisibleToContacts",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateTicketTypeAttributeRequestMultiline",
            "key": "multiline",
            "schema": {
              "generatedName": "updateTicketTypeAttributeRequestMultiline",
              "title": "Update Ticket Type Attribute Request Payload",
              "value": {
                "description": "Whether the attribute allows multiple lines of text (only applicable to string attributes)",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "UpdateTicketTypeAttributeRequestMultiline",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateTicketTypeAttributeRequestListItems",
            "key": "list_items",
            "schema": {
              "generatedName": "updateTicketTypeAttributeRequestListItems",
              "title": "Update Ticket Type Attribute Request Payload",
              "value": {
                "description": "A comma delimited list of items for the attribute value (only applicable to list attributes)",
                "schema": {
                  "example": "Low Priority,Medium Priority,High Priority",
                  "type": "string"
                },
                "generatedName": "UpdateTicketTypeAttributeRequestListItems",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateTicketTypeAttributeRequestAllowMultipleValues",
            "key": "allow_multiple_values",
            "schema": {
              "generatedName": "updateTicketTypeAttributeRequestAllowMultipleValues",
              "title": "Update Ticket Type Attribute Request Payload",
              "value": {
                "description": "Whether the attribute allows multiple files to be attached to it (only applicable to file attributes)",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "UpdateTicketTypeAttributeRequestAllowMultipleValues",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateTicketTypeAttributeRequestArchived",
            "key": "archived",
            "schema": {
              "generatedName": "updateTicketTypeAttributeRequestArchived",
              "title": "Update Ticket Type Attribute Request Payload",
              "value": {
                "description": "Whether the attribute should be archived and not shown during creation of the ticket (it will still be present on previously created tickets)",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "UpdateTicketTypeAttributeRequestArchived",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "You can update a Ticket Type Attribute",
        "generatedName": "UpdateTicketTypeAttributeRequest",
        "title": "Update Ticket Type Attribute Request Payload",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "update_ticket_type_request": {
        "generatedName": "UpdateTicketTypeRequest",
        "title": "Update Ticket Type Request Payload",
        "description": "The request payload for updating a ticket type.\nYou can copy the `icon` property for your ticket type from [Twemoji Cheatsheet](https://twemoji-cheatsheet.vercel.app/)\n",
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "updateTicketTypeRequestName",
              "key": "name",
              "schema": {
                "generatedName": "updateTicketTypeRequestName",
                "title": "Update Ticket Type Request Payload",
                "value": {
                  "description": "The name of the ticket type.",
                  "schema": {
                    "example": "Bug",
                    "type": "string"
                  },
                  "generatedName": "UpdateTicketTypeRequestName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "updateTicketTypeRequestDescription",
              "key": "description",
              "schema": {
                "generatedName": "updateTicketTypeRequestDescription",
                "title": "Update Ticket Type Request Payload",
                "value": {
                  "description": "The description of the ticket type.",
                  "schema": {
                    "example": "A bug has been occured",
                    "type": "string"
                  },
                  "generatedName": "UpdateTicketTypeRequestDescription",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "updateTicketTypeRequestCategory",
              "key": "category",
              "schema": {
                "generatedName": "updateTicketTypeRequestCategory",
                "title": "Update Ticket Type Request Payload",
                "value": {
                  "description": "Category of the Ticket Type.",
                  "generatedName": "UpdateTicketTypeRequestCategory",
                  "values": [
                    {
                      "generatedName": "Customer",
                      "value": "Customer",
                      "casing": {}
                    },
                    {
                      "generatedName": "BackOffice",
                      "value": "Back-office",
                      "casing": {}
                    },
                    {
                      "generatedName": "Tracker",
                      "value": "Tracker",
                      "casing": {}
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "enum"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "updateTicketTypeRequestIcon",
              "key": "icon",
              "schema": {
                "generatedName": "updateTicketTypeRequestIcon",
                "title": "Update Ticket Type Request Payload",
                "value": {
                  "description": "The icon of the ticket type.",
                  "schema": {
                    "default": "🎟️",
                    "example": "🐞",
                    "type": "string"
                  },
                  "generatedName": "UpdateTicketTypeRequestIcon",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "updateTicketTypeRequestArchived",
              "key": "archived",
              "schema": {
                "generatedName": "updateTicketTypeRequestArchived",
                "title": "Update Ticket Type Request Payload",
                "value": {
                  "description": "The archived status of the ticket type.",
                  "schema": {
                    "example": false,
                    "type": "boolean"
                  },
                  "generatedName": "UpdateTicketTypeRequestArchived",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "updateTicketTypeRequestIsInternal",
              "key": "is_internal",
              "schema": {
                "generatedName": "updateTicketTypeRequestIsInternal",
                "title": "Update Ticket Type Request Payload",
                "value": {
                  "description": "Whether the tickets associated with this ticket type are intended for internal use only or will be shared with customers. This is currently a limited attribute.",
                  "schema": {
                    "default": false,
                    "example": false,
                    "type": "boolean"
                  },
                  "generatedName": "UpdateTicketTypeRequestIsInternal",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "The request payload for updating a ticket type.\nYou can copy the `icon` property for your ticket type from [Twemoji Cheatsheet](https://twemoji-cheatsheet.vercel.app/)\n",
          "generatedName": "UpdateTicketTypeRequest",
          "title": "Update Ticket Type Request Payload",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "groupName": [],
        "type": "nullable"
      },
      "update_visitor_request": {
        "generatedName": "UpdateVisitorRequestOne",
        "type": "unknown"
      },
      "visitor": {
        "generatedName": "Visitor",
        "nameOverride": "Visitor",
        "title": "Visitor",
        "description": "Visitors are useful for representing anonymous people that have not yet been identified. They usually represent website visitors. Visitors are not visible in Intercom platform. The Visitors resource provides methods to fetch, update, convert and delete.",
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "visitorType",
              "key": "type",
              "schema": {
                "generatedName": "visitorType",
                "nameOverride": "Visitor",
                "title": "Visitor",
                "value": {
                  "description": "Value is 'visitor'",
                  "schema": {
                    "default": "visitor",
                    "example": "visitor",
                    "type": "string"
                  },
                  "generatedName": "VisitorType",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "visitorId",
              "key": "id",
              "schema": {
                "generatedName": "visitorId",
                "nameOverride": "Visitor",
                "title": "Visitor",
                "value": {
                  "description": "The Intercom defined id representing the Visitor.",
                  "schema": {
                    "example": "530370b477ad7120001d",
                    "type": "string"
                  },
                  "generatedName": "VisitorId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "visitorUserId",
              "key": "user_id",
              "schema": {
                "generatedName": "visitorUserId",
                "nameOverride": "Visitor",
                "title": "Visitor",
                "value": {
                  "description": "Automatically generated identifier for the Visitor.",
                  "schema": {
                    "example": "8a88a590-e1c3-41e2-a502-e0649dbf721c",
                    "type": "string"
                  },
                  "generatedName": "VisitorUserId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "visitorAnonymous",
              "key": "anonymous",
              "schema": {
                "generatedName": "visitorAnonymous",
                "nameOverride": "Visitor",
                "title": "Visitor",
                "value": {
                  "description": "Identifies if this visitor is anonymous.",
                  "schema": {
                    "example": false,
                    "type": "boolean"
                  },
                  "generatedName": "VisitorAnonymous",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "visitorEmail",
              "key": "email",
              "schema": {
                "generatedName": "visitorEmail",
                "nameOverride": "Visitor",
                "title": "Visitor",
                "value": {
                  "description": "The email of the visitor.",
                  "schema": {
                    "format": "email",
                    "example": "jane.doe@example.com",
                    "type": "string"
                  },
                  "generatedName": "VisitorEmail",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "visitorPhone",
              "key": "phone",
              "schema": {
                "generatedName": "visitorPhone",
                "nameOverride": "Visitor",
                "title": "Visitor",
                "value": {
                  "generatedName": "VisitorPhone",
                  "description": "The phone number of the visitor.",
                  "value": {
                    "description": "The phone number of the visitor.",
                    "schema": {
                      "example": "555-555-5555",
                      "type": "string"
                    },
                    "generatedName": "VisitorPhone",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "visitorName",
              "key": "name",
              "schema": {
                "generatedName": "visitorName",
                "nameOverride": "Visitor",
                "title": "Visitor",
                "value": {
                  "generatedName": "VisitorName",
                  "description": "The name of the visitor.",
                  "value": {
                    "description": "The name of the visitor.",
                    "schema": {
                      "example": "Jane Doe",
                      "type": "string"
                    },
                    "generatedName": "VisitorName",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "visitorPseudonym",
              "key": "pseudonym",
              "schema": {
                "generatedName": "visitorPseudonym",
                "nameOverride": "Visitor",
                "title": "Visitor",
                "value": {
                  "generatedName": "VisitorPseudonym",
                  "description": "The pseudonym of the visitor.",
                  "value": {
                    "description": "The pseudonym of the visitor.",
                    "schema": {
                      "example": "Red Duck from Dublin",
                      "type": "string"
                    },
                    "generatedName": "VisitorPseudonym",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "visitorAvatar",
              "key": "avatar",
              "schema": {
                "generatedName": "visitorAvatar",
                "nameOverride": "Visitor",
                "title": "Visitor",
                "value": {
                  "allOf": [],
                  "properties": [
                    {
                      "conflict": {},
                      "generatedName": "visitorAvatarType",
                      "key": "type",
                      "schema": {
                        "generatedName": "visitorAvatarType",
                        "value": {
                          "description": "",
                          "schema": {
                            "default": "avatar",
                            "example": "avatar",
                            "type": "string"
                          },
                          "generatedName": "VisitorAvatarType",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "visitorAvatarImageUrl",
                      "key": "image_url",
                      "schema": {
                        "generatedName": "visitorAvatarImageUrl",
                        "value": {
                          "generatedName": "VisitorAvatarImageUrl",
                          "description": "This object represents the avatar associated with the visitor.",
                          "value": {
                            "description": "This object represents the avatar associated with the visitor.",
                            "schema": {
                              "format": "uri",
                              "example": "https://example.com/avatar.png",
                              "type": "string"
                            },
                            "generatedName": "VisitorAvatarImageUrl",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "nullable"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    }
                  ],
                  "allOfPropertyConflicts": [],
                  "generatedName": "VisitorAvatar",
                  "groupName": [],
                  "additionalProperties": false,
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "object"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "visitorAppId",
              "key": "app_id",
              "schema": {
                "generatedName": "visitorAppId",
                "nameOverride": "Visitor",
                "title": "Visitor",
                "value": {
                  "description": "The id of the app the visitor is associated with.",
                  "schema": {
                    "example": "hfi1bx4l",
                    "type": "string"
                  },
                  "generatedName": "VisitorAppId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "visitorCompanies",
              "key": "companies",
              "schema": {
                "generatedName": "visitorCompanies",
                "nameOverride": "Visitor",
                "title": "Visitor",
                "value": {
                  "allOf": [],
                  "properties": [
                    {
                      "conflict": {},
                      "generatedName": "visitorCompaniesType",
                      "key": "type",
                      "schema": {
                        "generatedName": "visitorCompaniesType",
                        "value": {
                          "description": "The type of the object",
                          "value": {
                            "value": "company.list",
                            "type": "string"
                          },
                          "generatedName": "VisitorCompaniesType",
                          "groupName": [],
                          "type": "literal"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "visitorCompaniesCompanies",
                      "key": "companies",
                      "schema": {
                        "generatedName": "visitorCompaniesCompanies",
                        "value": {
                          "value": {
                            "generatedName": "VisitorCompaniesCompaniesItem",
                            "schema": "company",
                            "source": {
                              "file": "../openapi.yml",
                              "type": "openapi"
                            },
                            "type": "reference"
                          },
                          "generatedName": "VisitorCompaniesCompanies",
                          "groupName": [],
                          "type": "array"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    }
                  ],
                  "allOfPropertyConflicts": [],
                  "generatedName": "VisitorCompanies",
                  "groupName": [],
                  "additionalProperties": false,
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "object"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "visitorLocationData",
              "key": "location_data",
              "schema": {
                "generatedName": "visitorLocationData",
                "nameOverride": "Visitor",
                "title": "Visitor",
                "value": {
                  "allOf": [],
                  "properties": [
                    {
                      "conflict": {},
                      "generatedName": "visitorLocationDataType",
                      "key": "type",
                      "schema": {
                        "generatedName": "visitorLocationDataType",
                        "value": {
                          "description": "",
                          "schema": {
                            "default": "location_data",
                            "example": "location_data",
                            "type": "string"
                          },
                          "generatedName": "VisitorLocationDataType",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "visitorLocationDataCityName",
                      "key": "city_name",
                      "schema": {
                        "generatedName": "visitorLocationDataCityName",
                        "value": {
                          "description": "The city name of the visitor.",
                          "schema": {
                            "example": "Dublin",
                            "type": "string"
                          },
                          "generatedName": "VisitorLocationDataCityName",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "visitorLocationDataContinentCode",
                      "key": "continent_code",
                      "schema": {
                        "generatedName": "visitorLocationDataContinentCode",
                        "value": {
                          "description": "The continent code of the visitor.",
                          "schema": {
                            "example": "EU",
                            "type": "string"
                          },
                          "generatedName": "VisitorLocationDataContinentCode",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "visitorLocationDataCountryCode",
                      "key": "country_code",
                      "schema": {
                        "generatedName": "visitorLocationDataCountryCode",
                        "value": {
                          "description": "The country code of the visitor.",
                          "schema": {
                            "example": "IRL",
                            "type": "string"
                          },
                          "generatedName": "VisitorLocationDataCountryCode",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "visitorLocationDataCountryName",
                      "key": "country_name",
                      "schema": {
                        "generatedName": "visitorLocationDataCountryName",
                        "value": {
                          "description": "The country name of the visitor.",
                          "schema": {
                            "example": "Ireland",
                            "type": "string"
                          },
                          "generatedName": "VisitorLocationDataCountryName",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "visitorLocationDataPostalCode",
                      "key": "postal_code",
                      "schema": {
                        "generatedName": "visitorLocationDataPostalCode",
                        "value": {
                          "description": "The postal code of the visitor.",
                          "schema": {
                            "example": "D02 N960",
                            "type": "string"
                          },
                          "generatedName": "VisitorLocationDataPostalCode",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "visitorLocationDataRegionName",
                      "key": "region_name",
                      "schema": {
                        "generatedName": "visitorLocationDataRegionName",
                        "value": {
                          "description": "The region name of the visitor.",
                          "schema": {
                            "example": "Leinster",
                            "type": "string"
                          },
                          "generatedName": "VisitorLocationDataRegionName",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "visitorLocationDataTimezone",
                      "key": "timezone",
                      "schema": {
                        "generatedName": "visitorLocationDataTimezone",
                        "value": {
                          "description": "The timezone of the visitor.",
                          "schema": {
                            "example": "Europe/Dublin",
                            "type": "string"
                          },
                          "generatedName": "VisitorLocationDataTimezone",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    }
                  ],
                  "allOfPropertyConflicts": [],
                  "generatedName": "VisitorLocationData",
                  "groupName": [],
                  "additionalProperties": false,
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "object"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "visitorLasRequestAt",
              "key": "las_request_at",
              "schema": {
                "generatedName": "visitorLasRequestAt",
                "nameOverride": "Visitor",
                "title": "Visitor",
                "value": {
                  "description": "The time the Lead last recorded making a request.",
                  "schema": {
                    "example": 1663597260,
                    "type": "int"
                  },
                  "generatedName": "VisitorLasRequestAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "visitorCreatedAt",
              "key": "created_at",
              "schema": {
                "generatedName": "visitorCreatedAt",
                "nameOverride": "Visitor",
                "title": "Visitor",
                "value": {
                  "description": "The time the Visitor was added to Intercom.",
                  "schema": {
                    "example": 1663597223,
                    "type": "int"
                  },
                  "generatedName": "VisitorCreatedAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "visitorRemoteCreatedAt",
              "key": "remote_created_at",
              "schema": {
                "generatedName": "visitorRemoteCreatedAt",
                "nameOverride": "Visitor",
                "title": "Visitor",
                "value": {
                  "description": "The time the Visitor was added to Intercom.",
                  "schema": {
                    "example": 1663597223,
                    "type": "int"
                  },
                  "generatedName": "VisitorRemoteCreatedAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "visitorSignedUpAt",
              "key": "signed_up_at",
              "schema": {
                "generatedName": "visitorSignedUpAt",
                "nameOverride": "Visitor",
                "title": "Visitor",
                "value": {
                  "description": "The time the Visitor signed up for your product.",
                  "schema": {
                    "example": 1663597223,
                    "type": "int"
                  },
                  "generatedName": "VisitorSignedUpAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "visitorUpdatedAt",
              "key": "updated_at",
              "schema": {
                "generatedName": "visitorUpdatedAt",
                "nameOverride": "Visitor",
                "title": "Visitor",
                "value": {
                  "description": "The last time the Visitor was updated.",
                  "schema": {
                    "example": 1663597260,
                    "type": "int"
                  },
                  "generatedName": "VisitorUpdatedAt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "visitorSessionCount",
              "key": "session_count",
              "schema": {
                "generatedName": "visitorSessionCount",
                "nameOverride": "Visitor",
                "title": "Visitor",
                "value": {
                  "description": "The number of sessions the Visitor has had.",
                  "schema": {
                    "example": 1,
                    "type": "int"
                  },
                  "generatedName": "VisitorSessionCount",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "visitorSocialProfiles",
              "key": "social_profiles",
              "schema": {
                "generatedName": "visitorSocialProfiles",
                "nameOverride": "Visitor",
                "title": "Visitor",
                "value": {
                  "allOf": [],
                  "properties": [
                    {
                      "conflict": {},
                      "generatedName": "visitorSocialProfilesType",
                      "key": "type",
                      "schema": {
                        "generatedName": "visitorSocialProfilesType",
                        "value": {
                          "description": "The type of the object",
                          "value": {
                            "value": "social_profile.list",
                            "type": "string"
                          },
                          "generatedName": "VisitorSocialProfilesType",
                          "groupName": [],
                          "type": "literal"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "visitorSocialProfilesSocialProfiles",
                      "key": "social_profiles",
                      "schema": {
                        "generatedName": "visitorSocialProfilesSocialProfiles",
                        "value": {
                          "value": {
                            "schema": {
                              "type": "string"
                            },
                            "generatedName": "VisitorSocialProfilesSocialProfilesItem",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "generatedName": "VisitorSocialProfilesSocialProfiles",
                          "groupName": [],
                          "type": "array"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    }
                  ],
                  "allOfPropertyConflicts": [],
                  "generatedName": "VisitorSocialProfiles",
                  "groupName": [],
                  "additionalProperties": false,
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "object"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "visitorOwnerId",
              "key": "owner_id",
              "schema": {
                "generatedName": "visitorOwnerId",
                "nameOverride": "Visitor",
                "title": "Visitor",
                "value": {
                  "generatedName": "VisitorOwnerId",
                  "description": "The id of the admin that owns the Visitor.",
                  "value": {
                    "description": "The id of the admin that owns the Visitor.",
                    "schema": {
                      "example": "5169261",
                      "type": "string"
                    },
                    "generatedName": "VisitorOwnerId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "visitorUnsubscribedFromEmails",
              "key": "unsubscribed_from_emails",
              "schema": {
                "generatedName": "visitorUnsubscribedFromEmails",
                "nameOverride": "Visitor",
                "title": "Visitor",
                "value": {
                  "description": "Whether the Visitor is unsubscribed from emails.",
                  "schema": {
                    "example": false,
                    "type": "boolean"
                  },
                  "generatedName": "VisitorUnsubscribedFromEmails",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "visitorMarkedEmailAsSpam",
              "key": "marked_email_as_spam",
              "schema": {
                "generatedName": "visitorMarkedEmailAsSpam",
                "nameOverride": "Visitor",
                "title": "Visitor",
                "value": {
                  "description": "Identifies if this visitor has marked an email as spam.",
                  "schema": {
                    "example": false,
                    "type": "boolean"
                  },
                  "generatedName": "VisitorMarkedEmailAsSpam",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "visitorHasHardBounced",
              "key": "has_hard_bounced",
              "schema": {
                "generatedName": "visitorHasHardBounced",
                "nameOverride": "Visitor",
                "title": "Visitor",
                "value": {
                  "description": "Identifies if this visitor has had a hard bounce.",
                  "schema": {
                    "example": false,
                    "type": "boolean"
                  },
                  "generatedName": "VisitorHasHardBounced",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "visitorTags",
              "key": "tags",
              "schema": {
                "generatedName": "visitorTags",
                "nameOverride": "Visitor",
                "title": "Visitor",
                "value": {
                  "allOf": [],
                  "properties": [
                    {
                      "conflict": {},
                      "generatedName": "visitorTagsType",
                      "key": "type",
                      "schema": {
                        "generatedName": "visitorTagsType",
                        "value": {
                          "description": "The type of the object",
                          "value": {
                            "value": "tag.list",
                            "type": "string"
                          },
                          "generatedName": "VisitorTagsType",
                          "groupName": [],
                          "type": "literal"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "visitorTagsTags",
                      "key": "tags",
                      "schema": {
                        "generatedName": "visitorTagsTags",
                        "value": {
                          "value": {
                            "allOf": [],
                            "properties": [
                              {
                                "conflict": {},
                                "generatedName": "visitorTagsTagsItemType",
                                "key": "type",
                                "schema": {
                                  "generatedName": "visitorTagsTagsItemType",
                                  "value": {
                                    "description": "The type of the object",
                                    "value": {
                                      "value": "tag",
                                      "type": "string"
                                    },
                                    "generatedName": "VisitorTagsTagsItemType",
                                    "groupName": [],
                                    "type": "literal"
                                  },
                                  "groupName": [],
                                  "type": "optional"
                                },
                                "audiences": []
                              },
                              {
                                "conflict": {},
                                "generatedName": "visitorTagsTagsItemId",
                                "key": "id",
                                "schema": {
                                  "generatedName": "visitorTagsTagsItemId",
                                  "value": {
                                    "description": "The id of the tag.",
                                    "schema": {
                                      "example": "8482",
                                      "type": "string"
                                    },
                                    "generatedName": "VisitorTagsTagsItemId",
                                    "groupName": [],
                                    "type": "primitive"
                                  },
                                  "groupName": [],
                                  "type": "optional"
                                },
                                "audiences": []
                              },
                              {
                                "conflict": {},
                                "generatedName": "visitorTagsTagsItemName",
                                "key": "name",
                                "schema": {
                                  "generatedName": "visitorTagsTagsItemName",
                                  "value": {
                                    "description": "The name of the tag.",
                                    "schema": {
                                      "example": "tag_name",
                                      "type": "string"
                                    },
                                    "generatedName": "VisitorTagsTagsItemName",
                                    "groupName": [],
                                    "type": "primitive"
                                  },
                                  "groupName": [],
                                  "type": "optional"
                                },
                                "audiences": []
                              }
                            ],
                            "allOfPropertyConflicts": [],
                            "generatedName": "VisitorTagsTagsItem",
                            "groupName": [],
                            "additionalProperties": false,
                            "source": {
                              "file": "../openapi.yml",
                              "type": "openapi"
                            },
                            "type": "object"
                          },
                          "generatedName": "VisitorTagsTags",
                          "groupName": [],
                          "type": "array"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    }
                  ],
                  "allOfPropertyConflicts": [],
                  "generatedName": "VisitorTags",
                  "groupName": [],
                  "additionalProperties": false,
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "object"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "visitorSegments",
              "key": "segments",
              "schema": {
                "generatedName": "visitorSegments",
                "nameOverride": "Visitor",
                "title": "Visitor",
                "value": {
                  "allOf": [],
                  "properties": [
                    {
                      "conflict": {},
                      "generatedName": "visitorSegmentsType",
                      "key": "type",
                      "schema": {
                        "generatedName": "visitorSegmentsType",
                        "value": {
                          "description": "The type of the object",
                          "value": {
                            "value": "segment.list",
                            "type": "string"
                          },
                          "generatedName": "VisitorSegmentsType",
                          "groupName": [],
                          "type": "literal"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "visitorSegmentsSegments",
                      "key": "segments",
                      "schema": {
                        "generatedName": "visitorSegmentsSegments",
                        "value": {
                          "value": {
                            "schema": {
                              "type": "string"
                            },
                            "generatedName": "VisitorSegmentsSegmentsItem",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "generatedName": "VisitorSegmentsSegments",
                          "groupName": [],
                          "type": "array"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    }
                  ],
                  "allOfPropertyConflicts": [],
                  "generatedName": "VisitorSegments",
                  "groupName": [],
                  "additionalProperties": false,
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "object"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "visitorCustomAttributes",
              "key": "custom_attributes",
              "schema": {
                "generatedName": "visitorCustomAttributes",
                "nameOverride": "Visitor",
                "title": "Visitor",
                "value": {
                  "description": "The custom attributes you have set on the Visitor.",
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "VisitorCustomAttributesKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "VisitorCustomAttributesValue",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "VisitorCustomAttributes",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "visitorReferrer",
              "key": "referrer",
              "schema": {
                "generatedName": "visitorReferrer",
                "nameOverride": "Visitor",
                "title": "Visitor",
                "value": {
                  "generatedName": "VisitorReferrer",
                  "description": "The referer of the visitor.",
                  "value": {
                    "description": "The referer of the visitor.",
                    "schema": {
                      "example": "https://www.google.com/",
                      "type": "string"
                    },
                    "generatedName": "VisitorReferrer",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "visitorUtmCampaign",
              "key": "utm_campaign",
              "schema": {
                "generatedName": "visitorUtmCampaign",
                "nameOverride": "Visitor",
                "title": "Visitor",
                "value": {
                  "generatedName": "VisitorUtmCampaign",
                  "description": "The utm_campaign of the visitor.",
                  "value": {
                    "description": "The utm_campaign of the visitor.",
                    "schema": {
                      "example": "intercom-link",
                      "type": "string"
                    },
                    "generatedName": "VisitorUtmCampaign",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "visitorUtmContent",
              "key": "utm_content",
              "schema": {
                "generatedName": "visitorUtmContent",
                "nameOverride": "Visitor",
                "title": "Visitor",
                "value": {
                  "generatedName": "VisitorUtmContent",
                  "description": "The utm_content of the visitor.",
                  "value": {
                    "description": "The utm_content of the visitor.",
                    "schema": {
                      "example": "banner",
                      "type": "string"
                    },
                    "generatedName": "VisitorUtmContent",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "visitorUtmMedium",
              "key": "utm_medium",
              "schema": {
                "generatedName": "visitorUtmMedium",
                "nameOverride": "Visitor",
                "title": "Visitor",
                "value": {
                  "generatedName": "VisitorUtmMedium",
                  "description": "The utm_medium of the visitor.",
                  "value": {
                    "description": "The utm_medium of the visitor.",
                    "schema": {
                      "example": "email",
                      "type": "string"
                    },
                    "generatedName": "VisitorUtmMedium",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "visitorUtmSource",
              "key": "utm_source",
              "schema": {
                "generatedName": "visitorUtmSource",
                "nameOverride": "Visitor",
                "title": "Visitor",
                "value": {
                  "generatedName": "VisitorUtmSource",
                  "description": "The utm_source of the visitor.",
                  "value": {
                    "description": "The utm_source of the visitor.",
                    "schema": {
                      "example": "Intercom",
                      "type": "string"
                    },
                    "generatedName": "VisitorUtmSource",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "visitorUtmTerm",
              "key": "utm_term",
              "schema": {
                "generatedName": "visitorUtmTerm",
                "nameOverride": "Visitor",
                "title": "Visitor",
                "value": {
                  "generatedName": "VisitorUtmTerm",
                  "description": "The utm_term of the visitor.",
                  "value": {
                    "description": "The utm_term of the visitor.",
                    "schema": {
                      "example": "messenger",
                      "type": "string"
                    },
                    "generatedName": "VisitorUtmTerm",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "visitorDoNotTrack",
              "key": "do_not_track",
              "schema": {
                "generatedName": "visitorDoNotTrack",
                "nameOverride": "Visitor",
                "title": "Visitor",
                "value": {
                  "generatedName": "VisitorDoNotTrack",
                  "description": "Identifies if this visitor has do not track enabled.",
                  "value": {
                    "description": "Identifies if this visitor has do not track enabled.",
                    "schema": {
                      "example": false,
                      "type": "boolean"
                    },
                    "generatedName": "VisitorDoNotTrack",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "Visitors are useful for representing anonymous people that have not yet been identified. They usually represent website visitors. Visitors are not visible in Intercom platform. The Visitors resource provides methods to fetch, update, convert and delete.",
          "generatedName": "Visitor",
          "nameOverride": "Visitor",
          "title": "Visitor",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "groupName": [],
        "type": "nullable"
      },
      "visitor_deleted_object": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "visitorDeletedObjectId",
            "key": "id",
            "schema": {
              "generatedName": "visitorDeletedObjectId",
              "title": "Visitor Deleted Object",
              "value": {
                "description": "The unique identifier for the visitor which is given by Intercom.",
                "schema": {
                  "example": "530370b477ad7120001d",
                  "type": "string"
                },
                "generatedName": "VisitorDeletedObjectId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "visitorDeletedObjectType",
            "key": "type",
            "schema": {
              "generatedName": "visitorDeletedObjectType",
              "title": "Visitor Deleted Object",
              "value": {
                "description": "The type of object which was deleted",
                "value": {
                  "value": "visitor",
                  "type": "string"
                },
                "generatedName": "VisitorDeletedObjectType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "visitorDeletedObjectUserId",
            "key": "user_id",
            "schema": {
              "generatedName": "visitorDeletedObjectUserId",
              "title": "Visitor Deleted Object",
              "value": {
                "description": "Automatically generated identifier for the Visitor.",
                "schema": {
                  "example": "8a88a590-e1c3-41e2-a502-e0649dbf721c",
                  "type": "string"
                },
                "generatedName": "VisitorDeletedObjectUserId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Response returned when an object is deleted",
        "generatedName": "VisitorDeletedObject",
        "title": "Visitor Deleted Object",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      }
    },
    "namespacedSchemas": {}
  },
  "variables": {},
  "nonRequestReferencedSchemas": {},
  "securitySchemes": {
    "bearerAuth": {
      "type": "bearer"
    }
  },
  "globalHeaders": [],
  "idempotencyHeaders": [],
  "groups": {}
}