{
  "absoluteFilePath": "/DUMMY_PATH",
  "importedDefinitions": {},
  "namedDefinitionFiles": {
    "__package__.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "errors": {
          "CreateProjectInviteRequestBadRequestError": {
            "docs": "Invalid Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": "Invalid request: scope must be either 'member', 'admin' or 'owner'.",
              },
            ],
            "status-code": 400,
            "type": "string",
          },
          "CreateProjectInviteRequestForbiddenError": {
            "docs": "Authentication failed",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "UNAUTHORIZED",
                  "details": "Check that you are using the correct credentials.",
                  "message": "Authentication failed.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 403,
            "type": "CreateProjectInviteRequestForbiddenErrorBody",
          },
          "CreateProjectInviteRequestNotFoundError": {
            "docs": "Project not found",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "NOT_FOUND",
                  "details": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                  "message": "A project with the submitted ID cannot be found.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 404,
            "type": "CreateProjectInviteRequestNotFoundErrorBody",
          },
          "CreateProjectInviteRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": "User does not have sufficient permissions.",
              },
            ],
            "status-code": 401,
            "type": "string",
          },
          "CreateProjectKeyRequestForbiddenError": {
            "docs": "Authentication failed",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "UNAUTHORIZED",
                  "details": "Check that you are using the correct credentials.",
                  "message": "Authentication failed.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 403,
            "type": "CreateProjectKeyRequestForbiddenErrorBody",
          },
          "CreateProjectKeyRequestNotFoundError": {
            "docs": "Project not found",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "NOT_FOUND",
                  "details": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                  "message": "A project with the submitted ID cannot be found.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 404,
            "type": "CreateProjectKeyRequestNotFoundErrorBody",
          },
          "DeleteProjectInviteRequestBadRequestError": {
            "docs": "Invalid Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": "Invalid request: scope must be either 'member', 'admin' or 'owner'.",
              },
            ],
            "status-code": 400,
            "type": "string",
          },
          "DeleteProjectInviteRequestForbiddenError": {
            "docs": "Authentication failed",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "UNAUTHORIZED",
                  "details": "Check that you are using the correct credentials.",
                  "message": "Authentication failed.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 403,
            "type": "DeleteProjectInviteRequestForbiddenErrorBody",
          },
          "DeleteProjectInviteRequestNotFoundError": {
            "docs": "Project not found",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "NOT_FOUND",
                  "details": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                  "message": "A project with the submitted ID cannot be found.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 404,
            "type": "DeleteProjectInviteRequestNotFoundErrorBody",
          },
          "DeleteProjectInviteRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": "User does not have sufficient permissions.",
              },
            ],
            "status-code": 401,
            "type": "string",
          },
          "DeleteProjectKeyRequestForbiddenError": {
            "docs": "Authentication failed",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "UNAUTHORIZED",
                  "details": "Check that you are using the correct credentials.",
                  "message": "Authentication failed.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 403,
            "type": "DeleteProjectKeyRequestForbiddenErrorBody",
          },
          "DeleteProjectKeyRequestNotFoundError": {
            "docs": "Project not found",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "NOT_FOUND",
                  "details": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                  "message": "A project with the submitted ID cannot be found.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 404,
            "type": "DeleteProjectKeyRequestNotFoundErrorBody",
          },
          "DeleteProjectLeaveRequestBadRequestError": {
            "docs": "Invalid Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": "Invalid request: scope must be either 'member', 'admin' or 'owner'.",
              },
            ],
            "status-code": 400,
            "type": "string",
          },
          "DeleteProjectLeaveRequestForbiddenError": {
            "docs": "Authentication failed",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "UNAUTHORIZED",
                  "details": "Check that you are using the correct credentials.",
                  "message": "Authentication failed.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 403,
            "type": "DeleteProjectLeaveRequestForbiddenErrorBody",
          },
          "DeleteProjectLeaveRequestNotFoundError": {
            "docs": "Project not found",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "NOT_FOUND",
                  "details": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                  "message": "A project with the submitted ID cannot be found.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 404,
            "type": "DeleteProjectLeaveRequestNotFoundErrorBody",
          },
          "DeleteProjectLeaveRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": "User does not have sufficient permissions.",
              },
            ],
            "status-code": 401,
            "type": "string",
          },
          "DeleteProjectMemberRequestForbiddenError": {
            "docs": "Authentication failed",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "UNAUTHORIZED",
                  "details": "Check that you are using the correct credentials.",
                  "message": "Authentication failed.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 403,
            "type": "DeleteProjectMemberRequestForbiddenErrorBody",
          },
          "DeleteProjectMemberRequestNotFoundError": {
            "docs": "Project not found",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "NOT_FOUND",
                  "details": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                  "message": "A project with the submitted ID cannot be found.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 404,
            "type": "DeleteProjectMemberRequestNotFoundErrorBody",
          },
          "DeleteProjectRequestBadRequestError": {
            "docs": "Project Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "INVALID_JSON",
                  "details": "Json deserialize error: EOF while parsing a value at line 1 column 0",
                  "message": "Invalid JSON submitted.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 400,
            "type": "DeleteProjectRequestBadRequestErrorBody",
          },
          "DeleteProjectRequestForbiddenError": {
            "docs": "Authentication failed",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "UNAUTHORIZED",
                  "details": "Check that you are using the correct credentials.",
                  "message": "Authentication failed.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 403,
            "type": "DeleteProjectRequestForbiddenErrorBody",
          },
          "DeleteProjectRequestNotFoundError": {
            "docs": "Project not found",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "NOT_FOUND",
                  "details": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                  "message": "A project with the submitted ID cannot be found.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 404,
            "type": "DeleteProjectRequestNotFoundErrorBody",
          },
          "DeleteSelfHostedDistCredsRequestForbiddenError": {
            "docs": "Authentication failed",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "UNAUTHORIZED",
                  "details": "Check that you are using the correct credentials.",
                  "message": "Authentication failed.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 403,
            "type": "DeleteSelfHostedDistCredsRequestForbiddenErrorBody",
          },
          "DeleteSelfHostedDistCredsRequestNotFoundError": {
            "docs": "Project not found",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "NOT_FOUND",
                  "details": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                  "message": "A project with the submitted ID cannot be found.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 404,
            "type": "DeleteSelfHostedDistCredsRequestNotFoundErrorBody",
          },
          "GetModelRequestBadRequestError": {
            "docs": "Project Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "INVALID_JSON",
                  "details": "Json deserialize error: EOF while parsing a value at line 1 column 0",
                  "message": "Invalid JSON submitted.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 400,
            "type": "GetModelRequestBadRequestErrorBody",
          },
          "GetProjectBalanceRequestBadRequestError": {
            "docs": "Project Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "INVALID_JSON",
                  "details": "Json deserialize error: EOF while parsing a value at line 1 column 0",
                  "message": "Invalid JSON submitted.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 400,
            "type": "GetProjectBalanceRequestBadRequestErrorBody",
          },
          "GetProjectBalanceRequestForbiddenError": {
            "docs": "Authentication failed",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "UNAUTHORIZED",
                  "details": "Check that you are using the correct credentials.",
                  "message": "Authentication failed.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 403,
            "type": "GetProjectBalanceRequestForbiddenErrorBody",
          },
          "GetProjectBalanceRequestNotFoundError": {
            "docs": "Project not found",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "NOT_FOUND",
                  "details": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                  "message": "A project with the submitted ID cannot be found.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 404,
            "type": "GetProjectBalanceRequestNotFoundErrorBody",
          },
          "GetProjectBalancesRequestBadRequestError": {
            "docs": "Project Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "INVALID_JSON",
                  "details": "Json deserialize error: EOF while parsing a value at line 1 column 0",
                  "message": "Invalid JSON submitted.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 400,
            "type": "GetProjectBalancesRequestBadRequestErrorBody",
          },
          "GetProjectBalancesRequestForbiddenError": {
            "docs": "Authentication failed",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "UNAUTHORIZED",
                  "details": "Check that you are using the correct credentials.",
                  "message": "Authentication failed.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 403,
            "type": "GetProjectBalancesRequestForbiddenErrorBody",
          },
          "GetProjectBalancesRequestNotFoundError": {
            "docs": "Project not found",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "NOT_FOUND",
                  "details": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                  "message": "A project with the submitted ID cannot be found.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 404,
            "type": "GetProjectBalancesRequestNotFoundErrorBody",
          },
          "GetProjectKeyRequestForbiddenError": {
            "docs": "Authentication failed",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "UNAUTHORIZED",
                  "details": "Check that you are using the correct credentials.",
                  "message": "Authentication failed.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 403,
            "type": "GetProjectKeyRequestForbiddenErrorBody",
          },
          "GetProjectKeyRequestNotFoundError": {
            "docs": "Project not found",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "NOT_FOUND",
                  "details": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                  "message": "A project with the submitted ID cannot be found.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 404,
            "type": "GetProjectKeyRequestNotFoundErrorBody",
          },
          "GetProjectModelRequestBadRequestError": {
            "docs": "Project Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "INVALID_JSON",
                  "details": "Json deserialize error: EOF while parsing a value at line 1 column 0",
                  "message": "Invalid JSON submitted.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 400,
            "type": "GetProjectModelRequestBadRequestErrorBody",
          },
          "GetProjectRequestBadRequestError": {
            "docs": "Project Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "INVALID_JSON",
                  "details": "Json deserialize error: EOF while parsing a value at line 1 column 0",
                  "message": "Invalid JSON submitted.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 400,
            "type": "GetProjectRequestBadRequestErrorBody",
          },
          "GetProjectRequestForbiddenError": {
            "docs": "Authentication failed",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "UNAUTHORIZED",
                  "details": "Check that you are using the correct credentials.",
                  "message": "Authentication failed.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 403,
            "type": "GetProjectRequestForbiddenErrorBody",
          },
          "GetProjectRequestNotFoundError": {
            "docs": "Project not found",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "NOT_FOUND",
                  "details": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                  "message": "A project with the submitted ID cannot be found.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 404,
            "type": "GetProjectRequestNotFoundErrorBody",
          },
          "GetProjectUsageBreakdownRequestBadRequestError": {
            "docs": "Project Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "INVALID_JSON",
                  "details": "Json deserialize error: EOF while parsing a value at line 1 column 0",
                  "message": "Invalid JSON submitted.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 400,
            "type": "GetProjectUsageBreakdownRequestBadRequestErrorBody",
          },
          "GetProjectUsageBreakdownRequestNotFoundError": {
            "docs": "Project not found",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "NOT_FOUND",
                  "details": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                  "message": "A project with the submitted ID cannot be found.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 404,
            "type": "GetProjectUsageBreakdownRequestNotFoundErrorBody",
          },
          "GetProjectUsageBreakdownRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": "User does not have sufficient permissions.",
              },
            ],
            "status-code": 401,
            "type": "string",
          },
          "GetProjectUsageRequestBadRequestError": {
            "docs": "Invalid Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": "Invalid request: scope must be either 'member', 'admin' or 'owner'.",
              },
            ],
            "status-code": 400,
            "type": "string",
          },
          "GetProjectUsageRequestForbiddenError": {
            "docs": "Authentication failed",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "UNAUTHORIZED",
                  "details": "Check that you are using the correct credentials.",
                  "message": "Authentication failed.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 403,
            "type": "GetProjectUsageRequestForbiddenErrorBody",
          },
          "GetProjectUsageRequestNotFoundError": {
            "docs": "Project not found",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "NOT_FOUND",
                  "details": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                  "message": "A project with the submitted ID cannot be found.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 404,
            "type": "GetProjectUsageRequestNotFoundErrorBody",
          },
          "GetProjectUsageRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": "User does not have sufficient permissions.",
              },
            ],
            "status-code": 401,
            "type": "string",
          },
          "GetSelfHostedCredentialsRequestForbiddenError": {
            "docs": "Authentication failed",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "UNAUTHORIZED",
                  "details": "Check that you are using the correct credentials.",
                  "message": "Authentication failed.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 403,
            "type": "GetSelfHostedCredentialsRequestForbiddenErrorBody",
          },
          "GetSelfHostedCredentialsRequestNotFoundError": {
            "docs": "Project not found",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "NOT_FOUND",
                  "details": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                  "message": "A project with the submitted ID cannot be found.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 404,
            "type": "GetSelfHostedCredentialsRequestNotFoundErrorBody",
          },
          "ListModelsRequestBadRequestError": {
            "docs": "Project Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "INVALID_JSON",
                  "details": "Json deserialize error: EOF while parsing a value at line 1 column 0",
                  "message": "Invalid JSON submitted.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 400,
            "type": "ListModelsRequestBadRequestErrorBody",
          },
          "ListProjectKeysRequestForbiddenError": {
            "docs": "Authentication failed",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "UNAUTHORIZED",
                  "details": "Check that you are using the correct credentials.",
                  "message": "Authentication failed.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 403,
            "type": "ListProjectKeysRequestForbiddenErrorBody",
          },
          "ListProjectKeysRequestNotFoundError": {
            "docs": "Project not found",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "NOT_FOUND",
                  "details": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                  "message": "A project with the submitted ID cannot be found.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 404,
            "type": "ListProjectKeysRequestNotFoundErrorBody",
          },
          "ListProjectMemberScopesRequestForbiddenError": {
            "docs": "Authentication failed",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "UNAUTHORIZED",
                  "details": "Check that you are using the correct credentials.",
                  "message": "Authentication failed.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 403,
            "type": "ListProjectMemberScopesRequestForbiddenErrorBody",
          },
          "ListProjectMemberScopesRequestNotFoundError": {
            "docs": "Project not found",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "NOT_FOUND",
                  "details": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                  "message": "A project with the submitted ID cannot be found.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 404,
            "type": "ListProjectMemberScopesRequestNotFoundErrorBody",
          },
          "ListProjectMembersRequestForbiddenError": {
            "docs": "Authentication failed",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "UNAUTHORIZED",
                  "details": "Check that you are using the correct credentials.",
                  "message": "Authentication failed.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 403,
            "type": "ListProjectMembersRequestForbiddenErrorBody",
          },
          "ListProjectMembersRequestNotFoundError": {
            "docs": "Project not found",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "NOT_FOUND",
                  "details": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                  "message": "A project with the submitted ID cannot be found.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 404,
            "type": "ListProjectMembersRequestNotFoundErrorBody",
          },
          "ListProjectModelsRequestBadRequestError": {
            "docs": "Project Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "INVALID_JSON",
                  "details": "Json deserialize error: EOF while parsing a value at line 1 column 0",
                  "message": "Invalid JSON submitted.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 400,
            "type": "ListProjectModelsRequestBadRequestErrorBody",
          },
          "ListProjectPurchasesRequestBadRequestError": {
            "docs": "Project Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "INVALID_JSON",
                  "details": "Json deserialize error: EOF while parsing a value at line 1 column 0",
                  "message": "Invalid JSON submitted.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 400,
            "type": "ListProjectPurchasesRequestBadRequestErrorBody",
          },
          "ListProjectRequestsRequestBadRequestError": {
            "docs": "Project Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "INVALID_JSON",
                  "details": "Json deserialize error: EOF while parsing a value at line 1 column 0",
                  "message": "Invalid JSON submitted.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 400,
            "type": "ListProjectRequestsRequestBadRequestErrorBody",
          },
          "ListProjectRequestsRequestForbiddenError": {
            "docs": "Authentication failed",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "UNAUTHORIZED",
                  "details": "Check that you are using the correct credentials.",
                  "message": "Authentication failed.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 403,
            "type": "ListProjectRequestsRequestForbiddenErrorBody",
          },
          "ListProjectRequestsRequestNotFoundError": {
            "docs": "Project not found",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "NOT_FOUND",
                  "details": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                  "message": "A project with the submitted ID cannot be found.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 404,
            "type": "ListProjectRequestsRequestNotFoundErrorBody",
          },
          "ListProjectUsageFieldsRequestBadRequestError": {
            "docs": "Invalid Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": "Invalid request: scope must be either 'member', 'admin' or 'owner'.",
              },
            ],
            "status-code": 400,
            "type": "string",
          },
          "ListProjectUsageFieldsRequestForbiddenError": {
            "docs": "Authentication failed",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "UNAUTHORIZED",
                  "details": "Check that you are using the correct credentials.",
                  "message": "Authentication failed.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 403,
            "type": "ListProjectUsageFieldsRequestForbiddenErrorBody",
          },
          "ListProjectUsageFieldsRequestNotFoundError": {
            "docs": "Project not found",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "NOT_FOUND",
                  "details": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                  "message": "A project with the submitted ID cannot be found.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 404,
            "type": "ListProjectUsageFieldsRequestNotFoundErrorBody",
          },
          "ListProjectUsageFieldsRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": "User does not have sufficient permissions.",
              },
            ],
            "status-code": 401,
            "type": "string",
          },
          "ListProjectsRequestForbiddenError": {
            "docs": "Authentication failed",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "UNAUTHORIZED",
                  "details": "Check that you are using the correct credentials.",
                  "message": "Authentication failed.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 403,
            "type": "ListProjectsRequestForbiddenErrorBody",
          },
          "ListSelfHostedDistCredsRequestForbiddenError": {
            "docs": "Authentication failed",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "UNAUTHORIZED",
                  "details": "Check that you are using the correct credentials.",
                  "message": "Authentication failed.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 403,
            "type": "ListSelfHostedDistCredsRequestForbiddenErrorBody",
          },
          "ListSelfHostedDistCredsRequestNotFoundError": {
            "docs": "Project not found",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "NOT_FOUND",
                  "details": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                  "message": "A project with the submitted ID cannot be found.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 404,
            "type": "ListSelfHostedDistCredsRequestNotFoundErrorBody",
          },
          "ListenRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "err_code": "INVALID_QUERY_PARAMETER",
                  "err_msg": "Failed to deserialize query parameters...",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 400,
            "type": "ListenRequestBadRequestErrorBody",
          },
          "SpeakRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "err_code": "INVALID_QUERY_PARAMETER",
                  "err_msg": "Failed to deserialize query parameters...",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 400,
            "type": "SpeakRequestBadRequestErrorBody",
          },
          "SpeakRequestContentTooLargeError": {
            "docs": "Payload too large",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "err_code": "Payload too large",
                  "err_msg": "Input text exceeds maximum character limit of 2000.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 413,
            "type": "SpeakRequestContentTooLargeErrorBody",
          },
          "SpeakRequestForbiddenError": {
            "docs": "Insufficient permissions, Model not found",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "err_code": "INSUFFICIENT_PERMISSIONS",
                  "err_msg": "Project does not have access to the requested model.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 403,
            "type": "SpeakRequestForbiddenErrorBody",
          },
          "SpeakRequestUnsupportedMediaTypeError": {
            "docs": "Unsupported media type",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "err_code": "UNSUPPORTED_MEDIA_TYPE",
                  "err_msg": "Content-Type header is not supported. Content-Type must be either text/plain or application/json.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 415,
            "type": "SpeakRequestUnsupportedMediaTypeErrorBody",
          },
          "TextReadRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "err_code": "INVALID_QUERY_PARAMETER",
                  "err_msg": "Failed to deserialize query parameters...",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 400,
            "type": "TextReadRequestBadRequestErrorBody",
          },
          "UpdateProjectMemberScopesRequestForbiddenError": {
            "docs": "Authentication failed",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "UNAUTHORIZED",
                  "details": "Check that you are using the correct credentials.",
                  "message": "Authentication failed.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 403,
            "type": "UpdateProjectMemberScopesRequestForbiddenErrorBody",
          },
          "UpdateProjectMemberScopesRequestNotFoundError": {
            "docs": "Project not found",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "NOT_FOUND",
                  "details": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                  "message": "A project with the submitted ID cannot be found.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 404,
            "type": "UpdateProjectMemberScopesRequestNotFoundErrorBody",
          },
          "UpdateProjectRequestBadRequestError": {
            "docs": "Project Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "INVALID_JSON",
                  "details": "Json deserialize error: EOF while parsing a value at line 1 column 0",
                  "message": "Invalid JSON submitted.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 400,
            "type": "UpdateProjectRequestBadRequestErrorBody",
          },
          "UpdateProjectRequestForbiddenError": {
            "docs": "Authentication failed",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "UNAUTHORIZED",
                  "details": "Check that you are using the correct credentials.",
                  "message": "Authentication failed.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 403,
            "type": "UpdateProjectRequestForbiddenErrorBody",
          },
          "UpdateProjectRequestNotFoundError": {
            "docs": "Project not found",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "category": "NOT_FOUND",
                  "details": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                  "message": "A project with the submitted ID cannot be found.",
                  "request_id": "123456-7890-1234-5678-901234",
                },
              },
            ],
            "status-code": 404,
            "type": "UpdateProjectRequestNotFoundErrorBody",
          },
        },
        "types": {
          "Channels": "list<ChannelsItem>",
          "ChannelsItem": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "alternatives": "optional<list<ChannelsItemAlternativesItem>>",
              "detected_language": "optional<string>",
              "search": "optional<list<ChannelsItemSearchItem>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ChannelsItemAlternativesItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "confidence": "optional<float>",
              "paragraphs": "optional<ChannelsItemAlternativesItemParagraphs>",
              "summaries": "optional<list<ChannelsItemAlternativesItemSummariesItem>>",
              "topics": "optional<list<ChannelsItemAlternativesItemTopicsItem>>",
              "transcript": "optional<string>",
              "words": "optional<list<ChannelsItemAlternativesItemWordsItem>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ChannelsItemAlternativesItemParagraphs": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "paragraphs": "optional<list<ChannelsItemAlternativesItemParagraphsParagraphsItem>>",
              "transcript": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ChannelsItemAlternativesItemParagraphsParagraphsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "end": "optional<float>",
              "num_words": "optional<integer>",
              "sentences": "optional<list<ChannelsItemAlternativesItemParagraphsParagraphsItemSentencesItem>>",
              "speaker": "optional<integer>",
              "start": "optional<float>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ChannelsItemAlternativesItemParagraphsParagraphsItemSentencesItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "end": "optional<float>",
              "start": "optional<float>",
              "text": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ChannelsItemAlternativesItemSummariesItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "end_word": "optional<integer>",
              "start_word": "optional<integer>",
              "summary": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ChannelsItemAlternativesItemTopicsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "end_word": "optional<integer>",
              "start_word": "optional<integer>",
              "text": "optional<string>",
              "topics": "optional<list<string>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ChannelsItemAlternativesItemWordsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "confidence": "optional<float>",
              "end": "optional<float>",
              "start": "optional<float>",
              "word": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ChannelsItemSearchItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "hits": "optional<list<ChannelsItemSearchItemHitsItem>>",
              "query": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ChannelsItemSearchItemHitsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "confidence": "optional<float>",
              "end": "optional<float>",
              "snippet": "optional<string>",
              "start": "optional<float>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProjectInviteRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProjectInviteRequestNotFoundErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProjectKeyRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProjectKeyRequestNotFoundErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeleteProjectInviteRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeleteProjectInviteRequestNotFoundErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeleteProjectKeyRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeleteProjectKeyRequestNotFoundErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeleteProjectLeaveRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeleteProjectLeaveRequestNotFoundErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeleteProjectMemberRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeleteProjectMemberRequestNotFoundErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeleteProjectRequestBadRequestErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The error category",
                "type": "optional<string>",
              },
              "details": {
                "docs": "Additional details about the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "The error message",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The request ID",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeleteProjectRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeleteProjectRequestNotFoundErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeleteSelfHostedDistCredsRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeleteSelfHostedDistCredsRequestNotFoundErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetModelRequestBadRequestErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The error category",
                "type": "optional<string>",
              },
              "details": {
                "docs": "Additional details about the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "The error message",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The request ID",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProjectBalanceRequestBadRequestErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The error category",
                "type": "optional<string>",
              },
              "details": {
                "docs": "Additional details about the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "The error message",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The request ID",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProjectBalanceRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProjectBalanceRequestNotFoundErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProjectBalancesRequestBadRequestErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The error category",
                "type": "optional<string>",
              },
              "details": {
                "docs": "Additional details about the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "The error message",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The request ID",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProjectBalancesRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProjectBalancesRequestNotFoundErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProjectKeyRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProjectKeyRequestNotFoundErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProjectModelRequestBadRequestErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The error category",
                "type": "optional<string>",
              },
              "details": {
                "docs": "Additional details about the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "The error message",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The request ID",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProjectRequestBadRequestErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The error category",
                "type": "optional<string>",
              },
              "details": {
                "docs": "Additional details about the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "The error message",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The request ID",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProjectRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProjectRequestNotFoundErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProjectUsageBreakdownRequestBadRequestErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The error category",
                "type": "optional<string>",
              },
              "details": {
                "docs": "Additional details about the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "The error message",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The request ID",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProjectUsageBreakdownRequestNotFoundErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProjectUsageRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProjectUsageRequestNotFoundErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetSelfHostedCredentialsRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetSelfHostedCredentialsRequestNotFoundErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Intents": {
            "docs": "Output whenever `intents=true` is used",
            "inline": undefined,
            "properties": {
              "results": "optional<IntentsResults>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IntentsResults": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "intents": "optional<IntentsResultsIntents>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IntentsResultsIntents": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "segments": "optional<list<IntentsResultsIntentsSegmentsItem>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IntentsResultsIntentsSegmentsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "end_word": "optional<integer>",
              "intents": "optional<list<IntentsResultsIntentsSegmentsItemIntentsItem>>",
              "start_word": "optional<integer>",
              "text": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IntentsResultsIntentsSegmentsItemIntentsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "confidence_score": "optional<float>",
              "intent": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Key": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "member": "optional<KeyMember>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "KeyCreated": {
            "docs": "API key created",
            "inline": undefined,
            "properties": {
              "api_key_id": {
                "docs": "The unique identifier of the API key",
                "type": "optional<string>",
              },
              "comment": {
                "docs": "A comment for the API key",
                "type": "optional<string>",
              },
              "key": {
                "docs": "The API key",
                "type": "optional<string>",
              },
              "scopes": {
                "docs": "the scopes for the API key",
                "type": "optional<list<string>>",
              },
              "tags": {
                "docs": "the tags for the API key",
                "type": "optional<list<string>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "KeyMember": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "api_key": "optional<KeyMemberApiKey>",
              "email": "optional<string>",
              "first_name": "optional<string>",
              "last_name": "optional<string>",
              "member_id": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "KeyMemberApiKey": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "api_key_id": "optional<string>",
              "comment": "optional<string>",
              "created": "optional<datetime>",
              "scopes": "optional<list<string>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Keys": "list<KeysItem>",
          "KeysItem": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "api_key": "optional<KeysItemApiKey>",
              "member": "optional<KeysItemMember>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "KeysItemApiKey": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "api_key_id": "optional<string>",
              "comment": "optional<string>",
              "created": "optional<datetime>",
              "scopes": "optional<list<string>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "KeysItemMember": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "email": "optional<string>",
              "member_id": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListModelsRequestBadRequestErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The error category",
                "type": "optional<string>",
              },
              "details": {
                "docs": "Additional details about the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "The error message",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The request ID",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProjectKeysRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProjectKeysRequestNotFoundErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProjectMemberScopesRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProjectMemberScopesRequestNotFoundErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProjectMembersRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProjectMembersRequestNotFoundErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProjectModelsRequestBadRequestErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The error category",
                "type": "optional<string>",
              },
              "details": {
                "docs": "Additional details about the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "The error message",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The request ID",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProjectPurchasesRequestBadRequestErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The error category",
                "type": "optional<string>",
              },
              "details": {
                "docs": "Additional details about the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "The error message",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The request ID",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProjectRequestsRequestBadRequestErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The error category",
                "type": "optional<string>",
              },
              "details": {
                "docs": "Additional details about the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "The error message",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The request ID",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProjectRequestsRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProjectRequestsRequestNotFoundErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProjectUsageFieldsRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProjectUsageFieldsRequestNotFoundErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProjectsRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListSelfHostedDistCredsRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListSelfHostedDistCredsRequestNotFoundErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListenRequestBadRequestErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "err_code": {
                "docs": "The error code",
                "type": "optional<string>",
              },
              "err_msg": {
                "docs": "The error message",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The request ID",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListenRequestFile": {
            "docs": "Binary audio file to transcribe",
            "type": "string",
            "validation": {
              "format": "binary",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "Metadata": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "channels": "double",
              "created": "datetime",
              "duration": "double",
              "intents_info": "optional<MetadataIntentsInfo>",
              "model_info": "map<string, unknown>",
              "models": "list<string>",
              "request_id": {
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "sentiment_info": "optional<MetadataSentimentInfo>",
              "sha256": "string",
              "summary_info": "optional<MetadataSummaryInfo>",
              "tags": "optional<list<string>>",
              "topics_info": "optional<MetadataTopicsInfo>",
              "transaction_key": {
                "availability": "deprecated",
                "default": "deprecated",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MetadataIntentsInfo": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "input_tokens": "optional<double>",
              "model_uuid": "optional<string>",
              "output_tokens": "optional<double>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MetadataSentimentInfo": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "input_tokens": "optional<double>",
              "model_uuid": "optional<string>",
              "output_tokens": "optional<double>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MetadataSummaryInfo": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "input_tokens": "optional<double>",
              "model_uuid": "optional<string>",
              "output_tokens": "optional<double>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MetadataTopicsInfo": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "input_tokens": "optional<double>",
              "model_uuid": "optional<string>",
              "output_tokens": "optional<double>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Request": {
            "docs": "A single request",
            "inline": undefined,
            "properties": {
              "api_key_id": {
                "docs": "The unique identifier of the API key",
                "type": "optional<string>",
              },
              "callback": {
                "docs": "The callback URL for the request",
                "type": "optional<string>",
              },
              "code": {
                "docs": "The response code of the request",
                "type": "optional<integer>",
              },
              "created": {
                "docs": "The date and time the request was created",
                "type": "optional<datetime>",
              },
              "deployment": {
                "docs": "The deployment type",
                "type": "optional<string>",
              },
              "path": {
                "docs": "The API path of the request",
                "type": "optional<string>",
              },
              "project_uuid": {
                "docs": "The unique identifier of the project",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
              "response": {
                "docs": "The response of the request",
                "type": "optional<map<string, unknown>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Response": {
            "docs": "The standard transcription response",
            "inline": undefined,
            "properties": {
              "metadata": "Metadata",
              "results": "Results",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Results": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "channels": "Channels",
              "intents": "optional<Intents>",
              "sentiments": "optional<Sentiments>",
              "summary": "optional<Summary>",
              "topics": "optional<Topics>",
              "utterances": "optional<Utterances>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Sentiments": {
            "docs": "Output whenever `sentiment=true` is used",
            "inline": undefined,
            "properties": {
              "average": "optional<SentimentsAverage>",
              "segments": "optional<list<SentimentsSegmentsItem>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SentimentsAverage": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "sentiment": "optional<string>",
              "sentiment_score": "optional<double>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SentimentsSegmentsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "end_word": "optional<double>",
              "sentiment": "optional<string>",
              "sentiment_score": "optional<double>",
              "start_word": "optional<double>",
              "text": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SpeakRequestBadRequestErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "err_code": {
                "docs": "The error code",
                "type": "optional<string>",
              },
              "err_msg": {
                "docs": "The error message",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The request ID",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SpeakRequestContentTooLargeErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "err_code": {
                "docs": "The error code",
                "type": "optional<string>",
              },
              "err_msg": {
                "docs": "The error message",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The request ID",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SpeakRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "err_code": {
                "docs": "The error code",
                "type": "optional<string>",
              },
              "err_msg": {
                "docs": "The error message",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The request ID",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SpeakRequestUnsupportedMediaTypeErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "err_code": {
                "docs": "The error code",
                "type": "optional<string>",
              },
              "err_msg": {
                "docs": "The error message",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The request ID",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SpeakResponse": {
            "docs": "The standard text response",
            "inline": undefined,
            "properties": {
              "results": {
                "type": "optional<string>",
                "validation": {
                  "format": "binary",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SttModels": "list<SttModelsItem>",
          "SttModelsItem": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "architecture": "optional<string>",
              "batch": "optional<boolean>",
              "canonical_name": "optional<string>",
              "formatted_output": "optional<boolean>",
              "languages": "optional<list<string>>",
              "name": "optional<string>",
              "streaming": "optional<boolean>",
              "uuid": "optional<string>",
              "version": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Summary": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "result": "optional<string>",
              "short": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TextMetadata": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "metadata": "optional<TextMetadataMetadata>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TextMetadataMetadata": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "created": "optional<datetime>",
              "intents_info": "optional<TextMetadataMetadataIntentsInfo>",
              "language": "optional<string>",
              "request_id": {
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "sentiment_info": "optional<TextMetadataMetadataSentimentInfo>",
              "summary_info": "optional<TextMetadataMetadataSummaryInfo>",
              "topics_info": "optional<TextMetadataMetadataTopicsInfo>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TextMetadataMetadataIntentsInfo": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "input_tokens": "optional<integer>",
              "model_uuid": {
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "output_tokens": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TextMetadataMetadataSentimentInfo": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "input_tokens": "optional<integer>",
              "model_uuid": {
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "output_tokens": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TextMetadataMetadataSummaryInfo": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "input_tokens": "optional<integer>",
              "model_uuid": {
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "output_tokens": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TextMetadataMetadataTopicsInfo": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "input_tokens": "optional<integer>",
              "model_uuid": {
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "output_tokens": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TextReadRequestBadRequestErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "err_code": {
                "docs": "The error code",
                "type": "optional<string>",
              },
              "err_msg": {
                "docs": "The error message",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The request ID",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TextRequest": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "TextRequestUrl",
              "TextRequestText",
            ],
          },
          "TextRequestText": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "text": {
                "docs": "The plain text to analyze",
                "type": "string",
              },
              "url": {
                "docs": "A URL pointing to the text source",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TextRequestUrl": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "text": {
                "docs": "The plain text to analyze",
                "type": "optional<string>",
              },
              "url": {
                "docs": "A URL pointing to the text source",
                "type": "string",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TextResponse": {
            "docs": "The standard text response",
            "inline": undefined,
            "properties": {
              "metadata": "TextMetadata",
              "results": "TextResults",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TextResults": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "intents": "optional<Intents>",
              "sentiments": "optional<Sentiments>",
              "summary": "optional<TextSummary>",
              "topics": "optional<Topics>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TextSummary": {
            "docs": "Output whenever `summary=true` is used",
            "inline": undefined,
            "properties": {
              "results": "optional<TextSummaryResults>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TextSummaryResults": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "summary": "optional<TextSummaryResultsSummary>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TextSummaryResultsSummary": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "text": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Topics": {
            "docs": "Output whenever `topics=true` is used",
            "inline": undefined,
            "properties": {
              "results": "optional<TopicsResults>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TopicsResults": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "topics": "optional<TopicsResultsTopics>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TopicsResultsTopics": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "segments": "optional<list<TopicsResultsTopicsSegmentsItem>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TopicsResultsTopicsSegmentsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "end_word": "optional<integer>",
              "start_word": "optional<integer>",
              "text": "optional<string>",
              "topics": "optional<list<TopicsResultsTopicsSegmentsItemTopicsItem>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TopicsResultsTopicsSegmentsItemTopicsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "confidence_score": "optional<float>",
              "topic": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TtsModels": "list<TtsModelsItem>",
          "TtsModelsItem": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "architecture": "optional<string>",
              "canonical_name": "optional<string>",
              "languages": "optional<list<string>>",
              "metadata": "optional<TtsModelsItemMetadata>",
              "name": "optional<string>",
              "uuid": "optional<string>",
              "version": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TtsModelsItemMetadata": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "accent": "optional<string>",
              "color": "optional<string>",
              "image": "optional<string>",
              "sample": "optional<string>",
              "tags": "optional<list<string>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateProjectMemberScopesRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateProjectMemberScopesRequestNotFoundErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateProjectRequestBadRequestErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The error category",
                "type": "optional<string>",
              },
              "details": {
                "docs": "Additional details about the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "The error message",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The request ID",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateProjectRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateProjectRequestNotFoundErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "The category of the error",
                "type": "optional<string>",
              },
              "details": {
                "docs": "A description of the error",
                "type": "optional<string>",
              },
              "message": {
                "docs": "A message about the error",
                "type": "optional<string>",
              },
              "request_id": {
                "docs": "The unique identifier of the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Utterances": "list<UtterancesItem>",
          "UtterancesItem": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "channel": "optional<integer>",
              "confidence": "optional<float>",
              "end": "optional<float>",
              "id": {
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "speaker": "optional<integer>",
              "start": "optional<float>",
              "transcript": "optional<string>",
              "words": "optional<list<UtterancesItemWordsItem>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UtterancesItemWordsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "confidence": "optional<float>",
              "end": "optional<float>",
              "punctuated_word": "optional<string>",
              "speaker": "optional<integer>",
              "speaker_confidence": "optional<integer>",
              "start": "optional<float>",
              "word": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  ListenRequestBadRequestErrorBody:
    properties:
      err_code:
        type: optional<string>
        docs: The error code
      err_msg:
        type: optional<string>
        docs: The error message
      request_id:
        type: optional<string>
        docs: The request ID
    source:
      openapi: ../openapi.yml
  TextReadRequestBadRequestErrorBody:
    properties:
      err_code:
        type: optional<string>
        docs: The error code
      err_msg:
        type: optional<string>
        docs: The error message
      request_id:
        type: optional<string>
        docs: The request ID
    source:
      openapi: ../openapi.yml
  SpeakRequestBadRequestErrorBody:
    properties:
      err_code:
        type: optional<string>
        docs: The error code
      err_msg:
        type: optional<string>
        docs: The error message
      request_id:
        type: optional<string>
        docs: The request ID
    source:
      openapi: ../openapi.yml
  SpeakRequestForbiddenErrorBody:
    properties:
      err_code:
        type: optional<string>
        docs: The error code
      err_msg:
        type: optional<string>
        docs: The error message
      request_id:
        type: optional<string>
        docs: The request ID
    source:
      openapi: ../openapi.yml
  SpeakRequestContentTooLargeErrorBody:
    properties:
      err_code:
        type: optional<string>
        docs: The error code
      err_msg:
        type: optional<string>
        docs: The error message
      request_id:
        type: optional<string>
        docs: The request ID
    source:
      openapi: ../openapi.yml
  SpeakRequestUnsupportedMediaTypeErrorBody:
    properties:
      err_code:
        type: optional<string>
        docs: The error code
      err_msg:
        type: optional<string>
        docs: The error message
      request_id:
        type: optional<string>
        docs: The request ID
    source:
      openapi: ../openapi.yml
  ListProjectsRequestForbiddenErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      message:
        type: optional<string>
        docs: A message about the error
      details:
        type: optional<string>
        docs: A description of the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  GetProjectRequestBadRequestErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The error category
      message:
        type: optional<string>
        docs: The error message
      details:
        type: optional<string>
        docs: Additional details about the error
      request_id:
        type: optional<string>
        docs: The request ID
    source:
      openapi: ../openapi.yml
  GetProjectRequestForbiddenErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      message:
        type: optional<string>
        docs: A message about the error
      details:
        type: optional<string>
        docs: A description of the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  GetProjectRequestNotFoundErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      details:
        type: optional<string>
        docs: A description of the error
      message:
        type: optional<string>
        docs: A message about the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  DeleteProjectRequestBadRequestErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The error category
      message:
        type: optional<string>
        docs: The error message
      details:
        type: optional<string>
        docs: Additional details about the error
      request_id:
        type: optional<string>
        docs: The request ID
    source:
      openapi: ../openapi.yml
  DeleteProjectRequestForbiddenErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      message:
        type: optional<string>
        docs: A message about the error
      details:
        type: optional<string>
        docs: A description of the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  DeleteProjectRequestNotFoundErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      details:
        type: optional<string>
        docs: A description of the error
      message:
        type: optional<string>
        docs: A message about the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  UpdateProjectRequestBadRequestErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The error category
      message:
        type: optional<string>
        docs: The error message
      details:
        type: optional<string>
        docs: Additional details about the error
      request_id:
        type: optional<string>
        docs: The request ID
    source:
      openapi: ../openapi.yml
  UpdateProjectRequestForbiddenErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      message:
        type: optional<string>
        docs: A message about the error
      details:
        type: optional<string>
        docs: A description of the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  UpdateProjectRequestNotFoundErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      details:
        type: optional<string>
        docs: A description of the error
      message:
        type: optional<string>
        docs: A message about the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  GetProjectBalancesRequestBadRequestErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The error category
      message:
        type: optional<string>
        docs: The error message
      details:
        type: optional<string>
        docs: Additional details about the error
      request_id:
        type: optional<string>
        docs: The request ID
    source:
      openapi: ../openapi.yml
  GetProjectBalancesRequestForbiddenErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      message:
        type: optional<string>
        docs: A message about the error
      details:
        type: optional<string>
        docs: A description of the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  GetProjectBalancesRequestNotFoundErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      details:
        type: optional<string>
        docs: A description of the error
      message:
        type: optional<string>
        docs: A message about the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  GetProjectBalanceRequestBadRequestErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The error category
      message:
        type: optional<string>
        docs: The error message
      details:
        type: optional<string>
        docs: Additional details about the error
      request_id:
        type: optional<string>
        docs: The request ID
    source:
      openapi: ../openapi.yml
  GetProjectBalanceRequestForbiddenErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      message:
        type: optional<string>
        docs: A message about the error
      details:
        type: optional<string>
        docs: A description of the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  GetProjectBalanceRequestNotFoundErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      details:
        type: optional<string>
        docs: A description of the error
      message:
        type: optional<string>
        docs: A message about the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  ListProjectModelsRequestBadRequestErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The error category
      message:
        type: optional<string>
        docs: The error message
      details:
        type: optional<string>
        docs: Additional details about the error
      request_id:
        type: optional<string>
        docs: The request ID
    source:
      openapi: ../openapi.yml
  GetProjectModelRequestBadRequestErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The error category
      message:
        type: optional<string>
        docs: The error message
      details:
        type: optional<string>
        docs: Additional details about the error
      request_id:
        type: optional<string>
        docs: The request ID
    source:
      openapi: ../openapi.yml
  ListProjectKeysRequestForbiddenErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      message:
        type: optional<string>
        docs: A message about the error
      details:
        type: optional<string>
        docs: A description of the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  ListProjectKeysRequestNotFoundErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      details:
        type: optional<string>
        docs: A description of the error
      message:
        type: optional<string>
        docs: A message about the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  CreateProjectKeyRequestForbiddenErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      message:
        type: optional<string>
        docs: A message about the error
      details:
        type: optional<string>
        docs: A description of the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  CreateProjectKeyRequestNotFoundErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      details:
        type: optional<string>
        docs: A description of the error
      message:
        type: optional<string>
        docs: A message about the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  GetProjectKeyRequestForbiddenErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      message:
        type: optional<string>
        docs: A message about the error
      details:
        type: optional<string>
        docs: A description of the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  GetProjectKeyRequestNotFoundErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      details:
        type: optional<string>
        docs: A description of the error
      message:
        type: optional<string>
        docs: A message about the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  DeleteProjectKeyRequestForbiddenErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      message:
        type: optional<string>
        docs: A message about the error
      details:
        type: optional<string>
        docs: A description of the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  DeleteProjectKeyRequestNotFoundErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      details:
        type: optional<string>
        docs: A description of the error
      message:
        type: optional<string>
        docs: A message about the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  ListProjectMembersRequestForbiddenErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      message:
        type: optional<string>
        docs: A message about the error
      details:
        type: optional<string>
        docs: A description of the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  ListProjectMembersRequestNotFoundErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      details:
        type: optional<string>
        docs: A description of the error
      message:
        type: optional<string>
        docs: A message about the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  DeleteProjectMemberRequestForbiddenErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      message:
        type: optional<string>
        docs: A message about the error
      details:
        type: optional<string>
        docs: A description of the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  DeleteProjectMemberRequestNotFoundErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      details:
        type: optional<string>
        docs: A description of the error
      message:
        type: optional<string>
        docs: A message about the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  ListProjectMemberScopesRequestForbiddenErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      message:
        type: optional<string>
        docs: A message about the error
      details:
        type: optional<string>
        docs: A description of the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  ListProjectMemberScopesRequestNotFoundErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      details:
        type: optional<string>
        docs: A description of the error
      message:
        type: optional<string>
        docs: A message about the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  UpdateProjectMemberScopesRequestForbiddenErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      message:
        type: optional<string>
        docs: A message about the error
      details:
        type: optional<string>
        docs: A description of the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  UpdateProjectMemberScopesRequestNotFoundErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      details:
        type: optional<string>
        docs: A description of the error
      message:
        type: optional<string>
        docs: A message about the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  CreateProjectInviteRequestForbiddenErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      message:
        type: optional<string>
        docs: A message about the error
      details:
        type: optional<string>
        docs: A description of the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  CreateProjectInviteRequestNotFoundErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      details:
        type: optional<string>
        docs: A description of the error
      message:
        type: optional<string>
        docs: A message about the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  DeleteProjectInviteRequestForbiddenErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      message:
        type: optional<string>
        docs: A message about the error
      details:
        type: optional<string>
        docs: A description of the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  DeleteProjectInviteRequestNotFoundErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      details:
        type: optional<string>
        docs: A description of the error
      message:
        type: optional<string>
        docs: A message about the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  DeleteProjectLeaveRequestForbiddenErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      message:
        type: optional<string>
        docs: A message about the error
      details:
        type: optional<string>
        docs: A description of the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  DeleteProjectLeaveRequestNotFoundErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      details:
        type: optional<string>
        docs: A description of the error
      message:
        type: optional<string>
        docs: A message about the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  ListProjectRequestsRequestBadRequestErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The error category
      message:
        type: optional<string>
        docs: The error message
      details:
        type: optional<string>
        docs: Additional details about the error
      request_id:
        type: optional<string>
        docs: The request ID
    source:
      openapi: ../openapi.yml
  ListProjectRequestsRequestForbiddenErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      message:
        type: optional<string>
        docs: A message about the error
      details:
        type: optional<string>
        docs: A description of the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  ListProjectRequestsRequestNotFoundErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      details:
        type: optional<string>
        docs: A description of the error
      message:
        type: optional<string>
        docs: A message about the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  GetProjectUsageRequestForbiddenErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      message:
        type: optional<string>
        docs: A message about the error
      details:
        type: optional<string>
        docs: A description of the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  GetProjectUsageRequestNotFoundErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      details:
        type: optional<string>
        docs: A description of the error
      message:
        type: optional<string>
        docs: A message about the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  ListProjectUsageFieldsRequestForbiddenErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      message:
        type: optional<string>
        docs: A message about the error
      details:
        type: optional<string>
        docs: A description of the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  ListProjectUsageFieldsRequestNotFoundErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      details:
        type: optional<string>
        docs: A description of the error
      message:
        type: optional<string>
        docs: A message about the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  GetProjectUsageBreakdownRequestBadRequestErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The error category
      message:
        type: optional<string>
        docs: The error message
      details:
        type: optional<string>
        docs: Additional details about the error
      request_id:
        type: optional<string>
        docs: The request ID
    source:
      openapi: ../openapi.yml
  GetProjectUsageBreakdownRequestNotFoundErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      details:
        type: optional<string>
        docs: A description of the error
      message:
        type: optional<string>
        docs: A message about the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  ListProjectPurchasesRequestBadRequestErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The error category
      message:
        type: optional<string>
        docs: The error message
      details:
        type: optional<string>
        docs: Additional details about the error
      request_id:
        type: optional<string>
        docs: The request ID
    source:
      openapi: ../openapi.yml
  ListModelsRequestBadRequestErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The error category
      message:
        type: optional<string>
        docs: The error message
      details:
        type: optional<string>
        docs: Additional details about the error
      request_id:
        type: optional<string>
        docs: The request ID
    source:
      openapi: ../openapi.yml
  GetModelRequestBadRequestErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The error category
      message:
        type: optional<string>
        docs: The error message
      details:
        type: optional<string>
        docs: Additional details about the error
      request_id:
        type: optional<string>
        docs: The request ID
    source:
      openapi: ../openapi.yml
  ListSelfHostedDistCredsRequestForbiddenErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      message:
        type: optional<string>
        docs: A message about the error
      details:
        type: optional<string>
        docs: A description of the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  ListSelfHostedDistCredsRequestNotFoundErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      details:
        type: optional<string>
        docs: A description of the error
      message:
        type: optional<string>
        docs: A message about the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  GetSelfHostedCredentialsRequestForbiddenErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      message:
        type: optional<string>
        docs: A message about the error
      details:
        type: optional<string>
        docs: A description of the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  GetSelfHostedCredentialsRequestNotFoundErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      details:
        type: optional<string>
        docs: A description of the error
      message:
        type: optional<string>
        docs: A message about the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  DeleteSelfHostedDistCredsRequestForbiddenErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      message:
        type: optional<string>
        docs: A message about the error
      details:
        type: optional<string>
        docs: A description of the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  DeleteSelfHostedDistCredsRequestNotFoundErrorBody:
    properties:
      category:
        type: optional<string>
        docs: The category of the error
      details:
        type: optional<string>
        docs: A description of the error
      message:
        type: optional<string>
        docs: A message about the error
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
    source:
      openapi: ../openapi.yml
  ListenRequestFile:
    type: string
    docs: Binary audio file to transcribe
    validation:
      format: binary
  MetadataSummaryInfo:
    properties:
      model_uuid: optional<string>
      input_tokens: optional<double>
      output_tokens: optional<double>
    source:
      openapi: ../openapi.yml
    inline: true
  MetadataSentimentInfo:
    properties:
      model_uuid: optional<string>
      input_tokens: optional<double>
      output_tokens: optional<double>
    source:
      openapi: ../openapi.yml
    inline: true
  MetadataTopicsInfo:
    properties:
      model_uuid: optional<string>
      input_tokens: optional<double>
      output_tokens: optional<double>
    source:
      openapi: ../openapi.yml
    inline: true
  MetadataIntentsInfo:
    properties:
      model_uuid: optional<string>
      input_tokens: optional<double>
      output_tokens: optional<double>
    source:
      openapi: ../openapi.yml
    inline: true
  Metadata:
    properties:
      transaction_key:
        type: optional<string>
        default: deprecated
        availability: deprecated
      request_id:
        type: string
        validation:
          format: uuid
      sha256: string
      created: datetime
      duration: double
      channels: double
      models: list<string>
      model_info: map<string, unknown>
      summary_info: optional<MetadataSummaryInfo>
      sentiment_info: optional<MetadataSentimentInfo>
      topics_info: optional<MetadataTopicsInfo>
      intents_info: optional<MetadataIntentsInfo>
      tags: optional<list<string>>
    source:
      openapi: ../openapi.yml
  ChannelsItemSearchItemHitsItem:
    properties:
      confidence: optional<float>
      start: optional<float>
      end: optional<float>
      snippet: optional<string>
    source:
      openapi: ../openapi.yml
    inline: true
  ChannelsItemSearchItem:
    properties:
      query: optional<string>
      hits: optional<list<ChannelsItemSearchItemHitsItem>>
    source:
      openapi: ../openapi.yml
    inline: true
  ChannelsItemAlternativesItemWordsItem:
    properties:
      word: optional<string>
      start: optional<float>
      end: optional<float>
      confidence: optional<float>
    source:
      openapi: ../openapi.yml
    inline: true
  ChannelsItemAlternativesItemParagraphsParagraphsItemSentencesItem:
    properties:
      text: optional<string>
      start: optional<float>
      end: optional<float>
    source:
      openapi: ../openapi.yml
    inline: true
  ChannelsItemAlternativesItemParagraphsParagraphsItem:
    properties:
      sentences: >-
        optional<list<ChannelsItemAlternativesItemParagraphsParagraphsItemSentencesItem>>
      speaker: optional<integer>
      num_words: optional<integer>
      start: optional<float>
      end: optional<float>
    source:
      openapi: ../openapi.yml
    inline: true
  ChannelsItemAlternativesItemParagraphs:
    properties:
      transcript: optional<string>
      paragraphs: optional<list<ChannelsItemAlternativesItemParagraphsParagraphsItem>>
    source:
      openapi: ../openapi.yml
    inline: true
  ChannelsItemAlternativesItemSummariesItem:
    properties:
      summary: optional<string>
      start_word: optional<integer>
      end_word: optional<integer>
    source:
      openapi: ../openapi.yml
    inline: true
  ChannelsItemAlternativesItemTopicsItem:
    properties:
      text: optional<string>
      start_word: optional<integer>
      end_word: optional<integer>
      topics: optional<list<string>>
    source:
      openapi: ../openapi.yml
    inline: true
  ChannelsItemAlternativesItem:
    properties:
      transcript: optional<string>
      confidence: optional<float>
      words: optional<list<ChannelsItemAlternativesItemWordsItem>>
      paragraphs: optional<ChannelsItemAlternativesItemParagraphs>
      summaries: optional<list<ChannelsItemAlternativesItemSummariesItem>>
      topics: optional<list<ChannelsItemAlternativesItemTopicsItem>>
    source:
      openapi: ../openapi.yml
    inline: true
  ChannelsItem:
    properties:
      search: optional<list<ChannelsItemSearchItem>>
      alternatives: optional<list<ChannelsItemAlternativesItem>>
      detected_language: optional<string>
    source:
      openapi: ../openapi.yml
  Channels: list<ChannelsItem>
  UtterancesItemWordsItem:
    properties:
      word: optional<string>
      start: optional<float>
      end: optional<float>
      confidence: optional<float>
      speaker: optional<integer>
      speaker_confidence: optional<integer>
      punctuated_word: optional<string>
    source:
      openapi: ../openapi.yml
    inline: true
  UtterancesItem:
    properties:
      start: optional<float>
      end: optional<float>
      confidence: optional<float>
      channel: optional<integer>
      transcript: optional<string>
      words: optional<list<UtterancesItemWordsItem>>
      speaker: optional<integer>
      id:
        type: optional<string>
        validation:
          format: uuid
    source:
      openapi: ../openapi.yml
  Utterances: list<UtterancesItem>
  Summary:
    properties:
      result: optional<string>
      short: optional<string>
    source:
      openapi: ../openapi.yml
  TopicsResultsTopicsSegmentsItemTopicsItem:
    properties:
      topic: optional<string>
      confidence_score: optional<float>
    source:
      openapi: ../openapi.yml
    inline: true
  TopicsResultsTopicsSegmentsItem:
    properties:
      text: optional<string>
      start_word: optional<integer>
      end_word: optional<integer>
      topics: optional<list<TopicsResultsTopicsSegmentsItemTopicsItem>>
    source:
      openapi: ../openapi.yml
    inline: true
  TopicsResultsTopics:
    properties:
      segments: optional<list<TopicsResultsTopicsSegmentsItem>>
    source:
      openapi: ../openapi.yml
    inline: true
  TopicsResults:
    properties:
      topics: optional<TopicsResultsTopics>
    source:
      openapi: ../openapi.yml
    inline: true
  Topics:
    docs: Output whenever `topics=true` is used
    properties:
      results: optional<TopicsResults>
    source:
      openapi: ../openapi.yml
  IntentsResultsIntentsSegmentsItemIntentsItem:
    properties:
      intent: optional<string>
      confidence_score: optional<float>
    source:
      openapi: ../openapi.yml
    inline: true
  IntentsResultsIntentsSegmentsItem:
    properties:
      text: optional<string>
      start_word: optional<integer>
      end_word: optional<integer>
      intents: optional<list<IntentsResultsIntentsSegmentsItemIntentsItem>>
    source:
      openapi: ../openapi.yml
    inline: true
  IntentsResultsIntents:
    properties:
      segments: optional<list<IntentsResultsIntentsSegmentsItem>>
    source:
      openapi: ../openapi.yml
    inline: true
  IntentsResults:
    properties:
      intents: optional<IntentsResultsIntents>
    source:
      openapi: ../openapi.yml
    inline: true
  Intents:
    docs: Output whenever `intents=true` is used
    properties:
      results: optional<IntentsResults>
    source:
      openapi: ../openapi.yml
  SentimentsSegmentsItem:
    properties:
      text: optional<string>
      start_word: optional<double>
      end_word: optional<double>
      sentiment: optional<string>
      sentiment_score: optional<double>
    source:
      openapi: ../openapi.yml
    inline: true
  SentimentsAverage:
    properties:
      sentiment: optional<string>
      sentiment_score: optional<double>
    source:
      openapi: ../openapi.yml
    inline: true
  Sentiments:
    docs: Output whenever `sentiment=true` is used
    properties:
      segments: optional<list<SentimentsSegmentsItem>>
      average: optional<SentimentsAverage>
    source:
      openapi: ../openapi.yml
  Results:
    properties:
      channels: Channels
      utterances: optional<Utterances>
      summary: optional<Summary>
      topics: optional<Topics>
      intents: optional<Intents>
      sentiments: optional<Sentiments>
    source:
      openapi: ../openapi.yml
  Response:
    docs: The standard transcription response
    properties:
      metadata: Metadata
      results: Results
    source:
      openapi: ../openapi.yml
  TextRequestUrl:
    properties:
      url:
        type: string
        docs: A URL pointing to the text source
        validation:
          format: uri
      text:
        type: optional<string>
        docs: The plain text to analyze
    source:
      openapi: ../openapi.yml
  TextRequestText:
    properties:
      url:
        type: optional<string>
        docs: A URL pointing to the text source
        validation:
          format: uri
      text:
        type: string
        docs: The plain text to analyze
    source:
      openapi: ../openapi.yml
  TextRequest:
    discriminated: false
    union:
      - TextRequestUrl
      - TextRequestText
    source:
      openapi: ../openapi.yml
  TextMetadataMetadataSummaryInfo:
    properties:
      model_uuid:
        type: optional<string>
        validation:
          format: uuid
      input_tokens: optional<integer>
      output_tokens: optional<integer>
    source:
      openapi: ../openapi.yml
    inline: true
  TextMetadataMetadataSentimentInfo:
    properties:
      model_uuid:
        type: optional<string>
        validation:
          format: uuid
      input_tokens: optional<integer>
      output_tokens: optional<integer>
    source:
      openapi: ../openapi.yml
    inline: true
  TextMetadataMetadataTopicsInfo:
    properties:
      model_uuid:
        type: optional<string>
        validation:
          format: uuid
      input_tokens: optional<integer>
      output_tokens: optional<integer>
    source:
      openapi: ../openapi.yml
    inline: true
  TextMetadataMetadataIntentsInfo:
    properties:
      model_uuid:
        type: optional<string>
        validation:
          format: uuid
      input_tokens: optional<integer>
      output_tokens: optional<integer>
    source:
      openapi: ../openapi.yml
    inline: true
  TextMetadataMetadata:
    properties:
      request_id:
        type: optional<string>
        validation:
          format: uuid
      created: optional<datetime>
      language: optional<string>
      summary_info: optional<TextMetadataMetadataSummaryInfo>
      sentiment_info: optional<TextMetadataMetadataSentimentInfo>
      topics_info: optional<TextMetadataMetadataTopicsInfo>
      intents_info: optional<TextMetadataMetadataIntentsInfo>
    source:
      openapi: ../openapi.yml
    inline: true
  TextMetadata:
    properties:
      metadata: optional<TextMetadataMetadata>
    source:
      openapi: ../openapi.yml
  TextSummaryResultsSummary:
    properties:
      text: optional<string>
    source:
      openapi: ../openapi.yml
    inline: true
  TextSummaryResults:
    properties:
      summary: optional<TextSummaryResultsSummary>
    source:
      openapi: ../openapi.yml
    inline: true
  TextSummary:
    docs: Output whenever `summary=true` is used
    properties:
      results: optional<TextSummaryResults>
    source:
      openapi: ../openapi.yml
  TextResults:
    properties:
      summary: optional<TextSummary>
      topics: optional<Topics>
      intents: optional<Intents>
      sentiments: optional<Sentiments>
    source:
      openapi: ../openapi.yml
  TextResponse:
    docs: The standard text response
    properties:
      metadata: TextMetadata
      results: TextResults
    source:
      openapi: ../openapi.yml
  SpeakResponse:
    docs: The standard text response
    properties:
      results:
        type: optional<string>
        validation:
          format: binary
    source:
      openapi: ../openapi.yml
  SttModelsItem:
    properties:
      name: optional<string>
      canonical_name: optional<string>
      architecture: optional<string>
      languages: optional<list<string>>
      version: optional<string>
      uuid: optional<string>
      batch: optional<boolean>
      streaming: optional<boolean>
      formatted_output: optional<boolean>
    source:
      openapi: ../openapi.yml
  SttModels: list<SttModelsItem>
  TtsModelsItemMetadata:
    properties:
      accent: optional<string>
      color: optional<string>
      image: optional<string>
      sample: optional<string>
      tags: optional<list<string>>
    source:
      openapi: ../openapi.yml
    inline: true
  TtsModelsItem:
    properties:
      name: optional<string>
      canonical_name: optional<string>
      architecture: optional<string>
      languages: optional<list<string>>
      version: optional<string>
      uuid: optional<string>
      metadata: optional<TtsModelsItemMetadata>
    source:
      openapi: ../openapi.yml
  TtsModels: list<TtsModelsItem>
  KeysItemMember:
    properties:
      member_id: optional<string>
      email: optional<string>
    source:
      openapi: ../openapi.yml
    inline: true
  KeysItemApiKey:
    properties:
      api_key_id: optional<string>
      comment: optional<string>
      scopes: optional<list<string>>
      created: optional<datetime>
    source:
      openapi: ../openapi.yml
    inline: true
  KeysItem:
    properties:
      member: optional<KeysItemMember>
      api_key: optional<KeysItemApiKey>
    source:
      openapi: ../openapi.yml
  Keys: list<KeysItem>
  KeyCreated:
    docs: API key created
    properties:
      api_key_id:
        type: optional<string>
        docs: The unique identifier of the API key
      key:
        type: optional<string>
        docs: The API key
      comment:
        type: optional<string>
        docs: A comment for the API key
      scopes:
        type: optional<list<string>>
        docs: the scopes for the API key
      tags:
        type: optional<list<string>>
        docs: the tags for the API key
    source:
      openapi: ../openapi.yml
  KeyMemberApiKey:
    properties:
      api_key_id: optional<string>
      comment: optional<string>
      scopes: optional<list<string>>
      created: optional<datetime>
    source:
      openapi: ../openapi.yml
    inline: true
  KeyMember:
    properties:
      member_id: optional<string>
      email: optional<string>
      first_name: optional<string>
      last_name: optional<string>
      api_key: optional<KeyMemberApiKey>
    source:
      openapi: ../openapi.yml
    inline: true
  Key:
    properties:
      member: optional<KeyMember>
    source:
      openapi: ../openapi.yml
  Request:
    docs: A single request
    properties:
      request_id:
        type: optional<string>
        docs: The unique identifier of the request
      project_uuid:
        type: optional<string>
        docs: The unique identifier of the project
      created:
        type: optional<datetime>
        docs: The date and time the request was created
      path:
        type: optional<string>
        docs: The API path of the request
      api_key_id:
        type: optional<string>
        docs: The unique identifier of the API key
      response:
        type: optional<map<string, unknown>>
        docs: The response of the request
      code:
        type: optional<integer>
        docs: The response code of the request
      deployment:
        type: optional<string>
        docs: The deployment type
      callback:
        type: optional<string>
        docs: The callback URL for the request
    source:
      openapi: ../openapi.yml
errors:
  ListenRequestBadRequestError:
    status-code: 400
    type: ListenRequestBadRequestErrorBody
    docs: Bad Request
    examples:
      - value:
          err_code: INVALID_QUERY_PARAMETER
          err_msg: Failed to deserialize query parameters...
          request_id: 123456-7890-1234-5678-901234
  TextReadRequestBadRequestError:
    status-code: 400
    type: TextReadRequestBadRequestErrorBody
    docs: Bad Request
    examples:
      - value:
          err_code: INVALID_QUERY_PARAMETER
          err_msg: Failed to deserialize query parameters...
          request_id: 123456-7890-1234-5678-901234
  SpeakRequestBadRequestError:
    status-code: 400
    type: SpeakRequestBadRequestErrorBody
    docs: Bad Request
    examples:
      - value:
          err_code: INVALID_QUERY_PARAMETER
          err_msg: Failed to deserialize query parameters...
          request_id: 123456-7890-1234-5678-901234
  SpeakRequestForbiddenError:
    status-code: 403
    type: SpeakRequestForbiddenErrorBody
    docs: Insufficient permissions, Model not found
    examples:
      - value:
          err_code: INSUFFICIENT_PERMISSIONS
          err_msg: Project does not have access to the requested model.
          request_id: 123456-7890-1234-5678-901234
  SpeakRequestContentTooLargeError:
    status-code: 413
    type: SpeakRequestContentTooLargeErrorBody
    docs: Payload too large
    examples:
      - value:
          err_code: Payload too large
          err_msg: Input text exceeds maximum character limit of 2000.
          request_id: 123456-7890-1234-5678-901234
  SpeakRequestUnsupportedMediaTypeError:
    status-code: 415
    type: SpeakRequestUnsupportedMediaTypeErrorBody
    docs: Unsupported media type
    examples:
      - value:
          err_code: UNSUPPORTED_MEDIA_TYPE
          err_msg: >-
            Content-Type header is not supported. Content-Type must be either
            text/plain or application/json.
          request_id: 123456-7890-1234-5678-901234
  ListProjectsRequestForbiddenError:
    status-code: 403
    type: ListProjectsRequestForbiddenErrorBody
    docs: Authentication failed
    examples:
      - value:
          category: UNAUTHORIZED
          message: Authentication failed.
          details: Check that you are using the correct credentials.
          request_id: 123456-7890-1234-5678-901234
  GetProjectRequestBadRequestError:
    status-code: 400
    type: GetProjectRequestBadRequestErrorBody
    docs: Project Bad Request
    examples:
      - value:
          category: INVALID_JSON
          message: Invalid JSON submitted.
          details: 'Json deserialize error: EOF while parsing a value at line 1 column 0'
          request_id: 123456-7890-1234-5678-901234
  GetProjectRequestForbiddenError:
    status-code: 403
    type: GetProjectRequestForbiddenErrorBody
    docs: Authentication failed
    examples:
      - value:
          category: UNAUTHORIZED
          message: Authentication failed.
          details: Check that you are using the correct credentials.
          request_id: 123456-7890-1234-5678-901234
  GetProjectRequestNotFoundError:
    status-code: 404
    type: GetProjectRequestNotFoundErrorBody
    docs: Project not found
    examples:
      - value:
          category: NOT_FOUND
          message: A project with the submitted ID cannot be found.
          details: >-
            Check that you have submitted the intended project ID and that the
            project has not been deleted.
          request_id: 123456-7890-1234-5678-901234
  DeleteProjectRequestBadRequestError:
    status-code: 400
    type: DeleteProjectRequestBadRequestErrorBody
    docs: Project Bad Request
    examples:
      - value:
          category: INVALID_JSON
          message: Invalid JSON submitted.
          details: 'Json deserialize error: EOF while parsing a value at line 1 column 0'
          request_id: 123456-7890-1234-5678-901234
  DeleteProjectRequestForbiddenError:
    status-code: 403
    type: DeleteProjectRequestForbiddenErrorBody
    docs: Authentication failed
    examples:
      - value:
          category: UNAUTHORIZED
          message: Authentication failed.
          details: Check that you are using the correct credentials.
          request_id: 123456-7890-1234-5678-901234
  DeleteProjectRequestNotFoundError:
    status-code: 404
    type: DeleteProjectRequestNotFoundErrorBody
    docs: Project not found
    examples:
      - value:
          category: NOT_FOUND
          message: A project with the submitted ID cannot be found.
          details: >-
            Check that you have submitted the intended project ID and that the
            project has not been deleted.
          request_id: 123456-7890-1234-5678-901234
  UpdateProjectRequestBadRequestError:
    status-code: 400
    type: UpdateProjectRequestBadRequestErrorBody
    docs: Project Bad Request
    examples:
      - value:
          category: INVALID_JSON
          message: Invalid JSON submitted.
          details: 'Json deserialize error: EOF while parsing a value at line 1 column 0'
          request_id: 123456-7890-1234-5678-901234
  UpdateProjectRequestForbiddenError:
    status-code: 403
    type: UpdateProjectRequestForbiddenErrorBody
    docs: Authentication failed
    examples:
      - value:
          category: UNAUTHORIZED
          message: Authentication failed.
          details: Check that you are using the correct credentials.
          request_id: 123456-7890-1234-5678-901234
  UpdateProjectRequestNotFoundError:
    status-code: 404
    type: UpdateProjectRequestNotFoundErrorBody
    docs: Project not found
    examples:
      - value:
          category: NOT_FOUND
          message: A project with the submitted ID cannot be found.
          details: >-
            Check that you have submitted the intended project ID and that the
            project has not been deleted.
          request_id: 123456-7890-1234-5678-901234
  GetProjectBalancesRequestBadRequestError:
    status-code: 400
    type: GetProjectBalancesRequestBadRequestErrorBody
    docs: Project Bad Request
    examples:
      - value:
          category: INVALID_JSON
          message: Invalid JSON submitted.
          details: 'Json deserialize error: EOF while parsing a value at line 1 column 0'
          request_id: 123456-7890-1234-5678-901234
  GetProjectBalancesRequestForbiddenError:
    status-code: 403
    type: GetProjectBalancesRequestForbiddenErrorBody
    docs: Authentication failed
    examples:
      - value:
          category: UNAUTHORIZED
          message: Authentication failed.
          details: Check that you are using the correct credentials.
          request_id: 123456-7890-1234-5678-901234
  GetProjectBalancesRequestNotFoundError:
    status-code: 404
    type: GetProjectBalancesRequestNotFoundErrorBody
    docs: Project not found
    examples:
      - value:
          category: NOT_FOUND
          message: A project with the submitted ID cannot be found.
          details: >-
            Check that you have submitted the intended project ID and that the
            project has not been deleted.
          request_id: 123456-7890-1234-5678-901234
  GetProjectBalanceRequestBadRequestError:
    status-code: 400
    type: GetProjectBalanceRequestBadRequestErrorBody
    docs: Project Bad Request
    examples:
      - value:
          category: INVALID_JSON
          message: Invalid JSON submitted.
          details: 'Json deserialize error: EOF while parsing a value at line 1 column 0'
          request_id: 123456-7890-1234-5678-901234
  GetProjectBalanceRequestForbiddenError:
    status-code: 403
    type: GetProjectBalanceRequestForbiddenErrorBody
    docs: Authentication failed
    examples:
      - value:
          category: UNAUTHORIZED
          message: Authentication failed.
          details: Check that you are using the correct credentials.
          request_id: 123456-7890-1234-5678-901234
  GetProjectBalanceRequestNotFoundError:
    status-code: 404
    type: GetProjectBalanceRequestNotFoundErrorBody
    docs: Project not found
    examples:
      - value:
          category: NOT_FOUND
          message: A project with the submitted ID cannot be found.
          details: >-
            Check that you have submitted the intended project ID and that the
            project has not been deleted.
          request_id: 123456-7890-1234-5678-901234
  ListProjectModelsRequestBadRequestError:
    status-code: 400
    type: ListProjectModelsRequestBadRequestErrorBody
    docs: Project Bad Request
    examples:
      - value:
          category: INVALID_JSON
          message: Invalid JSON submitted.
          details: 'Json deserialize error: EOF while parsing a value at line 1 column 0'
          request_id: 123456-7890-1234-5678-901234
  GetProjectModelRequestBadRequestError:
    status-code: 400
    type: GetProjectModelRequestBadRequestErrorBody
    docs: Project Bad Request
    examples:
      - value:
          category: INVALID_JSON
          message: Invalid JSON submitted.
          details: 'Json deserialize error: EOF while parsing a value at line 1 column 0'
          request_id: 123456-7890-1234-5678-901234
  ListProjectKeysRequestForbiddenError:
    status-code: 403
    type: ListProjectKeysRequestForbiddenErrorBody
    docs: Authentication failed
    examples:
      - value:
          category: UNAUTHORIZED
          message: Authentication failed.
          details: Check that you are using the correct credentials.
          request_id: 123456-7890-1234-5678-901234
  ListProjectKeysRequestNotFoundError:
    status-code: 404
    type: ListProjectKeysRequestNotFoundErrorBody
    docs: Project not found
    examples:
      - value:
          category: NOT_FOUND
          message: A project with the submitted ID cannot be found.
          details: >-
            Check that you have submitted the intended project ID and that the
            project has not been deleted.
          request_id: 123456-7890-1234-5678-901234
  CreateProjectKeyRequestForbiddenError:
    status-code: 403
    type: CreateProjectKeyRequestForbiddenErrorBody
    docs: Authentication failed
    examples:
      - value:
          category: UNAUTHORIZED
          message: Authentication failed.
          details: Check that you are using the correct credentials.
          request_id: 123456-7890-1234-5678-901234
  CreateProjectKeyRequestNotFoundError:
    status-code: 404
    type: CreateProjectKeyRequestNotFoundErrorBody
    docs: Project not found
    examples:
      - value:
          category: NOT_FOUND
          message: A project with the submitted ID cannot be found.
          details: >-
            Check that you have submitted the intended project ID and that the
            project has not been deleted.
          request_id: 123456-7890-1234-5678-901234
  GetProjectKeyRequestForbiddenError:
    status-code: 403
    type: GetProjectKeyRequestForbiddenErrorBody
    docs: Authentication failed
    examples:
      - value:
          category: UNAUTHORIZED
          message: Authentication failed.
          details: Check that you are using the correct credentials.
          request_id: 123456-7890-1234-5678-901234
  GetProjectKeyRequestNotFoundError:
    status-code: 404
    type: GetProjectKeyRequestNotFoundErrorBody
    docs: Project not found
    examples:
      - value:
          category: NOT_FOUND
          message: A project with the submitted ID cannot be found.
          details: >-
            Check that you have submitted the intended project ID and that the
            project has not been deleted.
          request_id: 123456-7890-1234-5678-901234
  DeleteProjectKeyRequestForbiddenError:
    status-code: 403
    type: DeleteProjectKeyRequestForbiddenErrorBody
    docs: Authentication failed
    examples:
      - value:
          category: UNAUTHORIZED
          message: Authentication failed.
          details: Check that you are using the correct credentials.
          request_id: 123456-7890-1234-5678-901234
  DeleteProjectKeyRequestNotFoundError:
    status-code: 404
    type: DeleteProjectKeyRequestNotFoundErrorBody
    docs: Project not found
    examples:
      - value:
          category: NOT_FOUND
          message: A project with the submitted ID cannot be found.
          details: >-
            Check that you have submitted the intended project ID and that the
            project has not been deleted.
          request_id: 123456-7890-1234-5678-901234
  ListProjectMembersRequestForbiddenError:
    status-code: 403
    type: ListProjectMembersRequestForbiddenErrorBody
    docs: Authentication failed
    examples:
      - value:
          category: UNAUTHORIZED
          message: Authentication failed.
          details: Check that you are using the correct credentials.
          request_id: 123456-7890-1234-5678-901234
  ListProjectMembersRequestNotFoundError:
    status-code: 404
    type: ListProjectMembersRequestNotFoundErrorBody
    docs: Project not found
    examples:
      - value:
          category: NOT_FOUND
          message: A project with the submitted ID cannot be found.
          details: >-
            Check that you have submitted the intended project ID and that the
            project has not been deleted.
          request_id: 123456-7890-1234-5678-901234
  DeleteProjectMemberRequestForbiddenError:
    status-code: 403
    type: DeleteProjectMemberRequestForbiddenErrorBody
    docs: Authentication failed
    examples:
      - value:
          category: UNAUTHORIZED
          message: Authentication failed.
          details: Check that you are using the correct credentials.
          request_id: 123456-7890-1234-5678-901234
  DeleteProjectMemberRequestNotFoundError:
    status-code: 404
    type: DeleteProjectMemberRequestNotFoundErrorBody
    docs: Project not found
    examples:
      - value:
          category: NOT_FOUND
          message: A project with the submitted ID cannot be found.
          details: >-
            Check that you have submitted the intended project ID and that the
            project has not been deleted.
          request_id: 123456-7890-1234-5678-901234
  ListProjectMemberScopesRequestForbiddenError:
    status-code: 403
    type: ListProjectMemberScopesRequestForbiddenErrorBody
    docs: Authentication failed
    examples:
      - value:
          category: UNAUTHORIZED
          message: Authentication failed.
          details: Check that you are using the correct credentials.
          request_id: 123456-7890-1234-5678-901234
  ListProjectMemberScopesRequestNotFoundError:
    status-code: 404
    type: ListProjectMemberScopesRequestNotFoundErrorBody
    docs: Project not found
    examples:
      - value:
          category: NOT_FOUND
          message: A project with the submitted ID cannot be found.
          details: >-
            Check that you have submitted the intended project ID and that the
            project has not been deleted.
          request_id: 123456-7890-1234-5678-901234
  UpdateProjectMemberScopesRequestForbiddenError:
    status-code: 403
    type: UpdateProjectMemberScopesRequestForbiddenErrorBody
    docs: Authentication failed
    examples:
      - value:
          category: UNAUTHORIZED
          message: Authentication failed.
          details: Check that you are using the correct credentials.
          request_id: 123456-7890-1234-5678-901234
  UpdateProjectMemberScopesRequestNotFoundError:
    status-code: 404
    type: UpdateProjectMemberScopesRequestNotFoundErrorBody
    docs: Project not found
    examples:
      - value:
          category: NOT_FOUND
          message: A project with the submitted ID cannot be found.
          details: >-
            Check that you have submitted the intended project ID and that the
            project has not been deleted.
          request_id: 123456-7890-1234-5678-901234
  CreateProjectInviteRequestBadRequestError:
    status-code: 400
    type: string
    docs: Invalid Request
    examples:
      - value: 'Invalid request: scope must be either ''member'', ''admin'' or ''owner''.'
  CreateProjectInviteRequestUnauthorizedError:
    status-code: 401
    type: string
    docs: Unauthorized
    examples:
      - value: User does not have sufficient permissions.
  CreateProjectInviteRequestForbiddenError:
    status-code: 403
    type: CreateProjectInviteRequestForbiddenErrorBody
    docs: Authentication failed
    examples:
      - value:
          category: UNAUTHORIZED
          message: Authentication failed.
          details: Check that you are using the correct credentials.
          request_id: 123456-7890-1234-5678-901234
  CreateProjectInviteRequestNotFoundError:
    status-code: 404
    type: CreateProjectInviteRequestNotFoundErrorBody
    docs: Project not found
    examples:
      - value:
          category: NOT_FOUND
          message: A project with the submitted ID cannot be found.
          details: >-
            Check that you have submitted the intended project ID and that the
            project has not been deleted.
          request_id: 123456-7890-1234-5678-901234
  DeleteProjectInviteRequestBadRequestError:
    status-code: 400
    type: string
    docs: Invalid Request
    examples:
      - value: 'Invalid request: scope must be either ''member'', ''admin'' or ''owner''.'
  DeleteProjectInviteRequestUnauthorizedError:
    status-code: 401
    type: string
    docs: Unauthorized
    examples:
      - value: User does not have sufficient permissions.
  DeleteProjectInviteRequestForbiddenError:
    status-code: 403
    type: DeleteProjectInviteRequestForbiddenErrorBody
    docs: Authentication failed
    examples:
      - value:
          category: UNAUTHORIZED
          message: Authentication failed.
          details: Check that you are using the correct credentials.
          request_id: 123456-7890-1234-5678-901234
  DeleteProjectInviteRequestNotFoundError:
    status-code: 404
    type: DeleteProjectInviteRequestNotFoundErrorBody
    docs: Project not found
    examples:
      - value:
          category: NOT_FOUND
          message: A project with the submitted ID cannot be found.
          details: >-
            Check that you have submitted the intended project ID and that the
            project has not been deleted.
          request_id: 123456-7890-1234-5678-901234
  DeleteProjectLeaveRequestBadRequestError:
    status-code: 400
    type: string
    docs: Invalid Request
    examples:
      - value: 'Invalid request: scope must be either ''member'', ''admin'' or ''owner''.'
  DeleteProjectLeaveRequestUnauthorizedError:
    status-code: 401
    type: string
    docs: Unauthorized
    examples:
      - value: User does not have sufficient permissions.
  DeleteProjectLeaveRequestForbiddenError:
    status-code: 403
    type: DeleteProjectLeaveRequestForbiddenErrorBody
    docs: Authentication failed
    examples:
      - value:
          category: UNAUTHORIZED
          message: Authentication failed.
          details: Check that you are using the correct credentials.
          request_id: 123456-7890-1234-5678-901234
  DeleteProjectLeaveRequestNotFoundError:
    status-code: 404
    type: DeleteProjectLeaveRequestNotFoundErrorBody
    docs: Project not found
    examples:
      - value:
          category: NOT_FOUND
          message: A project with the submitted ID cannot be found.
          details: >-
            Check that you have submitted the intended project ID and that the
            project has not been deleted.
          request_id: 123456-7890-1234-5678-901234
  ListProjectRequestsRequestBadRequestError:
    status-code: 400
    type: ListProjectRequestsRequestBadRequestErrorBody
    docs: Project Bad Request
    examples:
      - value:
          category: INVALID_JSON
          message: Invalid JSON submitted.
          details: 'Json deserialize error: EOF while parsing a value at line 1 column 0'
          request_id: 123456-7890-1234-5678-901234
  ListProjectRequestsRequestForbiddenError:
    status-code: 403
    type: ListProjectRequestsRequestForbiddenErrorBody
    docs: Authentication failed
    examples:
      - value:
          category: UNAUTHORIZED
          message: Authentication failed.
          details: Check that you are using the correct credentials.
          request_id: 123456-7890-1234-5678-901234
  ListProjectRequestsRequestNotFoundError:
    status-code: 404
    type: ListProjectRequestsRequestNotFoundErrorBody
    docs: Project not found
    examples:
      - value:
          category: NOT_FOUND
          message: A project with the submitted ID cannot be found.
          details: >-
            Check that you have submitted the intended project ID and that the
            project has not been deleted.
          request_id: 123456-7890-1234-5678-901234
  GetProjectUsageRequestBadRequestError:
    status-code: 400
    type: string
    docs: Invalid Request
    examples:
      - value: 'Invalid request: scope must be either ''member'', ''admin'' or ''owner''.'
  GetProjectUsageRequestUnauthorizedError:
    status-code: 401
    type: string
    docs: Unauthorized
    examples:
      - value: User does not have sufficient permissions.
  GetProjectUsageRequestForbiddenError:
    status-code: 403
    type: GetProjectUsageRequestForbiddenErrorBody
    docs: Authentication failed
    examples:
      - value:
          category: UNAUTHORIZED
          message: Authentication failed.
          details: Check that you are using the correct credentials.
          request_id: 123456-7890-1234-5678-901234
  GetProjectUsageRequestNotFoundError:
    status-code: 404
    type: GetProjectUsageRequestNotFoundErrorBody
    docs: Project not found
    examples:
      - value:
          category: NOT_FOUND
          message: A project with the submitted ID cannot be found.
          details: >-
            Check that you have submitted the intended project ID and that the
            project has not been deleted.
          request_id: 123456-7890-1234-5678-901234
  ListProjectUsageFieldsRequestBadRequestError:
    status-code: 400
    type: string
    docs: Invalid Request
    examples:
      - value: 'Invalid request: scope must be either ''member'', ''admin'' or ''owner''.'
  ListProjectUsageFieldsRequestUnauthorizedError:
    status-code: 401
    type: string
    docs: Unauthorized
    examples:
      - value: User does not have sufficient permissions.
  ListProjectUsageFieldsRequestForbiddenError:
    status-code: 403
    type: ListProjectUsageFieldsRequestForbiddenErrorBody
    docs: Authentication failed
    examples:
      - value:
          category: UNAUTHORIZED
          message: Authentication failed.
          details: Check that you are using the correct credentials.
          request_id: 123456-7890-1234-5678-901234
  ListProjectUsageFieldsRequestNotFoundError:
    status-code: 404
    type: ListProjectUsageFieldsRequestNotFoundErrorBody
    docs: Project not found
    examples:
      - value:
          category: NOT_FOUND
          message: A project with the submitted ID cannot be found.
          details: >-
            Check that you have submitted the intended project ID and that the
            project has not been deleted.
          request_id: 123456-7890-1234-5678-901234
  GetProjectUsageBreakdownRequestBadRequestError:
    status-code: 400
    type: GetProjectUsageBreakdownRequestBadRequestErrorBody
    docs: Project Bad Request
    examples:
      - value:
          category: INVALID_JSON
          message: Invalid JSON submitted.
          details: 'Json deserialize error: EOF while parsing a value at line 1 column 0'
          request_id: 123456-7890-1234-5678-901234
  GetProjectUsageBreakdownRequestUnauthorizedError:
    status-code: 401
    type: string
    docs: Unauthorized
    examples:
      - value: User does not have sufficient permissions.
  GetProjectUsageBreakdownRequestNotFoundError:
    status-code: 404
    type: GetProjectUsageBreakdownRequestNotFoundErrorBody
    docs: Project not found
    examples:
      - value:
          category: NOT_FOUND
          message: A project with the submitted ID cannot be found.
          details: >-
            Check that you have submitted the intended project ID and that the
            project has not been deleted.
          request_id: 123456-7890-1234-5678-901234
  ListProjectPurchasesRequestBadRequestError:
    status-code: 400
    type: ListProjectPurchasesRequestBadRequestErrorBody
    docs: Project Bad Request
    examples:
      - value:
          category: INVALID_JSON
          message: Invalid JSON submitted.
          details: 'Json deserialize error: EOF while parsing a value at line 1 column 0'
          request_id: 123456-7890-1234-5678-901234
  ListModelsRequestBadRequestError:
    status-code: 400
    type: ListModelsRequestBadRequestErrorBody
    docs: Project Bad Request
    examples:
      - value:
          category: INVALID_JSON
          message: Invalid JSON submitted.
          details: 'Json deserialize error: EOF while parsing a value at line 1 column 0'
          request_id: 123456-7890-1234-5678-901234
  GetModelRequestBadRequestError:
    status-code: 400
    type: GetModelRequestBadRequestErrorBody
    docs: Project Bad Request
    examples:
      - value:
          category: INVALID_JSON
          message: Invalid JSON submitted.
          details: 'Json deserialize error: EOF while parsing a value at line 1 column 0'
          request_id: 123456-7890-1234-5678-901234
  ListSelfHostedDistCredsRequestForbiddenError:
    status-code: 403
    type: ListSelfHostedDistCredsRequestForbiddenErrorBody
    docs: Authentication failed
    examples:
      - value:
          category: UNAUTHORIZED
          message: Authentication failed.
          details: Check that you are using the correct credentials.
          request_id: 123456-7890-1234-5678-901234
  ListSelfHostedDistCredsRequestNotFoundError:
    status-code: 404
    type: ListSelfHostedDistCredsRequestNotFoundErrorBody
    docs: Project not found
    examples:
      - value:
          category: NOT_FOUND
          message: A project with the submitted ID cannot be found.
          details: >-
            Check that you have submitted the intended project ID and that the
            project has not been deleted.
          request_id: 123456-7890-1234-5678-901234
  GetSelfHostedCredentialsRequestForbiddenError:
    status-code: 403
    type: GetSelfHostedCredentialsRequestForbiddenErrorBody
    docs: Authentication failed
    examples:
      - value:
          category: UNAUTHORIZED
          message: Authentication failed.
          details: Check that you are using the correct credentials.
          request_id: 123456-7890-1234-5678-901234
  GetSelfHostedCredentialsRequestNotFoundError:
    status-code: 404
    type: GetSelfHostedCredentialsRequestNotFoundErrorBody
    docs: Project not found
    examples:
      - value:
          category: NOT_FOUND
          message: A project with the submitted ID cannot be found.
          details: >-
            Check that you have submitted the intended project ID and that the
            project has not been deleted.
          request_id: 123456-7890-1234-5678-901234
  DeleteSelfHostedDistCredsRequestForbiddenError:
    status-code: 403
    type: DeleteSelfHostedDistCredsRequestForbiddenErrorBody
    docs: Authentication failed
    examples:
      - value:
          category: UNAUTHORIZED
          message: Authentication failed.
          details: Check that you are using the correct credentials.
          request_id: 123456-7890-1234-5678-901234
  DeleteSelfHostedDistCredsRequestNotFoundError:
    status-code: 404
    type: DeleteSelfHostedDistCredsRequestNotFoundErrorBody
    docs: Project not found
    examples:
      - value:
          category: NOT_FOUND
          message: A project with the submitted ID cannot be found.
          details: >-
            Check that you have submitted the intended project ID and that the
            project has not been deleted.
          request_id: 123456-7890-1234-5678-901234
",
    },
    "agent.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "channel": {
          "auth": false,
          "examples": [
            {
              "messages": [
                {
                  "body": {
                    "agent": {},
                    "type": "SettingsConfiguration",
                  },
                  "type": "publish",
                },
                {
                  "body": {
                    "type": "InjectionRefused",
                  },
                  "type": "subscribe",
                },
              ],
            },
          ],
          "headers": {
            "Sec-Websocket-Protocol": {
              "docs": "Used to establish a WebSocket connection with authentication. Format should be 'token, <DEEPGRAM_API_KEY>'",
              "name": "secWebsocketProtocol",
              "type": "string",
            },
          },
          "messages": {
            "publish": {
              "body": "AgentPublishEvent",
              "origin": "client",
            },
            "subscribe": {
              "body": "AgentSubscribeEvent",
              "origin": "server",
            },
          },
          "path": "/agent",
          "url": "public",
        },
        "types": {
          "AgentAudioDone": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "type": {
                "docs": "Message type identifier indicating the agent has finished sending audio",
                "type": "literal<"AgentAudioDone">",
              },
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "AgentErrorResponse": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "message": {
                "docs": "A description of what went wrong",
                "type": "string",
              },
              "type": {
                "docs": "Message type identifier for error responses",
                "type": "literal<"Error">",
              },
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "AgentKeepAlive": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "type": {
                "docs": "Message type identifier for agent keep alive signal",
                "type": "literal<"KeepAlive">",
              },
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "AgentPublishEvent": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../asyncapi.yml",
            },
            "union": [
              "SettingsConfiguration",
              "UpdateInstructions",
              "UpdateSpeak",
              "InjectAgentMessage",
              "FunctionCallResponse",
              "AgentKeepAlive",
            ],
          },
          "AgentStartedSpeaking": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "total_latency": {
                "docs": "Seconds from receiving the user's utterance to producing the agent's reply",
                "type": "float",
              },
              "tts_latency": {
                "docs": "The portion of total latency attributable to text-to-speech",
                "type": "float",
              },
              "ttt_latency": {
                "docs": "The portion of total latency attributable to text-to-text (usually an LLM)",
                "type": "float",
              },
              "type": {
                "docs": "Message type identifier for agent started speaking",
                "type": "literal<"AgentStartedSpeaking">",
              },
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "AgentSubscribeEvent": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../asyncapi.yml",
            },
            "union": [
              "InjectionRefused",
              "WelcomeMessage",
              "SettingsApplied",
              "ConversationText",
              "UserStartedSpeaking",
              "AgentThinking",
              "FunctionCallRequest",
              "FunctionCalling",
              "AgentStartedSpeaking",
              "AgentAudioDone",
              "AgentErrorResponse",
            ],
          },
          "AgentThinking": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "content": {
                "docs": "The text of the agent's thought process",
                "type": "string",
              },
              "type": {
                "docs": "Message type identifier for agent thinking",
                "type": "literal<"AgentThinking">",
              },
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "ConversationText": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "content": {
                "docs": "The actual statement that was spoken",
                "type": "string",
              },
              "role": {
                "docs": "Identifies who spoke the statement",
                "type": "ConversationTextRole",
              },
              "type": {
                "docs": "Message type identifier for conversation text",
                "type": "literal<"ConversationText">",
              },
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "ConversationTextRole": {
            "docs": "Identifies who spoke the statement",
            "enum": [
              "user",
              "assistant",
            ],
            "inline": true,
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "FunctionCallRequest": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "function_call_id": {
                "docs": "Unique identifier to correlate the response with this request",
                "type": "string",
              },
              "function_name": {
                "docs": "The name specified in the function definition",
                "type": "string",
              },
              "input": {
                "docs": "Parameters defined for this function in the function definition",
                "type": "map<string, unknown>",
              },
              "type": {
                "docs": "Message type identifier for function call requests",
                "type": "literal<"FunctionCallRequest">",
              },
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "FunctionCallResponse": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "function_call_id": {
                "docs": "The unique identifier matching the original function call request",
                "type": "string",
              },
              "output": {
                "docs": "The result of the function call execution",
                "type": "string",
              },
              "type": {
                "docs": "Message type identifier for function call responses",
                "type": "literal<"FunctionCallResponse">",
              },
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "FunctionCalling": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "type": {
                "docs": "Message type identifier for function calling status",
                "type": "literal<"FunctionCalling">",
              },
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "InjectAgentMessage": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "message": {
                "docs": "The statement that the agent should say",
                "type": "string",
              },
              "type": {
                "docs": "Message type identifier for injecting an agent message",
                "type": "literal<"InjectAgentMessage">",
              },
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "InjectionRefused": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "type": {
                "docs": "Message type identifier for injection refused",
                "type": "literal<"InjectionRefused">",
              },
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "SettingsApplied": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "type": {
                "docs": "Message type identifier for settings applied confirmation",
                "type": "literal<"SettingsApplied">",
              },
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "SettingsConfiguration": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "agent": "SettingsConfigurationAgent",
              "audio": {
                "docs": "Optional audio configuration settings",
                "type": "optional<SettingsConfigurationAudio>",
              },
              "context": "optional<SettingsConfigurationContext>",
              "type": "literal<"SettingsConfiguration">",
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "SettingsConfigurationAgent": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "listen": "optional<SettingsConfigurationAgentListen>",
              "speak": "optional<SettingsConfigurationAgentSpeak>",
              "think": "optional<SettingsConfigurationAgentThink>",
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "SettingsConfigurationAgentListen": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "model": {
                "default": "nova-2",
                "docs": "Model to use for speech recognition",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "SettingsConfigurationAgentSpeak": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "model": {
                "default": "aura-asteria-en",
                "docs": "Text-to-speech model",
                "type": "optional<string>",
              },
              "provider": {
                "docs": "Alternative TTS provider",
                "type": "optional<SettingsConfigurationAgentSpeakProvider>",
              },
              "voice_id": {
                "docs": "Unique voice identifier for the selected provider",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "SettingsConfigurationAgentSpeakProvider": {
            "docs": "Alternative TTS provider",
            "enum": [
              "eleven_labs",
              "cartesia",
            ],
            "inline": true,
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "SettingsConfigurationAgentThink": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "functions": "optional<list<SettingsConfigurationAgentThinkFunctionsItem>>",
              "instructions": {
                "docs": "LLM System prompt",
                "type": "optional<string>",
              },
              "model": {
                "docs": "LLM model to use",
                "type": "optional<string>",
              },
              "provider": "optional<SettingsConfigurationAgentThinkProvider>",
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "SettingsConfigurationAgentThinkFunctionsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "description": {
                "docs": "Description of function purpose and usage",
                "type": "optional<string>",
              },
              "headers": "optional<list<SettingsConfigurationAgentThinkFunctionsItemHeadersItem>>",
              "method": {
                "default": "post",
                "docs": "HTTP method for function call",
                "type": "optional<string>",
              },
              "name": {
                "docs": "Function name",
                "type": "optional<string>",
              },
              "parameters": "optional<SettingsConfigurationAgentThinkFunctionsItemParameters>",
              "url": {
                "docs": "Function endpoint URL",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "SettingsConfigurationAgentThinkFunctionsItemHeadersItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "key": "optional<string>",
              "value": "optional<string>",
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "SettingsConfigurationAgentThinkFunctionsItemParameters": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "properties": "optional<map<string, SettingsConfigurationAgentThinkFunctionsItemParametersPropertiesValue>>",
              "required": "optional<list<string>>",
              "type": "optional<string>",
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "SettingsConfigurationAgentThinkFunctionsItemParametersPropertiesValue": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "description": "optional<string>",
              "type": "optional<string>",
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "SettingsConfigurationAgentThinkProvider": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "type": {
                "docs": "LLM provider type",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "SettingsConfigurationAudio": {
            "docs": "Optional audio configuration settings",
            "inline": true,
            "properties": {
              "input": {
                "docs": "Optional audio input configuration settings",
                "type": "optional<SettingsConfigurationAudioInput>",
              },
              "output": {
                "docs": "Audio output configuration settings",
                "type": "optional<SettingsConfigurationAudioOutput>",
              },
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "SettingsConfigurationAudioInput": {
            "docs": "Optional audio input configuration settings",
            "inline": true,
            "properties": {
              "encoding": {
                "default": "linear16",
                "docs": "Audio encoding format",
                "type": "optional<string>",
              },
              "sample_rate": {
                "default": 24000,
                "docs": "Sample rate in Hz",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "SettingsConfigurationAudioOutput": {
            "docs": "Audio output configuration settings",
            "inline": true,
            "properties": {
              "bitrate": "optional<integer>",
              "container": "optional<string>",
              "encoding": "optional<string>",
              "sample_rate": {
                "default": 24000,
                "docs": "Sample rate in Hz",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "SettingsConfigurationContext": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "messages": {
                "docs": "LLM message history for conversation restoration",
                "type": "optional<list<map<string, unknown>>>",
              },
              "replay": {
                "default": false,
                "docs": "Whether to replay the last assistant message",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "UpdateInstructions": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "instructions": {
                "docs": "The new instructions to give to the Think model",
                "type": "string",
              },
              "type": {
                "docs": "Message type identifier",
                "type": "literal<"UpdateInstructions">",
              },
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "UpdateSpeak": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "model": {
                "docs": "The new Text-to-Speech model to use",
                "type": "string",
              },
              "type": {
                "docs": "Message type identifier for updating the speak model",
                "type": "literal<"UpdateSpeak">",
              },
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "UserStartedSpeaking": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "type": {
                "docs": "Message type identifier indicating that the user has begun speaking",
                "type": "literal<"UserStartedSpeaking">",
              },
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "WelcomeMessage": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "session_id": {
                "docs": "Unique identifier for the websocket session",
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "type": {
                "docs": "Message type identifier for welcome message",
                "type": "literal<"Welcome">",
              },
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
        },
      },
      "rawContents": "channel:
  path: /agent
  url: public
  auth: false
  headers:
    Sec-Websocket-Protocol:
      type: string
      name: secWebsocketProtocol
      docs: >-
        Used to establish a WebSocket connection with authentication. Format
        should be 'token, <DEEPGRAM_API_KEY>'
  messages:
    subscribe:
      origin: server
      body: AgentSubscribeEvent
    publish:
      origin: client
      body: AgentPublishEvent
  examples:
    - messages:
        - type: publish
          body:
            type: SettingsConfiguration
            agent: {}
        - type: subscribe
          body:
            type: InjectionRefused
types:
  InjectionRefused:
    properties:
      type:
        type: literal<"InjectionRefused">
        docs: Message type identifier for injection refused
    source:
      openapi: ../asyncapi.yml
    inline: true
  WelcomeMessage:
    properties:
      type:
        type: literal<"Welcome">
        docs: Message type identifier for welcome message
      session_id:
        type: string
        docs: Unique identifier for the websocket session
        validation:
          format: uuid
    source:
      openapi: ../asyncapi.yml
    inline: true
  SettingsApplied:
    properties:
      type:
        type: literal<"SettingsApplied">
        docs: Message type identifier for settings applied confirmation
    source:
      openapi: ../asyncapi.yml
    inline: true
  ConversationTextRole:
    enum:
      - user
      - assistant
    docs: Identifies who spoke the statement
    inline: true
    source:
      openapi: ../asyncapi.yml
  ConversationText:
    properties:
      type:
        type: literal<"ConversationText">
        docs: Message type identifier for conversation text
      role:
        type: ConversationTextRole
        docs: Identifies who spoke the statement
      content:
        type: string
        docs: The actual statement that was spoken
    source:
      openapi: ../asyncapi.yml
    inline: true
  UserStartedSpeaking:
    properties:
      type:
        type: literal<"UserStartedSpeaking">
        docs: Message type identifier indicating that the user has begun speaking
    source:
      openapi: ../asyncapi.yml
    inline: true
  AgentThinking:
    properties:
      type:
        type: literal<"AgentThinking">
        docs: Message type identifier for agent thinking
      content:
        type: string
        docs: The text of the agent's thought process
    source:
      openapi: ../asyncapi.yml
    inline: true
  FunctionCallRequest:
    properties:
      type:
        type: literal<"FunctionCallRequest">
        docs: Message type identifier for function call requests
      function_name:
        type: string
        docs: The name specified in the function definition
      function_call_id:
        type: string
        docs: Unique identifier to correlate the response with this request
      input:
        type: map<string, unknown>
        docs: Parameters defined for this function in the function definition
    source:
      openapi: ../asyncapi.yml
    inline: true
  FunctionCalling:
    properties:
      type:
        type: literal<"FunctionCalling">
        docs: Message type identifier for function calling status
    source:
      openapi: ../asyncapi.yml
    inline: true
  AgentStartedSpeaking:
    properties:
      type:
        type: literal<"AgentStartedSpeaking">
        docs: Message type identifier for agent started speaking
      total_latency:
        type: float
        docs: >-
          Seconds from receiving the user's utterance to producing the agent's
          reply
      tts_latency:
        type: float
        docs: The portion of total latency attributable to text-to-speech
      ttt_latency:
        type: float
        docs: >-
          The portion of total latency attributable to text-to-text (usually an
          LLM)
    source:
      openapi: ../asyncapi.yml
    inline: true
  AgentAudioDone:
    properties:
      type:
        type: literal<"AgentAudioDone">
        docs: >-
          Message type identifier indicating the agent has finished sending
          audio
    source:
      openapi: ../asyncapi.yml
    inline: true
  AgentErrorResponse:
    properties:
      type:
        type: literal<"Error">
        docs: Message type identifier for error responses
      message:
        type: string
        docs: A description of what went wrong
    source:
      openapi: ../asyncapi.yml
    inline: true
  AgentSubscribeEvent:
    discriminated: false
    union:
      - InjectionRefused
      - WelcomeMessage
      - SettingsApplied
      - ConversationText
      - UserStartedSpeaking
      - AgentThinking
      - FunctionCallRequest
      - FunctionCalling
      - AgentStartedSpeaking
      - AgentAudioDone
      - AgentErrorResponse
    source:
      openapi: ../asyncapi.yml
  SettingsConfigurationAudioInput:
    docs: Optional audio input configuration settings
    properties:
      encoding:
        type: optional<string>
        docs: Audio encoding format
        default: linear16
      sample_rate:
        type: optional<integer>
        docs: Sample rate in Hz
        default: 24000
    source:
      openapi: ../asyncapi.yml
    inline: true
  SettingsConfigurationAudioOutput:
    docs: Audio output configuration settings
    properties:
      encoding: optional<string>
      sample_rate:
        type: optional<integer>
        docs: Sample rate in Hz
        default: 24000
      bitrate: optional<integer>
      container: optional<string>
    source:
      openapi: ../asyncapi.yml
    inline: true
  SettingsConfigurationAudio:
    docs: Optional audio configuration settings
    properties:
      input:
        type: optional<SettingsConfigurationAudioInput>
        docs: Optional audio input configuration settings
      output:
        type: optional<SettingsConfigurationAudioOutput>
        docs: Audio output configuration settings
    source:
      openapi: ../asyncapi.yml
    inline: true
  SettingsConfigurationAgentListen:
    properties:
      model:
        type: optional<string>
        docs: Model to use for speech recognition
        default: nova-2
    source:
      openapi: ../asyncapi.yml
    inline: true
  SettingsConfigurationAgentThinkProvider:
    properties:
      type:
        type: optional<string>
        docs: LLM provider type
    source:
      openapi: ../asyncapi.yml
    inline: true
  SettingsConfigurationAgentThinkFunctionsItemHeadersItem:
    properties:
      key: optional<string>
      value: optional<string>
    source:
      openapi: ../asyncapi.yml
    inline: true
  SettingsConfigurationAgentThinkFunctionsItemParametersPropertiesValue:
    properties:
      type: optional<string>
      description: optional<string>
    source:
      openapi: ../asyncapi.yml
    inline: true
  SettingsConfigurationAgentThinkFunctionsItemParameters:
    properties:
      type: optional<string>
      properties: >-
        optional<map<string,
        SettingsConfigurationAgentThinkFunctionsItemParametersPropertiesValue>>
      required: optional<list<string>>
    source:
      openapi: ../asyncapi.yml
    inline: true
  SettingsConfigurationAgentThinkFunctionsItem:
    properties:
      name:
        type: optional<string>
        docs: Function name
      description:
        type: optional<string>
        docs: Description of function purpose and usage
      url:
        type: optional<string>
        docs: Function endpoint URL
      headers: optional<list<SettingsConfigurationAgentThinkFunctionsItemHeadersItem>>
      method:
        type: optional<string>
        docs: HTTP method for function call
        default: post
      parameters: optional<SettingsConfigurationAgentThinkFunctionsItemParameters>
    source:
      openapi: ../asyncapi.yml
    inline: true
  SettingsConfigurationAgentThink:
    properties:
      provider: optional<SettingsConfigurationAgentThinkProvider>
      model:
        type: optional<string>
        docs: LLM model to use
      instructions:
        type: optional<string>
        docs: LLM System prompt
      functions: optional<list<SettingsConfigurationAgentThinkFunctionsItem>>
    source:
      openapi: ../asyncapi.yml
    inline: true
  SettingsConfigurationAgentSpeakProvider:
    enum:
      - eleven_labs
      - cartesia
    docs: Alternative TTS provider
    inline: true
    source:
      openapi: ../asyncapi.yml
  SettingsConfigurationAgentSpeak:
    properties:
      model:
        type: optional<string>
        docs: Text-to-speech model
        default: aura-asteria-en
      provider:
        type: optional<SettingsConfigurationAgentSpeakProvider>
        docs: Alternative TTS provider
      voice_id:
        type: optional<string>
        docs: Unique voice identifier for the selected provider
    source:
      openapi: ../asyncapi.yml
    inline: true
  SettingsConfigurationAgent:
    properties:
      listen: optional<SettingsConfigurationAgentListen>
      think: optional<SettingsConfigurationAgentThink>
      speak: optional<SettingsConfigurationAgentSpeak>
    source:
      openapi: ../asyncapi.yml
    inline: true
  SettingsConfigurationContext:
    properties:
      messages:
        type: optional<list<map<string, unknown>>>
        docs: LLM message history for conversation restoration
      replay:
        type: optional<boolean>
        docs: Whether to replay the last assistant message
        default: false
    source:
      openapi: ../asyncapi.yml
    inline: true
  SettingsConfiguration:
    properties:
      type: literal<"SettingsConfiguration">
      audio:
        type: optional<SettingsConfigurationAudio>
        docs: Optional audio configuration settings
      agent: SettingsConfigurationAgent
      context: optional<SettingsConfigurationContext>
    source:
      openapi: ../asyncapi.yml
    inline: true
  UpdateInstructions:
    properties:
      type:
        type: literal<"UpdateInstructions">
        docs: Message type identifier
      instructions:
        type: string
        docs: The new instructions to give to the Think model
    source:
      openapi: ../asyncapi.yml
    inline: true
  UpdateSpeak:
    properties:
      type:
        type: literal<"UpdateSpeak">
        docs: Message type identifier for updating the speak model
      model:
        type: string
        docs: The new Text-to-Speech model to use
    source:
      openapi: ../asyncapi.yml
    inline: true
  InjectAgentMessage:
    properties:
      type:
        type: literal<"InjectAgentMessage">
        docs: Message type identifier for injecting an agent message
      message:
        type: string
        docs: The statement that the agent should say
    source:
      openapi: ../asyncapi.yml
    inline: true
  FunctionCallResponse:
    properties:
      type:
        type: literal<"FunctionCallResponse">
        docs: Message type identifier for function call responses
      function_call_id:
        type: string
        docs: The unique identifier matching the original function call request
      output:
        type: string
        docs: The result of the function call execution
    source:
      openapi: ../asyncapi.yml
    inline: true
  AgentKeepAlive:
    properties:
      type:
        type: literal<"KeepAlive">
        docs: Message type identifier for agent keep alive signal
    source:
      openapi: ../asyncapi.yml
    inline: true
  AgentPublishEvent:
    discriminated: false
    union:
      - SettingsConfiguration
      - UpdateInstructions
      - UpdateSpeak
      - InjectAgentMessage
      - FunctionCallResponse
      - AgentKeepAlive
    source:
      openapi: ../asyncapi.yml
",
    },
    "listen.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "channel": {
          "auth": false,
          "examples": [
            {
              "messages": [
                {
                  "body": "string",
                  "type": "publish",
                },
                {
                  "body": {},
                  "type": "subscribe",
                },
              ],
            },
          ],
          "headers": {
            "Sec-Websocket-Protocol": {
              "docs": "Used to establish a WebSocket connection with authentication. Format should be 'token, <DEEPGRAM_API_KEY>'",
              "name": "secWebsocketProtocol",
              "type": "string",
            },
          },
          "messages": {
            "publish": {
              "body": "ListenPublishEvent",
              "origin": "client",
            },
            "subscribe": {
              "body": "ListenSubscribeEvent",
              "origin": "server",
            },
          },
          "path": "/v1/listen",
          "query-parameters": {
            "callback": {
              "docs": "URL to which we'll make the callback request",
              "type": "string",
            },
            "callback_method": {
              "default": "POST",
              "docs": "HTTP method by which the callback request will be made",
              "type": "ListenCallbackMethod",
            },
            "channels": {
              "default": "1",
              "docs": "The number of channels in the submitted audio",
              "type": "string",
            },
            "diarize": {
              "default": "false",
              "docs": "Recognize speaker changes. Each word in the transcript will be assigned a speaker number starting at 0",
              "type": "ListenDiarize",
            },
            "diarize_version": {
              "default": "v2",
              "docs": "Version of the diarization feature to use. Only used when the diarization feature is enabled (`diarize=true` is passed to the API)",
              "type": "string",
            },
            "dictation": {
              "default": "false",
              "docs": "Identify and extract key entities from content in submitted audio",
              "type": "ListenDictation",
            },
            "encoding": {
              "docs": "Specify the expected encoding of your submitted audio",
              "type": "ListenEncoding",
            },
            "endpointing": {
              "default": "10",
              "docs": "Indicates how long Deepgram will wait to detect whether a speaker has finished speaking or pauses for a significant period of time. When set to a value, the streaming endpoint immediately finalizes the transcription for the processed time range and returns the transcript with a speech_final parameter set to true. Can also be set to false to disable endpointing",
              "type": "string",
            },
            "extra": {
              "docs": "Arbitrary key-value pairs that are attached to the API response for usage in downstream processing",
              "type": "string",
            },
            "filler_words": {
              "default": "false",
              "docs": "Filler Words can help transcribe interruptions in your audio, like "uh" and "um"",
              "type": "ListenFillerWords",
            },
            "interim_results": {
              "default": "false",
              "docs": "Specifies whether the streaming endpoint should provide ongoing transcription updates as more audio is received. When set to true, the endpoint sends continuous updates, meaning transcription results may evolve over time",
              "type": "ListenInterimResults",
            },
            "keyterm": {
              "docs": "Key term prompting can boost or suppress specialized terminology and brands. Only compatible with Nova-3",
              "type": "string",
            },
            "keywords": {
              "docs": "Keywords can boost or suppress specialized terminology and brands",
              "type": "string",
            },
            "language": {
              "default": "en",
              "docs": "The [BCP-47 language tag](https://tools.ietf.org/html/bcp47) that hints at the primary spoken language. Depending on the Model you choose only certain languages are available",
              "type": "ListenLanguage",
            },
            "model": {
              "docs": "AI model to use for the transcription",
              "type": "ListenModel",
            },
            "multichannel": {
              "default": "false",
              "docs": "Transcribe each audio channel independently",
              "type": "ListenMultichannel",
            },
            "numerals": {
              "default": "false",
              "docs": "Convert numbers from written format to numerical format",
              "type": "ListenNumerals",
            },
            "profanity_filter": {
              "default": "false",
              "docs": "Profanity Filter looks for recognized profanity and converts it to the nearest recognized non-profane word or removes it from the transcript completely",
              "type": "ListenProfanityFilter",
            },
            "punctuate": {
              "default": "false",
              "docs": "Add punctuation and capitalization to the transcript",
              "type": "ListenPunctuate",
            },
            "redact": {
              "default": "false",
              "docs": "Redaction removes sensitive information from your transcripts",
              "type": "ListenRedact",
            },
            "replace": {
              "docs": "Search for terms or phrases in submitted audio and replaces them",
              "type": "string",
            },
            "sample_rate": {
              "docs": "Sample rate of submitted audio. Required (and only read) when a value is provided for encoding",
              "type": "string",
            },
            "search": {
              "docs": "Search for terms or phrases in submitted audio",
              "type": "string",
            },
            "smart_format": {
              "default": "false",
              "docs": "Apply formatting to transcript output. When set to true, additional formatting will be applied to transcripts to improve readability",
              "type": "ListenSmartFormat",
            },
            "tag": {
              "docs": "Label your requests for the purpose of identification during usage reporting",
              "type": "string",
            },
            "utterance_end": {
              "docs": "Indicates how long Deepgram will wait to send an UtteranceEnd message after a word has been transcribed. Use with interim_results",
              "type": "string",
            },
            "vad_events": {
              "default": "false",
              "docs": "Indicates that speech has started. You'll begin receiving Speech Started messages upon speech starting",
              "type": "ListenVadEvents",
            },
            "version": {
              "default": "latest",
              "docs": "Version of an AI model to use",
              "type": "string",
            },
          },
          "url": "public",
        },
        "types": {
          "ControlMessageResponse": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../asyncapi.yml",
            },
            "union": [
              "ControlMessageResponseZero",
              "ControlMessageResponseOne",
              "ControlMessageResponseTwo",
            ],
          },
          "ControlMessageResponseOne": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "channels": {
                "docs": "Number of audio channels",
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "created": {
                "docs": "Timestamp when the response was created",
                "type": "optional<datetime>",
              },
              "duration": {
                "docs": "Duration of the audio in seconds",
                "type": "optional<float>",
              },
              "request_id": {
                "docs": "Unique identifier for the request",
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "sha256": {
                "docs": "SHA-256 hash of the audio content",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[a-fA-F0-9]{64}$",
                },
              },
              "transaction_key": {
                "docs": "Deprecated field",
                "type": "optional<string>",
              },
              "type": "optional<literal<"Metadata">>",
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "ControlMessageResponseTwo": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "channels": {
                "docs": "Number of audio channels",
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "created": {
                "docs": "Timestamp when the response was created",
                "type": "optional<datetime>",
              },
              "duration": {
                "docs": "Duration of the audio in seconds",
                "type": "optional<float>",
              },
              "request_id": {
                "docs": "Unique identifier for the request",
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "sha256": {
                "docs": "SHA-256 hash of the audio content",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[a-fA-F0-9]{64}$",
                },
              },
              "transaction_key": {
                "docs": "Deprecated field",
                "type": "optional<string>",
              },
              "type": "optional<literal<"CloseStream">>",
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "ControlMessageResponseZero": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "channel": {
                "docs": "The channel number being finalized",
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "type": "optional<literal<"Finalize">>",
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "ListenCallbackMethod": {
            "default": "POST",
            "docs": "HTTP method by which the callback request will be made",
            "enum": [
              "POST",
              "GET",
              "PUT",
              "DELETE",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "ListenControlMessagesRequest": {
            "availability": undefined,
            "base-properties": {},
            "discriminant": "type",
            "docs": undefined,
            "encoding": undefined,
            "source": {
              "openapi": "../asyncapi.yml",
            },
            "union": {
              "CloseStream": "ListenControlMessagesRequestCloseStream",
              "Finalize": "ListenControlMessagesRequestFinalize",
              "KeepAlive": "ListenControlMessagesRequestKeepAlive",
            },
          },
          "ListenControlMessagesRequestCloseStream": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "ListenControlMessagesRequestFinalize": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "ListenControlMessagesRequestKeepAlive": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "ListenDiarize": {
            "default": "false",
            "docs": "Recognize speaker changes. Each word in the transcript will be assigned a speaker number starting at 0",
            "enum": [
              "true",
              "false",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "ListenDictation": {
            "default": "false",
            "docs": "Identify and extract key entities from content in submitted audio",
            "enum": [
              "true",
              "false",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "ListenEncoding": {
            "docs": "Specify the expected encoding of your submitted audio",
            "enum": [
              "linear16",
              "flac",
              "mulaw",
              {
                "name": "AmrNb",
                "value": "amr-nb",
              },
              {
                "name": "AmrWb",
                "value": "amr-wb",
              },
              "opus",
              "speex",
              "g729",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "ListenFillerWords": {
            "default": "false",
            "docs": "Filler Words can help transcribe interruptions in your audio, like "uh" and "um"",
            "enum": [
              "true",
              "false",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "ListenInterimResults": {
            "default": "false",
            "docs": "Specifies whether the streaming endpoint should provide ongoing transcription updates as more audio is received. When set to true, the endpoint sends continuous updates, meaning transcription results may evolve over time",
            "enum": [
              "true",
              "false",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "ListenLanguage": {
            "default": "en",
            "docs": "The [BCP-47 language tag](https://tools.ietf.org/html/bcp47) that hints at the primary spoken language. Depending on the Model you choose only certain languages are available",
            "enum": [
              "bg",
              "ca",
              "cs",
              "da",
              {
                "name": "DaDk",
                "value": "da-DK",
              },
              "de",
              {
                "name": "DeCh",
                "value": "de-CH",
              },
              "el",
              "en",
              {
                "name": "EnAu",
                "value": "en-AU",
              },
              {
                "name": "EnGb",
                "value": "en-GB",
              },
              {
                "name": "EnIn",
                "value": "en-IN",
              },
              {
                "name": "EnNz",
                "value": "en-NZ",
              },
              {
                "name": "EnUs",
                "value": "en-US",
              },
              "es",
              {
                "name": "Es419",
                "value": "es-419",
              },
              {
                "name": "EsLatam",
                "value": "es-LATAM",
              },
              "et",
              "fi",
              "fr",
              {
                "name": "FrCa",
                "value": "fr-CA",
              },
              "hi",
              {
                "name": "HiLatn",
                "value": "hi-Latn",
              },
              "hu",
              "id",
              "it",
              "ja",
              "ko",
              {
                "name": "KoKr",
                "value": "ko-KR",
              },
              "lt",
              "lv",
              "ms",
              "nl",
              {
                "name": "NlBe",
                "value": "nl-BE",
              },
              "no",
              "pl",
              "pt",
              {
                "name": "PtBr",
                "value": "pt-BR",
              },
              {
                "name": "PtPt",
                "value": "pt-PT",
              },
              "ro",
              "ru",
              "sk",
              "sv",
              {
                "name": "SvSe",
                "value": "sv-SE",
              },
              "taq",
              "th",
              {
                "name": "ThTh",
                "value": "th-TH",
              },
              "tr",
              "uk",
              "vi",
              "zh",
              {
                "name": "ZhCn",
                "value": "zh-CN",
              },
              {
                "name": "ZhHk",
                "value": "zh-HK",
              },
              {
                "name": "ZhHans",
                "value": "zh-Hans",
              },
              {
                "name": "ZhHant",
                "value": "zh-Hant",
              },
              {
                "name": "ZhTw",
                "value": "zh-TW",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "ListenModel": {
            "docs": "AI model to use for the transcription",
            "enum": [
              {
                "name": "Nova3",
                "value": "nova-3",
              },
              {
                "name": "Nova3General",
                "value": "nova-3-general",
              },
              {
                "name": "Nova2",
                "value": "nova-2",
              },
              {
                "name": "Nova2General",
                "value": "nova-2-general",
              },
              {
                "name": "Nova2Meeting",
                "value": "nova-2-meeting",
              },
              {
                "name": "Nova2Finance",
                "value": "nova-2-finance",
              },
              {
                "name": "Nova2Conversationalai",
                "value": "nova-2-conversationalai",
              },
              {
                "name": "Nova2Voicemail",
                "value": "nova-2-voicemail",
              },
              {
                "name": "Nova2Video",
                "value": "nova-2-video",
              },
              {
                "name": "Nova2Medical",
                "value": "nova-2-medical",
              },
              {
                "name": "Nova2Drivethru",
                "value": "nova-2-drivethru",
              },
              {
                "name": "Nova2Automotive",
                "value": "nova-2-automotive",
              },
              "nova",
              {
                "name": "NovaGeneral",
                "value": "nova-general",
              },
              {
                "name": "NovaPhonecall",
                "value": "nova-phonecall",
              },
              {
                "name": "NovaMedical",
                "value": "nova-medical",
              },
              "enhanced",
              {
                "name": "EnhancedGeneral",
                "value": "enhanced-general",
              },
              {
                "name": "EnhancedMeeting",
                "value": "enhanced-meeting",
              },
              {
                "name": "EnhancedPhonecall",
                "value": "enhanced-phonecall",
              },
              {
                "name": "EnhancedFinance",
                "value": "enhanced-finance",
              },
              "base",
              "meeting",
              "phonecall",
              "finance",
              "conversationalai",
              "voicemail",
              "video",
              "custom",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "ListenMultichannel": {
            "default": "false",
            "docs": "Transcribe each audio channel independently",
            "enum": [
              "true",
              "false",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "ListenNumerals": {
            "default": "false",
            "docs": "Convert numbers from written format to numerical format",
            "enum": [
              "true",
              "false",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "ListenProfanityFilter": {
            "default": "false",
            "docs": "Profanity Filter looks for recognized profanity and converts it to the nearest recognized non-profane word or removes it from the transcript completely",
            "enum": [
              "true",
              "false",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "ListenPublishEvent": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../asyncapi.yml",
            },
            "union": [
              {
                "docs": "Raw audio data to be transcribed. Should be sent as a binary WebSocket message without base64 encoding",
                "type": "string",
                "validation": {
                  "format": "binary",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "ListenControlMessagesRequest",
            ],
          },
          "ListenPunctuate": {
            "default": "false",
            "docs": "Add punctuation and capitalization to the transcript",
            "enum": [
              "true",
              "false",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "ListenRedact": {
            "default": "false",
            "docs": "Redaction removes sensitive information from your transcripts",
            "enum": [
              "true",
              "false",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "ListenSmartFormat": {
            "default": "false",
            "docs": "Apply formatting to transcript output. When set to true, additional formatting will be applied to transcripts to improve readability",
            "enum": [
              "true",
              "false",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "ListenSubscribeEvent": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../asyncapi.yml",
            },
            "union": [
              "TranscriptionResponse",
              "ControlMessageResponse",
            ],
          },
          "ListenVadEvents": {
            "default": "false",
            "docs": "Indicates that speech has started. You'll begin receiving Speech Started messages upon speech starting",
            "enum": [
              "true",
              "false",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "TranscriptionResponse": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "channel": "optional<TranscriptionResponseChannel>",
              "channel_index": "optional<list<integer>>",
              "duration": "optional<float>",
              "from_finalize": "optional<boolean>",
              "is_final": "optional<boolean>",
              "metadata": "optional<TranscriptionResponseMetadata>",
              "speech_final": "optional<boolean>",
              "start": "optional<float>",
              "type": "optional<string>",
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "TranscriptionResponseChannel": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "alternatives": "optional<list<TranscriptionResponseChannelAlternativesItem>>",
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "TranscriptionResponseChannelAlternativesItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "confidence": {
                "docs": "Overall confidence score",
                "type": "optional<float>",
              },
              "transcript": {
                "docs": "Complete transcribed text",
                "type": "optional<string>",
              },
              "words": "optional<list<TranscriptionResponseChannelAlternativesItemWordsItem>>",
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "TranscriptionResponseChannelAlternativesItemWordsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "confidence": "optional<float>",
              "end": "optional<float>",
              "punctuated_word": "optional<string>",
              "start": "optional<float>",
              "word": "optional<string>",
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "TranscriptionResponseMetadata": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "model_info": "optional<TranscriptionResponseMetadataModelInfo>",
              "model_uuid": {
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "request_id": {
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "TranscriptionResponseMetadataModelInfo": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "arch": "optional<string>",
              "name": "optional<string>",
              "version": "optional<string>",
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  ListenCallbackMethod:
    enum:
      - POST
      - GET
      - PUT
      - DELETE
    docs: HTTP method by which the callback request will be made
    default: POST
    source:
      openapi: ../asyncapi.yml
  ListenDictation:
    enum:
      - 'true'
      - 'false'
    docs: Identify and extract key entities from content in submitted audio
    default: 'false'
    source:
      openapi: ../asyncapi.yml
  ListenDiarize:
    enum:
      - 'true'
      - 'false'
    docs: >-
      Recognize speaker changes. Each word in the transcript will be assigned a
      speaker number starting at 0
    default: 'false'
    source:
      openapi: ../asyncapi.yml
  ListenEncoding:
    enum:
      - linear16
      - flac
      - mulaw
      - value: amr-nb
        name: AmrNb
      - value: amr-wb
        name: AmrWb
      - opus
      - speex
      - g729
    docs: Specify the expected encoding of your submitted audio
    source:
      openapi: ../asyncapi.yml
  ListenFillerWords:
    enum:
      - 'true'
      - 'false'
    docs: >-
      Filler Words can help transcribe interruptions in your audio, like "uh"
      and "um"
    default: 'false'
    source:
      openapi: ../asyncapi.yml
  ListenInterimResults:
    enum:
      - 'true'
      - 'false'
    docs: >-
      Specifies whether the streaming endpoint should provide ongoing
      transcription updates as more audio is received. When set to true, the
      endpoint sends continuous updates, meaning transcription results may
      evolve over time
    default: 'false'
    source:
      openapi: ../asyncapi.yml
  ListenLanguage:
    enum:
      - bg
      - ca
      - cs
      - da
      - value: da-DK
        name: DaDk
      - de
      - value: de-CH
        name: DeCh
      - el
      - en
      - value: en-AU
        name: EnAu
      - value: en-GB
        name: EnGb
      - value: en-IN
        name: EnIn
      - value: en-NZ
        name: EnNz
      - value: en-US
        name: EnUs
      - es
      - value: es-419
        name: Es419
      - value: es-LATAM
        name: EsLatam
      - et
      - fi
      - fr
      - value: fr-CA
        name: FrCa
      - hi
      - value: hi-Latn
        name: HiLatn
      - hu
      - id
      - it
      - ja
      - ko
      - value: ko-KR
        name: KoKr
      - lt
      - lv
      - ms
      - nl
      - value: nl-BE
        name: NlBe
      - 'no'
      - pl
      - pt
      - value: pt-BR
        name: PtBr
      - value: pt-PT
        name: PtPt
      - ro
      - ru
      - sk
      - sv
      - value: sv-SE
        name: SvSe
      - taq
      - th
      - value: th-TH
        name: ThTh
      - tr
      - uk
      - vi
      - zh
      - value: zh-CN
        name: ZhCn
      - value: zh-HK
        name: ZhHk
      - value: zh-Hans
        name: ZhHans
      - value: zh-Hant
        name: ZhHant
      - value: zh-TW
        name: ZhTw
    docs: >-
      The [BCP-47 language tag](https://tools.ietf.org/html/bcp47) that hints at
      the primary spoken language. Depending on the Model you choose only
      certain languages are available
    default: en
    source:
      openapi: ../asyncapi.yml
  ListenModel:
    enum:
      - value: nova-3
        name: Nova3
      - value: nova-3-general
        name: Nova3General
      - value: nova-2
        name: Nova2
      - value: nova-2-general
        name: Nova2General
      - value: nova-2-meeting
        name: Nova2Meeting
      - value: nova-2-finance
        name: Nova2Finance
      - value: nova-2-conversationalai
        name: Nova2Conversationalai
      - value: nova-2-voicemail
        name: Nova2Voicemail
      - value: nova-2-video
        name: Nova2Video
      - value: nova-2-medical
        name: Nova2Medical
      - value: nova-2-drivethru
        name: Nova2Drivethru
      - value: nova-2-automotive
        name: Nova2Automotive
      - nova
      - value: nova-general
        name: NovaGeneral
      - value: nova-phonecall
        name: NovaPhonecall
      - value: nova-medical
        name: NovaMedical
      - enhanced
      - value: enhanced-general
        name: EnhancedGeneral
      - value: enhanced-meeting
        name: EnhancedMeeting
      - value: enhanced-phonecall
        name: EnhancedPhonecall
      - value: enhanced-finance
        name: EnhancedFinance
      - base
      - meeting
      - phonecall
      - finance
      - conversationalai
      - voicemail
      - video
      - custom
    docs: AI model to use for the transcription
    source:
      openapi: ../asyncapi.yml
  ListenMultichannel:
    enum:
      - 'true'
      - 'false'
    docs: Transcribe each audio channel independently
    default: 'false'
    source:
      openapi: ../asyncapi.yml
  ListenNumerals:
    enum:
      - 'true'
      - 'false'
    docs: Convert numbers from written format to numerical format
    default: 'false'
    source:
      openapi: ../asyncapi.yml
  ListenProfanityFilter:
    enum:
      - 'true'
      - 'false'
    docs: >-
      Profanity Filter looks for recognized profanity and converts it to the
      nearest recognized non-profane word or removes it from the transcript
      completely
    default: 'false'
    source:
      openapi: ../asyncapi.yml
  ListenPunctuate:
    enum:
      - 'true'
      - 'false'
    docs: Add punctuation and capitalization to the transcript
    default: 'false'
    source:
      openapi: ../asyncapi.yml
  ListenRedact:
    enum:
      - 'true'
      - 'false'
    docs: Redaction removes sensitive information from your transcripts
    default: 'false'
    source:
      openapi: ../asyncapi.yml
  ListenSmartFormat:
    enum:
      - 'true'
      - 'false'
    docs: >-
      Apply formatting to transcript output. When set to true, additional
      formatting will be applied to transcripts to improve readability
    default: 'false'
    source:
      openapi: ../asyncapi.yml
  ListenVadEvents:
    enum:
      - 'true'
      - 'false'
    docs: >-
      Indicates that speech has started. You'll begin receiving Speech Started
      messages upon speech starting
    default: 'false'
    source:
      openapi: ../asyncapi.yml
  TranscriptionResponseChannelAlternativesItemWordsItem:
    properties:
      word: optional<string>
      start: optional<float>
      end: optional<float>
      confidence: optional<float>
      punctuated_word: optional<string>
    source:
      openapi: ../asyncapi.yml
    inline: true
  TranscriptionResponseChannelAlternativesItem:
    properties:
      transcript:
        type: optional<string>
        docs: Complete transcribed text
      confidence:
        type: optional<float>
        docs: Overall confidence score
      words: optional<list<TranscriptionResponseChannelAlternativesItemWordsItem>>
    source:
      openapi: ../asyncapi.yml
    inline: true
  TranscriptionResponseChannel:
    properties:
      alternatives: optional<list<TranscriptionResponseChannelAlternativesItem>>
    source:
      openapi: ../asyncapi.yml
    inline: true
  TranscriptionResponseMetadataModelInfo:
    properties:
      name: optional<string>
      version: optional<string>
      arch: optional<string>
    source:
      openapi: ../asyncapi.yml
    inline: true
  TranscriptionResponseMetadata:
    properties:
      model_info: optional<TranscriptionResponseMetadataModelInfo>
      request_id:
        type: optional<string>
        validation:
          format: uuid
      model_uuid:
        type: optional<string>
        validation:
          format: uuid
    source:
      openapi: ../asyncapi.yml
    inline: true
  TranscriptionResponse:
    properties:
      channel: optional<TranscriptionResponseChannel>
      metadata: optional<TranscriptionResponseMetadata>
      type: optional<string>
      channel_index: optional<list<integer>>
      duration: optional<float>
      start: optional<float>
      is_final: optional<boolean>
      from_finalize: optional<boolean>
      speech_final: optional<boolean>
    source:
      openapi: ../asyncapi.yml
    inline: true
  ControlMessageResponseZero:
    properties:
      type: optional<literal<"Finalize">>
      channel:
        type: optional<integer>
        docs: The channel number being finalized
        validation:
          min: 0
    source:
      openapi: ../asyncapi.yml
    inline: true
  ControlMessageResponseOne:
    properties:
      type: optional<literal<"Metadata">>
      transaction_key:
        type: optional<string>
        docs: Deprecated field
      request_id:
        type: optional<string>
        docs: Unique identifier for the request
        validation:
          format: uuid
      sha256:
        type: optional<string>
        docs: SHA-256 hash of the audio content
        validation:
          pattern: ^[a-fA-F0-9]{64}$
      created:
        type: optional<datetime>
        docs: Timestamp when the response was created
      duration:
        type: optional<float>
        docs: Duration of the audio in seconds
      channels:
        type: optional<integer>
        docs: Number of audio channels
        validation:
          min: 0
    source:
      openapi: ../asyncapi.yml
    inline: true
  ControlMessageResponseTwo:
    properties:
      type: optional<literal<"CloseStream">>
      transaction_key:
        type: optional<string>
        docs: Deprecated field
      request_id:
        type: optional<string>
        docs: Unique identifier for the request
        validation:
          format: uuid
      sha256:
        type: optional<string>
        docs: SHA-256 hash of the audio content
        validation:
          pattern: ^[a-fA-F0-9]{64}$
      created:
        type: optional<datetime>
        docs: Timestamp when the response was created
      duration:
        type: optional<float>
        docs: Duration of the audio in seconds
      channels:
        type: optional<integer>
        docs: Number of audio channels
        validation:
          min: 0
    source:
      openapi: ../asyncapi.yml
    inline: true
  ControlMessageResponse:
    discriminated: false
    union:
      - ControlMessageResponseZero
      - ControlMessageResponseOne
      - ControlMessageResponseTwo
    source:
      openapi: ../asyncapi.yml
    inline: true
  ListenSubscribeEvent:
    discriminated: false
    union:
      - TranscriptionResponse
      - ControlMessageResponse
    source:
      openapi: ../asyncapi.yml
  ListenControlMessagesRequestFinalize:
    properties: {}
    source:
      openapi: ../asyncapi.yml
    inline: true
  ListenControlMessagesRequestCloseStream:
    properties: {}
    source:
      openapi: ../asyncapi.yml
    inline: true
  ListenControlMessagesRequestKeepAlive:
    properties: {}
    source:
      openapi: ../asyncapi.yml
    inline: true
  ListenControlMessagesRequest:
    discriminant: type
    base-properties: {}
    union:
      Finalize: ListenControlMessagesRequestFinalize
      CloseStream: ListenControlMessagesRequestCloseStream
      KeepAlive: ListenControlMessagesRequestKeepAlive
    source:
      openapi: ../asyncapi.yml
  ListenPublishEvent:
    discriminated: false
    union:
      - type: string
        docs: >-
          Raw audio data to be transcribed. Should be sent as a binary WebSocket
          message without base64 encoding
        validation:
          format: binary
      - ListenControlMessagesRequest
    source:
      openapi: ../asyncapi.yml
channel:
  path: /v1/listen
  url: public
  auth: false
  query-parameters:
    callback:
      type: string
      docs: URL to which we'll make the callback request
    callback_method:
      type: ListenCallbackMethod
      default: POST
      docs: HTTP method by which the callback request will be made
    channels:
      type: string
      default: '1'
      docs: The number of channels in the submitted audio
    dictation:
      type: ListenDictation
      default: 'false'
      docs: Identify and extract key entities from content in submitted audio
    diarize:
      type: ListenDiarize
      default: 'false'
      docs: >-
        Recognize speaker changes. Each word in the transcript will be assigned
        a speaker number starting at 0
    diarize_version:
      type: string
      default: v2
      docs: >-
        Version of the diarization feature to use. Only used when the
        diarization feature is enabled (`diarize=true` is passed to the API)
    encoding:
      type: ListenEncoding
      docs: Specify the expected encoding of your submitted audio
    endpointing:
      type: string
      default: '10'
      docs: >-
        Indicates how long Deepgram will wait to detect whether a speaker has
        finished speaking or pauses for a significant period of time. When set
        to a value, the streaming endpoint immediately finalizes the
        transcription for the processed time range and returns the transcript
        with a speech_final parameter set to true. Can also be set to false to
        disable endpointing
    extra:
      type: string
      docs: >-
        Arbitrary key-value pairs that are attached to the API response for
        usage in downstream processing
    filler_words:
      type: ListenFillerWords
      default: 'false'
      docs: >-
        Filler Words can help transcribe interruptions in your audio, like "uh"
        and "um"
    interim_results:
      type: ListenInterimResults
      default: 'false'
      docs: >-
        Specifies whether the streaming endpoint should provide ongoing
        transcription updates as more audio is received. When set to true, the
        endpoint sends continuous updates, meaning transcription results may
        evolve over time
    keywords:
      type: string
      docs: Keywords can boost or suppress specialized terminology and brands
    keyterm:
      type: string
      docs: >-
        Key term prompting can boost or suppress specialized terminology and
        brands. Only compatible with Nova-3
    language:
      type: ListenLanguage
      default: en
      docs: >-
        The [BCP-47 language tag](https://tools.ietf.org/html/bcp47) that hints
        at the primary spoken language. Depending on the Model you choose only
        certain languages are available
    model:
      type: ListenModel
      docs: AI model to use for the transcription
    multichannel:
      type: ListenMultichannel
      default: 'false'
      docs: Transcribe each audio channel independently
    numerals:
      type: ListenNumerals
      default: 'false'
      docs: Convert numbers from written format to numerical format
    profanity_filter:
      type: ListenProfanityFilter
      default: 'false'
      docs: >-
        Profanity Filter looks for recognized profanity and converts it to the
        nearest recognized non-profane word or removes it from the transcript
        completely
    punctuate:
      type: ListenPunctuate
      default: 'false'
      docs: Add punctuation and capitalization to the transcript
    redact:
      type: ListenRedact
      default: 'false'
      docs: Redaction removes sensitive information from your transcripts
    replace:
      type: string
      docs: Search for terms or phrases in submitted audio and replaces them
    sample_rate:
      type: string
      docs: >-
        Sample rate of submitted audio. Required (and only read) when a value is
        provided for encoding
    search:
      type: string
      docs: Search for terms or phrases in submitted audio
    smart_format:
      type: ListenSmartFormat
      default: 'false'
      docs: >-
        Apply formatting to transcript output. When set to true, additional
        formatting will be applied to transcripts to improve readability
    tag:
      type: string
      docs: >-
        Label your requests for the purpose of identification during usage
        reporting
    utterance_end:
      type: string
      docs: >-
        Indicates how long Deepgram will wait to send an UtteranceEnd message
        after a word has been transcribed. Use with interim_results
    vad_events:
      type: ListenVadEvents
      default: 'false'
      docs: >-
        Indicates that speech has started. You'll begin receiving Speech Started
        messages upon speech starting
    version:
      type: string
      default: latest
      docs: Version of an AI model to use
  headers:
    Sec-Websocket-Protocol:
      type: string
      name: secWebsocketProtocol
      docs: >-
        Used to establish a WebSocket connection with authentication. Format
        should be 'token, <DEEPGRAM_API_KEY>'
  messages:
    subscribe:
      origin: server
      body: ListenSubscribeEvent
    publish:
      origin: client
      body: ListenPublishEvent
  examples:
    - messages:
        - type: publish
          body: string
        - type: subscribe
          body: {}
",
    },
    "managementApi.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Manage your projects",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Management API",
          "endpoints": {
            "createProjectInvite": {
              "auth": true,
              "display-name": "Create a Project Invite",
              "docs": "Generates an invite for a specific project",
              "errors": [
                "root.CreateProjectInviteRequestBadRequestError",
                "root.CreateProjectInviteRequestUnauthorizedError",
                "root.CreateProjectInviteRequestForbiddenError",
                "root.CreateProjectInviteRequestNotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "project_id": "123456-7890-1234-5678-901234",
                  },
                  "request": {
                    "email": "email",
                    "scope": "scope",
                  },
                  "response": {
                    "body": {
                      "message": "message",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/v1/projects/{project_id}/invites",
              "path-parameters": {
                "project_id": {
                  "docs": "The unique identifier of the project",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "email": {
                      "docs": "The email address of the invitee",
                      "type": "string",
                    },
                    "scope": {
                      "docs": "The scope of the invitee",
                      "type": "string",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateProjectInvite",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "The invite was successfully generated",
                "status-code": 200,
                "type": "CreateProjectInviteResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "createProjectKey": {
              "auth": true,
              "display-name": "Create a Project Key",
              "docs": "Creates a new API key with specified settings for the project",
              "errors": [
                "root.CreateProjectKeyRequestForbiddenError",
                "root.CreateProjectKeyRequestNotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "project_id": "123456-7890-1234-5678-901234",
                  },
                  "request": [
                    {},
                  ],
                  "response": {
                    "body": {
                      "api_key_id": "1234567890abcdef1234567890abcdef",
                      "comment": "comment",
                      "key": "1234567890abcdef1234567890abcdef",
                      "scopes": [
                        "member",
                      ],
                      "tags": [
                        "tag-1",
                      ],
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/v1/projects/{project_id}/keys",
              "path-parameters": {
                "project_id": {
                  "docs": "The unique identifier of the project",
                  "type": "string",
                },
              },
              "request": {
                "body": "root.Keys",
                "content-type": "application/json",
              },
              "response": {
                "docs": "API key created successfully",
                "status-code": 200,
                "type": "root.KeyCreated",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "createSelfHostedDistCreds": {
              "auth": true,
              "display-name": "Create a Project Self-Hosted Distribution Credential",
              "docs": "Creates a set of distribution credentials for the specified project",
              "method": "POST",
              "pagination": undefined,
              "path": "/v1/projects/{project_id}/self-hosted/distribution/credentials",
              "path-parameters": {
                "project_id": {
                  "docs": "The unique identifier of the project",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "comment": {
                      "docs": "Optional comment about the credentials",
                      "name": "createDistributionCredsComment",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateDistributionCreds",
                "path-parameters": undefined,
                "query-parameters": {
                  "comment": {
                    "docs": "Optional comment about the credentials",
                    "type": "optional<string>",
                  },
                  "provider": {
                    "docs": "The provider of the distribution service",
                    "type": "literal<"quay">",
                  },
                  "scopes": {
                    "allow-multiple": true,
                    "docs": "List of permission scopes for the credentials",
                    "type": "optional<CreateSelfHostedDistCredsRequestScopesItem>",
                  },
                },
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "deleteProject": {
              "auth": true,
              "display-name": "Delete a Project",
              "docs": "Deletes the specified project",
              "errors": [
                "root.DeleteProjectRequestBadRequestError",
                "root.DeleteProjectRequestForbiddenError",
                "root.DeleteProjectRequestNotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "project_id": "123456-7890-1234-5678-901234",
                  },
                  "response": {
                    "body": {
                      "message": "Successfully deleted a project.",
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/v1/projects/{project_id}",
              "path-parameters": {
                "project_id": {
                  "docs": "The unique identifier of the project",
                  "type": "string",
                },
              },
              "response": {
                "docs": "A project",
                "status-code": 200,
                "type": "DeleteProjectResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "deleteProjectInvite": {
              "auth": true,
              "display-name": "Delete a Project Invite",
              "docs": "Deletes an invite for a specific project",
              "errors": [
                "root.DeleteProjectInviteRequestBadRequestError",
                "root.DeleteProjectInviteRequestUnauthorizedError",
                "root.DeleteProjectInviteRequestForbiddenError",
                "root.DeleteProjectInviteRequestNotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "email": "john.doe@example.com",
                    "project_id": "123456-7890-1234-5678-901234",
                  },
                  "response": {
                    "body": {
                      "message": "message",
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/v1/projects/{project_id}/invites/{email}",
              "path-parameters": {
                "email": {
                  "docs": "The email address of the member",
                  "type": "string",
                },
                "project_id": {
                  "docs": "The unique identifier of the project",
                  "type": "string",
                },
              },
              "response": {
                "docs": "The invite was successfully deleted",
                "status-code": 200,
                "type": "DeleteProjectInviteResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "deleteProjectKey": {
              "auth": true,
              "display-name": "Deletes an API key for a specific project",
              "docs": "Deletes an API key for a specific project",
              "errors": [
                "root.DeleteProjectKeyRequestForbiddenError",
                "root.DeleteProjectKeyRequestNotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "key_id": "123456789012345678901234",
                    "project_id": "123456-7890-1234-5678-901234",
                  },
                  "response": {
                    "body": {
                      "message": "Successfully deleted the API key!",
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/v1/projects/{project_id}/keys/{key_id}",
              "path-parameters": {
                "key_id": {
                  "docs": "The unique identifier of the API key",
                  "type": "string",
                },
                "project_id": {
                  "docs": "The unique identifier of the project",
                  "type": "string",
                },
              },
              "response": {
                "docs": "API key deleted",
                "status-code": 200,
                "type": "DeleteProjectKeyResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "deleteProjectLeave": {
              "auth": true,
              "display-name": "Leave a Project",
              "docs": "Removes the authenticated account from the specific project",
              "errors": [
                "root.DeleteProjectLeaveRequestBadRequestError",
                "root.DeleteProjectLeaveRequestUnauthorizedError",
                "root.DeleteProjectLeaveRequestForbiddenError",
                "root.DeleteProjectLeaveRequestNotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "project_id": "123456-7890-1234-5678-901234",
                  },
                  "response": {
                    "body": {
                      "message": "message",
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/v1/projects/{project_id}/leave",
              "path-parameters": {
                "project_id": {
                  "docs": "The unique identifier of the project",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Successfully removed account from project",
                "status-code": 200,
                "type": "DeleteProjectLeaveResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "deleteProjectMember": {
              "auth": true,
              "display-name": "Delete a Project Member",
              "docs": "Removes a member from the project using their unique member ID",
              "errors": [
                "root.DeleteProjectMemberRequestForbiddenError",
                "root.DeleteProjectMemberRequestNotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "member_id": "123456789012345678901234",
                    "project_id": "123456-7890-1234-5678-901234",
                  },
                  "response": {
                    "body": {
                      "message": "Successfully removed account from project.",
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/v1/projects/{project_id}/members/{member_id}",
              "path-parameters": {
                "member_id": {
                  "docs": "The unique identifier of the Member",
                  "type": "string",
                },
                "project_id": {
                  "docs": "The unique identifier of the project",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Delete the specific member from the project",
                "status-code": 200,
                "type": "DeleteProjectMemberResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "deleteSelfHostedDistCreds": {
              "auth": true,
              "display-name": "Delete a Project Self-Hosted Distribution Credential",
              "docs": "Deletes a set of distribution credentials for the specified project",
              "errors": [
                "root.DeleteSelfHostedDistCredsRequestForbiddenError",
                "root.DeleteSelfHostedDistCredsRequestNotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "distribution_credentials_id": "8b36cfd0-472f-4a21-833f-2d6343c3a2f3",
                    "project_id": "123456-7890-1234-5678-901234",
                  },
                  "response": {
                    "body": {
                      "distribution_credentials": {
                        "comment": "My Self-Hosted Distribution Credentials",
                        "created": "2023-06-28T15:36:59Z",
                        "distribution_credentials_id": "82c32c10-53b2-4d23-993f-864b3d44502a",
                        "provider": "quay",
                        "scopes": [
                          "self-hosted:product:api",
                          "self-hosted:product:engine",
                        ],
                      },
                      "member": {
                        "email": "email@example.com",
                        "member_id": "c7b9b131-73f3-11d9-8665-0b00d2e44b83",
                      },
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/v1/projects/{project_id}/self-hosted/distribution/credentials/{distribution_credentials_id}",
              "path-parameters": {
                "distribution_credentials_id": {
                  "docs": "The UUID of the distribution credentials",
                  "type": "string",
                },
                "project_id": {
                  "docs": "The unique identifier of the project",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Single distribution credential",
                "status-code": 200,
                "type": "DeleteSelfHostedDistCredsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getModel": {
              "auth": true,
              "display-name": "Returns metadata for a specific model",
              "docs": "Returns metadata for a specific model",
              "errors": [
                "root.GetModelRequestBadRequestError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "model_id": "af6e9977-99f6-4d8f-b6f5-dfdf6fb6e291",
                  },
                  "response": {
                    "body": {
                      "architecture": "polaris",
                      "batch": true,
                      "canonical_name": "enhanced-general",
                      "formatted_output": false,
                      "languages": [
                        "en",
                        "en-us",
                      ],
                      "name": "general",
                      "streaming": true,
                      "uuid": "c7226e9e-ae1c-4057-ae2a-a71a6b0dc588",
                      "version": "2022-05-18.1",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/models/{model_id}",
              "path-parameters": {
                "model_id": {
                  "docs": "The specific UUID of the model",
                  "type": "string",
                },
              },
              "response": {
                "docs": "A model object that can be either STT or TTS",
                "status-code": 200,
                "type": "GetModelResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getProject": {
              "auth": true,
              "display-name": "Get a Project",
              "docs": "Retrieves information about the specified project",
              "errors": [
                "root.GetProjectRequestBadRequestError",
                "root.GetProjectRequestForbiddenError",
                "root.GetProjectRequestNotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "project_id": "123456-7890-1234-5678-901234",
                  },
                  "query-parameters": {
                    "end": "2024-07-31T00:00:00Z",
                    "start": "2024-07-01T00:00:00Z",
                  },
                  "response": {
                    "body": {
                      "name": "name",
                      "project_id": "project_id",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/projects/{project_id}",
              "path-parameters": {
                "project_id": {
                  "docs": "The unique identifier of the project",
                  "type": "string",
                },
              },
              "request": {
                "name": "GetProjectRequest",
                "query-parameters": {
                  "end": {
                    "docs": "End date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM",
                    "type": "optional<datetime>",
                  },
                  "limit": {
                    "default": 10,
                    "docs": "Number of results to return per page. Default 10. Range [1,1000]",
                    "type": "optional<integer>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 1000,
                      "min": 1,
                      "multipleOf": undefined,
                    },
                  },
                  "page": {
                    "docs": "Navigate and return the results to retrieve specific portions of information of the response",
                    "type": "optional<integer>",
                  },
                  "start": {
                    "docs": "Start date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM",
                    "type": "optional<datetime>",
                  },
                },
              },
              "response": {
                "docs": "A project",
                "status-code": 200,
                "type": "GetProjectResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getProjectBalance": {
              "auth": true,
              "display-name": "Get a Project Balance",
              "docs": "Retrieves details about the specified balance",
              "errors": [
                "root.GetProjectBalanceRequestBadRequestError",
                "root.GetProjectBalanceRequestForbiddenError",
                "root.GetProjectBalanceRequestNotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "balance_id": "123456-7890-1234-5678-901234",
                    "project_id": "123456-7890-1234-5678-901234",
                  },
                  "response": {
                    "body": {
                      "amount": 250,
                      "balance_id": "b123456-7890-1234-5678-901234",
                      "purchase_order_id": "b123456-7890-1234-5678-901234",
                      "units": "usd",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/projects/{project_id}/balances/{balance_id}",
              "path-parameters": {
                "balance_id": {
                  "docs": "The unique identifier of the balance",
                  "type": "string",
                },
                "project_id": {
                  "docs": "The unique identifier of the project",
                  "type": "string",
                },
              },
              "response": {
                "docs": "A specific balance",
                "status-code": 200,
                "type": "GetProjectBalanceResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getProjectBalances": {
              "auth": true,
              "display-name": "Get Project Balances",
              "docs": "Generates a list of outstanding balances for the specified project",
              "errors": [
                "root.GetProjectBalancesRequestBadRequestError",
                "root.GetProjectBalancesRequestForbiddenError",
                "root.GetProjectBalancesRequestNotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "project_id": "123456-7890-1234-5678-901234",
                  },
                  "response": {
                    "body": {
                      "balances": [
                        {
                          "amount": 250,
                          "balance_id": "b123456-7890-1234-5678-901234",
                          "purchase_order_id": "b123456-7890-1234-5678-901234",
                          "units": "usd",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/projects/{project_id}/balances",
              "path-parameters": {
                "project_id": {
                  "docs": "The unique identifier of the project",
                  "type": "string",
                },
              },
              "response": {
                "docs": "A list of outstanding balances",
                "status-code": 200,
                "type": "GetProjectBalancesResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getProjectKey": {
              "auth": true,
              "display-name": "Get a Project Key",
              "docs": "Retrieves information about a specified API key",
              "errors": [
                "root.GetProjectKeyRequestForbiddenError",
                "root.GetProjectKeyRequestNotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "key_id": "123456789012345678901234",
                    "project_id": "123456-7890-1234-5678-901234",
                  },
                  "response": {
                    "body": {
                      "item": {
                        "member": {
                          "api_key": {
                            "api_key_id": "1234567890abcdef1234567890abcdef",
                            "comment": "A comment",
                            "created": "2021-01-01T00:00:00Z",
                          },
                          "email": "john@test.com",
                          "first_name": "John",
                          "last_name": "Doe",
                          "member_id": "1000-2000-3000-4000",
                        },
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/projects/{project_id}/keys/{key_id}",
              "path-parameters": {
                "key_id": {
                  "docs": "The unique identifier of the API key",
                  "type": "string",
                },
                "project_id": {
                  "docs": "The unique identifier of the project",
                  "type": "string",
                },
              },
              "response": {
                "docs": "A specific API key",
                "status-code": 200,
                "type": "GetProjectKeyResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getProjectModel": {
              "auth": true,
              "display-name": "Get a Project Model",
              "docs": "Returns metadata for a specific model",
              "errors": [
                "root.GetProjectModelRequestBadRequestError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "model_id": "af6e9977-99f6-4d8f-b6f5-dfdf6fb6e291",
                    "project_id": "123456-7890-1234-5678-901234",
                  },
                  "response": {
                    "body": [
                      {
                        "architecture": "base",
                        "batch": true,
                        "canonical_name": "conversationalai",
                        "formatted_output": true,
                        "languages": [
                          "en",
                          "en-us",
                        ],
                        "name": "conversationalai",
                        "streaming": true,
                        "uuid": "6b28e919-8427-4f32-9847-492e2efd7daf",
                        "version": "2021-11-10.1",
                      },
                    ],
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/projects/{project_id}/models/{model_id}",
              "path-parameters": {
                "model_id": {
                  "docs": "The specific UUID of the model",
                  "type": "string",
                },
                "project_id": {
                  "docs": "The unique identifier of the project",
                  "type": "string",
                },
              },
              "response": {
                "docs": "A specific model",
                "status-code": 200,
                "type": "GetProjectModelResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getProjectRequest": {
              "auth": true,
              "display-name": "Get a Project Request",
              "docs": "Retrieves a specific request for a specific project",
              "examples": [
                {
                  "path-parameters": {
                    "project_id": "123456-7890-1234-5678-901234",
                    "request_id": "123456-7890-1234-5678-901234",
                  },
                  "response": {
                    "body": {
                      "request": {
                        "api_key_id": "api_key_id",
                        "callback": "callback",
                        "code": 1,
                        "created": "2024-01-15T09:30:00Z",
                        "deployment": "deployment",
                        "path": "path",
                        "project_uuid": "project_uuid",
                        "request_id": "request_id",
                        "response": {
                          "key": "value",
                        },
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/projects/{project_id}/requests/{request_id}",
              "path-parameters": {
                "project_id": {
                  "docs": "The unique identifier of the project",
                  "type": "string",
                },
                "request_id": {
                  "docs": "The unique identifier of the request",
                  "type": "string",
                },
              },
              "response": {
                "docs": "A specific request for a specific project",
                "status-code": 200,
                "type": "GetProjectRequestResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getProjectUsage": {
              "auth": true,
              "display-name": "Get Project Usage",
              "docs": "Retrieves the usage for a specific project",
              "errors": [
                "root.GetProjectUsageRequestBadRequestError",
                "root.GetProjectUsageRequestUnauthorizedError",
                "root.GetProjectUsageRequestForbiddenError",
                "root.GetProjectUsageRequestNotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "project_id": "123456-7890-1234-5678-901234",
                  },
                  "query-parameters": {
                    "end": "2024-07-31T00:00:00Z",
                    "start": "2024-07-01T00:00:00Z",
                  },
                  "response": {
                    "body": {
                      "end": "2024-10-23",
                      "resolution": {
                        "amount": 1,
                        "units": "day",
                      },
                      "start": "2024-10-16",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/projects/{project_id}/usage",
              "path-parameters": {
                "project_id": {
                  "docs": "The unique identifier of the project",
                  "type": "string",
                },
              },
              "request": {
                "name": "GetProjectUsageRequest",
                "query-parameters": {
                  "end": {
                    "docs": "End date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM",
                    "type": "optional<datetime>",
                  },
                  "project_filters": {
                    "docs": "Common filter parameters",
                    "type": "optional<GetProjectUsageRequestProjectFilters>",
                  },
                  "start": {
                    "docs": "Start date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM",
                    "type": "optional<datetime>",
                  },
                },
              },
              "response": {
                "docs": "Usage Summary",
                "status-code": 200,
                "type": "GetProjectUsageResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getProjectUsageBreakdown": {
              "auth": true,
              "display-name": "Get Project Usage Breakdown",
              "docs": "Returns the breakdown of usage for a specific project. Supports the following filter options:
- &accessor={accessor_id} - The public API key accessor used
- &deployment={deployment} - The deployment type used
- &endpoint={endpoint} - The endpoint used
- &feature_set={feature_set} - The collection of features used
- &model={model_id} - The model used
- &method={method} - The processing method used
- &tags={tag} - Any tags used
",
              "errors": [
                "root.GetProjectUsageBreakdownRequestBadRequestError",
                "root.GetProjectUsageBreakdownRequestUnauthorizedError",
                "root.GetProjectUsageBreakdownRequestNotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "project_id": "123456-7890-1234-5678-901234",
                  },
                  "query-parameters": {
                    "end": "2024-07-31T00:00:00Z",
                    "start": "2024-07-01T00:00:00Z",
                  },
                  "response": {
                    "body": {
                      "end": "2025-01-23",
                      "resolution": {
                        "amount": 1,
                        "units": "day",
                      },
                      "results": [
                        {
                          "agent_hours": 41.33564388888889,
                          "grouping": {
                            "end": "2025-01-16",
                            "start": "2025-01-16",
                          },
                          "hours": 1619.7242069444444,
                          "requests": 373381,
                          "tokens_in": 0,
                          "tokens_out": 0,
                          "total_hours": 1621.7395791666668,
                          "tts_characters": 9158866,
                        },
                      ],
                      "start": "2025-01-16",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/projects/{project_id}/usage/breakdown",
              "path-parameters": {
                "project_id": {
                  "docs": "The unique identifier of the project",
                  "type": "string",
                },
              },
              "request": {
                "name": "GetProjectUsageBreakdownRequest",
                "query-parameters": {
                  "end": {
                    "docs": "End date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM",
                    "type": "optional<datetime>",
                  },
                  "project_filters": {
                    "docs": "Common filter parameters",
                    "type": "optional<GetProjectUsageBreakdownRequestProjectFilters>",
                  },
                  "start": {
                    "docs": "Start date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM",
                    "type": "optional<datetime>",
                  },
                },
              },
              "response": {
                "docs": "Usage breakdown response",
                "status-code": 200,
                "type": "GetProjectUsageBreakdownResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getSelfHostedCredentials": {
              "auth": true,
              "display-name": "Get a Project Self-Hosted Distribution Credential",
              "docs": "Returns a set of distribution credentials for the specified project",
              "errors": [
                "root.GetSelfHostedCredentialsRequestForbiddenError",
                "root.GetSelfHostedCredentialsRequestNotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "distribution_credentials_id": "8b36cfd0-472f-4a21-833f-2d6343c3a2f3",
                    "project_id": "123456-7890-1234-5678-901234",
                  },
                  "response": {
                    "body": {
                      "distribution_credentials": {
                        "comment": "My Self-Hosted Distribution Credentials",
                        "created": "2023-06-28T15:36:59Z",
                        "distribution_credentials_id": "82c32c10-53b2-4d23-993f-864b3d44502a",
                        "provider": "quay",
                        "scopes": [
                          "self-hosted:product:api",
                          "self-hosted:product:engine",
                        ],
                      },
                      "member": {
                        "email": "email@example.com",
                        "member_id": "c7b9b131-73f3-11d9-8665-0b00d2e44b83",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/projects/{project_id}/self-hosted/distribution/credentials/{distribution_credentials_id}",
              "path-parameters": {
                "distribution_credentials_id": {
                  "docs": "The UUID of the distribution credentials",
                  "type": "string",
                },
                "project_id": {
                  "docs": "The unique identifier of the project",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Single distribution credential",
                "status-code": 200,
                "type": "GetSelfHostedCredentialsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "listModels": {
              "auth": true,
              "display-name": "List Project Models",
              "docs": "Returns metadata on all the latest public models",
              "errors": [
                "root.ListModelsRequestBadRequestError",
              ],
              "examples": [
                {
                  "query-parameters": {
                    "include_outdated": true,
                  },
                  "response": {
                    "body": {
                      "stt": [
                        {
                          "architecture": "polaris",
                          "batch": true,
                          "canonical_name": "enhanced-general",
                          "formatted_output": false,
                          "languages": [
                            "en",
                            "en-us",
                          ],
                          "name": "general",
                          "streaming": true,
                          "uuid": "c7226e9e-ae1c-4057-ae2a-a71a6b0dc588",
                          "version": "2022-05-18.1",
                        },
                      ],
                      "tts": [
                        {
                          "architecture": "aura",
                          "canonical_name": "aura-angus-en",
                          "languages": [
                            "en",
                            "en-us",
                          ],
                          "metadata": {
                            "accent": "Irish",
                            "color": "#BA80F5",
                            "image": "https://static.deepgram.com/examples/avatars/angus.jpg",
                            "sample": "https://static.deepgram.com/examples/voices/angus.wav",
                          },
                          "name": "angus",
                          "uuid": "eed36e9e-37aa-40a3-91fa-a2911e73a5da",
                          "version": "2024-07-30.0",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/models",
              "request": {
                "name": "ListModelsRequest",
                "query-parameters": {
                  "include_outdated": {
                    "docs": "returns non-latest versions of models",
                    "type": "boolean",
                  },
                },
              },
              "response": {
                "docs": "A list of all public models",
                "status-code": 200,
                "type": "ListModelsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "listProjectInvites": {
              "auth": true,
              "display-name": "List Project Invites",
              "docs": "Generates a list of invites for a specific project",
              "examples": [
                {
                  "path-parameters": {
                    "project_id": "123456-7890-1234-5678-901234",
                  },
                  "response": {
                    "body": {
                      "invites": [
                        {
                          "email": "email",
                          "scope": "scope",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/projects/{project_id}/invites",
              "path-parameters": {
                "project_id": {
                  "docs": "The unique identifier of the project",
                  "type": "string",
                },
              },
              "response": {
                "docs": "A list of invites for a specific project",
                "status-code": 200,
                "type": "ListProjectInvitesResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "listProjectKeys": {
              "auth": true,
              "display-name": "List Project Keys",
              "docs": "Retrieves all API keys associated with the specified project",
              "errors": [
                "root.ListProjectKeysRequestForbiddenError",
                "root.ListProjectKeysRequestNotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "project_id": "123456-7890-1234-5678-901234",
                  },
                  "response": {
                    "body": {
                      "api_keys": [
                        [
                          {},
                        ],
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/projects/{project_id}/keys",
              "path-parameters": {
                "project_id": {
                  "docs": "The unique identifier of the project",
                  "type": "string",
                },
              },
              "response": {
                "docs": "A list of API keys",
                "status-code": 200,
                "type": "ListProjectKeysResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "listProjectMemberScopes": {
              "auth": true,
              "display-name": "List Project Member Scopes",
              "docs": "Retrieves a list of scopes for a specific member",
              "errors": [
                "root.ListProjectMemberScopesRequestForbiddenError",
                "root.ListProjectMemberScopesRequestNotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "member_id": "123456789012345678901234",
                    "project_id": "123456-7890-1234-5678-901234",
                  },
                  "response": {
                    "body": {
                      "scopes": [
                        "scopes",
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/projects/{project_id}/members/{member_id}/scopes",
              "path-parameters": {
                "member_id": {
                  "docs": "The unique identifier of the Member",
                  "type": "string",
                },
                "project_id": {
                  "docs": "The unique identifier of the project",
                  "type": "string",
                },
              },
              "response": {
                "docs": "A list of scopes for a specific member",
                "status-code": 200,
                "type": "ListProjectMemberScopesResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "listProjectMembers": {
              "auth": true,
              "display-name": "List Project Members",
              "docs": "Retrieves a list of account objects for a specific project",
              "errors": [
                "root.ListProjectMembersRequestForbiddenError",
                "root.ListProjectMembersRequestNotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "project_id": "123456-7890-1234-5678-901234",
                  },
                  "response": {
                    "body": {
                      "members": [
                        {
                          "member_id": "member_id",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/projects/{project_id}/members",
              "path-parameters": {
                "project_id": {
                  "docs": "The unique identifier of the project",
                  "type": "string",
                },
              },
              "response": {
                "docs": "A list of account objects",
                "status-code": 200,
                "type": "ListProjectMembersResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "listProjectModels": {
              "auth": true,
              "display-name": "Returns metadata on all the latest models",
              "docs": "Returns metadata on all the latest models that a specific project has access to, including non-public models",
              "errors": [
                "root.ListProjectModelsRequestBadRequestError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "project_id": "123456-7890-1234-5678-901234",
                  },
                  "query-parameters": {
                    "include_outdated": true,
                  },
                  "response": {
                    "body": {
                      "stt": [
                        [
                          {
                            "architecture": "base",
                            "batch": true,
                            "canonical_name": "conversationalai",
                            "formatted_output": true,
                            "name": "conversationalai",
                            "streaming": true,
                            "uuid": "6b28e919-8427-4f32-9847-492e2efd7daf",
                            "version": "2021-11-10.1",
                          },
                        ],
                      ],
                      "tts": [
                        [
                          {
                            "architecture": "aura",
                            "canonical_name": "aura-zeus-en",
                            "name": "zeus",
                            "uuid": "9c28bce5-f144-4d32-9034-843aa7aed63e",
                            "version": "2024-07-30.0",
                          },
                        ],
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/projects/{project_id}/models",
              "path-parameters": {
                "project_id": {
                  "docs": "The unique identifier of the project",
                  "type": "string",
                },
              },
              "request": {
                "name": "ListProjectModelsRequest",
                "query-parameters": {
                  "include_outdated": {
                    "docs": "returns non-latest versions of models",
                    "type": "boolean",
                  },
                },
              },
              "response": {
                "docs": "A list of models",
                "status-code": 200,
                "type": "ListProjectModelsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "listProjectPurchases": {
              "auth": true,
              "display-name": "List Project Purchases",
              "docs": "Returns the original purchased amount on an order transaction",
              "errors": [
                "root.ListProjectPurchasesRequestBadRequestError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "project_id": "123456-7890-1234-5678-901234",
                  },
                  "query-parameters": {
                    "start": "2024-07-01T00:00:00Z",
                  },
                  "response": {
                    "body": {
                      "orders": [
                        {
                          "amount": 150,
                          "created": "2023-02-21T21:13:40Z",
                          "expiration": "2026-03-04T00:00:00Z",
                          "order_id": "025e19ba-b6d9-4a04-9f99-4fe715aca5f1",
                          "order_type": "promotional",
                          "units": "usd",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/projects/{project_id}/purchases",
              "path-parameters": {
                "project_id": {
                  "docs": "The unique identifier of the project",
                  "type": "string",
                },
              },
              "request": {
                "name": "ListProjectPurchasesRequest",
                "query-parameters": {
                  "limit": {
                    "default": 10,
                    "docs": "Number of results to return per page. Default 10. Range [1,1000]",
                    "type": "optional<integer>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 1000,
                      "min": 1,
                      "multipleOf": undefined,
                    },
                  },
                  "start": {
                    "docs": "Start date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM",
                    "type": "optional<datetime>",
                  },
                },
              },
              "response": {
                "docs": "Successful response with orders list",
                "status-code": 200,
                "type": "ListProjectPurchasesResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "listProjectRequests": {
              "auth": true,
              "display-name": "List Project Requests",
              "docs": "Generates a list of requests for a specific project",
              "errors": [
                "root.ListProjectRequestsRequestBadRequestError",
                "root.ListProjectRequestsRequestForbiddenError",
                "root.ListProjectRequestsRequestNotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "project_id": "123456-7890-1234-5678-901234",
                  },
                  "query-parameters": {
                    "end": "2024-07-31T00:00:00Z",
                    "start": "2024-07-01T00:00:00Z",
                  },
                  "response": {
                    "body": {
                      "limit": 1,
                      "page": 1,
                      "requests": [
                        {
                          "api_key_id": "api_key_id",
                          "callback": "callback",
                          "code": 1,
                          "created": "2024-01-15T09:30:00Z",
                          "deployment": "deployment",
                          "path": "path",
                          "project_uuid": "project_uuid",
                          "request_id": "request_id",
                          "response": {
                            "key": "value",
                          },
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/projects/{project_id}/requests",
              "path-parameters": {
                "project_id": {
                  "docs": "The unique identifier of the project",
                  "type": "string",
                },
              },
              "request": {
                "name": "ListProjectRequestsRequest",
                "query-parameters": {
                  "end": {
                    "docs": "End date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM",
                    "type": "optional<datetime>",
                  },
                  "limit": {
                    "default": 10,
                    "docs": "Number of results to return per page. Default 10. Range [1,1000]",
                    "type": "optional<integer>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 1000,
                      "min": 1,
                      "multipleOf": undefined,
                    },
                  },
                  "page": {
                    "docs": "Navigate and return the results to retrieve specific portions of information of the response",
                    "type": "optional<integer>",
                  },
                  "start": {
                    "docs": "Start date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM",
                    "type": "optional<datetime>",
                  },
                },
              },
              "response": {
                "docs": "A list of requests for a specific project",
                "status-code": 200,
                "type": "ListProjectRequestsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "listProjectUsageFields": {
              "auth": true,
              "display-name": "List Project Usage Fields",
              "docs": "Lists the features, models, tags, languages, and processing method used for requests in the specified project",
              "errors": [
                "root.ListProjectUsageFieldsRequestBadRequestError",
                "root.ListProjectUsageFieldsRequestUnauthorizedError",
                "root.ListProjectUsageFieldsRequestForbiddenError",
                "root.ListProjectUsageFieldsRequestNotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "project_id": "123456-7890-1234-5678-901234",
                  },
                  "query-parameters": {
                    "end": "2024-07-31T00:00:00Z",
                    "start": "2024-07-01T00:00:00Z",
                  },
                  "response": {
                    "body": {
                      "features": [
                        "alternatives",
                        "detect_entities",
                        "detect_language",
                      ],
                      "models": [
                        {
                          "language": "en-MY",
                          "model_id": "1234567890-12345-67890",
                          "name": "2-medical-nova",
                          "version": "2024-05-31.13574",
                        },
                      ],
                      "processing_methods": [
                        "sync",
                        "streaming",
                      ],
                      "tags": [
                        "tag=dev",
                        "tag=production",
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/projects/{project_id}/usage/fields",
              "path-parameters": {
                "project_id": {
                  "docs": "The unique identifier of the project",
                  "type": "string",
                },
              },
              "request": {
                "name": "ListProjectUsageFieldsRequest",
                "query-parameters": {
                  "end": {
                    "docs": "End date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM",
                    "type": "optional<datetime>",
                  },
                  "start": {
                    "docs": "Start date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM",
                    "type": "optional<datetime>",
                  },
                },
              },
              "response": {
                "docs": "A list of fields for a specific project",
                "status-code": 200,
                "type": "ListProjectUsageFieldsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "listProjects": {
              "auth": true,
              "display-name": "List Projects",
              "docs": "Retrieves basic information about the projects associated with the API key",
              "errors": [
                "root.ListProjectsRequestForbiddenError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "projects": [
                        {
                          "name": "name",
                          "project_id": "project_id",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/projects",
              "response": {
                "docs": "A list of projects",
                "status-code": 200,
                "type": "ListProjectsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "listSelfHostedDistCreds": {
              "auth": true,
              "display-name": "List Project Self-Hosted Distribution Credentials",
              "docs": "Lists sets of distribution credentials for the specified project",
              "errors": [
                "root.ListSelfHostedDistCredsRequestForbiddenError",
                "root.ListSelfHostedDistCredsRequestNotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "project_id": "123456-7890-1234-5678-901234",
                  },
                  "response": {
                    "body": {
                      "distribution_credentials": [
                        {
                          "distribution_credentials": {
                            "comment": "My Self-Hosted Distribution Credentials",
                            "created": "2023-06-28T15:36:59Z",
                            "distribution_credentials_id": "8b36cfd0-472f-4a21-833f-2d6343c3a2f3",
                            "provider": "quay",
                            "scopes": [
                              "self-hosted:product:api",
                              "self-hosted:product:engine",
                            ],
                          },
                          "member": {
                            "email": "email@example.com",
                            "member_id": "3376abcd-8e5e-49d3-92d4-876d3a4f0363",
                          },
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/projects/{project_id}/self-hosted/distribution/credentials",
              "path-parameters": {
                "project_id": {
                  "docs": "The unique identifier of the project",
                  "type": "string",
                },
              },
              "response": {
                "docs": "List of distribution credentials",
                "status-code": 200,
                "type": "ListSelfHostedDistCredsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "updateProject": {
              "auth": true,
              "display-name": "Update a Project",
              "docs": "Updates the name or other properties of an existing project",
              "errors": [
                "root.UpdateProjectRequestBadRequestError",
                "root.UpdateProjectRequestForbiddenError",
                "root.UpdateProjectRequestNotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "project_id": "123456-7890-1234-5678-901234",
                  },
                  "request": {
                    "name": "My Project",
                  },
                  "response": {
                    "body": {
                      "message": "Successfully updated project info.",
                    },
                  },
                },
              ],
              "method": "PATCH",
              "pagination": undefined,
              "path": "/v1/projects/{project_id}",
              "path-parameters": {
                "project_id": {
                  "docs": "The unique identifier of the project",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "name": {
                      "docs": "The name of the project",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpdateProjects",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "A project",
                "status-code": 200,
                "type": "UpdateProjectResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "updateProjectMemberScopes": {
              "auth": true,
              "display-name": "Update Project Member Scopes",
              "docs": "Updates the scopes for a specific member",
              "errors": [
                "root.UpdateProjectMemberScopesRequestForbiddenError",
                "root.UpdateProjectMemberScopesRequestNotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "member_id": "123456789012345678901234",
                    "project_id": "123456-7890-1234-5678-901234",
                  },
                  "request": {
                    "scope": "admin",
                  },
                  "response": {
                    "body": {
                      "message": "Successfully updated the account scopes.",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/v1/projects/{project_id}/members/{member_id}/scopes",
              "path-parameters": {
                "member_id": {
                  "docs": "The unique identifier of the Member",
                  "type": "string",
                },
                "project_id": {
                  "docs": "The unique identifier of the project",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "scope": {
                      "docs": "A scope to update",
                      "type": "string",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpdateMemberScope",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Updated the scopes for a specific member",
                "status-code": 200,
                "type": "UpdateProjectMemberScopesResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "CreateProjectInviteResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "message": {
                "docs": "confirmation message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateSelfHostedDistCredsRequestScopesItem": {
            "enum": [
              {
                "name": "SelfHostedProducts",
                "value": "self-hosted:products",
              },
              {
                "name": "SelfHostedProductApi",
                "value": "self-hosted:product:api",
              },
              {
                "name": "SelfHostedProductEngine",
                "value": "self-hosted:product:engine",
              },
              {
                "name": "SelfHostedProductLicenseProxy",
                "value": "self-hosted:product:license-proxy",
              },
              {
                "name": "SelfHostedProductDgtools",
                "value": "self-hosted:product:dgtools",
              },
              {
                "name": "SelfHostedProductBilling",
                "value": "self-hosted:product:billing",
              },
              {
                "name": "SelfHostedProductHotpepper",
                "value": "self-hosted:product:hotpepper",
              },
              {
                "name": "SelfHostedProductMetricsServer",
                "value": "self-hosted:product:metrics-server",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeleteProjectInviteResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "message": {
                "docs": "confirmation message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeleteProjectKeyResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "message": {
                "docs": "A message indicating that the API key was deleted",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeleteProjectLeaveResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "message": {
                "docs": "confirmation message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeleteProjectMemberResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "message": {
                "docs": "confirmation message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeleteProjectResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "message": {
                "docs": "confirmation message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeleteSelfHostedDistCredsResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "distribution_credentials": "DeleteSelfHostedDistCredsResponseDistributionCredentials",
              "member": "DeleteSelfHostedDistCredsResponseMember",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeleteSelfHostedDistCredsResponseDistributionCredentials": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "comment": {
                "docs": "Optional comment about the credentials",
                "type": "optional<string>",
              },
              "created": {
                "docs": "Timestamp when the credentials were created",
                "type": "datetime",
              },
              "distribution_credentials_id": {
                "docs": "Unique identifier for the distribution credentials",
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "provider": {
                "docs": "The provider of the distribution service",
                "type": "string",
              },
              "scopes": {
                "docs": "List of permission scopes for the credentials",
                "type": "list<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeleteSelfHostedDistCredsResponseMember": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "email": {
                "docs": "Email address of the member",
                "type": "string",
                "validation": {
                  "format": "email",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "member_id": {
                "docs": "Unique identifier for the member",
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetModelResponse": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "GetModelResponseBatch",
              "GetModelResponseMetadata",
            ],
          },
          "GetModelResponseBatch": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "architecture": "optional<string>",
              "batch": "optional<boolean>",
              "canonical_name": "optional<string>",
              "formatted_output": "optional<boolean>",
              "languages": "optional<list<string>>",
              "name": "optional<string>",
              "streaming": "optional<boolean>",
              "uuid": {
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "version": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetModelResponseMetadata": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "architecture": "optional<string>",
              "canonical_name": "optional<string>",
              "languages": "optional<list<string>>",
              "metadata": "optional<GetModelResponseMetadataMetadata>",
              "name": "optional<string>",
              "uuid": {
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "version": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetModelResponseMetadataMetadata": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "accent": "optional<string>",
              "color": "optional<string>",
              "image": {
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "sample": {
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "tags": "optional<list<string>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProjectBalanceResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "amount": {
                "default": 0,
                "docs": "The amount of the balance",
                "type": "optional<integer>",
              },
              "balance_id": {
                "docs": "The unique identifier of the balance",
                "type": "optional<string>",
              },
              "purchase_order_id": {
                "docs": "Description or reference of the purchase",
                "type": "optional<string>",
              },
              "units": {
                "docs": "The units of the balance, such as "USD"",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProjectBalancesResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "balances": "optional<list<GetProjectBalancesResponseBalancesItem>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProjectBalancesResponseBalancesItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "amount": {
                "default": 0,
                "docs": "The amount of the balance",
                "type": "optional<integer>",
              },
              "balance_id": {
                "docs": "The unique identifier of the balance",
                "type": "optional<string>",
              },
              "purchase_order_id": {
                "docs": "Description or reference of the purchase",
                "type": "optional<string>",
              },
              "units": {
                "docs": "The units of the balance, such as "USD"",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProjectKeyResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "item": "optional<root.Key>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProjectModelResponse": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "root.SttModels",
              "root.TtsModels",
            ],
          },
          "GetProjectRequestResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "request": "optional<root.Request>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProjectResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "name": {
                "docs": "The name of the project",
                "type": "optional<string>",
              },
              "project_id": {
                "docs": "The unique identifier of the project",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProjectUsageBreakdownRequestProjectFilters": {
            "enum": [
              {
                "name": "AlternativesYml",
                "value": "alternatives.yml",
              },
              {
                "name": "CallbackMethodYml",
                "value": "callback_method.yml",
              },
              {
                "name": "CallbackYml",
                "value": "callback.yml",
              },
              {
                "name": "ChannelsYml",
                "value": "channels.yml",
              },
              {
                "name": "CustomIntentModeYml",
                "value": "custom_intent_mode.yml",
              },
              {
                "name": "CustomIntentYml",
                "value": "custom_intent.yml",
              },
              {
                "name": "CustomTopicModeYml",
                "value": "custom_topic_mode.yml",
              },
              {
                "name": "CustomTopicYml",
                "value": "custom_topic.yml",
              },
              {
                "name": "DetectEntitiesYml",
                "value": "detect_entities.yml",
              },
              {
                "name": "DetectLanguageYml",
                "value": "detect_language.yml",
              },
              {
                "name": "DiarizeYml",
                "value": "diarize.yml",
              },
              {
                "name": "DiarizeVersionYml",
                "value": "diarize_version.yml",
              },
              {
                "name": "DictationYml",
                "value": "dictation.yml",
              },
              {
                "name": "DetectTopicsYml",
                "value": "detect_topics.yml",
              },
              {
                "name": "EncodingYml",
                "value": "encoding.yml",
              },
              {
                "name": "ExtraYml",
                "value": "extra.yml",
              },
              {
                "name": "FillerWordsYml",
                "value": "filler_words.yml",
              },
              {
                "name": "IntentsYml",
                "value": "intents.yml",
              },
              {
                "name": "KeywordsYml",
                "value": "keywords.yml",
              },
              {
                "name": "LanguageYml",
                "value": "language.yml",
              },
              {
                "name": "MeasurementsYml",
                "value": "measurements.yml",
              },
              {
                "name": "ModelYml",
                "value": "model.yml",
              },
              {
                "name": "MultichannelYml",
                "value": "multichannel.yml",
              },
              {
                "name": "NumeralsYml",
                "value": "numerals.yml",
              },
              {
                "name": "ParagraphsYml",
                "value": "paragraphs.yml",
              },
              {
                "name": "ProfanityFilterYml",
                "value": "profanity_filter.yml",
              },
              {
                "name": "PunctuateYml",
                "value": "punctuate.yml",
              },
              {
                "name": "RedactYml",
                "value": "redact.yml",
              },
              {
                "name": "ReplaceYml",
                "value": "replace.yml",
              },
              {
                "name": "SampleRateYml",
                "value": "sample_rate.yml",
              },
              {
                "name": "SmartFormatYml",
                "value": "smart_format.yml",
              },
              {
                "name": "SearchYml",
                "value": "search.yml",
              },
              {
                "name": "SentimentYml",
                "value": "sentiment.yml",
              },
              {
                "name": "SummarizeYml",
                "value": "summarize.yml",
              },
              {
                "name": "TagYml",
                "value": "tag.yml",
              },
              {
                "name": "TopicsYml",
                "value": "topics.yml",
              },
              {
                "name": "UtterancesYml",
                "value": "utterances.yml",
              },
              {
                "name": "UttSplitYml",
                "value": "utt_split.yml",
              },
              {
                "name": "VersionYml",
                "value": "version.yml",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProjectUsageBreakdownResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "end": {
                "docs": "End date of the usage period",
                "type": "string",
                "validation": {
                  "format": "date",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "resolution": "GetProjectUsageBreakdownResponseResolution",
              "results": "list<GetProjectUsageBreakdownResponseResultsItem>",
              "start": {
                "docs": "Start date of the usage period",
                "type": "string",
                "validation": {
                  "format": "date",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProjectUsageBreakdownResponseResolution": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "amount": {
                "docs": "Amount of units",
                "type": "integer",
              },
              "units": {
                "docs": "Time unit for the resolution",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProjectUsageBreakdownResponseResultsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "agent_hours": {
                "docs": "Agent hours used",
                "type": "float",
              },
              "grouping": "GetProjectUsageBreakdownResponseResultsItemGrouping",
              "hours": {
                "docs": "Audio hours processed",
                "type": "float",
              },
              "requests": {
                "docs": "Number of requests",
                "type": "integer",
              },
              "tokens_in": {
                "docs": "Number of input tokens",
                "type": "integer",
              },
              "tokens_out": {
                "docs": "Number of output tokens",
                "type": "integer",
              },
              "total_hours": {
                "docs": "Total hours including all processing",
                "type": "float",
              },
              "tts_characters": {
                "docs": "Number of text-to-speech characters processed",
                "type": "integer",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProjectUsageBreakdownResponseResultsItemGrouping": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "accessor": {
                "docs": "Optional accessor identifier",
                "type": "optional<string>",
              },
              "deployment": {
                "docs": "Optional deployment identifier",
                "type": "optional<string>",
              },
              "end": {
                "docs": "End date for this group",
                "type": "optional<string>",
                "validation": {
                  "format": "date",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "endpoint": {
                "docs": "Optional endpoint identifier",
                "type": "optional<string>",
              },
              "feature_set": {
                "docs": "Optional feature set identifier",
                "type": "optional<string>",
              },
              "method": {
                "docs": "Optional method identifier",
                "type": "optional<string>",
              },
              "models": {
                "docs": "Optional models identifier",
                "type": "optional<string>",
              },
              "start": {
                "docs": "Start date for this group",
                "type": "optional<string>",
                "validation": {
                  "format": "date",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "tags": {
                "docs": "Optional tags",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProjectUsageRequestProjectFilters": {
            "enum": [
              {
                "name": "AlternativesYml",
                "value": "alternatives.yml",
              },
              {
                "name": "CallbackMethodYml",
                "value": "callback_method.yml",
              },
              {
                "name": "CallbackYml",
                "value": "callback.yml",
              },
              {
                "name": "ChannelsYml",
                "value": "channels.yml",
              },
              {
                "name": "CustomIntentModeYml",
                "value": "custom_intent_mode.yml",
              },
              {
                "name": "CustomIntentYml",
                "value": "custom_intent.yml",
              },
              {
                "name": "CustomTopicModeYml",
                "value": "custom_topic_mode.yml",
              },
              {
                "name": "CustomTopicYml",
                "value": "custom_topic.yml",
              },
              {
                "name": "DetectEntitiesYml",
                "value": "detect_entities.yml",
              },
              {
                "name": "DetectLanguageYml",
                "value": "detect_language.yml",
              },
              {
                "name": "DiarizeYml",
                "value": "diarize.yml",
              },
              {
                "name": "DiarizeVersionYml",
                "value": "diarize_version.yml",
              },
              {
                "name": "DictationYml",
                "value": "dictation.yml",
              },
              {
                "name": "DetectTopicsYml",
                "value": "detect_topics.yml",
              },
              {
                "name": "EncodingYml",
                "value": "encoding.yml",
              },
              {
                "name": "ExtraYml",
                "value": "extra.yml",
              },
              {
                "name": "FillerWordsYml",
                "value": "filler_words.yml",
              },
              {
                "name": "IntentsYml",
                "value": "intents.yml",
              },
              {
                "name": "KeywordsYml",
                "value": "keywords.yml",
              },
              {
                "name": "LanguageYml",
                "value": "language.yml",
              },
              {
                "name": "MeasurementsYml",
                "value": "measurements.yml",
              },
              {
                "name": "ModelYml",
                "value": "model.yml",
              },
              {
                "name": "MultichannelYml",
                "value": "multichannel.yml",
              },
              {
                "name": "NumeralsYml",
                "value": "numerals.yml",
              },
              {
                "name": "ParagraphsYml",
                "value": "paragraphs.yml",
              },
              {
                "name": "ProfanityFilterYml",
                "value": "profanity_filter.yml",
              },
              {
                "name": "PunctuateYml",
                "value": "punctuate.yml",
              },
              {
                "name": "RedactYml",
                "value": "redact.yml",
              },
              {
                "name": "ReplaceYml",
                "value": "replace.yml",
              },
              {
                "name": "SampleRateYml",
                "value": "sample_rate.yml",
              },
              {
                "name": "SmartFormatYml",
                "value": "smart_format.yml",
              },
              {
                "name": "SearchYml",
                "value": "search.yml",
              },
              {
                "name": "SentimentYml",
                "value": "sentiment.yml",
              },
              {
                "name": "SummarizeYml",
                "value": "summarize.yml",
              },
              {
                "name": "TagYml",
                "value": "tag.yml",
              },
              {
                "name": "TopicsYml",
                "value": "topics.yml",
              },
              {
                "name": "UtterancesYml",
                "value": "utterances.yml",
              },
              {
                "name": "UttSplitYml",
                "value": "utt_split.yml",
              },
              {
                "name": "VersionYml",
                "value": "version.yml",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProjectUsageResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "end": {
                "type": "optional<string>",
                "validation": {
                  "format": "date",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "resolution": "optional<GetProjectUsageResponseResolution>",
              "start": {
                "type": "optional<string>",
                "validation": {
                  "format": "date",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProjectUsageResponseResolution": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "amount": "optional<integer>",
              "units": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetSelfHostedCredentialsResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "distribution_credentials": "GetSelfHostedCredentialsResponseDistributionCredentials",
              "member": "GetSelfHostedCredentialsResponseMember",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetSelfHostedCredentialsResponseDistributionCredentials": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "comment": {
                "docs": "Optional comment about the credentials",
                "type": "optional<string>",
              },
              "created": {
                "docs": "Timestamp when the credentials were created",
                "type": "datetime",
              },
              "distribution_credentials_id": {
                "docs": "Unique identifier for the distribution credentials",
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "provider": {
                "docs": "The provider of the distribution service",
                "type": "string",
              },
              "scopes": {
                "docs": "List of permission scopes for the credentials",
                "type": "list<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetSelfHostedCredentialsResponseMember": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "email": {
                "docs": "Email address of the member",
                "type": "string",
                "validation": {
                  "format": "email",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "member_id": {
                "docs": "Unique identifier for the member",
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListModelsResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "stt": "optional<list<ListModelsResponseSttItem>>",
              "tts": "optional<list<ListModelsResponseTtsItem>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListModelsResponseSttItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "architecture": "optional<string>",
              "batch": "optional<boolean>",
              "canonical_name": "optional<string>",
              "formatted_output": "optional<boolean>",
              "languages": "optional<list<string>>",
              "name": "optional<string>",
              "streaming": "optional<boolean>",
              "uuid": {
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "version": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListModelsResponseTtsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "architecture": "optional<string>",
              "canonical_name": "optional<string>",
              "languages": "optional<list<string>>",
              "metadata": "optional<ListModelsResponseTtsItemMetadata>",
              "name": "optional<string>",
              "uuid": {
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "version": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListModelsResponseTtsItemMetadata": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "accent": "optional<string>",
              "color": "optional<string>",
              "image": {
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "sample": {
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "tags": "optional<list<string>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProjectInvitesResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "invites": "optional<list<ListProjectInvitesResponseInvitesItem>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProjectInvitesResponseInvitesItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "email": {
                "docs": "The email address of the invitee",
                "type": "optional<string>",
              },
              "scope": {
                "docs": "The scope of the invitee",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProjectKeysResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "api_keys": "optional<list<root.Keys>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProjectMemberScopesResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "scopes": {
                "docs": "The API scopes of the member",
                "type": "optional<list<string>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProjectMembersResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "members": "optional<list<ListProjectMembersResponseMembersItem>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProjectMembersResponseMembersItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "member_id": {
                "docs": "The unique identifier of the member",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProjectModelsResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "stt": "optional<list<root.SttModels>>",
              "tts": "optional<list<root.TtsModels>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProjectPurchasesResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "orders": "optional<list<ListProjectPurchasesResponseOrdersItem>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProjectPurchasesResponseOrdersItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "amount": "optional<float>",
              "created": "optional<datetime>",
              "expiration": "optional<datetime>",
              "order_id": {
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "order_type": "optional<string>",
              "units": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProjectRequestsResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "limit": {
                "docs": "The number of results per page",
                "type": "optional<integer>",
              },
              "page": {
                "docs": "The page number of the paginated response",
                "type": "optional<integer>",
              },
              "requests": "optional<list<root.Request>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProjectUsageFieldsResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "features": {
                "docs": "API features available to the project",
                "type": "optional<list<string>>",
              },
              "models": {
                "docs": "List of models available for the project.",
                "type": "optional<list<ListProjectUsageFieldsResponseModelsItem>>",
              },
              "processing_methods": {
                "docs": "Processing methods supported by the API",
                "type": "optional<list<string>>",
              },
              "tags": {
                "docs": "List of tags associated with the project",
                "type": "optional<list<string>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProjectUsageFieldsResponseModelsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "language": {
                "docs": "The language supported by the model (IETF language tag).",
                "type": "optional<string>",
              },
              "model_id": {
                "docs": "Unique identifier for the model.",
                "type": "optional<string>",
              },
              "name": {
                "docs": "Name of the model.",
                "type": "optional<string>",
              },
              "version": {
                "docs": "Version identifier of the model, typically with a date and a revision number.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProjectsResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "projects": "optional<list<ListProjectsResponseProjectsItem>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProjectsResponseProjectsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "name": {
                "docs": "The name of the project",
                "type": "optional<string>",
              },
              "project_id": {
                "docs": "The unique identifier of the project",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListSelfHostedDistCredsResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "distribution_credentials": {
                "docs": "Array of distribution credentials with associated member information",
                "type": "optional<list<ListSelfHostedDistCredsResponseDistributionCredentialsItem>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListSelfHostedDistCredsResponseDistributionCredentialsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "distribution_credentials": "ListSelfHostedDistCredsResponseDistributionCredentialsItemDistributionCredentials",
              "member": "ListSelfHostedDistCredsResponseDistributionCredentialsItemMember",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListSelfHostedDistCredsResponseDistributionCredentialsItemDistributionCredentials": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "comment": {
                "docs": "Optional comment about the credentials",
                "type": "optional<string>",
              },
              "created": {
                "docs": "Timestamp when the credentials were created",
                "type": "datetime",
              },
              "distribution_credentials_id": {
                "docs": "Unique identifier for the distribution credentials",
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "provider": {
                "docs": "The provider of the distribution service",
                "type": "string",
              },
              "scopes": {
                "docs": "List of permission scopes for the credentials",
                "type": "list<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListSelfHostedDistCredsResponseDistributionCredentialsItemMember": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "email": {
                "docs": "Email address of the member",
                "type": "string",
                "validation": {
                  "format": "email",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "member_id": {
                "docs": "Unique identifier for the member",
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateProjectMemberScopesResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "message": {
                "docs": "confirmation message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateProjectResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "message": {
                "docs": "confirmation message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  ListProjectsResponseProjectsItem:
    properties:
      project_id:
        type: optional<string>
        docs: The unique identifier of the project
      name:
        type: optional<string>
        docs: The name of the project
    source:
      openapi: ../openapi.yml
    inline: true
  ListProjectsResponse:
    properties:
      projects: optional<list<ListProjectsResponseProjectsItem>>
    source:
      openapi: ../openapi.yml
  GetProjectResponse:
    properties:
      project_id:
        type: optional<string>
        docs: The unique identifier of the project
      name:
        type: optional<string>
        docs: The name of the project
    source:
      openapi: ../openapi.yml
  DeleteProjectResponse:
    properties:
      message:
        type: optional<string>
        docs: confirmation message
    source:
      openapi: ../openapi.yml
  UpdateProjectResponse:
    properties:
      message:
        type: optional<string>
        docs: confirmation message
    source:
      openapi: ../openapi.yml
  GetProjectBalancesResponseBalancesItem:
    properties:
      balance_id:
        type: optional<string>
        docs: The unique identifier of the balance
      amount:
        type: optional<integer>
        docs: The amount of the balance
        default: 0
      units:
        type: optional<string>
        docs: The units of the balance, such as "USD"
      purchase_order_id:
        type: optional<string>
        docs: Description or reference of the purchase
    source:
      openapi: ../openapi.yml
    inline: true
  GetProjectBalancesResponse:
    properties:
      balances: optional<list<GetProjectBalancesResponseBalancesItem>>
    source:
      openapi: ../openapi.yml
  GetProjectBalanceResponse:
    properties:
      balance_id:
        type: optional<string>
        docs: The unique identifier of the balance
      amount:
        type: optional<integer>
        docs: The amount of the balance
        default: 0
      units:
        type: optional<string>
        docs: The units of the balance, such as "USD"
      purchase_order_id:
        type: optional<string>
        docs: Description or reference of the purchase
    source:
      openapi: ../openapi.yml
  ListProjectModelsResponse:
    properties:
      stt: optional<list<root.SttModels>>
      tts: optional<list<root.TtsModels>>
    source:
      openapi: ../openapi.yml
  GetProjectModelResponse:
    discriminated: false
    union:
      - root.SttModels
      - root.TtsModels
    source:
      openapi: ../openapi.yml
  ListProjectKeysResponse:
    properties:
      api_keys: optional<list<root.Keys>>
    source:
      openapi: ../openapi.yml
  GetProjectKeyResponse:
    properties:
      item: optional<root.Key>
    source:
      openapi: ../openapi.yml
  DeleteProjectKeyResponse:
    properties:
      message:
        type: optional<string>
        docs: A message indicating that the API key was deleted
    source:
      openapi: ../openapi.yml
  ListProjectMembersResponseMembersItem:
    properties:
      member_id:
        type: optional<string>
        docs: The unique identifier of the member
    source:
      openapi: ../openapi.yml
    inline: true
  ListProjectMembersResponse:
    properties:
      members: optional<list<ListProjectMembersResponseMembersItem>>
    source:
      openapi: ../openapi.yml
  DeleteProjectMemberResponse:
    properties:
      message:
        type: optional<string>
        docs: confirmation message
    source:
      openapi: ../openapi.yml
  ListProjectMemberScopesResponse:
    properties:
      scopes:
        type: optional<list<string>>
        docs: The API scopes of the member
    source:
      openapi: ../openapi.yml
  UpdateProjectMemberScopesResponse:
    properties:
      message:
        type: optional<string>
        docs: confirmation message
    source:
      openapi: ../openapi.yml
  ListProjectInvitesResponseInvitesItem:
    properties:
      email:
        type: optional<string>
        docs: The email address of the invitee
      scope:
        type: optional<string>
        docs: The scope of the invitee
    source:
      openapi: ../openapi.yml
    inline: true
  ListProjectInvitesResponse:
    properties:
      invites: optional<list<ListProjectInvitesResponseInvitesItem>>
    source:
      openapi: ../openapi.yml
  CreateProjectInviteResponse:
    properties:
      message:
        type: optional<string>
        docs: confirmation message
    source:
      openapi: ../openapi.yml
  DeleteProjectInviteResponse:
    properties:
      message:
        type: optional<string>
        docs: confirmation message
    source:
      openapi: ../openapi.yml
  DeleteProjectLeaveResponse:
    properties:
      message:
        type: optional<string>
        docs: confirmation message
    source:
      openapi: ../openapi.yml
  ListProjectRequestsResponse:
    properties:
      page:
        type: optional<integer>
        docs: The page number of the paginated response
      limit:
        type: optional<integer>
        docs: The number of results per page
      requests: optional<list<root.Request>>
    source:
      openapi: ../openapi.yml
  GetProjectRequestResponse:
    properties:
      request: optional<root.Request>
    source:
      openapi: ../openapi.yml
  GetProjectUsageRequestProjectFilters:
    enum:
      - value: alternatives.yml
        name: AlternativesYml
      - value: callback_method.yml
        name: CallbackMethodYml
      - value: callback.yml
        name: CallbackYml
      - value: channels.yml
        name: ChannelsYml
      - value: custom_intent_mode.yml
        name: CustomIntentModeYml
      - value: custom_intent.yml
        name: CustomIntentYml
      - value: custom_topic_mode.yml
        name: CustomTopicModeYml
      - value: custom_topic.yml
        name: CustomTopicYml
      - value: detect_entities.yml
        name: DetectEntitiesYml
      - value: detect_language.yml
        name: DetectLanguageYml
      - value: diarize.yml
        name: DiarizeYml
      - value: diarize_version.yml
        name: DiarizeVersionYml
      - value: dictation.yml
        name: DictationYml
      - value: detect_topics.yml
        name: DetectTopicsYml
      - value: encoding.yml
        name: EncodingYml
      - value: extra.yml
        name: ExtraYml
      - value: filler_words.yml
        name: FillerWordsYml
      - value: intents.yml
        name: IntentsYml
      - value: keywords.yml
        name: KeywordsYml
      - value: language.yml
        name: LanguageYml
      - value: measurements.yml
        name: MeasurementsYml
      - value: model.yml
        name: ModelYml
      - value: multichannel.yml
        name: MultichannelYml
      - value: numerals.yml
        name: NumeralsYml
      - value: paragraphs.yml
        name: ParagraphsYml
      - value: profanity_filter.yml
        name: ProfanityFilterYml
      - value: punctuate.yml
        name: PunctuateYml
      - value: redact.yml
        name: RedactYml
      - value: replace.yml
        name: ReplaceYml
      - value: sample_rate.yml
        name: SampleRateYml
      - value: smart_format.yml
        name: SmartFormatYml
      - value: search.yml
        name: SearchYml
      - value: sentiment.yml
        name: SentimentYml
      - value: summarize.yml
        name: SummarizeYml
      - value: tag.yml
        name: TagYml
      - value: topics.yml
        name: TopicsYml
      - value: utterances.yml
        name: UtterancesYml
      - value: utt_split.yml
        name: UttSplitYml
      - value: version.yml
        name: VersionYml
    source:
      openapi: ../openapi.yml
  GetProjectUsageResponseResolution:
    properties:
      units: optional<string>
      amount: optional<integer>
    source:
      openapi: ../openapi.yml
    inline: true
  GetProjectUsageResponse:
    properties:
      start:
        type: optional<string>
        validation:
          format: date
      end:
        type: optional<string>
        validation:
          format: date
      resolution: optional<GetProjectUsageResponseResolution>
    source:
      openapi: ../openapi.yml
  ListProjectUsageFieldsResponseModelsItem:
    properties:
      name:
        type: optional<string>
        docs: Name of the model.
      language:
        type: optional<string>
        docs: The language supported by the model (IETF language tag).
      version:
        type: optional<string>
        docs: >-
          Version identifier of the model, typically with a date and a revision
          number.
      model_id:
        type: optional<string>
        docs: Unique identifier for the model.
    source:
      openapi: ../openapi.yml
    inline: true
  ListProjectUsageFieldsResponse:
    properties:
      tags:
        type: optional<list<string>>
        docs: List of tags associated with the project
      models:
        type: optional<list<ListProjectUsageFieldsResponseModelsItem>>
        docs: List of models available for the project.
      processing_methods:
        type: optional<list<string>>
        docs: Processing methods supported by the API
      features:
        type: optional<list<string>>
        docs: API features available to the project
    source:
      openapi: ../openapi.yml
  GetProjectUsageBreakdownRequestProjectFilters:
    enum:
      - value: alternatives.yml
        name: AlternativesYml
      - value: callback_method.yml
        name: CallbackMethodYml
      - value: callback.yml
        name: CallbackYml
      - value: channels.yml
        name: ChannelsYml
      - value: custom_intent_mode.yml
        name: CustomIntentModeYml
      - value: custom_intent.yml
        name: CustomIntentYml
      - value: custom_topic_mode.yml
        name: CustomTopicModeYml
      - value: custom_topic.yml
        name: CustomTopicYml
      - value: detect_entities.yml
        name: DetectEntitiesYml
      - value: detect_language.yml
        name: DetectLanguageYml
      - value: diarize.yml
        name: DiarizeYml
      - value: diarize_version.yml
        name: DiarizeVersionYml
      - value: dictation.yml
        name: DictationYml
      - value: detect_topics.yml
        name: DetectTopicsYml
      - value: encoding.yml
        name: EncodingYml
      - value: extra.yml
        name: ExtraYml
      - value: filler_words.yml
        name: FillerWordsYml
      - value: intents.yml
        name: IntentsYml
      - value: keywords.yml
        name: KeywordsYml
      - value: language.yml
        name: LanguageYml
      - value: measurements.yml
        name: MeasurementsYml
      - value: model.yml
        name: ModelYml
      - value: multichannel.yml
        name: MultichannelYml
      - value: numerals.yml
        name: NumeralsYml
      - value: paragraphs.yml
        name: ParagraphsYml
      - value: profanity_filter.yml
        name: ProfanityFilterYml
      - value: punctuate.yml
        name: PunctuateYml
      - value: redact.yml
        name: RedactYml
      - value: replace.yml
        name: ReplaceYml
      - value: sample_rate.yml
        name: SampleRateYml
      - value: smart_format.yml
        name: SmartFormatYml
      - value: search.yml
        name: SearchYml
      - value: sentiment.yml
        name: SentimentYml
      - value: summarize.yml
        name: SummarizeYml
      - value: tag.yml
        name: TagYml
      - value: topics.yml
        name: TopicsYml
      - value: utterances.yml
        name: UtterancesYml
      - value: utt_split.yml
        name: UttSplitYml
      - value: version.yml
        name: VersionYml
    source:
      openapi: ../openapi.yml
  GetProjectUsageBreakdownResponseResolution:
    properties:
      units:
        type: string
        docs: Time unit for the resolution
      amount:
        type: integer
        docs: Amount of units
    source:
      openapi: ../openapi.yml
    inline: true
  GetProjectUsageBreakdownResponseResultsItemGrouping:
    properties:
      start:
        type: optional<string>
        docs: Start date for this group
        validation:
          format: date
      end:
        type: optional<string>
        docs: End date for this group
        validation:
          format: date
      accessor:
        type: optional<string>
        docs: Optional accessor identifier
      endpoint:
        type: optional<string>
        docs: Optional endpoint identifier
      feature_set:
        type: optional<string>
        docs: Optional feature set identifier
      models:
        type: optional<string>
        docs: Optional models identifier
      method:
        type: optional<string>
        docs: Optional method identifier
      tags:
        type: optional<string>
        docs: Optional tags
      deployment:
        type: optional<string>
        docs: Optional deployment identifier
    source:
      openapi: ../openapi.yml
    inline: true
  GetProjectUsageBreakdownResponseResultsItem:
    properties:
      hours:
        type: float
        docs: Audio hours processed
      total_hours:
        type: float
        docs: Total hours including all processing
      agent_hours:
        type: float
        docs: Agent hours used
      tokens_in:
        type: integer
        docs: Number of input tokens
      tokens_out:
        type: integer
        docs: Number of output tokens
      tts_characters:
        type: integer
        docs: Number of text-to-speech characters processed
      requests:
        type: integer
        docs: Number of requests
      grouping: GetProjectUsageBreakdownResponseResultsItemGrouping
    source:
      openapi: ../openapi.yml
    inline: true
  GetProjectUsageBreakdownResponse:
    properties:
      start:
        type: string
        docs: Start date of the usage period
        validation:
          format: date
      end:
        type: string
        docs: End date of the usage period
        validation:
          format: date
      resolution: GetProjectUsageBreakdownResponseResolution
      results: list<GetProjectUsageBreakdownResponseResultsItem>
    source:
      openapi: ../openapi.yml
  ListProjectPurchasesResponseOrdersItem:
    properties:
      order_id:
        type: optional<string>
        validation:
          format: uuid
      expiration: optional<datetime>
      created: optional<datetime>
      amount: optional<float>
      units: optional<string>
      order_type: optional<string>
    source:
      openapi: ../openapi.yml
    inline: true
  ListProjectPurchasesResponse:
    properties:
      orders: optional<list<ListProjectPurchasesResponseOrdersItem>>
    source:
      openapi: ../openapi.yml
  ListModelsResponseSttItem:
    properties:
      name: optional<string>
      canonical_name: optional<string>
      architecture: optional<string>
      languages: optional<list<string>>
      version: optional<string>
      uuid:
        type: optional<string>
        validation:
          format: uuid
      batch: optional<boolean>
      streaming: optional<boolean>
      formatted_output: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  ListModelsResponseTtsItemMetadata:
    properties:
      accent: optional<string>
      color: optional<string>
      image:
        type: optional<string>
        validation:
          format: uri
      sample:
        type: optional<string>
        validation:
          format: uri
      tags: optional<list<string>>
    source:
      openapi: ../openapi.yml
    inline: true
  ListModelsResponseTtsItem:
    properties:
      name: optional<string>
      canonical_name: optional<string>
      architecture: optional<string>
      languages: optional<list<string>>
      version: optional<string>
      uuid:
        type: optional<string>
        validation:
          format: uuid
      metadata: optional<ListModelsResponseTtsItemMetadata>
    source:
      openapi: ../openapi.yml
    inline: true
  ListModelsResponse:
    properties:
      stt: optional<list<ListModelsResponseSttItem>>
      tts: optional<list<ListModelsResponseTtsItem>>
    source:
      openapi: ../openapi.yml
  GetModelResponseBatch:
    properties:
      name: optional<string>
      canonical_name: optional<string>
      architecture: optional<string>
      languages: optional<list<string>>
      version: optional<string>
      uuid:
        type: optional<string>
        validation:
          format: uuid
      batch: optional<boolean>
      streaming: optional<boolean>
      formatted_output: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetModelResponseMetadataMetadata:
    properties:
      accent: optional<string>
      color: optional<string>
      image:
        type: optional<string>
        validation:
          format: uri
      sample:
        type: optional<string>
        validation:
          format: uri
      tags: optional<list<string>>
    source:
      openapi: ../openapi.yml
    inline: true
  GetModelResponseMetadata:
    properties:
      name: optional<string>
      canonical_name: optional<string>
      architecture: optional<string>
      languages: optional<list<string>>
      version: optional<string>
      uuid:
        type: optional<string>
        validation:
          format: uuid
      metadata: optional<GetModelResponseMetadataMetadata>
    source:
      openapi: ../openapi.yml
    inline: true
  GetModelResponse:
    discriminated: false
    union:
      - GetModelResponseBatch
      - GetModelResponseMetadata
    source:
      openapi: ../openapi.yml
  ListSelfHostedDistCredsResponseDistributionCredentialsItemMember:
    properties:
      member_id:
        type: string
        docs: Unique identifier for the member
        validation:
          format: uuid
      email:
        type: string
        docs: Email address of the member
        validation:
          format: email
    source:
      openapi: ../openapi.yml
    inline: true
  ListSelfHostedDistCredsResponseDistributionCredentialsItemDistributionCredentials:
    properties:
      distribution_credentials_id:
        type: string
        docs: Unique identifier for the distribution credentials
        validation:
          format: uuid
      provider:
        type: string
        docs: The provider of the distribution service
      comment:
        type: optional<string>
        docs: Optional comment about the credentials
      scopes:
        docs: List of permission scopes for the credentials
        type: list<string>
      created:
        type: datetime
        docs: Timestamp when the credentials were created
    source:
      openapi: ../openapi.yml
    inline: true
  ListSelfHostedDistCredsResponseDistributionCredentialsItem:
    properties:
      member: ListSelfHostedDistCredsResponseDistributionCredentialsItemMember
      distribution_credentials: >-
        ListSelfHostedDistCredsResponseDistributionCredentialsItemDistributionCredentials
    source:
      openapi: ../openapi.yml
    inline: true
  ListSelfHostedDistCredsResponse:
    properties:
      distribution_credentials:
        type: >-
          optional<list<ListSelfHostedDistCredsResponseDistributionCredentialsItem>>
        docs: Array of distribution credentials with associated member information
    source:
      openapi: ../openapi.yml
  CreateSelfHostedDistCredsRequestScopesItem:
    enum:
      - value: self-hosted:products
        name: SelfHostedProducts
      - value: self-hosted:product:api
        name: SelfHostedProductApi
      - value: self-hosted:product:engine
        name: SelfHostedProductEngine
      - value: self-hosted:product:license-proxy
        name: SelfHostedProductLicenseProxy
      - value: self-hosted:product:dgtools
        name: SelfHostedProductDgtools
      - value: self-hosted:product:billing
        name: SelfHostedProductBilling
      - value: self-hosted:product:hotpepper
        name: SelfHostedProductHotpepper
      - value: self-hosted:product:metrics-server
        name: SelfHostedProductMetricsServer
    source:
      openapi: ../openapi.yml
  GetSelfHostedCredentialsResponseMember:
    properties:
      member_id:
        type: string
        docs: Unique identifier for the member
        validation:
          format: uuid
      email:
        type: string
        docs: Email address of the member
        validation:
          format: email
    source:
      openapi: ../openapi.yml
    inline: true
  GetSelfHostedCredentialsResponseDistributionCredentials:
    properties:
      distribution_credentials_id:
        type: string
        docs: Unique identifier for the distribution credentials
        validation:
          format: uuid
      provider:
        type: string
        docs: The provider of the distribution service
      comment:
        type: optional<string>
        docs: Optional comment about the credentials
      scopes:
        docs: List of permission scopes for the credentials
        type: list<string>
      created:
        type: datetime
        docs: Timestamp when the credentials were created
    source:
      openapi: ../openapi.yml
    inline: true
  GetSelfHostedCredentialsResponse:
    properties:
      member: GetSelfHostedCredentialsResponseMember
      distribution_credentials: GetSelfHostedCredentialsResponseDistributionCredentials
    source:
      openapi: ../openapi.yml
  DeleteSelfHostedDistCredsResponseMember:
    properties:
      member_id:
        type: string
        docs: Unique identifier for the member
        validation:
          format: uuid
      email:
        type: string
        docs: Email address of the member
        validation:
          format: email
    source:
      openapi: ../openapi.yml
    inline: true
  DeleteSelfHostedDistCredsResponseDistributionCredentials:
    properties:
      distribution_credentials_id:
        type: string
        docs: Unique identifier for the distribution credentials
        validation:
          format: uuid
      provider:
        type: string
        docs: The provider of the distribution service
      comment:
        type: optional<string>
        docs: Optional comment about the credentials
      scopes:
        docs: List of permission scopes for the credentials
        type: list<string>
      created:
        type: datetime
        docs: Timestamp when the credentials were created
    source:
      openapi: ../openapi.yml
    inline: true
  DeleteSelfHostedDistCredsResponse:
    properties:
      member: DeleteSelfHostedDistCredsResponseMember
      distribution_credentials: DeleteSelfHostedDistCredsResponseDistributionCredentials
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    listProjects:
      path: /v1/projects
      method: GET
      auth: true
      docs: >-
        Retrieves basic information about the projects associated with the API
        key
      source:
        openapi: ../openapi.yml
      display-name: List Projects
      response:
        docs: A list of projects
        type: ListProjectsResponse
        status-code: 200
      errors:
        - root.ListProjectsRequestForbiddenError
      examples:
        - response:
            body:
              projects:
                - project_id: project_id
                  name: name
    getProject:
      path: /v1/projects/{project_id}
      method: GET
      auth: true
      docs: Retrieves information about the specified project
      source:
        openapi: ../openapi.yml
      path-parameters:
        project_id:
          type: string
          docs: The unique identifier of the project
      display-name: Get a Project
      request:
        name: GetProjectRequest
        query-parameters:
          limit:
            type: optional<integer>
            default: 10
            docs: Number of results to return per page. Default 10. Range [1,1000]
            validation:
              min: 1
              max: 1000
          start:
            type: optional<datetime>
            docs: >-
              Start date of the requested date range. Formats accepted are
              YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM
          end:
            type: optional<datetime>
            docs: >-
              End date of the requested date range. Formats accepted are
              YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM
          page:
            type: optional<integer>
            docs: >-
              Navigate and return the results to retrieve specific portions of
              information of the response
      response:
        docs: A project
        type: GetProjectResponse
        status-code: 200
      errors:
        - root.GetProjectRequestBadRequestError
        - root.GetProjectRequestForbiddenError
        - root.GetProjectRequestNotFoundError
      examples:
        - path-parameters:
            project_id: 123456-7890-1234-5678-901234
          query-parameters:
            start: '2024-07-01T00:00:00Z'
            end: '2024-07-31T00:00:00Z'
          response:
            body:
              project_id: project_id
              name: name
    deleteProject:
      path: /v1/projects/{project_id}
      method: DELETE
      auth: true
      docs: Deletes the specified project
      source:
        openapi: ../openapi.yml
      path-parameters:
        project_id:
          type: string
          docs: The unique identifier of the project
      display-name: Delete a Project
      response:
        docs: A project
        type: DeleteProjectResponse
        status-code: 200
      errors:
        - root.DeleteProjectRequestBadRequestError
        - root.DeleteProjectRequestForbiddenError
        - root.DeleteProjectRequestNotFoundError
      examples:
        - path-parameters:
            project_id: 123456-7890-1234-5678-901234
          response:
            body:
              message: Successfully deleted a project.
    updateProject:
      path: /v1/projects/{project_id}
      method: PATCH
      auth: true
      docs: Updates the name or other properties of an existing project
      source:
        openapi: ../openapi.yml
      path-parameters:
        project_id:
          type: string
          docs: The unique identifier of the project
      display-name: Update a Project
      request:
        name: UpdateProjects
        body:
          properties:
            name:
              type: optional<string>
              docs: The name of the project
        content-type: application/json
      response:
        docs: A project
        type: UpdateProjectResponse
        status-code: 200
      errors:
        - root.UpdateProjectRequestBadRequestError
        - root.UpdateProjectRequestForbiddenError
        - root.UpdateProjectRequestNotFoundError
      examples:
        - path-parameters:
            project_id: 123456-7890-1234-5678-901234
          request:
            name: My Project
          response:
            body:
              message: Successfully updated project info.
    getProjectBalances:
      path: /v1/projects/{project_id}/balances
      method: GET
      auth: true
      docs: Generates a list of outstanding balances for the specified project
      source:
        openapi: ../openapi.yml
      path-parameters:
        project_id:
          type: string
          docs: The unique identifier of the project
      display-name: Get Project Balances
      response:
        docs: A list of outstanding balances
        type: GetProjectBalancesResponse
        status-code: 200
      errors:
        - root.GetProjectBalancesRequestBadRequestError
        - root.GetProjectBalancesRequestForbiddenError
        - root.GetProjectBalancesRequestNotFoundError
      examples:
        - path-parameters:
            project_id: 123456-7890-1234-5678-901234
          response:
            body:
              balances:
                - balance_id: b123456-7890-1234-5678-901234
                  amount: 250
                  units: usd
                  purchase_order_id: b123456-7890-1234-5678-901234
    getProjectBalance:
      path: /v1/projects/{project_id}/balances/{balance_id}
      method: GET
      auth: true
      docs: Retrieves details about the specified balance
      source:
        openapi: ../openapi.yml
      path-parameters:
        project_id:
          type: string
          docs: The unique identifier of the project
        balance_id:
          type: string
          docs: The unique identifier of the balance
      display-name: Get a Project Balance
      response:
        docs: A specific balance
        type: GetProjectBalanceResponse
        status-code: 200
      errors:
        - root.GetProjectBalanceRequestBadRequestError
        - root.GetProjectBalanceRequestForbiddenError
        - root.GetProjectBalanceRequestNotFoundError
      examples:
        - path-parameters:
            project_id: 123456-7890-1234-5678-901234
            balance_id: 123456-7890-1234-5678-901234
          response:
            body:
              balance_id: b123456-7890-1234-5678-901234
              amount: 250
              units: usd
              purchase_order_id: b123456-7890-1234-5678-901234
    listProjectModels:
      path: /v1/projects/{project_id}/models
      method: GET
      auth: true
      docs: >-
        Returns metadata on all the latest models that a specific project has
        access to, including non-public models
      source:
        openapi: ../openapi.yml
      path-parameters:
        project_id:
          type: string
          docs: The unique identifier of the project
      display-name: Returns metadata on all the latest models
      request:
        name: ListProjectModelsRequest
        query-parameters:
          include_outdated:
            type: boolean
            docs: returns non-latest versions of models
      response:
        docs: A list of models
        type: ListProjectModelsResponse
        status-code: 200
      errors:
        - root.ListProjectModelsRequestBadRequestError
      examples:
        - path-parameters:
            project_id: 123456-7890-1234-5678-901234
          query-parameters:
            include_outdated: true
          response:
            body:
              stt:
                - - name: conversationalai
                    canonical_name: conversationalai
                    architecture: base
                    version: 2021-11-10.1
                    uuid: 6b28e919-8427-4f32-9847-492e2efd7daf
                    batch: true
                    streaming: true
                    formatted_output: true
              tts:
                - - name: zeus
                    canonical_name: aura-zeus-en
                    architecture: aura
                    version: 2024-07-30.0
                    uuid: 9c28bce5-f144-4d32-9034-843aa7aed63e
    getProjectModel:
      path: /v1/projects/{project_id}/models/{model_id}
      method: GET
      auth: true
      docs: Returns metadata for a specific model
      source:
        openapi: ../openapi.yml
      path-parameters:
        project_id:
          type: string
          docs: The unique identifier of the project
        model_id:
          type: string
          docs: The specific UUID of the model
      display-name: Get a Project Model
      response:
        docs: A specific model
        type: GetProjectModelResponse
        status-code: 200
      errors:
        - root.GetProjectModelRequestBadRequestError
      examples:
        - path-parameters:
            project_id: 123456-7890-1234-5678-901234
            model_id: af6e9977-99f6-4d8f-b6f5-dfdf6fb6e291
          response:
            body:
              - name: conversationalai
                canonical_name: conversationalai
                architecture: base
                languages:
                  - en
                  - en-us
                version: 2021-11-10.1
                uuid: 6b28e919-8427-4f32-9847-492e2efd7daf
                batch: true
                streaming: true
                formatted_output: true
    listProjectKeys:
      path: /v1/projects/{project_id}/keys
      method: GET
      auth: true
      docs: Retrieves all API keys associated with the specified project
      source:
        openapi: ../openapi.yml
      path-parameters:
        project_id:
          type: string
          docs: The unique identifier of the project
      display-name: List Project Keys
      response:
        docs: A list of API keys
        type: ListProjectKeysResponse
        status-code: 200
      errors:
        - root.ListProjectKeysRequestForbiddenError
        - root.ListProjectKeysRequestNotFoundError
      examples:
        - path-parameters:
            project_id: 123456-7890-1234-5678-901234
          response:
            body:
              api_keys:
                - - {}
    createProjectKey:
      path: /v1/projects/{project_id}/keys
      method: POST
      auth: true
      docs: Creates a new API key with specified settings for the project
      source:
        openapi: ../openapi.yml
      path-parameters:
        project_id:
          type: string
          docs: The unique identifier of the project
      display-name: Create a Project Key
      request:
        body: root.Keys
        content-type: application/json
      response:
        docs: API key created successfully
        type: root.KeyCreated
        status-code: 200
      errors:
        - root.CreateProjectKeyRequestForbiddenError
        - root.CreateProjectKeyRequestNotFoundError
      examples:
        - path-parameters:
            project_id: 123456-7890-1234-5678-901234
          request:
            - {}
          response:
            body:
              api_key_id: 1234567890abcdef1234567890abcdef
              key: 1234567890abcdef1234567890abcdef
              comment: comment
              scopes:
                - member
              tags:
                - tag-1
    getProjectKey:
      path: /v1/projects/{project_id}/keys/{key_id}
      method: GET
      auth: true
      docs: Retrieves information about a specified API key
      source:
        openapi: ../openapi.yml
      path-parameters:
        project_id:
          type: string
          docs: The unique identifier of the project
        key_id:
          type: string
          docs: The unique identifier of the API key
      display-name: Get a Project Key
      response:
        docs: A specific API key
        type: GetProjectKeyResponse
        status-code: 200
      errors:
        - root.GetProjectKeyRequestForbiddenError
        - root.GetProjectKeyRequestNotFoundError
      examples:
        - path-parameters:
            project_id: 123456-7890-1234-5678-901234
            key_id: '123456789012345678901234'
          response:
            body:
              item:
                member:
                  member_id: 1000-2000-3000-4000
                  email: john@test.com
                  first_name: John
                  last_name: Doe
                  api_key:
                    api_key_id: 1234567890abcdef1234567890abcdef
                    comment: A comment
                    created: '2021-01-01T00:00:00Z'
    deleteProjectKey:
      path: /v1/projects/{project_id}/keys/{key_id}
      method: DELETE
      auth: true
      docs: Deletes an API key for a specific project
      source:
        openapi: ../openapi.yml
      path-parameters:
        project_id:
          type: string
          docs: The unique identifier of the project
        key_id:
          type: string
          docs: The unique identifier of the API key
      display-name: Deletes an API key for a specific project
      response:
        docs: API key deleted
        type: DeleteProjectKeyResponse
        status-code: 200
      errors:
        - root.DeleteProjectKeyRequestForbiddenError
        - root.DeleteProjectKeyRequestNotFoundError
      examples:
        - path-parameters:
            project_id: 123456-7890-1234-5678-901234
            key_id: '123456789012345678901234'
          response:
            body:
              message: Successfully deleted the API key!
    listProjectMembers:
      path: /v1/projects/{project_id}/members
      method: GET
      auth: true
      docs: Retrieves a list of account objects for a specific project
      source:
        openapi: ../openapi.yml
      path-parameters:
        project_id:
          type: string
          docs: The unique identifier of the project
      display-name: List Project Members
      response:
        docs: A list of account objects
        type: ListProjectMembersResponse
        status-code: 200
      errors:
        - root.ListProjectMembersRequestForbiddenError
        - root.ListProjectMembersRequestNotFoundError
      examples:
        - path-parameters:
            project_id: 123456-7890-1234-5678-901234
          response:
            body:
              members:
                - member_id: member_id
    deleteProjectMember:
      path: /v1/projects/{project_id}/members/{member_id}
      method: DELETE
      auth: true
      docs: Removes a member from the project using their unique member ID
      source:
        openapi: ../openapi.yml
      path-parameters:
        project_id:
          type: string
          docs: The unique identifier of the project
        member_id:
          type: string
          docs: The unique identifier of the Member
      display-name: Delete a Project Member
      response:
        docs: Delete the specific member from the project
        type: DeleteProjectMemberResponse
        status-code: 200
      errors:
        - root.DeleteProjectMemberRequestForbiddenError
        - root.DeleteProjectMemberRequestNotFoundError
      examples:
        - path-parameters:
            project_id: 123456-7890-1234-5678-901234
            member_id: '123456789012345678901234'
          response:
            body:
              message: Successfully removed account from project.
    listProjectMemberScopes:
      path: /v1/projects/{project_id}/members/{member_id}/scopes
      method: GET
      auth: true
      docs: Retrieves a list of scopes for a specific member
      source:
        openapi: ../openapi.yml
      path-parameters:
        project_id:
          type: string
          docs: The unique identifier of the project
        member_id:
          type: string
          docs: The unique identifier of the Member
      display-name: List Project Member Scopes
      response:
        docs: A list of scopes for a specific member
        type: ListProjectMemberScopesResponse
        status-code: 200
      errors:
        - root.ListProjectMemberScopesRequestForbiddenError
        - root.ListProjectMemberScopesRequestNotFoundError
      examples:
        - path-parameters:
            project_id: 123456-7890-1234-5678-901234
            member_id: '123456789012345678901234'
          response:
            body:
              scopes:
                - scopes
    updateProjectMemberScopes:
      path: /v1/projects/{project_id}/members/{member_id}/scopes
      method: PUT
      auth: true
      docs: Updates the scopes for a specific member
      source:
        openapi: ../openapi.yml
      path-parameters:
        project_id:
          type: string
          docs: The unique identifier of the project
        member_id:
          type: string
          docs: The unique identifier of the Member
      display-name: Update Project Member Scopes
      request:
        name: UpdateMemberScope
        body:
          properties:
            scope:
              type: string
              docs: A scope to update
        content-type: application/json
      response:
        docs: Updated the scopes for a specific member
        type: UpdateProjectMemberScopesResponse
        status-code: 200
      errors:
        - root.UpdateProjectMemberScopesRequestForbiddenError
        - root.UpdateProjectMemberScopesRequestNotFoundError
      examples:
        - path-parameters:
            project_id: 123456-7890-1234-5678-901234
            member_id: '123456789012345678901234'
          request:
            scope: admin
          response:
            body:
              message: Successfully updated the account scopes.
    listProjectInvites:
      path: /v1/projects/{project_id}/invites
      method: GET
      auth: true
      docs: Generates a list of invites for a specific project
      source:
        openapi: ../openapi.yml
      path-parameters:
        project_id:
          type: string
          docs: The unique identifier of the project
      display-name: List Project Invites
      response:
        docs: A list of invites for a specific project
        type: ListProjectInvitesResponse
        status-code: 200
      examples:
        - path-parameters:
            project_id: 123456-7890-1234-5678-901234
          response:
            body:
              invites:
                - email: email
                  scope: scope
    createProjectInvite:
      path: /v1/projects/{project_id}/invites
      method: POST
      auth: true
      docs: Generates an invite for a specific project
      source:
        openapi: ../openapi.yml
      path-parameters:
        project_id:
          type: string
          docs: The unique identifier of the project
      display-name: Create a Project Invite
      request:
        name: CreateProjectInvite
        body:
          properties:
            email:
              type: string
              docs: The email address of the invitee
            scope:
              type: string
              docs: The scope of the invitee
        content-type: application/json
      response:
        docs: The invite was successfully generated
        type: CreateProjectInviteResponse
        status-code: 200
      errors:
        - root.CreateProjectInviteRequestBadRequestError
        - root.CreateProjectInviteRequestUnauthorizedError
        - root.CreateProjectInviteRequestForbiddenError
        - root.CreateProjectInviteRequestNotFoundError
      examples:
        - path-parameters:
            project_id: 123456-7890-1234-5678-901234
          request:
            email: email
            scope: scope
          response:
            body:
              message: message
    deleteProjectInvite:
      path: /v1/projects/{project_id}/invites/{email}
      method: DELETE
      auth: true
      docs: Deletes an invite for a specific project
      source:
        openapi: ../openapi.yml
      path-parameters:
        project_id:
          type: string
          docs: The unique identifier of the project
        email:
          type: string
          docs: The email address of the member
      display-name: Delete a Project Invite
      response:
        docs: The invite was successfully deleted
        type: DeleteProjectInviteResponse
        status-code: 200
      errors:
        - root.DeleteProjectInviteRequestBadRequestError
        - root.DeleteProjectInviteRequestUnauthorizedError
        - root.DeleteProjectInviteRequestForbiddenError
        - root.DeleteProjectInviteRequestNotFoundError
      examples:
        - path-parameters:
            project_id: 123456-7890-1234-5678-901234
            email: john.doe@example.com
          response:
            body:
              message: message
    deleteProjectLeave:
      path: /v1/projects/{project_id}/leave
      method: DELETE
      auth: true
      docs: Removes the authenticated account from the specific project
      source:
        openapi: ../openapi.yml
      path-parameters:
        project_id:
          type: string
          docs: The unique identifier of the project
      display-name: Leave a Project
      response:
        docs: Successfully removed account from project
        type: DeleteProjectLeaveResponse
        status-code: 200
      errors:
        - root.DeleteProjectLeaveRequestBadRequestError
        - root.DeleteProjectLeaveRequestUnauthorizedError
        - root.DeleteProjectLeaveRequestForbiddenError
        - root.DeleteProjectLeaveRequestNotFoundError
      examples:
        - path-parameters:
            project_id: 123456-7890-1234-5678-901234
          response:
            body:
              message: message
    listProjectRequests:
      path: /v1/projects/{project_id}/requests
      method: GET
      auth: true
      docs: Generates a list of requests for a specific project
      source:
        openapi: ../openapi.yml
      path-parameters:
        project_id:
          type: string
          docs: The unique identifier of the project
      display-name: List Project Requests
      request:
        name: ListProjectRequestsRequest
        query-parameters:
          start:
            type: optional<datetime>
            docs: >-
              Start date of the requested date range. Formats accepted are
              YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM
          end:
            type: optional<datetime>
            docs: >-
              End date of the requested date range. Formats accepted are
              YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM
          limit:
            type: optional<integer>
            default: 10
            docs: Number of results to return per page. Default 10. Range [1,1000]
            validation:
              min: 1
              max: 1000
          page:
            type: optional<integer>
            docs: >-
              Navigate and return the results to retrieve specific portions of
              information of the response
      response:
        docs: A list of requests for a specific project
        type: ListProjectRequestsResponse
        status-code: 200
      errors:
        - root.ListProjectRequestsRequestBadRequestError
        - root.ListProjectRequestsRequestForbiddenError
        - root.ListProjectRequestsRequestNotFoundError
      examples:
        - path-parameters:
            project_id: 123456-7890-1234-5678-901234
          query-parameters:
            start: '2024-07-01T00:00:00Z'
            end: '2024-07-31T00:00:00Z'
          response:
            body:
              page: 1
              limit: 1
              requests:
                - request_id: request_id
                  project_uuid: project_uuid
                  created: '2024-01-15T09:30:00Z'
                  path: path
                  api_key_id: api_key_id
                  response:
                    key: value
                  code: 1
                  deployment: deployment
                  callback: callback
    getProjectRequest:
      path: /v1/projects/{project_id}/requests/{request_id}
      method: GET
      auth: true
      docs: Retrieves a specific request for a specific project
      source:
        openapi: ../openapi.yml
      path-parameters:
        project_id:
          type: string
          docs: The unique identifier of the project
        request_id:
          type: string
          docs: The unique identifier of the request
      display-name: Get a Project Request
      response:
        docs: A specific request for a specific project
        type: GetProjectRequestResponse
        status-code: 200
      examples:
        - path-parameters:
            project_id: 123456-7890-1234-5678-901234
            request_id: 123456-7890-1234-5678-901234
          response:
            body:
              request:
                request_id: request_id
                project_uuid: project_uuid
                created: '2024-01-15T09:30:00Z'
                path: path
                api_key_id: api_key_id
                response:
                  key: value
                code: 1
                deployment: deployment
                callback: callback
    getProjectUsage:
      path: /v1/projects/{project_id}/usage
      method: GET
      auth: true
      docs: Retrieves the usage for a specific project
      source:
        openapi: ../openapi.yml
      path-parameters:
        project_id:
          type: string
          docs: The unique identifier of the project
      display-name: Get Project Usage
      request:
        name: GetProjectUsageRequest
        query-parameters:
          start:
            type: optional<datetime>
            docs: >-
              Start date of the requested date range. Formats accepted are
              YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM
          end:
            type: optional<datetime>
            docs: >-
              End date of the requested date range. Formats accepted are
              YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM
          project_filters:
            type: optional<GetProjectUsageRequestProjectFilters>
            docs: Common filter parameters
      response:
        docs: Usage Summary
        type: GetProjectUsageResponse
        status-code: 200
      errors:
        - root.GetProjectUsageRequestBadRequestError
        - root.GetProjectUsageRequestUnauthorizedError
        - root.GetProjectUsageRequestForbiddenError
        - root.GetProjectUsageRequestNotFoundError
      examples:
        - path-parameters:
            project_id: 123456-7890-1234-5678-901234
          query-parameters:
            start: '2024-07-01T00:00:00Z'
            end: '2024-07-31T00:00:00Z'
          response:
            body:
              start: '2024-10-16'
              end: '2024-10-23'
              resolution:
                units: day
                amount: 1
    listProjectUsageFields:
      path: /v1/projects/{project_id}/usage/fields
      method: GET
      auth: true
      docs: >-
        Lists the features, models, tags, languages, and processing method used
        for requests in the specified project
      source:
        openapi: ../openapi.yml
      path-parameters:
        project_id:
          type: string
          docs: The unique identifier of the project
      display-name: List Project Usage Fields
      request:
        name: ListProjectUsageFieldsRequest
        query-parameters:
          start:
            type: optional<datetime>
            docs: >-
              Start date of the requested date range. Formats accepted are
              YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM
          end:
            type: optional<datetime>
            docs: >-
              End date of the requested date range. Formats accepted are
              YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM
      response:
        docs: A list of fields for a specific project
        type: ListProjectUsageFieldsResponse
        status-code: 200
      errors:
        - root.ListProjectUsageFieldsRequestBadRequestError
        - root.ListProjectUsageFieldsRequestUnauthorizedError
        - root.ListProjectUsageFieldsRequestForbiddenError
        - root.ListProjectUsageFieldsRequestNotFoundError
      examples:
        - path-parameters:
            project_id: 123456-7890-1234-5678-901234
          query-parameters:
            start: '2024-07-01T00:00:00Z'
            end: '2024-07-31T00:00:00Z'
          response:
            body:
              tags:
                - tag=dev
                - tag=production
              models:
                - name: 2-medical-nova
                  language: en-MY
                  version: 2024-05-31.13574
                  model_id: 1234567890-12345-67890
              processing_methods:
                - sync
                - streaming
              features:
                - alternatives
                - detect_entities
                - detect_language
    getProjectUsageBreakdown:
      path: /v1/projects/{project_id}/usage/breakdown
      method: GET
      auth: true
      docs: >
        Returns the breakdown of usage for a specific project. Supports the
        following filter options:

        - &accessor={accessor_id} - The public API key accessor used

        - &deployment={deployment} - The deployment type used

        - &endpoint={endpoint} - The endpoint used

        - &feature_set={feature_set} - The collection of features used

        - &model={model_id} - The model used

        - &method={method} - The processing method used

        - &tags={tag} - Any tags used
      source:
        openapi: ../openapi.yml
      path-parameters:
        project_id:
          type: string
          docs: The unique identifier of the project
      display-name: Get Project Usage Breakdown
      request:
        name: GetProjectUsageBreakdownRequest
        query-parameters:
          start:
            type: optional<datetime>
            docs: >-
              Start date of the requested date range. Formats accepted are
              YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM
          end:
            type: optional<datetime>
            docs: >-
              End date of the requested date range. Formats accepted are
              YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM
          project_filters:
            type: optional<GetProjectUsageBreakdownRequestProjectFilters>
            docs: Common filter parameters
      response:
        docs: Usage breakdown response
        type: GetProjectUsageBreakdownResponse
        status-code: 200
      errors:
        - root.GetProjectUsageBreakdownRequestBadRequestError
        - root.GetProjectUsageBreakdownRequestUnauthorizedError
        - root.GetProjectUsageBreakdownRequestNotFoundError
      examples:
        - path-parameters:
            project_id: 123456-7890-1234-5678-901234
          query-parameters:
            start: '2024-07-01T00:00:00Z'
            end: '2024-07-31T00:00:00Z'
          response:
            body:
              start: '2025-01-16'
              end: '2025-01-23'
              resolution:
                units: day
                amount: 1
              results:
                - hours: 1619.7242069444444
                  total_hours: 1621.7395791666668
                  agent_hours: 41.33564388888889
                  tokens_in: 0
                  tokens_out: 0
                  tts_characters: 9158866
                  requests: 373381
                  grouping:
                    start: '2025-01-16'
                    end: '2025-01-16'
    listProjectPurchases:
      path: /v1/projects/{project_id}/purchases
      method: GET
      auth: true
      docs: Returns the original purchased amount on an order transaction
      source:
        openapi: ../openapi.yml
      path-parameters:
        project_id:
          type: string
          docs: The unique identifier of the project
      display-name: List Project Purchases
      request:
        name: ListProjectPurchasesRequest
        query-parameters:
          start:
            type: optional<datetime>
            docs: >-
              Start date of the requested date range. Formats accepted are
              YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM
          limit:
            type: optional<integer>
            default: 10
            docs: Number of results to return per page. Default 10. Range [1,1000]
            validation:
              min: 1
              max: 1000
      response:
        docs: Successful response with orders list
        type: ListProjectPurchasesResponse
        status-code: 200
      errors:
        - root.ListProjectPurchasesRequestBadRequestError
      examples:
        - path-parameters:
            project_id: 123456-7890-1234-5678-901234
          query-parameters:
            start: '2024-07-01T00:00:00Z'
          response:
            body:
              orders:
                - order_id: 025e19ba-b6d9-4a04-9f99-4fe715aca5f1
                  expiration: '2026-03-04T00:00:00Z'
                  created: '2023-02-21T21:13:40Z'
                  amount: 150
                  units: usd
                  order_type: promotional
    listModels:
      path: /v1/models
      method: GET
      auth: true
      docs: Returns metadata on all the latest public models
      source:
        openapi: ../openapi.yml
      display-name: List Project Models
      request:
        name: ListModelsRequest
        query-parameters:
          include_outdated:
            type: boolean
            docs: returns non-latest versions of models
      response:
        docs: A list of all public models
        type: ListModelsResponse
        status-code: 200
      errors:
        - root.ListModelsRequestBadRequestError
      examples:
        - query-parameters:
            include_outdated: true
          response:
            body:
              stt:
                - name: general
                  canonical_name: enhanced-general
                  architecture: polaris
                  languages:
                    - en
                    - en-us
                  version: 2022-05-18.1
                  uuid: c7226e9e-ae1c-4057-ae2a-a71a6b0dc588
                  batch: true
                  streaming: true
                  formatted_output: false
              tts:
                - name: angus
                  canonical_name: aura-angus-en
                  architecture: aura
                  languages:
                    - en
                    - en-us
                  version: 2024-07-30.0
                  uuid: eed36e9e-37aa-40a3-91fa-a2911e73a5da
                  metadata:
                    accent: Irish
                    color: '#BA80F5'
                    image: https://static.deepgram.com/examples/avatars/angus.jpg
                    sample: https://static.deepgram.com/examples/voices/angus.wav
    getModel:
      path: /v1/models/{model_id}
      method: GET
      auth: true
      docs: Returns metadata for a specific model
      source:
        openapi: ../openapi.yml
      path-parameters:
        model_id:
          type: string
          docs: The specific UUID of the model
      display-name: Returns metadata for a specific model
      response:
        docs: A model object that can be either STT or TTS
        type: GetModelResponse
        status-code: 200
      errors:
        - root.GetModelRequestBadRequestError
      examples:
        - path-parameters:
            model_id: af6e9977-99f6-4d8f-b6f5-dfdf6fb6e291
          response:
            body:
              name: general
              canonical_name: enhanced-general
              architecture: polaris
              languages:
                - en
                - en-us
              version: 2022-05-18.1
              uuid: c7226e9e-ae1c-4057-ae2a-a71a6b0dc588
              batch: true
              streaming: true
              formatted_output: false
    listSelfHostedDistCreds:
      path: /v1/projects/{project_id}/self-hosted/distribution/credentials
      method: GET
      auth: true
      docs: Lists sets of distribution credentials for the specified project
      source:
        openapi: ../openapi.yml
      path-parameters:
        project_id:
          type: string
          docs: The unique identifier of the project
      display-name: List Project Self-Hosted Distribution Credentials
      response:
        docs: List of distribution credentials
        type: ListSelfHostedDistCredsResponse
        status-code: 200
      errors:
        - root.ListSelfHostedDistCredsRequestForbiddenError
        - root.ListSelfHostedDistCredsRequestNotFoundError
      examples:
        - path-parameters:
            project_id: 123456-7890-1234-5678-901234
          response:
            body:
              distribution_credentials:
                - member:
                    member_id: 3376abcd-8e5e-49d3-92d4-876d3a4f0363
                    email: email@example.com
                  distribution_credentials:
                    distribution_credentials_id: 8b36cfd0-472f-4a21-833f-2d6343c3a2f3
                    provider: quay
                    comment: My Self-Hosted Distribution Credentials
                    scopes:
                      - self-hosted:product:api
                      - self-hosted:product:engine
                    created: '2023-06-28T15:36:59Z'
    createSelfHostedDistCreds:
      path: /v1/projects/{project_id}/self-hosted/distribution/credentials
      method: POST
      auth: true
      docs: Creates a set of distribution credentials for the specified project
      source:
        openapi: ../openapi.yml
      path-parameters:
        project_id:
          type: string
          docs: The unique identifier of the project
      display-name: Create a Project Self-Hosted Distribution Credential
      request:
        name: CreateDistributionCreds
        query-parameters:
          comment:
            type: optional<string>
            docs: Optional comment about the credentials
          scopes:
            type: optional<CreateSelfHostedDistCredsRequestScopesItem>
            allow-multiple: true
            docs: List of permission scopes for the credentials
          provider:
            type: literal<"quay">
            docs: The provider of the distribution service
        body:
          properties:
            comment:
              type: optional<string>
              docs: Optional comment about the credentials
              name: createDistributionCredsComment
        content-type: application/json
    getSelfHostedCredentials:
      path: >-
        /v1/projects/{project_id}/self-hosted/distribution/credentials/{distribution_credentials_id}
      method: GET
      auth: true
      docs: Returns a set of distribution credentials for the specified project
      source:
        openapi: ../openapi.yml
      path-parameters:
        project_id:
          type: string
          docs: The unique identifier of the project
        distribution_credentials_id:
          type: string
          docs: The UUID of the distribution credentials
      display-name: Get a Project Self-Hosted Distribution Credential
      response:
        docs: Single distribution credential
        type: GetSelfHostedCredentialsResponse
        status-code: 200
      errors:
        - root.GetSelfHostedCredentialsRequestForbiddenError
        - root.GetSelfHostedCredentialsRequestNotFoundError
      examples:
        - path-parameters:
            project_id: 123456-7890-1234-5678-901234
            distribution_credentials_id: 8b36cfd0-472f-4a21-833f-2d6343c3a2f3
          response:
            body:
              member:
                member_id: c7b9b131-73f3-11d9-8665-0b00d2e44b83
                email: email@example.com
              distribution_credentials:
                distribution_credentials_id: 82c32c10-53b2-4d23-993f-864b3d44502a
                provider: quay
                comment: My Self-Hosted Distribution Credentials
                scopes:
                  - self-hosted:product:api
                  - self-hosted:product:engine
                created: '2023-06-28T15:36:59Z'
    deleteSelfHostedDistCreds:
      path: >-
        /v1/projects/{project_id}/self-hosted/distribution/credentials/{distribution_credentials_id}
      method: DELETE
      auth: true
      docs: Deletes a set of distribution credentials for the specified project
      source:
        openapi: ../openapi.yml
      path-parameters:
        project_id:
          type: string
          docs: The unique identifier of the project
        distribution_credentials_id:
          type: string
          docs: The UUID of the distribution credentials
      display-name: Delete a Project Self-Hosted Distribution Credential
      response:
        docs: Single distribution credential
        type: DeleteSelfHostedDistCredsResponse
        status-code: 200
      errors:
        - root.DeleteSelfHostedDistCredsRequestForbiddenError
        - root.DeleteSelfHostedDistCredsRequestNotFoundError
      examples:
        - path-parameters:
            project_id: 123456-7890-1234-5678-901234
            distribution_credentials_id: 8b36cfd0-472f-4a21-833f-2d6343c3a2f3
          response:
            body:
              member:
                member_id: c7b9b131-73f3-11d9-8665-0b00d2e44b83
                email: email@example.com
              distribution_credentials:
                distribution_credentials_id: 82c32c10-53b2-4d23-993f-864b3d44502a
                provider: quay
                comment: My Self-Hosted Distribution Credentials
                scopes:
                  - self-hosted:product:api
                  - self-hosted:product:engine
                created: '2023-06-28T15:36:59Z'
  source:
    openapi: ../openapi.yml
  display-name: Management API
docs: Manage your projects
",
    },
    "speak.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "channel": {
          "auth": false,
          "examples": [
            {
              "messages": [
                {
                  "body": {
                    "text": "text",
                    "type": "Speak",
                  },
                  "type": "publish",
                },
                {
                  "body": "string",
                  "type": "subscribe",
                },
              ],
            },
          ],
          "headers": {
            "Sec-Websocket-Protocol": {
              "docs": "Used to establish a WebSocket connection with authentication. Format should be 'token, <DEEPGRAM_API_KEY>'",
              "name": "secWebsocketProtocol",
              "type": "string",
            },
          },
          "messages": {
            "publish": {
              "body": "SpeakPublishEvent",
              "origin": "client",
            },
            "subscribe": {
              "body": "SpeakSubscribeEvent",
              "origin": "server",
            },
          },
          "path": "/v1/speak",
          "query-parameters": {
            "encoding": {
              "default": "mp3",
              "docs": "Encoding allows you to specify the expected encoding of your audio output",
              "type": "SpeakEncoding",
            },
            "model": {
              "default": "aura-asteria-en",
              "docs": "AI model used to process submitted text",
              "type": "SpeakModel",
            },
            "sample_rate": {
              "default": "24000",
              "docs": "Sample Rate specifies the sample rate for the output audio. Based on encoding 8000 or 24000 are possible defaults. For some encodings sample rate is not configurable.",
              "type": "SpeakSampleRate",
            },
          },
          "url": "public",
        },
        "types": {
          "ControlMessagesResponse": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "sequence_id": {
                "docs": "The sequence ID of the response",
                "type": "optional<integer>",
              },
              "type": {
                "docs": "The type of control message response",
                "type": "ControlMessagesResponseType",
              },
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "ControlMessagesResponseType": {
            "docs": "The type of control message response",
            "enum": [
              "flush",
              "clear",
              "close",
            ],
            "inline": true,
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "SpeakControlMessagesRequest": {
            "enum": [
              "Flush",
              "Clear",
              "Close",
            ],
            "inline": true,
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "SpeakEncoding": {
            "default": "mp3",
            "docs": "Encoding allows you to specify the expected encoding of your audio output",
            "enum": [
              "linear16",
              "mulaw",
              "alaw",
              "opus",
              "mp3",
              "flac",
              "aac",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "SpeakModel": {
            "default": "aura-asteria-en",
            "docs": "AI model used to process submitted text",
            "enum": [
              {
                "name": "AuraAsteriaEn",
                "value": "aura-asteria-en",
              },
              {
                "name": "AuraLunaEn",
                "value": "aura-luna-en",
              },
              {
                "name": "AuraStellaEn",
                "value": "aura-stella-en",
              },
              {
                "name": "AuraAthenaEn",
                "value": "aura-athena-en",
              },
              {
                "name": "AuraHeraEn",
                "value": "aura-hera-en",
              },
              {
                "name": "AuraOrionEn",
                "value": "aura-orion-en",
              },
              {
                "name": "AuraArcasEn",
                "value": "aura-arcas-en",
              },
              {
                "name": "AuraPerseusEn",
                "value": "aura-perseus-en",
              },
              {
                "name": "AuraAngusEn",
                "value": "aura-angus-en",
              },
              {
                "name": "AuraOrpheusEn",
                "value": "aura-orpheus-en",
              },
              {
                "name": "AuraHeliosEn",
                "value": "aura-helios-en",
              },
              {
                "name": "AuraZeusEn",
                "value": "aura-zeus-en",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "SpeakPublishEvent": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../asyncapi.yml",
            },
            "union": [
              "TextToSpeechRequest",
              "SpeakControlMessagesRequest",
            ],
          },
          "SpeakSampleRate": {
            "default": "24000",
            "docs": "Sample Rate specifies the sample rate for the output audio. Based on encoding 8000 or 24000 are possible defaults. For some encodings sample rate is not configurable.",
            "enum": [
              {
                "name": "EightThousand",
                "value": "8000",
              },
              "16000",
              "24000",
              "44100",
              "48000",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
          "SpeakSubscribeEvent": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../asyncapi.yml",
            },
            "union": [
              {
                "docs": "Audio data in the format specified by the request parameters",
                "type": "string",
                "validation": {
                  "format": "binary",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "ControlMessagesResponse",
            ],
          },
          "TextToSpeechRequest": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "text": {
                "docs": "The input text to be converted to speech",
                "type": "string",
              },
              "type": {
                "docs": "Message type indicating a text-to-speech request",
                "type": "literal<"Speak">",
              },
            },
            "source": {
              "openapi": "../asyncapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  SpeakEncoding:
    enum:
      - linear16
      - mulaw
      - alaw
      - opus
      - mp3
      - flac
      - aac
    docs: Encoding allows you to specify the expected encoding of your audio output
    default: mp3
    source:
      openapi: ../asyncapi.yml
  SpeakModel:
    enum:
      - value: aura-asteria-en
        name: AuraAsteriaEn
      - value: aura-luna-en
        name: AuraLunaEn
      - value: aura-stella-en
        name: AuraStellaEn
      - value: aura-athena-en
        name: AuraAthenaEn
      - value: aura-hera-en
        name: AuraHeraEn
      - value: aura-orion-en
        name: AuraOrionEn
      - value: aura-arcas-en
        name: AuraArcasEn
      - value: aura-perseus-en
        name: AuraPerseusEn
      - value: aura-angus-en
        name: AuraAngusEn
      - value: aura-orpheus-en
        name: AuraOrpheusEn
      - value: aura-helios-en
        name: AuraHeliosEn
      - value: aura-zeus-en
        name: AuraZeusEn
    docs: AI model used to process submitted text
    default: aura-asteria-en
    source:
      openapi: ../asyncapi.yml
  SpeakSampleRate:
    enum:
      - value: '8000'
        name: EightThousand
      - '16000'
      - '24000'
      - '44100'
      - '48000'
    docs: >-
      Sample Rate specifies the sample rate for the output audio. Based on
      encoding 8000 or 24000 are possible defaults. For some encodings sample
      rate is not configurable.
    default: '24000'
    source:
      openapi: ../asyncapi.yml
  ControlMessagesResponseType:
    enum:
      - flush
      - clear
      - close
    docs: The type of control message response
    inline: true
    source:
      openapi: ../asyncapi.yml
  ControlMessagesResponse:
    properties:
      type:
        type: ControlMessagesResponseType
        docs: The type of control message response
      sequence_id:
        type: optional<integer>
        docs: The sequence ID of the response
    source:
      openapi: ../asyncapi.yml
    inline: true
  SpeakSubscribeEvent:
    discriminated: false
    union:
      - type: string
        docs: Audio data in the format specified by the request parameters
        validation:
          format: binary
      - ControlMessagesResponse
    source:
      openapi: ../asyncapi.yml
  TextToSpeechRequest:
    properties:
      type:
        type: literal<"Speak">
        docs: Message type indicating a text-to-speech request
      text:
        type: string
        docs: The input text to be converted to speech
    source:
      openapi: ../asyncapi.yml
    inline: true
  SpeakControlMessagesRequest:
    enum:
      - Flush
      - Clear
      - Close
    inline: true
    source:
      openapi: ../asyncapi.yml
  SpeakPublishEvent:
    discriminated: false
    union:
      - TextToSpeechRequest
      - SpeakControlMessagesRequest
    source:
      openapi: ../asyncapi.yml
channel:
  path: /v1/speak
  url: public
  auth: false
  query-parameters:
    encoding:
      type: SpeakEncoding
      default: mp3
      docs: >-
        Encoding allows you to specify the expected encoding of your audio
        output
    model:
      type: SpeakModel
      default: aura-asteria-en
      docs: AI model used to process submitted text
    sample_rate:
      type: SpeakSampleRate
      default: '24000'
      docs: >-
        Sample Rate specifies the sample rate for the output audio. Based on
        encoding 8000 or 24000 are possible defaults. For some encodings sample
        rate is not configurable.
  headers:
    Sec-Websocket-Protocol:
      type: string
      name: secWebsocketProtocol
      docs: >-
        Used to establish a WebSocket connection with authentication. Format
        should be 'token, <DEEPGRAM_API_KEY>'
  messages:
    subscribe:
      origin: server
      body: SpeakSubscribeEvent
    publish:
      origin: client
      body: SpeakPublishEvent
  examples:
    - messages:
        - type: publish
          body:
            type: Speak
            text: text
        - type: subscribe
          body: string
",
    },
    "speechToText.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Power your apps with world-class speech recognition",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Speech to Text",
          "endpoints": {
            "listen": {
              "auth": true,
              "display-name": "Transcribe and analyze pre-recorded audio",
              "docs": "Transcribe audio using Deepgram's speech-to-text API",
              "errors": [
                "root.ListenRequestBadRequestError",
              ],
              "examples": [
                {
                  "query-parameters": {
                    "callback": "https://example.com",
                    "custom_intent": "unsubscribe",
                    "detect_language": true,
                    "diarize_version": "v2",
                    "dictation": true,
                    "model": "nova-3",
                    "version": "latest",
                  },
                  "request": {
                    "url": "https://dpgr.am/spacewalk.wav",
                  },
                  "response": {
                    "body": {
                      "metadata": {
                        "channels": 1,
                        "created": "2024-05-12T18:57:13Z",
                        "duration": 25.933313,
                        "intents_info": {
                          "input_tokens": 105,
                          "model_uuid": "80ab3179-d113-4254-bd6b-4a2f96498695",
                          "output_tokens": 4,
                        },
                        "model_info": {
                          "30089e05-99d1-4376-b32e-c263170674af": {
                            "arch": "nova-2",
                            "name": "2-general-nova",
                            "version": "2024-01-09.29447",
                          },
                        },
                        "models": [
                          "30089e05-99d1-4376-b32e-c263170674af",
                        ],
                        "request_id": "a847f427-4ad5-4d67-9b95-db801e58251c",
                        "sentiment_info": {
                          "input_tokens": 105,
                          "model_uuid": "80ab3179-d113-4254-bd6b-4a2f96498695",
                          "output_tokens": 105,
                        },
                        "sha256": "154e291ecfa8be6ab8343560bcc109008fa7853eb5372533e8efdefc9b504c33",
                        "summary_info": {
                          "input_tokens": 95,
                          "model_uuid": "67875a7f-c9c4-48a0-aa55-5bdb8a91c34a",
                          "output_tokens": 63,
                        },
                        "tags": [
                          "test",
                        ],
                        "topics_info": {
                          "input_tokens": 105,
                          "model_uuid": "80ab3179-d113-4254-bd6b-4a2f96498695",
                          "output_tokens": 7,
                        },
                        "transaction_key": "transaction_key",
                      },
                      "results": {
                        "channels": [
                          {},
                        ],
                        "sentiments": {
                          "average": {
                            "sentiment": "positive",
                            "sentiment_score": 0.5810185185185185,
                          },
                          "segments": [
                            {
                              "end_word": 69,
                              "sentiment": "positive",
                              "sentiment_score": 0.5810546875,
                              "start_word": 0,
                              "text": "Yeah. As as much as, um, it's worth celebrating, uh, the first, uh, spacewalk, um, with an all-female team, I think many of us are looking forward to it just being normal. And, um, I think if it signifies anything, it is, uh, to honor the the women who came before us who, um, were skilled and qualified, um, and didn't get the the same opportunities that we have today.",
                            },
                          ],
                        },
                        "summary": {
                          "result": "success",
                          "short": "Speaker 0 discusses the significance of the first all-female spacewalk with an all-female team, stating that it is a tribute to the skilled and qualified women who were denied opportunities in the past.",
                        },
                        "utterances": [
                          {},
                        ],
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/v1/listen",
              "request": {
                "body": {
                  "properties": {
                    "url": {
                      "type": "string",
                      "validation": {
                        "format": "uri",
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ListenRequest",
                "path-parameters": undefined,
                "query-parameters": {
                  "callback": {
                    "docs": "URL to which we'll make the callback request",
                    "type": "optional<string>",
                  },
                  "callback_method": {
                    "default": "POST",
                    "docs": "HTTP method by which the callback request will be made",
                    "type": "optional<ListenRequestCallbackMethod>",
                  },
                  "custom_intent": {
                    "allow-multiple": true,
                    "docs": "Custom intents you want the model to detect within your input audio if present",
                    "type": "optional<string>",
                  },
                  "custom_intent_mode": {
                    "default": "extended",
                    "docs": "Sets how the model will interpret intents submitted to the `custom_intent` param. When `strict`, the model will only return intents submitted using the `custom_intent` param. When `extended`, the model will return its own detected intents in addition those submitted using the `custom_intents` param",
                    "type": "optional<ListenRequestCustomIntentMode>",
                  },
                  "custom_topic": {
                    "allow-multiple": true,
                    "docs": "Custom topics you want the model to detect within your input audio or text if present Submit up to 100",
                    "type": "optional<string>",
                  },
                  "custom_topic_mode": {
                    "default": "extended",
                    "docs": "Sets how the model will interpret strings submitted to the `custom_topic` param. When `strict`, the model will only return topics submitted using the `custom_topic` param. When `extended`, the model will return its own detected topics in addition to those submitted using the `custom_topic` param",
                    "type": "optional<ListenRequestCustomTopicMode>",
                  },
                  "detect_entities": {
                    "default": false,
                    "docs": "Identifies and extracts key entities from content in submitted audio",
                    "type": "optional<boolean>",
                  },
                  "detect_language": {
                    "default": false,
                    "docs": "Identifies the dominant language spoken in submitted audio",
                    "type": "optional<boolean>",
                  },
                  "diarize": {
                    "default": false,
                    "docs": "Recognize speaker changes. Each word in the transcript will be assigned a speaker number starting at 0",
                    "type": "optional<boolean>",
                  },
                  "diarize_version": {
                    "default": "v2",
                    "docs": "Version of the diarization feature to use. Only used when the diarization feature is enabled (`diarize=true` is passed to the API)",
                    "type": "optional<string>",
                  },
                  "dictation": {
                    "default": false,
                    "docs": "Identify and extract key entities from content in submitted audio",
                    "type": "optional<boolean>",
                  },
                  "encoding": {
                    "docs": "Specify the expected encoding of your submitted audio",
                    "type": "optional<ListenRequestEncoding>",
                  },
                  "extra": {
                    "allow-multiple": true,
                    "docs": "Arbitrary key-value pairs that are attached to the API response for usage in downstream processing",
                    "type": "optional<string>",
                  },
                  "filler_words": {
                    "default": false,
                    "docs": "Filler Words can help transcribe interruptions in your audio, like "uh" and "um"",
                    "type": "optional<boolean>",
                  },
                  "intents": {
                    "default": false,
                    "docs": "Recognizes speaker intent throughout a transcript or text",
                    "type": "optional<boolean>",
                  },
                  "keyterm": {
                    "allow-multiple": true,
                    "docs": "Key term prompting can boost or suppress specialized terminology and brands. Only compatible with Nova-3",
                    "type": "optional<string>",
                  },
                  "keywords": {
                    "allow-multiple": true,
                    "docs": "Keywords can boost or suppress specialized terminology and brands",
                    "type": "optional<string>",
                  },
                  "language": {
                    "default": "en",
                    "docs": "The [BCP-47 language tag](https://tools.ietf.org/html/bcp47) that hints at the primary spoken language. Depending on the Model you choose only certain languages are available",
                    "type": "optional<ListenRequestLanguage>",
                  },
                  "measurements": {
                    "default": false,
                    "docs": "Spoken measurements will be converted to their corresponding abbreviations",
                    "type": "optional<boolean>",
                  },
                  "model": {
                    "docs": "AI model used to process submitted audio",
                    "type": "optional<ListenRequestModel>",
                  },
                  "multichannel": {
                    "default": false,
                    "docs": "Transcribe each audio channel independently",
                    "type": "optional<boolean>",
                  },
                  "numerals": {
                    "default": false,
                    "docs": "Numerals converts numbers from written format to numerical format",
                    "type": "optional<boolean>",
                  },
                  "paragraphs": {
                    "default": false,
                    "docs": "Splits audio into paragraphs to improve transcript readability",
                    "type": "optional<boolean>",
                  },
                  "profanity_filter": {
                    "default": false,
                    "docs": "Profanity Filter looks for recognized profanity and converts it to the nearest recognized non-profane word or removes it from the transcript completely",
                    "type": "optional<boolean>",
                  },
                  "punctuate": {
                    "default": false,
                    "docs": "Add punctuation and capitalization to the transcript",
                    "type": "optional<boolean>",
                  },
                  "redact": {
                    "docs": "Redaction removes sensitive information from your transcripts",
                    "type": "optional<string>",
                  },
                  "replace": {
                    "allow-multiple": true,
                    "docs": "Search for terms or phrases in submitted audio and replaces them",
                    "type": "optional<string>",
                  },
                  "search": {
                    "allow-multiple": true,
                    "docs": "Search for terms or phrases in submitted audio",
                    "type": "optional<string>",
                  },
                  "sentiment": {
                    "default": false,
                    "docs": "Recognizes the sentiment throughout a transcript or text",
                    "type": "optional<boolean>",
                  },
                  "smart_format": {
                    "default": false,
                    "docs": "Apply formatting to transcript output. When set to true, additional formatting will be applied to transcripts to improve readability",
                    "type": "optional<boolean>",
                  },
                  "summarize": {
                    "docs": "Summarize content",
                    "type": "optional<ListenRequestSummarize>",
                  },
                  "tag": {
                    "allow-multiple": true,
                    "docs": "Label your requests for the purpose of identification during usage reporting",
                    "type": "optional<string>",
                  },
                  "topics": {
                    "default": false,
                    "docs": "Detect topics throughout a transcript or text",
                    "type": "optional<boolean>",
                  },
                  "utt_split": {
                    "default": 0.8,
                    "docs": "Seconds to wait before detecting a pause between words in submitted audio",
                    "type": "optional<double>",
                  },
                  "utterances": {
                    "default": false,
                    "docs": "Segments speech into meaningful semantic units",
                    "type": "optional<boolean>",
                  },
                  "version": {
                    "docs": "Version of an AI model to use",
                    "type": "optional<ListenRequestVersion>",
                  },
                },
              },
              "response": {
                "docs": "Successful transcription",
                "status-code": 200,
                "type": "root.Response",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "ListenRequestCallbackMethod": {
            "default": "POST",
            "enum": [
              "POST",
              "PUT",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListenRequestCustomIntentMode": {
            "default": "extended",
            "enum": [
              "extended",
              "strict",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListenRequestCustomTopicMode": {
            "default": "extended",
            "enum": [
              "extended",
              "strict",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListenRequestEncoding": {
            "enum": [
              "linear16",
              "flac",
              "mulaw",
              {
                "name": "AmrNb",
                "value": "amr-nb",
              },
              {
                "name": "AmrWb",
                "value": "amr-wb",
              },
              "opus",
              "speex",
              "g729",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListenRequestLanguage": {
            "default": "en",
            "enum": [
              "bg",
              "ca",
              "zh",
              {
                "name": "ZhCn",
                "value": "zh-CN",
              },
              {
                "name": "ZhTw",
                "value": "zh-TW",
              },
              {
                "name": "ZhHk",
                "value": "zh-HK",
              },
              {
                "name": "ZhHans",
                "value": "zh-Hans",
              },
              {
                "name": "ZhHant",
                "value": "zh-Hant",
              },
              "cs",
              "da",
              {
                "name": "DaDk",
                "value": "da-DK",
              },
              "nl",
              {
                "name": "NlBe",
                "value": "nl-BE",
              },
              "en",
              {
                "name": "EnUs",
                "value": "en-US",
              },
              {
                "name": "EnAu",
                "value": "en-AU",
              },
              {
                "name": "EnGb",
                "value": "en-GB",
              },
              {
                "name": "EnNz",
                "value": "en-NZ",
              },
              {
                "name": "EnIn",
                "value": "en-IN",
              },
              "et",
              "fi",
              "fr",
              {
                "name": "FrCa",
                "value": "fr-CA",
              },
              "de",
              {
                "name": "DeCh",
                "value": "de-CH",
              },
              "el",
              "hi",
              {
                "name": "HiLatn",
                "value": "hi-Latn",
              },
              "hu",
              "id",
              "it",
              "ja",
              "ko",
              {
                "name": "KoKr",
                "value": "ko-KR",
              },
              "lv",
              "lt",
              "ms",
              "no",
              "pl",
              "pt",
              {
                "name": "PtBr",
                "value": "pt-BR",
              },
              {
                "name": "PtPt",
                "value": "pt-PT",
              },
              "ro",
              "ru",
              "sk",
              "es",
              {
                "name": "Es419",
                "value": "es-419",
              },
              {
                "name": "EsLatam",
                "value": "es-LATAM",
              },
              "sv",
              {
                "name": "SvSe",
                "value": "sv-SE",
              },
              "taq",
              "th",
              {
                "name": "ThTh",
                "value": "th-TH",
              },
              "tr",
              "uk",
              "vi",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListenRequestModel": {
            "enum": [
              {
                "name": "Nova3",
                "value": "nova-3",
              },
              {
                "name": "Nova3General",
                "value": "nova-3-general",
              },
              {
                "name": "Nova2",
                "value": "nova-2",
              },
              {
                "name": "Nova2General",
                "value": "nova-2-general",
              },
              {
                "name": "Nova2Meeting",
                "value": "nova-2-meeting",
              },
              {
                "name": "Nova2Finance",
                "value": "nova-2-finance",
              },
              {
                "name": "Nova2Conversationalai",
                "value": "nova-2-conversationalai",
              },
              {
                "name": "Nova2Voicemail",
                "value": "nova-2-voicemail",
              },
              {
                "name": "Nova2Video",
                "value": "nova-2-video",
              },
              {
                "name": "Nova2Medical",
                "value": "nova-2-medical",
              },
              {
                "name": "Nova2Drivethru",
                "value": "nova-2-drivethru",
              },
              {
                "name": "Nova2Automotive",
                "value": "nova-2-automotive",
              },
              "nova",
              {
                "name": "NovaGeneral",
                "value": "nova-general",
              },
              {
                "name": "NovaPhonecall",
                "value": "nova-phonecall",
              },
              {
                "name": "NovaMedical",
                "value": "nova-medical",
              },
              "enhanced",
              {
                "name": "EnhancedGeneral",
                "value": "enhanced-general",
              },
              {
                "name": "EnhancedMeeting",
                "value": "enhanced-meeting",
              },
              {
                "name": "EnhancedPhonecall",
                "value": "enhanced-phonecall",
              },
              {
                "name": "EnhancedFinance",
                "value": "enhanced-finance",
              },
              "base",
              "meeting",
              "phonecall",
              "finance",
              "conversationalai",
              "voicemail",
              "video",
            ],
          },
          "ListenRequestSummarize": {
            "enum": [
              "v2",
              "v1",
            ],
          },
          "ListenRequestVersion": {
            "enum": [
              "latest",
            ],
          },
        },
      },
      "rawContents": "types:
  ListenRequestCallbackMethod:
    enum:
      - POST
      - PUT
    default: POST
    source:
      openapi: ../openapi.yml
  ListenRequestCustomTopicMode:
    enum:
      - extended
      - strict
    default: extended
    source:
      openapi: ../openapi.yml
  ListenRequestCustomIntentMode:
    enum:
      - extended
      - strict
    default: extended
    source:
      openapi: ../openapi.yml
  ListenRequestEncoding:
    enum:
      - linear16
      - flac
      - mulaw
      - value: amr-nb
        name: AmrNb
      - value: amr-wb
        name: AmrWb
      - opus
      - speex
      - g729
    source:
      openapi: ../openapi.yml
  ListenRequestLanguage:
    enum:
      - bg
      - ca
      - zh
      - value: zh-CN
        name: ZhCn
      - value: zh-TW
        name: ZhTw
      - value: zh-HK
        name: ZhHk
      - value: zh-Hans
        name: ZhHans
      - value: zh-Hant
        name: ZhHant
      - cs
      - da
      - value: da-DK
        name: DaDk
      - nl
      - value: nl-BE
        name: NlBe
      - en
      - value: en-US
        name: EnUs
      - value: en-AU
        name: EnAu
      - value: en-GB
        name: EnGb
      - value: en-NZ
        name: EnNz
      - value: en-IN
        name: EnIn
      - et
      - fi
      - fr
      - value: fr-CA
        name: FrCa
      - de
      - value: de-CH
        name: DeCh
      - el
      - hi
      - value: hi-Latn
        name: HiLatn
      - hu
      - id
      - it
      - ja
      - ko
      - value: ko-KR
        name: KoKr
      - lv
      - lt
      - ms
      - 'no'
      - pl
      - pt
      - value: pt-BR
        name: PtBr
      - value: pt-PT
        name: PtPt
      - ro
      - ru
      - sk
      - es
      - value: es-419
        name: Es419
      - value: es-LATAM
        name: EsLatam
      - sv
      - value: sv-SE
        name: SvSe
      - taq
      - th
      - value: th-TH
        name: ThTh
      - tr
      - uk
      - vi
    default: en
    source:
      openapi: ../openapi.yml
  ListenRequestModel:
    enum:
      - value: nova-3
        name: Nova3
      - value: nova-3-general
        name: Nova3General
      - value: nova-2
        name: Nova2
      - value: nova-2-general
        name: Nova2General
      - value: nova-2-meeting
        name: Nova2Meeting
      - value: nova-2-finance
        name: Nova2Finance
      - value: nova-2-conversationalai
        name: Nova2Conversationalai
      - value: nova-2-voicemail
        name: Nova2Voicemail
      - value: nova-2-video
        name: Nova2Video
      - value: nova-2-medical
        name: Nova2Medical
      - value: nova-2-drivethru
        name: Nova2Drivethru
      - value: nova-2-automotive
        name: Nova2Automotive
      - nova
      - value: nova-general
        name: NovaGeneral
      - value: nova-phonecall
        name: NovaPhonecall
      - value: nova-medical
        name: NovaMedical
      - enhanced
      - value: enhanced-general
        name: EnhancedGeneral
      - value: enhanced-meeting
        name: EnhancedMeeting
      - value: enhanced-phonecall
        name: EnhancedPhonecall
      - value: enhanced-finance
        name: EnhancedFinance
      - base
      - meeting
      - phonecall
      - finance
      - conversationalai
      - voicemail
      - video
  ListenRequestSummarize:
    enum:
      - v2
      - v1
  ListenRequestVersion:
    enum:
      - latest
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    listen:
      path: /v1/listen
      method: POST
      auth: true
      docs: Transcribe audio using Deepgram's speech-to-text API
      source:
        openapi: ../openapi.yml
      display-name: Transcribe and analyze pre-recorded audio
      request:
        name: ListenRequest
        query-parameters:
          callback:
            type: optional<string>
            docs: URL to which we'll make the callback request
          callback_method:
            type: optional<ListenRequestCallbackMethod>
            default: POST
            docs: HTTP method by which the callback request will be made
          custom_topic:
            type: optional<string>
            allow-multiple: true
            docs: >-
              Custom topics you want the model to detect within your input audio
              or text if present Submit up to 100
          custom_topic_mode:
            type: optional<ListenRequestCustomTopicMode>
            default: extended
            docs: >-
              Sets how the model will interpret strings submitted to the
              `custom_topic` param. When `strict`, the model will only return
              topics submitted using the `custom_topic` param. When `extended`,
              the model will return its own detected topics in addition to those
              submitted using the `custom_topic` param
          custom_intent:
            type: optional<string>
            allow-multiple: true
            docs: >-
              Custom intents you want the model to detect within your input
              audio if present
          custom_intent_mode:
            type: optional<ListenRequestCustomIntentMode>
            default: extended
            docs: >-
              Sets how the model will interpret intents submitted to the
              `custom_intent` param. When `strict`, the model will only return
              intents submitted using the `custom_intent` param. When
              `extended`, the model will return its own detected intents in
              addition those submitted using the `custom_intents` param
          detect_entities:
            type: optional<boolean>
            default: false
            docs: >-
              Identifies and extracts key entities from content in submitted
              audio
          detect_language:
            type: optional<boolean>
            default: false
            docs: Identifies the dominant language spoken in submitted audio
          diarize_version:
            type: optional<string>
            default: v2
            docs: >-
              Version of the diarization feature to use. Only used when the
              diarization feature is enabled (`diarize=true` is passed to the
              API)
          diarize:
            type: optional<boolean>
            default: false
            docs: >-
              Recognize speaker changes. Each word in the transcript will be
              assigned a speaker number starting at 0
          dictation:
            type: optional<boolean>
            default: false
            docs: Identify and extract key entities from content in submitted audio
          encoding:
            type: optional<ListenRequestEncoding>
            docs: Specify the expected encoding of your submitted audio
          extra:
            type: optional<string>
            allow-multiple: true
            docs: >-
              Arbitrary key-value pairs that are attached to the API response
              for usage in downstream processing
          filler_words:
            type: optional<boolean>
            default: false
            docs: >-
              Filler Words can help transcribe interruptions in your audio, like
              "uh" and "um"
          intents:
            type: optional<boolean>
            default: false
            docs: Recognizes speaker intent throughout a transcript or text
          keyterm:
            type: optional<string>
            allow-multiple: true
            docs: >-
              Key term prompting can boost or suppress specialized terminology
              and brands. Only compatible with Nova-3
          keywords:
            type: optional<string>
            allow-multiple: true
            docs: Keywords can boost or suppress specialized terminology and brands
          language:
            type: optional<ListenRequestLanguage>
            default: en
            docs: >-
              The [BCP-47 language tag](https://tools.ietf.org/html/bcp47) that
              hints at the primary spoken language. Depending on the Model you
              choose only certain languages are available
          measurements:
            type: optional<boolean>
            default: false
            docs: >-
              Spoken measurements will be converted to their corresponding
              abbreviations
          model:
            type: optional<ListenRequestModel>
            docs: AI model used to process submitted audio
          multichannel:
            type: optional<boolean>
            default: false
            docs: Transcribe each audio channel independently
          numerals:
            type: optional<boolean>
            default: false
            docs: Numerals converts numbers from written format to numerical format
          paragraphs:
            type: optional<boolean>
            default: false
            docs: Splits audio into paragraphs to improve transcript readability
          profanity_filter:
            type: optional<boolean>
            default: false
            docs: >-
              Profanity Filter looks for recognized profanity and converts it to
              the nearest recognized non-profane word or removes it from the
              transcript completely
          punctuate:
            type: optional<boolean>
            default: false
            docs: Add punctuation and capitalization to the transcript
          redact:
            type: optional<string>
            docs: Redaction removes sensitive information from your transcripts
          replace:
            type: optional<string>
            allow-multiple: true
            docs: Search for terms or phrases in submitted audio and replaces them
          search:
            type: optional<string>
            allow-multiple: true
            docs: Search for terms or phrases in submitted audio
          sentiment:
            type: optional<boolean>
            default: false
            docs: Recognizes the sentiment throughout a transcript or text
          smart_format:
            type: optional<boolean>
            default: false
            docs: >-
              Apply formatting to transcript output. When set to true,
              additional formatting will be applied to transcripts to improve
              readability
          summarize:
            type: optional<ListenRequestSummarize>
            docs: Summarize content
          tag:
            type: optional<string>
            allow-multiple: true
            docs: >-
              Label your requests for the purpose of identification during usage
              reporting
          topics:
            type: optional<boolean>
            default: false
            docs: Detect topics throughout a transcript or text
          utterances:
            type: optional<boolean>
            default: false
            docs: Segments speech into meaningful semantic units
          utt_split:
            type: optional<double>
            default: 0.8
            docs: >-
              Seconds to wait before detecting a pause between words in
              submitted audio
          version:
            type: optional<ListenRequestVersion>
            docs: Version of an AI model to use
        body:
          properties:
            url:
              type: string
              validation:
                format: uri
        content-type: application/json
      response:
        docs: Successful transcription
        type: root.Response
        status-code: 200
      errors:
        - root.ListenRequestBadRequestError
      examples:
        - query-parameters:
            callback: https://example.com
            custom_intent: unsubscribe
            detect_language: true
            diarize_version: v2
            dictation: true
            model: nova-3
            version: latest
          request:
            url: https://dpgr.am/spacewalk.wav
          response:
            body:
              metadata:
                transaction_key: transaction_key
                request_id: a847f427-4ad5-4d67-9b95-db801e58251c
                sha256: >-
                  154e291ecfa8be6ab8343560bcc109008fa7853eb5372533e8efdefc9b504c33
                created: '2024-05-12T18:57:13Z'
                duration: 25.933313
                channels: 1
                models:
                  - 30089e05-99d1-4376-b32e-c263170674af
                model_info:
                  30089e05-99d1-4376-b32e-c263170674af:
                    name: 2-general-nova
                    version: 2024-01-09.29447
                    arch: nova-2
                summary_info:
                  model_uuid: 67875a7f-c9c4-48a0-aa55-5bdb8a91c34a
                  input_tokens: 95
                  output_tokens: 63
                sentiment_info:
                  model_uuid: 80ab3179-d113-4254-bd6b-4a2f96498695
                  input_tokens: 105
                  output_tokens: 105
                topics_info:
                  model_uuid: 80ab3179-d113-4254-bd6b-4a2f96498695
                  input_tokens: 105
                  output_tokens: 7
                intents_info:
                  model_uuid: 80ab3179-d113-4254-bd6b-4a2f96498695
                  input_tokens: 105
                  output_tokens: 4
                tags:
                  - test
              results:
                channels:
                  - {}
                utterances:
                  - {}
                summary:
                  result: success
                  short: >-
                    Speaker 0 discusses the significance of the first all-female
                    spacewalk with an all-female team, stating that it is a
                    tribute to the skilled and qualified women who were denied
                    opportunities in the past.
                sentiments:
                  segments:
                    - text: >-
                        Yeah. As as much as, um, it's worth celebrating, uh, the
                        first, uh, spacewalk, um, with an all-female team, I
                        think many of us are looking forward to it just being
                        normal. And, um, I think if it signifies anything, it
                        is, uh, to honor the the women who came before us who,
                        um, were skilled and qualified, um, and didn't get the
                        the same opportunities that we have today.
                      start_word: 0
                      end_word: 69
                      sentiment: positive
                      sentiment_score: 0.5810546875
                  average:
                    sentiment: positive
                    sentiment_score: 0.5810185185185185
  source:
    openapi: ../openapi.yml
  display-name: Speech to Text
docs: Power your apps with world-class speech recognition
",
    },
    "textIntelligence.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Analyze the content of text sources",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Text Intelligence",
          "endpoints": {
            "TextRead": {
              "auth": true,
              "display-name": "Analyze text content",
              "docs": "Analyze text content using Deepgram's text analysis API",
              "errors": [
                "root.TextReadRequestBadRequestError",
              ],
              "examples": [
                {
                  "query-parameters": {
                    "callback": "https://example.com",
                  },
                  "request": {
                    "url": "url",
                  },
                  "response": {
                    "body": {
                      "metadata": {
                        "metadata": {
                          "created": "2024-11-18T23:47:44Z",
                          "language": "en",
                          "request_id": "d04af392-db11-4c1d-83e1-20e34f0b8999",
                        },
                      },
                      "results": {
                        "sentiments": {
                          "average": {
                            "sentiment": "positive",
                            "sentiment_score": 0.5810185185185185,
                          },
                          "segments": [
                            {
                              "end_word": 69,
                              "sentiment": "positive",
                              "sentiment_score": 0.5810546875,
                              "start_word": 0,
                              "text": "Yeah. As as much as, um, it's worth celebrating, uh, the first, uh, spacewalk, um, with an all-female team, I think many of us are looking forward to it just being normal. And, um, I think if it signifies anything, it is, uh, to honor the the women who came before us who, um, were skilled and qualified, um, and didn't get the the same opportunities that we have today.",
                            },
                          ],
                        },
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/v1/read",
              "request": {
                "body": "root.TextRequest",
                "content-type": "application/json",
                "name": "TextReadRequest",
                "query-parameters": {
                  "callback": {
                    "docs": "URL to which we'll make the callback request",
                    "type": "optional<string>",
                  },
                  "callback_method": {
                    "default": "POST",
                    "docs": "HTTP method by which the callback request will be made",
                    "type": "optional<TextReadRequestCallbackMethod>",
                  },
                  "custom_topic": {
                    "allow-multiple": true,
                    "docs": "Custom topics you want the model to detect within your input audio or text if present Submit up to 100",
                    "type": "optional<string>",
                  },
                  "custom_topic_mode": {
                    "default": "extended",
                    "docs": "Sets how the model will interpret strings submitted to the `custom_topic` param. When `strict`, the model will only return topics submitted using the `custom_topic` param. When `extended`, the model will return its own detected topics in addition to those submitted using the `custom_topic` param",
                    "type": "optional<TextReadRequestCustomTopicMode>",
                  },
                  "intents": {
                    "default": false,
                    "docs": "Recognizes speaker intent throughout a transcript or text",
                    "type": "optional<boolean>",
                  },
                  "read_language": {
                    "docs": "The [BCP-47 language tag](https://tools.ietf.org/html/bcp47) that hints at the primary spoken language",
                    "type": "optional<literal<"en">>",
                  },
                  "read_summarize": {
                    "default": false,
                    "docs": "Summarize text",
                    "type": "optional<boolean>",
                  },
                  "sentiment": {
                    "default": false,
                    "docs": "Recognizes the sentiment throughout a transcript or text",
                    "type": "optional<boolean>",
                  },
                  "topics": {
                    "default": false,
                    "docs": "Detect topics throughout a transcript or text",
                    "type": "optional<boolean>",
                  },
                },
              },
              "response": {
                "docs": "Successful text analysis",
                "status-code": 200,
                "type": "root.TextResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "TextReadRequestCallbackMethod": {
            "default": "POST",
            "enum": [
              "POST",
              "PUT",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TextReadRequestCustomTopicMode": {
            "default": "extended",
            "enum": [
              "extended",
              "strict",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  TextReadRequestCallbackMethod:
    enum:
      - POST
      - PUT
    default: POST
    source:
      openapi: ../openapi.yml
  TextReadRequestCustomTopicMode:
    enum:
      - extended
      - strict
    default: extended
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    TextRead:
      path: /v1/read
      method: POST
      auth: true
      docs: Analyze text content using Deepgram's text analysis API
      source:
        openapi: ../openapi.yml
      display-name: Analyze text content
      request:
        body: root.TextRequest
        query-parameters:
          callback:
            type: optional<string>
            docs: URL to which we'll make the callback request
          callback_method:
            type: optional<TextReadRequestCallbackMethod>
            default: POST
            docs: HTTP method by which the callback request will be made
          custom_topic:
            type: optional<string>
            allow-multiple: true
            docs: >-
              Custom topics you want the model to detect within your input audio
              or text if present Submit up to 100
          custom_topic_mode:
            type: optional<TextReadRequestCustomTopicMode>
            default: extended
            docs: >-
              Sets how the model will interpret strings submitted to the
              `custom_topic` param. When `strict`, the model will only return
              topics submitted using the `custom_topic` param. When `extended`,
              the model will return its own detected topics in addition to those
              submitted using the `custom_topic` param
          intents:
            type: optional<boolean>
            default: false
            docs: Recognizes speaker intent throughout a transcript or text
          read_language:
            type: optional<literal<"en">>
            docs: >-
              The [BCP-47 language tag](https://tools.ietf.org/html/bcp47) that
              hints at the primary spoken language
          sentiment:
            type: optional<boolean>
            default: false
            docs: Recognizes the sentiment throughout a transcript or text
          read_summarize:
            type: optional<boolean>
            default: false
            docs: Summarize text
          topics:
            type: optional<boolean>
            default: false
            docs: Detect topics throughout a transcript or text
        name: TextReadRequest
        content-type: application/json
      response:
        docs: Successful text analysis
        type: root.TextResponse
        status-code: 200
      errors:
        - root.TextReadRequestBadRequestError
      examples:
        - query-parameters:
            callback: https://example.com
          request:
            url: url
          response:
            body:
              metadata:
                metadata:
                  request_id: d04af392-db11-4c1d-83e1-20e34f0b8999
                  created: '2024-11-18T23:47:44Z'
                  language: en
              results:
                sentiments:
                  segments:
                    - text: >-
                        Yeah. As as much as, um, it's worth celebrating, uh, the
                        first, uh, spacewalk, um, with an all-female team, I
                        think many of us are looking forward to it just being
                        normal. And, um, I think if it signifies anything, it
                        is, uh, to honor the the women who came before us who,
                        um, were skilled and qualified, um, and didn't get the
                        the same opportunities that we have today.
                      start_word: 0
                      end_word: 69
                      sentiment: positive
                      sentiment_score: 0.5810546875
                  average:
                    sentiment: positive
                    sentiment_score: 0.5810185185185185
  source:
    openapi: ../openapi.yml
  display-name: Text Intelligence
docs: Analyze the content of text sources
",
    },
    "textToSpeech.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Transform text to speech",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Text to Speech",
          "endpoints": {
            "speak": {
              "auth": true,
              "display-name": "Text to Speech transformation",
              "docs": "Convert text into natural-sounding speech using Deepgram's TTS API",
              "errors": [
                "root.SpeakRequestBadRequestError",
                "root.SpeakRequestForbiddenError",
                "root.SpeakRequestContentTooLargeError",
                "root.SpeakRequestUnsupportedMediaTypeError",
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/v1/speak",
              "request": {
                "body": {
                  "properties": {
                    "text": {
                      "docs": "The text content to be converted to speech",
                      "type": "string",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "SpeakRequest",
                "path-parameters": undefined,
                "query-parameters": {
                  "bit_rate": {
                    "docs": "The bitrate of the audio in bits per second. Choose from predefined ranges or specific values based on the encoding type.",
                    "type": "integer",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 192000,
                      "min": 4000,
                      "multipleOf": undefined,
                    },
                  },
                  "callback": {
                    "docs": "URL to which we'll make the callback request",
                    "type": "optional<string>",
                  },
                  "container": {
                    "default": "wav",
                    "docs": "Container specifies the file format wrapper for the output audio. The available options depend on the encoding type.",
                    "type": "optional<SpeakRequestContainer>",
                  },
                  "speak_encoding": {
                    "default": "mp3",
                    "docs": "Encoding allows you to specify the expected encoding of your audio output",
                    "type": "optional<SpeakRequestSpeakEncoding>",
                  },
                  "speak_model": {
                    "default": "aura-asteria-en",
                    "docs": "AI model used to process submitted text",
                    "type": "optional<SpeakRequestSpeakModel>",
                  },
                  "speak_sample_rate": {
                    "docs": "Sample Rate specifies the sample rate for the output audio. Based on the encoding, different sample rates are supported. For some encodings, the sample rate is not configurable",
                    "type": "integer",
                  },
                },
              },
              "response": {
                "docs": "Successful text to speech",
                "status-code": 200,
                "type": "file",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "SpeakRequestContainer": {
            "default": "wav",
            "enum": [
              "wav",
              "ogg",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SpeakRequestSpeakEncoding": {
            "default": "mp3",
            "enum": [
              "linear16",
              "flac",
              "mulaw",
              "alaw",
              "mp3",
              "opus",
              "aac",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SpeakRequestSpeakModel": {
            "default": "aura-asteria-en",
            "enum": [
              {
                "name": "AuraAsteriaEn",
                "value": "aura-asteria-en",
              },
              {
                "name": "AuraLunaEn",
                "value": "aura-luna-en",
              },
              {
                "name": "AuraStellaEn",
                "value": "aura-stella-en",
              },
              {
                "name": "AuraAthenaEn",
                "value": "aura-athena-en",
              },
              {
                "name": "AuraHeraEn",
                "value": "aura-hera-en",
              },
              {
                "name": "AuraOrionEn",
                "value": "aura-orion-en",
              },
              {
                "name": "AuraArcasEn",
                "value": "aura-arcas-en",
              },
              {
                "name": "AuraPerseusEn",
                "value": "aura-perseus-en",
              },
              {
                "name": "AuraAngusEn",
                "value": "aura-angus-en",
              },
              {
                "name": "AuraOrpheusEn",
                "value": "aura-orpheus-en",
              },
              {
                "name": "AuraHeliosEn",
                "value": "aura-helios-en",
              },
              {
                "name": "AuraZeusEn",
                "value": "aura-zeus-en",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  SpeakRequestContainer:
    enum:
      - wav
      - ogg
    default: wav
    source:
      openapi: ../openapi.yml
  SpeakRequestSpeakEncoding:
    enum:
      - linear16
      - flac
      - mulaw
      - alaw
      - mp3
      - opus
      - aac
    default: mp3
    source:
      openapi: ../openapi.yml
  SpeakRequestSpeakModel:
    enum:
      - value: aura-asteria-en
        name: AuraAsteriaEn
      - value: aura-luna-en
        name: AuraLunaEn
      - value: aura-stella-en
        name: AuraStellaEn
      - value: aura-athena-en
        name: AuraAthenaEn
      - value: aura-hera-en
        name: AuraHeraEn
      - value: aura-orion-en
        name: AuraOrionEn
      - value: aura-arcas-en
        name: AuraArcasEn
      - value: aura-perseus-en
        name: AuraPerseusEn
      - value: aura-angus-en
        name: AuraAngusEn
      - value: aura-orpheus-en
        name: AuraOrpheusEn
      - value: aura-helios-en
        name: AuraHeliosEn
      - value: aura-zeus-en
        name: AuraZeusEn
    default: aura-asteria-en
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    speak:
      path: /v1/speak
      method: POST
      auth: true
      docs: Convert text into natural-sounding speech using Deepgram's TTS API
      source:
        openapi: ../openapi.yml
      display-name: Text to Speech transformation
      request:
        name: SpeakRequest
        query-parameters:
          bit_rate:
            type: integer
            docs: >-
              The bitrate of the audio in bits per second. Choose from
              predefined ranges or specific values based on the encoding type.
            validation:
              min: 4000
              max: 192000
          callback:
            type: optional<string>
            docs: URL to which we'll make the callback request
          container:
            type: optional<SpeakRequestContainer>
            default: wav
            docs: >-
              Container specifies the file format wrapper for the output audio.
              The available options depend on the encoding type.
          speak_encoding:
            type: optional<SpeakRequestSpeakEncoding>
            default: mp3
            docs: >-
              Encoding allows you to specify the expected encoding of your audio
              output
          speak_model:
            type: optional<SpeakRequestSpeakModel>
            default: aura-asteria-en
            docs: AI model used to process submitted text
          speak_sample_rate:
            type: integer
            docs: >-
              Sample Rate specifies the sample rate for the output audio. Based
              on the encoding, different sample rates are supported. For some
              encodings, the sample rate is not configurable
        body:
          properties:
            text:
              type: string
              docs: The text content to be converted to speech
        content-type: application/json
      response:
        docs: Successful text to speech
        type: file
        status-code: 200
      errors:
        - root.SpeakRequestBadRequestError
        - root.SpeakRequestForbiddenError
        - root.SpeakRequestContentTooLargeError
        - root.SpeakRequestUnsupportedMediaTypeError
  source:
    openapi: ../openapi.yml
  display-name: Text to Speech
docs: Transform text to speech
",
    },
  },
  "packageMarkers": {},
  "rootApiFile": {
    "contents": {
      "auth": "ApiKeyAuth",
      "auth-schemes": {
        "ApiKeyAuth": {
          "header": "Authorization",
          "name": "apiKey",
          "type": "string",
        },
      },
      "default-environment": "Default",
      "default-url": "Base",
      "display-name": "Deepgram API Specification",
      "environments": {
        "Default": {
          "urls": {
            "Base": "https://api.deepgram.com",
            "public": "wss://api.deepgram.com",
          },
        },
      },
      "error-discrimination": {
        "strategy": "status-code",
      },
      "name": "api",
    },
    "defaultUrl": "Base",
    "rawContents": "name: api
error-discrimination:
  strategy: status-code
display-name: Deepgram API Specification
environments:
  Default:
    urls:
      Base: https://api.deepgram.com
      public: wss://api.deepgram.com
default-environment: Default
default-url: Base
auth-schemes:
  ApiKeyAuth:
    header: Authorization
    name: apiKey
    type: string
auth: ApiKeyAuth
",
  },
}