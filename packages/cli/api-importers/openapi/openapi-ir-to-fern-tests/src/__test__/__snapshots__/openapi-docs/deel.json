{
  "absoluteFilePath": "/DUMMY_PATH",
  "importedDefinitions": {},
  "namedDefinitionFiles": {
    "__package__.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "errors": {
          "AddContractDocumentRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "AddContractDocumentRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "AddContractDocumentRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "AddContractDocumentRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "AddContractDocumentRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "AddContractDocumentRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "AddContractDocumentRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "AddPremiumRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "AddPremiumRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "AddPremiumRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "AddPremiumRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "AmendContractDetailsRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "AmendContractDetailsRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "AmendContractDetailsRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "AmendContractDetailsRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "AmendContractDetailsRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "AmendContractDetailsRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "AmendContractDetailsRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "ArchiveContractRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "ArchiveContractRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "ArchiveContractRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "ArchiveContractRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "ArchiveContractRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "AttachExternalIdRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "AttachExternalIdRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "AttachExternalIdRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "AttachExternalIdRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "AttachExternalIdRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "AttachExternalIdRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "AttachExternalIdRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "CalculateFinalPaymentRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "CalculateFinalPaymentRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "CalculateFinalPaymentRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "CalculateFinalPaymentRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "CreateContractFixedRateRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "CreateContractFixedRateRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "CreateContractFixedRateRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "CreateContractFixedRateRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "CreateContractFixedRateRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "CreateContractFixedRateRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "CreateContractFixedRateRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "CreateContractMilestoneBasedRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "CreateContractMilestoneBasedRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "CreateContractMilestoneBasedRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "CreateContractMilestoneBasedRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "CreateContractMilestoneBasedRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "CreateContractMilestoneBasedRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "CreateContractMilestoneBasedRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "CreateContractPgoTakRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "CreateContractPgoTakRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "CreateContractPgoTakRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "CreateContractPgoTakRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "CreateContractPgoTakRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "CreateContractPgoTakRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "CreateContractPgoTakRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "CreateContractRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "CreateContractRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "CreateContractRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "CreateContractRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "CreateContractRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "CreateContractRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "CreateContractRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "CreateContractTaskBasedRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "CreateContractTaskBasedRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "CreateContractTaskBasedRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "CreateContractTaskBasedRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "CreateContractTaskBasedRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "CreateContractTaskBasedRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "CreateContractTaskBasedRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "CreateContractTimeBasedRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "CreateContractTimeBasedRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "CreateContractTimeBasedRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "CreateContractTimeBasedRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "CreateContractTimeBasedRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "CreateContractTimeBasedRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "CreateContractTimeBasedRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "CreateDirectEmployeeRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "CreateDirectEmployeeRequestConflictError": {
            "docs": "A matching profile already exists",
            "status-code": 409,
            "type": "unknown",
          },
          "CreateDirectEmployeeRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "CreateDirectEmployeeRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "CreateDirectEmployeeRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "CreateDirectEmployeeRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "CreateEorContractRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "CreateEorContractRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "CreateEorContractRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "CreateEorContractRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "CreateEorTimeOffsRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "CreateEorTimeOffsRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "CreateEorTimeOffsRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "CreateEorTimeOffsRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "CreateFileRefRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "CreateFileRefRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "CreateFileRefRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "CreateFileRefRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "CreateFileRefRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "CreateFileRefRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "CreateInvoiceAdjustmentRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "CreateInvoiceAdjustmentRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "CreateInvoiceAdjustmentRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "CreateInvoiceAdjustmentRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "CreateInvoiceAdjustmentRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "CreateInvoiceAdjustmentRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "CreateInvoiceAdjustmentRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "CreateInvoiceAdjustmentReviewRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "CreateInvoiceAdjustmentReviewRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "CreateInvoiceAdjustmentReviewRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "CreateInvoiceAdjustmentReviewRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "CreateInvoiceAdjustmentReviewRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "CreateInvoiceAdjustmentReviewRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "CreateInvoiceAdjustmentReviewRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "CreateInvoiceAdjustmentReviewsRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "CreateInvoiceAdjustmentReviewsRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "CreateInvoiceAdjustmentReviewsRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "CreateInvoiceAdjustmentReviewsRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "CreateInvoiceAdjustmentReviewsRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "CreateInvoiceAdjustmentReviewsRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "CreateInvoiceAdjustmentReviewsRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "CreateMilestoneRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "CreateMilestoneRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "CreateMilestoneRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "CreateMilestoneRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "CreateMilestoneRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "CreateMilestoneRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "CreateMilestoneRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "CreateMilestoneReviewRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "CreateMilestoneReviewRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "CreateMilestoneReviewRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "CreateMilestoneReviewRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "CreateMilestoneReviewRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "CreateMilestoneReviewRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "CreateMilestoneReviewRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "CreateMilestoneReviewsRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "CreateMilestoneReviewsRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "CreateMilestoneReviewsRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "CreateMilestoneReviewsRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "CreateMilestoneReviewsRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "CreateMilestoneReviewsRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "CreateMilestoneReviewsRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "CreateOffCyclePaymentRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "CreateOffCyclePaymentRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "CreateOffCyclePaymentRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "CreateOffCyclePaymentRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "CreateOffCyclePaymentRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "CreateOffCyclePaymentRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "CreateOffCyclePaymentRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "CreateTaskManyReviewRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "CreateTaskManyReviewRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "CreateTaskManyReviewRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "CreateTaskManyReviewRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "CreateTaskManyReviewRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "CreateTaskManyReviewRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "CreateTaskManyReviewRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "CreateTaskReviewByIdRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "CreateTaskReviewByIdRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "CreateTaskReviewByIdRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "CreateTaskReviewByIdRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "CreateTaskReviewByIdRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "CreateTaskReviewByIdRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "CreateTaskReviewByIdRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "CreateTimesheetRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "CreateTimesheetRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "CreateTimesheetRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "CreateTimesheetRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "CreateTimesheetRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "CreateTimesheetRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "CreateTimesheetRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "CreateTimesheetReviewRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "CreateTimesheetReviewRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "CreateTimesheetReviewRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "CreateTimesheetReviewRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "CreateTimesheetReviewRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "CreateTimesheetReviewRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "CreateTimesheetReviewRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "CreateTimesheetReviewsRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "CreateTimesheetReviewsRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "CreateTimesheetReviewsRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "CreateTimesheetReviewsRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "CreateTimesheetReviewsRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "CreateTimesheetReviewsRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "CreateTimesheetReviewsRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "CreateWebhookRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "CreateWebhookRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "CreateWebhookRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "CreateWebhookRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "CreateWebhookRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "CreateWebhookRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "CreateWebhookRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "DeleteContractPgoTakRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "DeleteContractPgoTakRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "DeleteContractPgoTakRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "DeleteContractPgoTakRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "DeleteContractPgoTakRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "DeleteContractPgoTakRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "DeleteContractPgoTakRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "DeleteEorTimeOffsRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "DeleteEorTimeOffsRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "DeleteEorTimeOffsRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "DeleteEorTimeOffsRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "DeleteInvoiceAdjustmentByIdRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "DeleteInvoiceAdjustmentByIdRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "DeleteInvoiceAdjustmentByIdRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "DeleteInvoiceAdjustmentByIdRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "DeleteInvoiceAdjustmentByIdRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "DeleteInvoiceAdjustmentByIdRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "DeleteInvoiceAdjustmentByIdRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "DeleteMilestoneByIdRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "DeleteMilestoneByIdRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "DeleteMilestoneByIdRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "DeleteMilestoneByIdRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "DeleteMilestoneByIdRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "DeleteMilestoneByIdRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "DeleteMilestoneByIdRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "DeleteTimesheetByIdRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "DeleteTimesheetByIdRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "DeleteTimesheetByIdRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "DeleteTimesheetByIdRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "DeleteTimesheetByIdRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "DeleteTimesheetByIdRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "DeleteTimesheetByIdRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "EditContractDocumentRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "EditContractDocumentRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "EditContractDocumentRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "EditContractDocumentRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "EditContractDocumentRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "EditContractDocumentRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "EditContractDocumentRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "EditEorTimeOffsRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "EditEorTimeOffsRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "EditEorTimeOffsRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "EditEorTimeOffsRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetAgreementsRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetAgreementsRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetAgreementsRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "GetAgreementsRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetAgreementsRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "GetAgreementsRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetAllWebhooksRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "GetAllWebhooksRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetAllWebhooksRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetAllWebhooksRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "GetAllWebhooksRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetAllWebhooksRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "GetAllWebhooksRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetAlternateEmailsByContractIdRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "GetAlternateEmailsByContractIdRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetAlternateEmailsByContractIdRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetAlternateEmailsByContractIdRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetAlternateEmailsByContractIdRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetBillingInvoiceDownloadLinkRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "GetBillingInvoiceDownloadLinkRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetBillingInvoiceDownloadLinkRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetBillingInvoiceDownloadLinkRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "GetBillingInvoiceDownloadLinkRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetBillingInvoiceDownloadLinkRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "GetBillingInvoiceDownloadLinkRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetContractByIdRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "GetContractByIdRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetContractByIdRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetContractByIdRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "GetContractByIdRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetContractByIdRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "GetContractByIdRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetContractListRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "GetContractListRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetContractListRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetContractListRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "GetContractListRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetContractListRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "GetContractListRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetContractPreviewRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "GetContractPreviewRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetContractPreviewRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetContractPreviewRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "GetContractPreviewRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetContractPreviewRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "GetContractPreviewRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetContractTemplatesRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetContractTemplatesRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetContractTemplatesRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "GetContractTemplatesRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetContractTemplatesRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "GetContractTemplatesRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetCountriesRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "GetCountriesRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetCountriesRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetCountriesRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "GetCountriesRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetCountriesRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "GetCountriesRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetCurrenciesRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "GetCurrenciesRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetCurrenciesRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetCurrenciesRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "GetCurrenciesRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetCurrenciesRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "GetCurrenciesRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetEorClientTimeOffsRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetEorClientTimeOffsRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetEorClientTimeOffsRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetEorClientTimeOffsRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetEorCountryValidationsRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetEorCountryValidationsRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetEorCountryValidationsRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetEorCountryValidationsRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetEorEntitlementsRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetEorEntitlementsRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetEorEntitlementsRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetEorEntitlementsRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetEorTimeOffsRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetEorTimeOffsRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetEorTimeOffsRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetEorTimeOffsRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetInvoiceAdjustmentsByContractIdRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "GetInvoiceAdjustmentsByContractIdRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetInvoiceAdjustmentsByContractIdRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetInvoiceAdjustmentsByContractIdRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "GetInvoiceAdjustmentsByContractIdRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetInvoiceAdjustmentsByContractIdRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "GetInvoiceAdjustmentsByContractIdRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetInvoiceAdjustmentsRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "GetInvoiceAdjustmentsRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetInvoiceAdjustmentsRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetInvoiceAdjustmentsRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "GetInvoiceAdjustmentsRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetInvoiceAdjustmentsRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "GetInvoiceAdjustmentsRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetInvoiceDownloadLinkRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "GetInvoiceDownloadLinkRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetInvoiceDownloadLinkRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetInvoiceDownloadLinkRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "GetInvoiceDownloadLinkRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetInvoiceDownloadLinkRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "GetInvoiceDownloadLinkRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetInvoiceListRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "GetInvoiceListRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetInvoiceListRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetInvoiceListRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetInvoiceListRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetJobTitleListRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "GetJobTitleListRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetJobTitleListRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetJobTitleListRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "GetJobTitleListRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetJobTitleListRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "GetJobTitleListRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetLegalEntityListRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "GetLegalEntityListRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetLegalEntityListRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetLegalEntityListRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "GetLegalEntityListRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetLegalEntityListRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "GetLegalEntityListRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetMilestonesByContractAndIdRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "GetMilestonesByContractAndIdRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetMilestonesByContractAndIdRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetMilestonesByContractAndIdRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "GetMilestonesByContractAndIdRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetMilestonesByContractAndIdRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "GetMilestonesByContractAndIdRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetMilestonesByContractRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "GetMilestonesByContractRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetMilestonesByContractRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetMilestonesByContractRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "GetMilestonesByContractRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetMilestonesByContractRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "GetMilestonesByContractRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetOffCyclePaymentByContractAndIdRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "GetOffCyclePaymentByContractAndIdRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetOffCyclePaymentByContractAndIdRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetOffCyclePaymentByContractAndIdRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "GetOffCyclePaymentByContractAndIdRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetOffCyclePaymentByContractAndIdRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "GetOffCyclePaymentByContractAndIdRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetOffCyclePaymentsByContractRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "GetOffCyclePaymentsByContractRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetOffCyclePaymentsByContractRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetOffCyclePaymentsByContractRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "GetOffCyclePaymentsByContractRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetOffCyclePaymentsByContractRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "GetOffCyclePaymentsByContractRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetOrganizationsRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "GetOrganizationsRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetOrganizationsRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetOrganizationsRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "GetOrganizationsRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetOrganizationsRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "GetOrganizationsRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetPaymentListRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "GetPaymentListRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetPaymentListRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetPaymentListRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetPaymentListRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetPaymentsBreakDownByIdRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "GetPaymentsBreakDownByIdRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetPaymentsBreakDownByIdRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetPaymentsBreakDownByIdRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "GetPaymentsBreakDownByIdRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetPaymentsBreakDownByIdRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "GetPaymentsBreakDownByIdRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetPeopleListRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "GetPeopleListRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetPeopleListRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetPeopleListRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "GetPeopleListRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetPeopleListRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "GetPeopleListRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetPeopleRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "GetPeopleRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetPeopleRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetPeopleRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "GetPeopleRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetPeopleRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "GetPeopleRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetSeniorityListRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "GetSeniorityListRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetSeniorityListRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetSeniorityListRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "GetSeniorityListRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetSeniorityListRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "GetSeniorityListRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetTasksByContractRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "GetTasksByContractRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetTasksByContractRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetTasksByContractRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "GetTasksByContractRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetTasksByContractRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "GetTasksByContractRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetTeamsRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "GetTeamsRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetTeamsRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetTeamsRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "GetTeamsRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetTeamsRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "GetTeamsRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetTimeoffTypeListRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "GetTimeoffTypeListRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetTimeoffTypeListRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetTimeoffTypeListRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "GetTimeoffTypeListRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetTimeoffTypeListRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "GetTimeoffTypeListRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetTimesheetByIdRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "GetTimesheetByIdRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetTimesheetByIdRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetTimesheetByIdRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "GetTimesheetByIdRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetTimesheetByIdRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "GetTimesheetByIdRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetTimesheetsByContractRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "GetTimesheetsByContractRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetTimesheetsByContractRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetTimesheetsByContractRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "GetTimesheetsByContractRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetTimesheetsByContractRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "GetTimesheetsByContractRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "GetTimesheetsRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "GetTimesheetsRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "GetTimesheetsRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "GetTimesheetsRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "GetTimesheetsRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "GetTimesheetsRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "GetTimesheetsRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "InviteToSignContractRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "InviteToSignContractRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "InviteToSignContractRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "InviteToSignContractRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "InviteToSignContractRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "InviteToSignContractRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "InviteToSignContractRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "PostContractEstimateRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "PostContractEstimateRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "PostContractEstimateRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "PostContractEstimateRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "RemovePremiumFromContractRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "RemovePremiumFromContractRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "RemovePremiumFromContractRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "RemovePremiumFromContractRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "RemovePremiumFromContractRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "RemovePremiumFromContractRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "RemovePremiumFromContractRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "ReviewTimeoffRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "ReviewTimeoffRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "ReviewTimeoffRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "ReviewTimeoffRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "ReviewTimeoffRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "ReviewTimeoffRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "ReviewTimeoffRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "SignContractRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "SignContractRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "SignContractRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "SignContractRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "SignContractRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "SignContractRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "SignContractRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "TerminateContractRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "TerminateContractRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "TerminateContractRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "TerminateContractRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "TerminateContractRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "TerminateContractRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "TerminateContractRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "UninviteToSignContractRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "UninviteToSignContractRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "UninviteToSignContractRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "UninviteToSignContractRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "UninviteToSignContractRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "UninviteToSignContractRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "UninviteToSignContractRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "UpdateInvoiceAdjustmentByIdRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "UpdateInvoiceAdjustmentByIdRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "UpdateInvoiceAdjustmentByIdRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "UpdateInvoiceAdjustmentByIdRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "UpdateInvoiceAdjustmentByIdRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "UpdateInvoiceAdjustmentByIdRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "UpdateInvoiceAdjustmentByIdRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "UpdateTimesheetByIdRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "UpdateTimesheetByIdRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "UpdateTimesheetByIdRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "UpdateTimesheetByIdRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "UpdateTimesheetByIdRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "UpdateTimesheetByIdRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "UpdateTimesheetByIdRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "WebhookControllerDeleteByIdRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "WebhookControllerDeleteByIdRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "WebhookControllerDeleteByIdRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "WebhookControllerDeleteByIdRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "WebhookControllerDeleteByIdRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "WebhookControllerDeleteByIdRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "WebhookControllerDeleteByIdRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "WebhookControllerEditByIdRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "WebhookControllerEditByIdRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "WebhookControllerEditByIdRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "WebhookControllerEditByIdRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "WebhookControllerEditByIdRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "WebhookControllerEditByIdRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "WebhookControllerEditByIdRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
          "WebhookControllerGetByIdRequestBadRequestError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 400,
            "type": "ApiErrorContainer",
          },
          "WebhookControllerGetByIdRequestForbiddenError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 403,
            "type": "ApiErrorContainer",
          },
          "WebhookControllerGetByIdRequestInternalServerError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 500,
            "type": "ApiErrorContainer",
          },
          "WebhookControllerGetByIdRequestMethodNotAllowedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 405,
            "type": "ApiErrorContainer",
          },
          "WebhookControllerGetByIdRequestNotFoundError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 404,
            "type": "ApiErrorContainer",
          },
          "WebhookControllerGetByIdRequestTooManyRequestsError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 429,
            "type": "ApiErrorContainer",
          },
          "WebhookControllerGetByIdRequestUnauthorizedError": {
            "docs": "Operation failed.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {},
              },
            ],
            "status-code": 401,
            "type": "ApiErrorContainer",
          },
        },
        "types": {
          "Agreement": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "agreement_title": "string",
              "agreement_type": "string",
              "client_legal_entity": "AgreementClientLegalEntity",
              "id": "double",
              "msa": "AgreementMsa",
              "provider_legal_entity": "AgreementProviderLegalEntity",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AgreementClientLegalEntity": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": "double",
              "name": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AgreementList": "list<Agreement>",
          "AgreementListContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "AgreementList",
              "page": "optional<PageInfoWithoutCursor>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AgreementMsa": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": "string",
              "title": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AgreementProviderLegalEntity": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": "double",
              "name": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AgreementsParamLimit": {
            "docs": "Maximum number of records to return. This is supposed to be an integer but query parameters are string. Maximum is 50.",
            "type": "string",
          },
          "AgreementsParamOffset": {
            "docs": "Offset/index of record for the next page of records to return. This is supposed to be an integer but query parameters are string.",
            "type": "string",
          },
          "AgreementsSearchForm": {
            "docs": "Convenient model to encapsulate query parameters to get a list of agreements.",
            "inline": undefined,
            "properties": {
              "contract_id": "optional<string>",
              "limit": "optional<AgreementsParamLimit>",
              "offset": "optional<AgreementsParamOffset>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AlternateEmailItem": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "email": "optional<EmailType>",
              "isVerified": "boolean",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AlternateEmailList": {
            "docs": "List of alternate email addresses.",
            "type": "list<AlternateEmailItem>",
          },
          "ApiError": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "message": {
                "docs": "A description of the returned error",
                "type": "optional<string>",
              },
              "path": {
                "docs": "The JSON path where input validation failed",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ApiErrorContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "errors": "optional<list<ApiError>>",
              "request": "optional<ApiErrorRequest>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ApiErrorRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "api_req_id": {
                "docs": "The request ID of the failed request",
                "type": "optional<string>",
              },
              "code": {
                "docs": "The code of the source handler which produced the returned error",
                "type": "optional<double>",
              },
              "docs": {
                "docs": "A link to the official documentation for the requested endpoint resource",
                "type": "optional<string>",
              },
              "method": {
                "docs": "The HTTP method of the failed request",
                "type": "optional<string>",
              },
              "source": {
                "docs": "The source handler which produced the returned error",
                "type": "optional<string>",
              },
              "status": {
                "docs": "The status code of the response",
                "type": "optional<double>",
              },
              "url": {
                "docs": "The relative URL of the failed request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "BasicContract": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "client": "ClientOfBasicContract",
              "created_at": "optional<DateTimeString>",
              "external_id": {
                "docs": "A unique identifier for the object provided by an external system.",
                "type": "optional<string>",
              },
              "id": {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
              "invitations": "InvitationsOfBasicContract",
              "is_archived": "boolean",
              "is_shielded": "boolean",
              "notice_period": "optional<NoticePeriod>",
              "signatures": "SignaturesOfBasicContract",
              "status": "ContractStatusEnum",
              "termination_date": "optional<DateTimeString>",
              "title": {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
              "type": "ContractTypeEnum",
              "who_reports": "optional<ContractWhoReportsEnum>",
              "worker": "optional<WorkerOfBasicContract>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "BasicInvoiceAdjustment": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "attachment": "optional<FileAttachmentInfo>",
              "contract": "BasicInvoiceAdjustmentContract",
              "created_at": "optional<DateTimeStringRequired>",
              "currency_code": "CurrencyCodeRequired",
              "custom_scale": "optional<string>",
              "date_submitted": "optional<DateTimeStringRequired>",
              "description": "string",
              "id": "UniqueObjectIdentifier",
              "payment_cycle": "BasicInvoiceAdjustmentPaymentCycle",
              "public_id": "optional<PublicId>",
              "quantity": "optional<double>",
              "reported_by": "BasicInvoiceAdjustmentReportedBy",
              "reviewed_by": "optional<BasicInvoiceAdjustmentReviewedBy>",
              "scale": "optional<string>",
              "status": "optional<InvoiceAdjustmentStatusEnum>",
              "total_amount": "string",
              "type": "InvoiceAdjustmentTypeEnum",
              "worksheet": "optional<BasicInvoiceAdjustmentWorksheet>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "BasicInvoiceAdjustmentContract": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": "string",
              "title": "string",
              "type": "ContractTypeEnum",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "BasicInvoiceAdjustmentPaymentCycle": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "end_date": "optional<DateTimeStringRequired>",
              "start_date": "optional<DateTimeStringRequired>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "BasicInvoiceAdjustmentReportedBy": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "full_name": "string",
              "id": "double",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "BasicInvoiceAdjustmentReviewedBy": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "full_name": "string",
              "id": "double",
              "remarks": "string",
              "reviewed_at": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "BasicInvoiceAdjustmentWorksheet": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "days": {
                "type": "double",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "hours": {
                "type": "double",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "minutes": {
                "type": "double",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "weeks": {
                "type": "double",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "BasicLegalEntity": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "entity_subtype": "LegalEntitySubType",
              "entity_type": "LegalEntityType",
              "id": "double",
              "name": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "BasicOrganization": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "id": "double",
              "name": {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "BasicTeam": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "id": "double",
              "name": {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "BasicTimesheet": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "attachment": "optional<FileAttachmentInfo>",
              "contract": "BasicTimesheetContract",
              "created_at": "string",
              "currency_code": "CurrencyCodeRequired",
              "custom_scale": "optional<string>",
              "date_submitted": "optional<DateTimeStringRequired>",
              "description": "string",
              "id": "UniqueObjectIdentifier",
              "payment_cycle": "optional<BasicTimesheetPaymentCycle>",
              "public_id": "optional<PublicId>",
              "quantity": "optional<double>",
              "reported_by": "BasicTimesheetReportedBy",
              "reviewed_by": "optional<BasicTimesheetReviewedBy>",
              "scale": "optional<string>",
              "status": "optional<TimesheetStatusEnum>",
              "total_amount": {
                "docs": "is equal to quantity times rate of active work statement + bonus in this record",
                "type": "string",
              },
              "type": {
                "docs": "Deprecated - it is always "work"",
                "type": "string",
              },
              "worksheet": "optional<BasicTimesheetWorksheet>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "BasicTimesheetContract": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": "string",
              "title": "string",
              "type": "ContractTypeEnum",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "BasicTimesheetPaymentCycle": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "end_date": "optional<DateTimeString>",
              "start_date": "optional<DateTimeString>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "BasicTimesheetReportedBy": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "full_name": "string",
              "id": "double",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "BasicTimesheetReviewedBy": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "full_name": "string",
              "id": "double",
              "remarks": "string",
              "reviewed_at": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "BasicTimesheetWorksheet": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "days": {
                "type": "double",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "hours": {
                "type": "double",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "minutes": {
                "type": "double",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "weeks": {
                "type": "double",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ClientLegalEntity": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "email": "optional<EmailType>",
              "id": "long",
              "name": "string",
              "registration_number": "string",
              "subtype": "LegalEntitySubType",
              "type": "LegalEntityType",
              "vat_number": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ClientOfBasicContract": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "team": "optional<TeamOfBasicContract>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ClientOfContract": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "email": "optional<EmailType>",
              "full_name": "string",
              "id": "long",
              "legal_entity": "optional<ClientLegalEntity>",
              "team": "TeamOfContract",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CompensationDetailsOfContract": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "amount": "string",
              "currency_code": "CurrencyCodeRequired",
              "first_payment": "string",
              "first_payment_date": "optional<DateTimeString>",
              "frequency": "string",
              "gross_annual_salary": "string",
              "gross_signing_bonus": "string",
              "gross_variable_bonus": "string",
              "scale": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CompensationDetailsOfContractToCreateOngoingTimeBased": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "amount": "double",
              "scale": "WorkStatementScaleEnum",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CompensationDetailsOfContractToCreatePayAsYouGoTimeBased": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "amount": "double",
              "scale": "WorkStatementScaleEnum",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CompensationDetailsOfContractToCreateShared": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "amount": {
                "docs": "Amount to be paid. This field can be excluded when creating a Pay-as-you-go task-based or Milestone contracts.",
                "type": "optional<double>",
              },
              "currency_code": "CurrencyCodeRequired",
              "cycle_end": {
                "docs": "Date invoice cycle ends.",
                "type": "double",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 31,
                  "min": 1,
                  "multipleOf": undefined,
                },
              },
              "cycle_end_type": "WorkStatementCycleEndTypeEnum",
              "first_payment": {
                "default": 0,
                "docs": "First payment amount.",
                "type": "optional<double>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "first_payment_date": "optional<DateString>",
              "frequency": "WorkStatementCycleScaleEnum",
              "notice_period": "optional<NoticePeriod>",
              "pay_before_weekends": {
                "docs": "If the payment due is on a weekend, pay on Friday.",
                "type": "optional<boolean>",
              },
              "payment_due_days": {
                "type": "double",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 90,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "payment_due_type": "WorkStatementPaymentDueTypeEnum",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Contract": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "client": "optional<ClientOfContract>",
              "compensation_details": "CompensationDetailsOfContract",
              "created_at": "optional<DateTimeString>",
              "custom_fields": "optional<list<ContractCustomField>>",
              "employment_details": "EmploymentDetailsOfContract",
              "external_id": {
                "docs": "A unique identifier for the object provided by an external system.",
                "type": "optional<string>",
              },
              "id": {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
              "invitations": "InvitationsOfBasicContract",
              "is_archived": "boolean",
              "job_title": "string",
              "notice_period": "optional<NoticePeriod>",
              "scope_of_work": "optional<string>",
              "seniority": "optional<Seniority>",
              "signatures": "SignaturesOfContract",
              "special_clause": "string",
              "start_date": "optional<DateTimeString>",
              "status": "ContractStatusEnum",
              "termination_date": "optional<DateTimeString>",
              "title": {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
              "type": "ContractTypeEnum",
              "who_reports": "optional<ContractWhoReportsEnum>",
              "worker": "optional<WorkerOfContract>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "Contract",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractContainerOngoingTimeBased": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "Contract",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractContainerPayAsYouGoTimeBased": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "Contract",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractContainerPaygMilestones": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "Contract",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractContainerPaygTasks": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "Contract",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractCustomField": {
            "docs": "Customized attributes on contracts (Employee ID, Project code, etc).",
            "inline": undefined,
            "properties": {
              "name": {
                "docs": "Custom field property name.",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Custom field property value.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractDetailsToAmend": {
            "docs": "You can specify any combination of data points that need changing.",
            "inline": undefined,
            "properties": {
              "amount": {
                "type": "optional<double>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 1,
                  "multipleOf": undefined,
                },
              },
              "currency_code": "optional<CurrencyCodeRequired>",
              "cycle_end": {
                "type": "optional<double>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 31,
                  "min": 1,
                  "multipleOf": undefined,
                },
              },
              "cycle_end_type": "optional<WorkStatementCycleEndTypeEnum>",
              "effective_date": "optional<DateStringRequired>",
              "first_payment": {
                "type": "optional<double>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "first_payment_date": "optional<DateStringRequired>",
              "frequency": "optional<WorkStatementCycleScaleEnum>",
              "job_title_id": {
                "docs": "If you want to use a predefined job title, please use a job title ID",
                "type": "optional<double>",
              },
              "job_title_name": {
                "docs": "You can enter new job title.",
                "type": "optional<string>",
              },
              "pay_before_weekends": {
                "docs": "If the payment due is on a weekend, pay on Friday.",
                "type": "optional<boolean>",
              },
              "payment_due_days": {
                "type": "optional<double>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 90,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "payment_due_type": "optional<WorkStatementPaymentDueTypeEnum>",
              "scale": "optional<WorkStatementScaleEnum>",
              "scope_of_work": {
                "docs": "Text to describe the scope of work of the contract.",
                "type": "optional<string>",
              },
              "seniority_id": {
                "docs": "You can use a predefined seniority level ID.",
                "type": "optional<double>",
              },
              "special_clause": {
                "docs": "Text to describe any special clause in contract.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractDocumentContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "optional<FileAttachmentInfo>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractExternalIdPatchedContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "ContractExternalIdToPatch",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractExternalIdPatchedResponseContainer": "ContractExternalIdToPatch",
          "ContractExternalIdToPatch": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "external_id": {
                "docs": "A unique identifier for the object provided by an external system.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractFirstSignEnum": {
            "docs": "Flag to indicate who is supposed to sign a contract",
            "enum": [
              "client",
              "contractor",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractInvitationToCreate": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "email": "EmailTypeRequired",
              "message": {
                "docs": "Message for the worker.",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractList": "list<BasicContract>",
          "ContractListContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "ContractList",
              "page": "PageInfo",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractPreview": "string",
          "ContractSearchForm": {
            "discriminated": false,
            "docs": "Search form should include parameters varied based on usage of cursor for pagination. NOTE: that all query parameters are based on strings",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "ContractSearchFormWithCursor",
              "ContractSearchFormWithoutCursor",
            ],
          },
          "ContractSearchFormWithCursor": {
            "docs": "This is a model to make it easier to understand and restrict search parameters",
            "inline": undefined,
            "properties": {
              "after_cursor": {
                "docs": "Return next page of results after given cursor.",
                "type": "optional<string>",
              },
              "limit": {
                "default": "10",
                "docs": "Return a page of results with given number of records.",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{1,2}$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractSearchFormWithoutCursor": {
            "docs": "This is a model to make it easier to understand and restrict search parameters",
            "inline": undefined,
            "properties": {
              "countries": "optional<ContractSearchFormWithoutCursorCountries>",
              "currencies": "optional<ContractSearchFormWithoutCursorCurrencies>",
              "external_id": {
                "docs": "Filter contracts for given external ID",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "limit": {
                "default": "10",
                "docs": "Return a page of results with given number of records.",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{1,2}$",
                },
              },
              "order_direction": "optional<SortDirEnum>",
              "search": {
                "docs": "Include a contract if by name or contractor name contains given search term.",
                "type": "optional<string>",
              },
              "sort_by": "optional<ContractsSortByEnum>",
              "statuses": "optional<ContractSearchFormWithoutCursorStatuses>",
              "team_id": {
                "docs": "Filter contracts for given team ID; NOTE: technically ALL query parameters are strings or array of strings",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{1,9}$",
                },
              },
              "types": "optional<ContractSearchFormWithoutCursorTypes>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractSearchFormWithoutCursorCountries": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "CountryCodeList",
              "CountryCode",
            ],
          },
          "ContractSearchFormWithoutCursorCurrencies": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "CurrencyCodeList",
              "CurrencyCodeRequired",
            ],
          },
          "ContractSearchFormWithoutCursorStatuses": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "ContractStatusEnumList",
              "ContractStatusEnum",
            ],
          },
          "ContractSearchFormWithoutCursorTypes": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "ContractTypeEnum",
              "ContractTypeEnumList",
            ],
          },
          "ContractSignatureToCreate": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "client_signature": {
                "docs": "Signature of client.",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 2,
                  "pattern": undefined,
                },
              },
              "contract_template_id": {
                "docs": "Please use null to use default Deel contract template; otherwise you can use the template you created and customized. If template ID is not in payload, template stays unchanged.",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractStatusEnum": {
            "docs": "Status of a contract in Deel workflow",
            "enum": [
              "new",
              "under_review",
              "waiting_for_employee_contract",
              "waiting_for_client_sign",
              "processing_payment",
              "waiting_for_contractor_sign",
              "waiting_for_eor_sign",
              "waiting_for_employee_sign",
              "awaiting_deposit_payment",
              "in_progress",
              "completed",
              "cancelled",
              "user_cancelled",
              "rejected",
              "waiting_for_client_payment",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractStatusEnumList": {
            "docs": "List of contract statuses",
            "type": "list<ContractStatusEnum>",
          },
          "ContractTemplateList": "list<ContractTemplateSummary>",
          "ContractTemplateListContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "optional<ContractTemplateList>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractTemplateSummary": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "id": {
                "docs": "Unique identifier of a contract template",
                "type": "double",
              },
              "title": {
                "docs": "Title of a contract template",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractTerminationResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "completion_date": {
                "docs": "Date the contract is marked for completion",
                "type": "optional<DateString>",
              },
              "id": {
                "docs": "Deel Contract ID.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractTerminationResultContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "ContractTerminationResult",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractToCreate": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "ContractToCreatePayAsYouGoTimeBased",
              "ContractToCreatePaygTasks",
              "ContractToCreatePaygMilestones",
              "ContractToCreateOngoingTimeBased",
            ],
          },
          "ContractToCreateOngoingTimeBased": {
            "docs": undefined,
            "extends": [
              "ContractToCreateShared",
            ],
            "inline": undefined,
            "properties": {
              "compensation_details": "ContractToCreateOngoingTimeBasedCompensationDetails",
              "type": "literal<"ongoing_time_based">",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractToCreateOngoingTimeBasedCompensationDetails": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "amount": {
                "docs": "Amount to be paid. This field can be excluded when creating a Pay-as-you-go task-based or Milestone contracts.",
                "type": "optional<double>",
              },
              "currency_code": "CurrencyCodeRequired",
              "cycle_end": {
                "docs": "Date invoice cycle ends.",
                "type": "double",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 31,
                  "min": 1,
                  "multipleOf": undefined,
                },
              },
              "cycle_end_type": "WorkStatementCycleEndTypeEnum",
              "first_payment": {
                "default": 0,
                "docs": "First payment amount.",
                "type": "optional<double>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "first_payment_date": "optional<DateString>",
              "frequency": "WorkStatementCycleScaleEnum",
              "notice_period": "optional<NoticePeriod>",
              "pay_before_weekends": {
                "docs": "If the payment due is on a weekend, pay on Friday.",
                "type": "optional<boolean>",
              },
              "payment_due_days": {
                "type": "double",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 90,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "payment_due_type": "WorkStatementPaymentDueTypeEnum",
              "scale": "WorkStatementScaleEnum",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractToCreatePayAsYouGoTimeBased": {
            "docs": undefined,
            "extends": [
              "ContractToCreateShared",
            ],
            "inline": undefined,
            "properties": {
              "compensation_details": "ContractToCreatePayAsYouGoTimeBasedCompensationDetails",
              "type": "literal<"pay_as_you_go_time_based">",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractToCreatePayAsYouGoTimeBasedCompensationDetails": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "amount": {
                "docs": "Amount to be paid. This field can be excluded when creating a Pay-as-you-go task-based or Milestone contracts.",
                "type": "optional<double>",
              },
              "currency_code": "CurrencyCodeRequired",
              "cycle_end": {
                "docs": "Date invoice cycle ends.",
                "type": "double",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 31,
                  "min": 1,
                  "multipleOf": undefined,
                },
              },
              "cycle_end_type": "WorkStatementCycleEndTypeEnum",
              "first_payment": {
                "default": 0,
                "docs": "First payment amount.",
                "type": "optional<double>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "first_payment_date": "optional<DateString>",
              "frequency": "WorkStatementCycleScaleEnum",
              "notice_period": "optional<NoticePeriod>",
              "pay_before_weekends": {
                "docs": "If the payment due is on a weekend, pay on Friday.",
                "type": "optional<boolean>",
              },
              "payment_due_days": {
                "type": "double",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 90,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "payment_due_type": "WorkStatementPaymentDueTypeEnum",
              "scale": "WorkStatementScaleEnum",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractToCreatePaygMilestones": {
            "docs": undefined,
            "extends": [
              "ContractToCreateShared",
            ],
            "inline": undefined,
            "properties": {
              "compensation_details": "CompensationDetailsOfContractToCreateShared",
              "type": "literal<"payg_milestones">",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractToCreatePaygTasks": {
            "docs": undefined,
            "extends": [
              "ContractToCreateShared",
            ],
            "inline": undefined,
            "properties": {
              "compensation_details": "CompensationDetailsOfContractToCreateShared",
              "type": "literal<"payg_tasks">",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractToCreateShared": {
            "docs": "Details of contract to create",
            "inline": undefined,
            "properties": {
              "client": "ContractToCreateSharedClient",
              "country_code": "optional<CountryCode>",
              "external_id": {
                "docs": "External Id.",
                "type": "optional<string>",
              },
              "job_title": {
                "docs": "Worker's job title. You can enter a custom job title or use a pre-defiled job title using the Id retrieved in job-titles endpoint.",
                "type": "ContractToCreateSharedJobTitle",
              },
              "meta": "MetaDataOfContractToCreate",
              "notice_period": "optional<NoticePeriod>",
              "scope_of_work": {
                "docs": "Describe the work to be performed.",
                "type": "optional<string>",
              },
              "seniority": {
                "docs": "Job seniority level. Please use the seniority levels endpoint to retrieve the list of seniority levels.",
                "type": "optional<ContractToCreateSharedSeniority>",
              },
              "special_clause": {
                "docs": "Enter any special clause you may have.",
                "type": "optional<string>",
              },
              "start_date": "optional<DateStringRequired>",
              "state_code": {
                "docs": "The state or province code. Use country lookup endpoint to retrieve state codes.",
                "type": "optional<string>",
              },
              "termination_date": "optional<DateString>",
              "title": {
                "docs": "The title of the contract.",
                "type": "string",
              },
              "who_reports": "optional<ContractWhoReportsEnum>",
              "worker": {
                "docs": "Worker properties",
                "type": "optional<ContractToCreateSharedWorker>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractToCreateSharedClient": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "legal_entity": {
                "docs": "Choose the Deel legal entity for this contract. Use legal entity endpoint to retrieve a list of legal entities in your organization.",
                "type": "ContractToCreateSharedClientLegalEntity",
              },
              "team": {
                "docs": "Choose the Deel team for this contract. Use teams endpoint to retrieve a list of teams in your organization.",
                "type": "ContractToCreateSharedClientTeam",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractToCreateSharedClientLegalEntity": {
            "docs": "Choose the Deel legal entity for this contract. Use legal entity endpoint to retrieve a list of legal entities in your organization.",
            "inline": true,
            "properties": {
              "id": "double",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractToCreateSharedClientTeam": {
            "docs": "Choose the Deel team for this contract. Use teams endpoint to retrieve a list of teams in your organization.",
            "inline": true,
            "properties": {
              "id": "double",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractToCreateSharedJobTitle": {
            "docs": "Worker's job title. You can enter a custom job title or use a pre-defiled job title using the Id retrieved in job-titles endpoint.",
            "inline": true,
            "properties": {
              "id": {
                "docs": "Id of an predefined job title.",
                "type": "optional<double>",
              },
              "name": {
                "docs": "Job title. Please leave it blank when entering an Id.",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractToCreateSharedSeniority": {
            "docs": "Job seniority level. Please use the seniority levels endpoint to retrieve the list of seniority levels.",
            "inline": true,
            "properties": {
              "id": "optional<double>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractToCreateSharedWorker": {
            "docs": "Worker properties",
            "inline": true,
            "properties": {
              "expected_email": "optional<WorkerEmailType>",
              "first_name": {
                "docs": "Worker's first name",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "last_name": {
                "docs": "Worker's last name",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractToTerminate": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "completion_date": "optional<DateString>",
              "message": {
                "docs": "A message for the termination",
                "type": "optional<string>",
              },
              "terminate_now": "optional<boolean>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractTypeEnum": {
            "docs": "Type of a contract",
            "enum": [
              "ongoing_time_based",
              "milestones",
              "time_based",
              "pay_as_you_go_time_based",
              "commission",
              "payg_milestones",
              "payg_tasks",
              "eor",
              "unknown",
              "employee",
              "global_payroll",
              "shield_msa",
              "hris_direct_employee",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractTypeEnumList": {
            "docs": "List of contract types",
            "type": "list<ContractTypeEnum>",
          },
          "ContractTypeEnumToCreate": {
            "docs": "Type of a contract",
            "enum": [
              "pay_as_you_go_time_based",
              "payg_tasks",
              "payg_milestones",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractWhoReportsEnum": {
            "docs": "Flag to indicate who is supposed to provide regular reports",
            "enum": [
              "both",
              "client",
              "contractor",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Contractor": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "name": {
                "default": "",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContractsSortByEnum": {
            "enum": [
              "contract_title",
              "client_name",
              "worker_name",
              "total",
              "status",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Country": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "CountryCode",
              "eor_support": {
                "docs": "Identifies if Deel support EoR in this country.",
                "type": "boolean",
              },
              "name": {
                "docs": "Country name.",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
              "state_type": {
                "docs": "Identifies the type of sub-territory within a country where local laws may apply. Some countries may have states, provinces, prefectures or regions.",
                "type": "optional<string>",
              },
              "states": "list<StateOfCountry>",
              "visa_support": {
                "docs": "Identifies if Deel provides visa support for employees being hired in this country.",
                "type": "boolean",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CountryCode": {
            "docs": "Country code. [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) country code.",
            "type": "string",
            "validation": {
              "format": undefined,
              "maxLength": 2,
              "minLength": 2,
              "pattern": "^[A-Z]{2}$",
            },
          },
          "CountryCodeList": "list<CountryCode>",
          "CountryCodeNulleable": {
            "docs": "Country code. [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) country code.",
            "type": "optional<string>",
            "validation": {
              "format": undefined,
              "maxLength": 2,
              "minLength": 2,
              "pattern": "^[A-Z]{2}$",
            },
          },
          "CountryList": "list<Country>",
          "CountryListContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "CountryList",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateTimeoff": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "end_date": {
                "docs": "End date of employee's time off.",
                "type": "optional<string>",
              },
              "is_end_date_half_day": {
                "docs": "Is the start day a half day?",
                "type": "optional<boolean>",
              },
              "is_start_date_half_day": {
                "docs": "Is the start day a half day?",
                "type": "optional<boolean>",
              },
              "other_timeoff_name": {
                "docs": "Custom name for this time off.",
                "type": "optional<string>",
              },
              "reason": {
                "docs": "Description for employee's time off.",
                "type": "optional<string>",
              },
              "start_date": {
                "docs": "Start date of employee's time off.",
                "type": "optional<string>",
              },
              "type": {
                "docs": "Time off type.",
                "type": "CreateTimeoffType",
              },
              "with_multiple_dates": {
                "docs": "If true, then multiple time off days were requested. You must supply a start and end date. If false, end date is ignored",
                "type": "boolean",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateTimeoffContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "CreateTimeoff",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateTimeoffType": {
            "docs": "Time off type.",
            "enum": [
              "VACATION",
              "SICK_LEAVE",
              "OTHER",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Currency": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "CurrencyCodeRequired",
              "name": {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CurrencyCode": {
            "docs": "Currency code.",
            "type": "string",
            "validation": {
              "format": undefined,
              "maxLength": 3,
              "minLength": 3,
              "pattern": "^[A-Z]{3}$",
            },
          },
          "CurrencyCodeList": "list<CurrencyCodeRequired>",
          "CurrencyCodeRequired": {
            "type": "string",
            "validation": {
              "format": undefined,
              "maxLength": 3,
              "minLength": 3,
              "pattern": "^[A-Z]{3}$",
            },
          },
          "CurrencyList": "list<Currency>",
          "CurrencyListContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "CurrencyList",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DateString": {
            "docs": "Short date in format ISO-8601 (YYYY-MM-DD). For example: 2022-12-31.",
            "type": "optional<string>",
            "validation": {
              "format": "date",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": "^\d{4}-\d{2}-\d{2}$",
            },
          },
          "DateStringDefaultNow": {
            "docs": "Short date in format ISO-8601 (YYYY-MM-DD). For example: 2022-12-31. Defaults to current date",
            "type": "string",
            "validation": {
              "format": "date",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": "^\d{4}-\d{2}-\d{2}$",
            },
          },
          "DateStringRequired": {
            "docs": "Short date in format ISO-8601 (YYYY-MM-DD). For example: 2022-12-31.",
            "type": "string",
            "validation": {
              "format": "date",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": "^\d{4}-\d{2}-\d{2}$",
            },
          },
          "DateTimeString": {
            "docs": "Long date-time format following ISO-8601",
            "type": "optional<datetime>",
          },
          "DateTimeStringRequired": {
            "docs": "Long date-time format following ISO-8601",
            "type": "optional<datetime>",
          },
          "EmailType": {
            "docs": "User's email address.",
            "type": "optional<string>",
            "validation": {
              "format": "email",
              "maxLength": undefined,
              "minLength": 5,
              "pattern": undefined,
            },
          },
          "EmailTypeRequired": {
            "docs": "Worker's email address.",
            "type": "string",
            "validation": {
              "format": "email",
              "maxLength": undefined,
              "minLength": 5,
              "pattern": undefined,
            },
          },
          "EmployeeList": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "birth_date": "optional<string>",
              "client_legal_entity": "optional<EmployeeListClientLegalEntity>",
              "completion_date": "optional<string>",
              "country": "optional<string>",
              "email": "optional<string>",
              "first_name": "optional<string>",
              "full_name": "optional<string>",
              "hiring_status": "optional<string>",
              "hiring_type": "optional<string>",
              "hourly_report_total": "optional<string>",
              "id": "optional<string>",
              "job_title": "optional<string>",
              "last_name": "optional<string>",
              "monthly_payment": "optional<EmployeeListMonthlyPayment>",
              "payments": "optional<list<EmployeeListPaymentsItem>>",
              "personal_email": "optional<string>",
              "pic_url": "optional<string>",
              "seniority": "optional<string>",
              "start_date": "optional<string>",
              "state": "optional<string>",
              "team": "optional<string>",
              "team_id": "optional<double>",
              "timezone": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EmployeeListClientLegalEntity": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": "optional<double>",
              "name": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EmployeeListContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "list<EmployeeList>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EmployeeListMonthlyPayment": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "count": "optional<double>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EmployeeListPaymentsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "contract_name": "optional<string>",
              "currency": "optional<string>",
              "rate": "optional<double>",
              "scale": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Employment": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "client_legal_entity": {
                "docs": "The client legal entity associated with the employment.",
                "type": "optional<PeopleClientLegalEntity>",
              },
              "completion_date": {
                "docs": "The completion date of the employment.",
                "type": "optional<string>",
              },
              "contract_is_archived": {
                "docs": "Indicates whether the employment's contract is archived.",
                "type": "optional<boolean>",
              },
              "contract_status": {
                "docs": "The contract status associated with the employment.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country associated with the employment.",
                "type": "optional<string>",
              },
              "email": {
                "docs": "The email associated with the employment.",
                "type": "optional<string>",
              },
              "has_eor_termination": {
                "docs": "Indicates whether the employment had an EOR termination.",
                "type": "optional<boolean>",
              },
              "hiring_status": {
                "docs": "The hiring status associated with the employment.",
                "type": "optional<string>",
              },
              "hiring_type": {
                "docs": "The hiring type associated with the employment.",
                "type": "optional<string>",
              },
              "id": {
                "docs": "Unique identifier for the employment.",
                "type": "optional<string>",
              },
              "is_ended": {
                "docs": "Indicates whether the employment has ended.",
                "type": "optional<boolean>",
              },
              "job_title": {
                "docs": "The job title associated with the employment.",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the employment.",
                "type": "optional<string>",
              },
              "payment": {
                "docs": "The payment information associated with the employment.",
                "type": "optional<PeoplePayment>",
              },
              "seniority": {
                "docs": "The seniority level associated with the employment.",
                "type": "optional<string>",
              },
              "start_date": {
                "docs": "The start date of the employment.",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state associated with the employment.",
                "type": "optional<string>",
              },
              "team": {
                "docs": "The team associated with the employment.",
                "type": "optional<Team>",
              },
              "timezone": {
                "docs": "The timezone associated with the employment.",
                "type": "optional<string>",
              },
              "voluntarily_left": {
                "docs": "Indicates whether the employment was left voluntarily.",
                "type": "optional<boolean>",
              },
              "work_email": {
                "docs": "The work email associated with the employment.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EmploymentDetailsOfContract": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "country": "optional<CountryCode>",
              "days_per_week": "double",
              "hours_per_day": "double",
              "paid_vacation_days": "double",
              "probation_period": "optional<double>",
              "state": {
                "docs": "State code.",
                "type": "optional<string>",
              },
              "type": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorClientTimeoffRequests": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "current_approved": {
                "docs": "Days off approved.",
                "type": "optional<double>",
              },
              "days_requested": {
                "docs": "Days off requested by employee.",
                "type": "optional<double>",
              },
              "over_annual_limit": {
                "docs": "Too many days off requested by employee.",
                "type": "optional<boolean>",
              },
              "requests": {
                "docs": "List of time offs.",
                "type": "list<EorTimeoffsItem>",
              },
              "year": "optional<double>",
              "yearly_limit": {
                "docs": "Total number of days off allowed per year.",
                "type": "optional<double>",
              },
              "yearly_requests": {
                "docs": "Total number of time off requests this year.",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorClientTimeoffs": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "employees": {
                "docs": "List of employee time offs.",
                "type": "list<EorTimeoffsEmployeeItem>",
              },
              "total_requests": "double",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorClientTimeoffsContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "EorClientTimeoffs",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorContractCreated": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "client": "optional<EorContractCreatedClient>",
              "compensation_details": "optional<EorContractCreatedCompensationDetails>",
              "created_at": "optional<DateTimeString>",
              "employee": "optional<EorContractCreatedEmployee>",
              "employment": "optional<EorContractCreatedEmployment>",
              "health_plan": "optional<EorContractCreatedHealthPlan>",
              "id": {
                "docs": "Id of the contract quote created",
                "type": "optional<string>",
              },
              "job_title": {
                "docs": "Employee's job title.",
                "type": "optional<string>",
              },
              "seniority": "optional<Seniority>",
              "status": "optional<ContractStatusEnum>",
              "type": "optional<ContractTypeEnum>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorContractCreatedClient": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "legal_entity": "optional<EorContractCreatedClientLegalEntity>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorContractCreatedClientLegalEntity": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "name": {
                "docs": "Legal entity name.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorContractCreatedCompensationDetails": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "currency": {
                "docs": "Currency of gross annual salary.",
                "type": "optional<string>",
              },
              "salary": {
                "docs": "Gross annual salary.",
                "type": "optional<double>",
              },
              "variable_compensation": {
                "docs": "Variable compensation acount or percentage.",
                "type": "optional<string>",
              },
              "variable_compensation_type": {
                "docs": "Type fo variable compensation.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorContractCreatedContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "EorContractCreated",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorContractCreatedEmployee": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "email": {
                "docs": "Employee's email.",
                "type": "optional<string>",
              },
              "first_name": {
                "docs": "Employee's first name.",
                "type": "optional<string>",
              },
              "last_name": {
                "docs": "Employee's last name.",
                "type": "optional<string>",
              },
              "legal_name": {
                "docs": "Employee's legal name.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorContractCreatedEmployment": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "calculated_holidays": {
                "docs": "Number of calculate holidays for this contract.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "Country of employement.",
                "type": "optional<string>",
              },
              "end_date": "optional<DateString>",
              "probation_period": {
                "docs": "Number of probation days.",
                "type": "optional<double>",
              },
              "scope_of_work": {
                "docs": "Scope of work description.",
                "type": "optional<string>",
              },
              "start_date": "optional<DateString>",
              "state": {
                "docs": "State code of the state/province where the this person will be employed.",
                "type": "optional<string>",
              },
              "time_off_type": {
                "docs": "If you want to use standard number of holidays for this employee, choose "STANDARD". If you want to enter a specific number of holidays, choose "SPECIFIC" and enter the number of days in the holidays field.",
                "type": "optional<string>",
              },
              "work_visa_required": {
                "docs": "Do you require Deel to apply for work visa for this person?",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorContractCreatedHealthPlan": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "Health plan ID",
                "type": "optional<string>",
              },
              "name": {
                "docs": "Health plan name",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorContractToCreate": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "client": "EorContractToCreateClient",
              "compensation_details": "EorContractToCreateCompensationDetails",
              "employee": "optional<EorContractToCreateEmployee>",
              "employment": "EorContractToCreateEmployment",
              "health_plan_id": {
                "docs": "Healthare plan Id. You can see available healthcare plans in the country guide endpoint.",
                "type": "optional<string>",
              },
              "job_title": {
                "docs": "Employee's job title.",
                "type": "optional<string>",
              },
              "quote_additional_fields": {
                "docs": "Some countries require additional employee information for employment contracts.",
                "type": "optional<EorContractToCreateQuoteAdditionalFields>",
              },
              "seniority": "EorContractToCreateSeniority",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorContractToCreateClient": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "legal_entity": "optional<EorContractToCreateClientLegalEntity>",
              "team": "optional<EorContractToCreateClientTeam>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorContractToCreateClientLegalEntity": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "Enter the Id of legal entity under which you want to hire this person. Use /legal-entities endpoint to retrieve a list of legal entities in your organization.",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorContractToCreateClientTeam": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "Enter the Id of team this person will be hired in. Use /teams endpoint to retrieve a list of teams in your organization.",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorContractToCreateCompensationDetails": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "currency": {
                "docs": "Salary currency.",
                "type": "optional<string>",
              },
              "salary": {
                "docs": "Employee's gross annual salary.",
                "type": "optional<double>",
              },
              "variable_compensation": {
                "docs": "Varable compensation. For example, if the person will earn 5% of the gross annual salary as the variable compensation, enter 5.",
                "type": "optional<double>",
              },
              "variable_compensation_type": {
                "docs": "Should be set only if variable_compensation is set. It can be PERCENTAGE or FIXED.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorContractToCreateEmployee": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "address": "optional<EorContractToCreateEmployeeAddress>",
              "email": {
                "docs": "Employee's email address.",
                "type": "optional<string>",
              },
              "first_name": {
                "docs": "Employee's first name.",
                "type": "string",
              },
              "last_name": {
                "docs": "Employee's last name.",
                "type": "string",
              },
              "nationality": {
                "docs": "Employee's nationality.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorContractToCreateEmployeeAddress": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "city": {
                "docs": "City name.",
                "type": "optional<string>",
              },
              "country": "optional<CountryCode>",
              "state": {
                "docs": "State code.",
                "type": "optional<string>",
              },
              "street": {
                "docs": "Street and number.",
                "type": "optional<string>",
              },
              "zip": {
                "docs": "Zip code.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorContractToCreateEmployment": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "country": "optional<CountryCode>",
              "end_date": "optional<DateString>",
              "holidays": {
                "docs": "Enter the number of holidays. Leave this field blank if you are chooseing "STANDARD" time_off_type.",
                "type": "optional<double>",
              },
              "probation_period": {
                "docs": "Number of probation days.",
                "type": "optional<double>",
              },
              "scope_of_work": {
                "docs": "Scope of work description.",
                "type": "optional<string>",
              },
              "start_date": "optional<DateString>",
              "state": {
                "docs": "State code of the state/province where the this person will be employed.",
                "type": "optional<string>",
              },
              "time_off_type": {
                "docs": "If you want to use standard number of holidays for this employee, choose "STANDARD". If you want to enter a specific number of holidays, choose "SPECIFIC" and enter the number of days in the holidays field.",
                "type": "optional<EorContractToCreateEmploymentTimeOffType>",
              },
              "type": {
                "docs": "Is it a full-time contract or a part-time contract?",
                "type": "optional<EorContractToCreateEmploymentType>",
              },
              "work_visa_required": {
                "default": false,
                "docs": "Do you require Deel to apply for work visa for this person?",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorContractToCreateEmploymentTimeOffType": {
            "docs": "If you want to use standard number of holidays for this employee, choose "STANDARD". If you want to enter a specific number of holidays, choose "SPECIFIC" and enter the number of days in the holidays field.",
            "enum": [
              "STANDARD",
              "SPECIFIC",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorContractToCreateEmploymentType": {
            "docs": "Is it a full-time contract or a part-time contract?",
            "enum": [
              {
                "name": "FullTime",
                "value": "Full-time",
              },
              {
                "name": "PartTime",
                "value": "Part-time",
              },
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorContractToCreateQuoteAdditionalFields": {
            "docs": "Some countries require additional employee information for employment contracts.",
            "inline": true,
            "properties": {
              "dob": {
                "docs": "Employee's date of birth.",
                "type": "optional<string>",
              },
              "gender": {
                "docs": "Employee's gender.",
                "type": "optional<string>",
              },
              "worker_type": {
                "docs": "Type of worker.",
                "type": "optional<EorContractToCreateQuoteAdditionalFieldsWorkerType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorContractToCreateQuoteAdditionalFieldsWorkerType": {
            "docs": "Type of worker.",
            "enum": [
              "Skilled",
              "Unskilled",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorContractToCreateSeniority": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "Enter the Id retrieved from the seniority lookup endpoint. Enter 34 for "Not Applicable".",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorCountryValidations": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "adjustments_information_box": {
                "docs": "Country specific notes and information.",
                "type": "optional<string>",
              },
              "currency": {
                "docs": "Country currency.",
                "type": "optional<string>",
              },
              "definite_contract": {
                "docs": "Conditions to make definitive contract.",
                "type": "optional<EorCountryValidationsDefiniteContract>",
              },
              "health_insurance": "optional<EorCountryValidationsHealthInsurance>",
              "hiring_guide_country_name": {
                "docs": "Country name.",
                "type": "optional<string>",
              },
              "holiday": {
                "docs": "Range of the number of holidays.",
                "type": "optional<EorCountryValidationsHoliday>",
              },
              "insurance_fee": {
                "docs": "Insurance fee.",
                "type": "optional<string>",
              },
              "part_time_holiday": {
                "docs": "Holiday type and range for part-time contracts.",
                "type": "optional<EorCountryValidationsPartTimeHoliday>",
              },
              "part_time_probation": {
                "docs": "Probation period range for part-time contracts.",
                "type": "optional<EorCountryValidationsPartTimeProbation>",
              },
              "probation": {
                "docs": "Probation period range.",
                "type": "optional<EorCountryValidationsProbation>",
              },
              "salary": {
                "docs": "Salary range.",
                "type": "optional<EorCountryValidationsSalary>",
              },
              "sick_days": "optional<EorCountryValidationsSickDays>",
              "start_date_buffer": {
                "docs": "Calculate employee's minimum start date using the start date buffer. Today's date + (number of business days x start_date_buffer) = Minimum start date.",
                "type": "optional<double>",
              },
              "work_schedule": {
                "docs": "Employee's Work schedule in days and hours.",
                "type": "optional<EorCountryValidationsWorkSchedule>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorCountryValidationsContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "EorCountryValidations",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorCountryValidationsDefiniteContract": {
            "docs": "Conditions to make definitive contract.",
            "inline": true,
            "properties": {
              "maximum_limitation": "optional<double>",
              "type": "optional<EorCountryValidationsDefiniteContractType>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorCountryValidationsDefiniteContractType": {
            "enum": [
              "ALLOWED_WITHOUT_LIMITATION",
              "ALLOWED_WITH_MAXIMUM_LIMITATION",
              "NOT_ALLOWED",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorCountryValidationsHealthInsurance": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "providers": "optional<list<HealthInsuranceProvider>>",
              "status": "optional<HealthInsuranceStatusEnum>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorCountryValidationsHoliday": {
            "docs": "Range of the number of holidays.",
            "inline": true,
            "properties": {
              "min": {
                "docs": "Minimum number of holidays required for a legally compliant contract.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorCountryValidationsPartTimeHoliday": {
            "docs": "Holiday type and range for part-time contracts.",
            "inline": true,
            "properties": {
              "min": {
                "docs": "Minimum number of holidays required for a legally compliant contract.",
                "type": "optional<string>",
              },
              "type": "optional<EorCountryValidationsPartTimeHolidayType>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorCountryValidationsPartTimeHolidayType": {
            "enum": [
              "PRORATED",
              "STANDARD",
              "SPECIFIC",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorCountryValidationsPartTimeProbation": {
            "docs": "Probation period range for part-time contracts.",
            "inline": true,
            "properties": {
              "max": {
                "docs": "Maximum probation days allowed for a legally compliant contract.",
                "type": "optional<double>",
              },
              "min": {
                "docs": "Minimum probation days required for a legally compliant contract.",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorCountryValidationsProbation": {
            "docs": "Probation period range.",
            "inline": true,
            "properties": {
              "max": {
                "docs": "Maximum probation days allowed for a legally compliant contract.",
                "type": "optional<double>",
              },
              "min": {
                "docs": "Minimum probation days required for a legally compliant contract.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorCountryValidationsSalary": {
            "docs": "Salary range.",
            "inline": true,
            "properties": {
              "max": {
                "docs": "Maximum wage allowed for a legally compliant contract.",
                "type": "optional<string>",
              },
              "min": {
                "docs": "Minimum wage for a legally compliant contract.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorCountryValidationsSickDays": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "max": {
                "docs": "Maximum number of sick days allowed for a legally compliant contract.",
                "type": "optional<string>",
              },
              "min": {
                "docs": "Minimum number of sick days required for a legally compliant contract.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorCountryValidationsWorkSchedule": {
            "docs": "Employee's Work schedule in days and hours.",
            "inline": true,
            "properties": {
              "days": "optional<EorCountryValidationsWorkScheduleDays>",
              "hours": "optional<EorCountryValidationsWorkScheduleHours>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorCountryValidationsWorkScheduleDays": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "max": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorCountryValidationsWorkScheduleHours": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "max": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorEntitlementListItem": {
            "docs": "Entitlement Item for a given year.",
            "inline": undefined,
            "properties": {
              "max_rollover_yearly": "optional<string>",
              "other_leave_approved": {
                "docs": "Other type of time off days approved.",
                "type": "optional<string>",
              },
              "other_leave_requested": {
                "docs": "Other type of time off requested by the employee.",
                "type": "optional<string>",
              },
              "other_leave_total": {
                "docs": "Total number of other type of time off days requested, approved and used.",
                "type": "optional<string>",
              },
              "other_leave_used": {
                "docs": "Other type of time off days used by the employee.",
                "type": "optional<string>",
              },
              "rollover_type": "optional<EorHolidaysRolloverType>",
              "sick_leave_allowed": {
                "docs": "Maximum sick leave allowed.",
                "type": "optional<string>",
              },
              "sick_leave_approved": {
                "docs": "Sick days approved.",
                "type": "optional<string>",
              },
              "sick_leave_requested": {
                "docs": "Sick days requested by the employee.",
                "type": "optional<string>",
              },
              "sick_leave_total": {
                "docs": "Total number of sick days requested, approved and used.",
                "type": "optional<string>",
              },
              "sick_leave_used": {
                "docs": "Sick days used by the employee.",
                "type": "optional<string>",
              },
              "vacation_allowed": {
                "docs": "Minimum vacation allowed.",
                "type": "optional<string>",
              },
              "vacation_approved": {
                "docs": "Vacation days approved.",
                "type": "optional<string>",
              },
              "vacation_requested": {
                "docs": "Vacation days requested by the employee.",
                "type": "optional<string>",
              },
              "vacation_total": {
                "docs": "Total number of vacation days requested, approved and used.",
                "type": "optional<string>",
              },
              "vacation_used": {
                "docs": "Vacation days used by the employee.",
                "type": "optional<string>",
              },
              "year": "optional<double>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorEntitlements": {
            "docs": "Time-off Entitlements for EOR contracts.",
            "inline": undefined,
            "properties": {
              "entitlements": {
                "docs": "List of entitlements.",
                "type": "list<EorEntitlementListItem>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorEntitlementsContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "EorEntitlements",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorHolidaysRolloverType": {
            "enum": [
              "EXPIRATION",
              "PAY_OUT",
              "UNLIMITED_ROLLOVER",
              "LIMITED_ROLLOVER",
              "UNSET",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorTimeoffs": {
            "docs": "List of time offs.",
            "type": "list<EorTimeoffsItem>",
          },
          "EorTimeoffsBaseItem": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "attachments": "optional<TimeoffsAttachments>",
              "date_is_half_day": {
                "docs": "If true, only a single date was specified.",
                "type": "optional<boolean>",
              },
              "days_used_end_year": {
                "docs": "Days used at the end year.",
                "type": "optional<string>",
              },
              "days_used_start_year": {
                "docs": "Days used at the start year.",
                "type": "optional<string>",
              },
              "denial_reason": {
                "docs": "Reason why time off was denied.",
                "type": "optional<string>",
              },
              "end_date_is_half_day": {
                "docs": "Indicates if the last day of time off is a half day.",
                "type": "optional<boolean>",
              },
              "has_multiple_dates": {
                "docs": "Indicates if multiple time off days are requested.",
                "type": "optional<boolean>",
              },
              "other_timeoff_name": {
                "docs": "Custom title for the time off. Only specify if type is "OTHER".",
                "type": "optional<string>",
              },
              "reason": {
                "docs": "Reason for requesting time off.",
                "type": "optional<string>",
              },
              "requested_at": {
                "docs": "Timestamp when time off was requested.",
                "type": "optional<DateTimeString>",
              },
              "requester": {
                "docs": "Employee who requested the time off.",
                "type": "optional<TimeoffsProfile>",
              },
              "reviewed_at": {
                "docs": "Timestamp when time off was reviewed.",
                "type": "optional<DateTimeString>",
              },
              "reviewer": {
                "docs": "User who reviewed the time off.",
                "type": "optional<TimeoffsProfile>",
              },
              "single_date": "optional<DateTimeString>",
              "start_date_is_half_day": {
                "docs": "Indicates if the first day of time off is a half day.",
                "type": "optional<boolean>",
              },
              "status": {
                "docs": "Status of the time off request.",
                "type": "TimeoffsStatusEnum",
              },
              "total_days_used": {
                "docs": "Total number of time off days used.",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of time off.",
                "type": "TimeoffsTypeEnum",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorTimeoffsContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "EorTimeoffs",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorTimeoffsEmployeeItem": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "contract_id": "string",
              "eor_contract_id": "double",
              "id": "double",
              "name": "string",
              "others": {
                "docs": "List of all other employee time offs.",
                "type": "list<EorClientTimeoffRequests>",
              },
              "sick_leaves": {
                "docs": "List of employee sick leave time offs.",
                "type": "list<EorClientTimeoffRequests>",
              },
              "time_zones": "string",
              "vacations": {
                "docs": "List of employee vacation time offs.",
                "type": "list<EorClientTimeoffRequests>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorTimeoffsItem": {
            "docs": undefined,
            "extends": [
              "EorTimeoffsBaseItem",
            ],
            "inline": undefined,
            "properties": {
              "applied_changes": {
                "docs": "List of changes applied to the time off.",
                "type": "optional<list<EorTimeoffsBaseItem>>",
              },
              "can_request_changes": {
                "docs": "Indicates if it is possible to make changes to the time off request.",
                "type": "optional<boolean>",
              },
              "change_request": {
                "docs": "Only valid if the requester asks to change existing time off and it has been reviewed.",
                "type": "optional<EorTimeoffsBaseItem>",
              },
              "contract_id": "optional<string>",
              "created_at": "optional<DateTimeString>",
              "end_date": "optional<DateTimeString>",
              "id": "double",
              "is_updated": {
                "docs": "If true, an update to the original time off request was made.",
                "type": "optional<boolean>",
              },
              "start_date": "optional<DateTimeString>",
              "updated_at": "optional<DateTimeString>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EorTimeoffsItemContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "EorTimeoffsItem",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EstimateFirstPayment": {
            "docs": "Details of pro rata payment to create.",
            "inline": undefined,
            "properties": {
              "compensation_details": "EstimateFirstPaymentCompensationDetails",
              "country_code": "CountryCode",
              "start_date": "DateStringRequired",
              "type": "ContractTypeEnum",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EstimateFirstPaymentCompensationDetails": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "amount": {
                "docs": "Amount to be paid. Must be a positive number.",
                "type": "optional<double>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "calculation_type": {
                "docs": "Either works days or calendar days",
                "type": "optional<EstimateFirstPaymentCompensationDetailsCalculationType>",
              },
              "currency_code": "optional<CurrencyCodeRequired>",
              "cycle_end": {
                "docs": "Date invoice cycle ends.",
                "type": "optional<double>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 31,
                  "min": 1,
                  "multipleOf": undefined,
                },
              },
              "cycle_end_type": "optional<WorkStatementCycleEndTypeEnum>",
              "payment_due_days": {
                "type": "optional<double>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 90,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "payment_due_type": "optional<WorkStatementPaymentDueTypeEnum>",
              "scale": "optional<WorkStatementCycleScaleEnum>",
              "work_week_end": "optional<WeekDaysEnum>",
              "work_week_start": "optional<WeekDaysEnum>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EstimateFirstPaymentCompensationDetailsCalculationType": {
            "docs": "Either works days or calendar days",
            "enum": [
              "CUSTOM_AMOUNT",
              "WORK_DAYS",
              "CALENDAR_DAYS",
              "FULL_AMOUNT",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ExchangeRates": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "rates": "optional<map<string, unknown>>",
              "risk": "optional<double>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FileAttachmentInfo": {
            "docs": "This object is used for linking file attachments to your records.",
            "inline": undefined,
            "properties": {
              "filename": {
                "docs": "Original filename you used to upload using attachments end-point.",
                "type": "string",
              },
              "key": {
                "docs": "You can call attachments end-point, get key and URL to upload your file.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FileObject": {
            "docs": "This is the file you will upload in a multi-part form.",
            "inline": undefined,
            "properties": {
              "file": {
                "docs": "Upload the file you want to attach to this entry.",
                "type": "optional<string>",
                "validation": {
                  "format": "binary",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FileRefTypeEnum": {
            "docs": "type of files allowed when uploading attachments",
            "enum": [
              {
                "name": "ApplicationPdf",
                "value": "application/pdf",
              },
              {
                "name": "TextCsv",
                "value": "text/csv",
              },
              {
                "name": "TextPlain",
                "value": "text/plain",
              },
              {
                "name": "ImageJpeg",
                "value": "image/jpeg",
              },
              {
                "name": "ImagePng",
                "value": "image/png",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FinalPaymentCalculated": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "calculation_type": {
                "docs": "Either works days or calendar days",
                "type": "FinalPaymentCalculatedCalculationType",
              },
              "daily_rate": {
                "docs": "The daily rate paid.",
                "type": "string",
              },
              "last_cycle": {
                "docs": "The last payment cycle.",
                "type": "FinalPaymentCalculatedLastCycle",
              },
              "remaining_days": {
                "docs": "Dais remaining to end the contract.",
                "type": "string",
              },
              "total": {
                "docs": "Total amount to pay.",
                "type": "string",
              },
              "workweek_end": {
                "default": 5,
                "docs": "The day the work week starts, 0 to 6",
                "type": "double",
              },
              "workweek_start": {
                "default": 1,
                "docs": "The day the work week starts, 0 to 6",
                "type": "double",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FinalPaymentCalculatedCalculationType": {
            "docs": "Either works days or calendar days",
            "enum": [
              "CUSTOM_AMOUNT",
              "WORK_DAYS",
              "CALENDAR_DAYS",
              "FULL_AMOUNT",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FinalPaymentCalculatedContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "FinalPaymentCalculated",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FinalPaymentCalculatedLastCycle": {
            "docs": "The last payment cycle.",
            "inline": true,
            "properties": {
              "completion_date": "optional<DateTimeStringRequired>",
              "end": "optional<DateTimeStringRequired>",
              "start": "optional<DateTimeStringRequired>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FirstPaymentDate": {
            "docs": "First payment date",
            "inline": undefined,
            "properties": {
              "due": "optional<DateStringRequired>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenericReportReviewCreated": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "id": "UniqueObjectIdentifier",
              "public_id": "optional<PublicId>",
              "status": "optional<InvoiceAdjustmentStatusEnum>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenericReportReviewCreatedContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "GenericReportReviewCreatedList",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenericReportReviewCreatedList": "list<GenericReportReviewCreated>",
          "GenericResultCreated": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "GenericResultCreatedData",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenericResultCreatedData": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "created": "boolean",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenericResultDeleted": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "GenericResultDeletedData",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenericResultDeletedData": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "deleted": {
                "docs": "Confirms the deletion.",
                "type": "boolean",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenericResultUpdated": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "GenericResultUpdatedData",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenericResultUpdatedData": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "updated": "boolean",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "HealthInsuranceProvider": {
            "docs": "Health insurance provider.",
            "inline": undefined,
            "properties": {
              "attachments": {
                "docs": "File attachments.",
                "type": "optional<list<HealthInsuranceProviderAttachmentsItem>>",
              },
              "client_info_banner": {
                "docs": "Health insurance info banner.",
                "type": "optional<string>",
              },
              "currency": {
                "docs": "Payment currency.",
                "type": "optional<string>",
              },
              "days_to_cancel": {
                "docs": "Days to cancel the insurance.",
                "type": "optional<string>",
              },
              "ending_rule": {
                "docs": "Insurance cycle ending rule.",
                "type": "optional<string>",
              },
              "fixed_price": {
                "docs": "URL to price info.",
                "type": "optional<boolean>",
              },
              "home_page_url": {
                "docs": "Insurance provider's home page url.",
                "type": "optional<string>",
              },
              "is_available_for_new_quotes": "optional<boolean>",
              "is_unisure": "optional<boolean>",
              "name": {
                "docs": "Name of insurance provider.",
                "type": "optional<string>",
              },
              "plans": "optional<list<HealthInsuranceProviderPlansItem>>",
              "pricing_info_link": {
                "docs": "URL to price info.",
                "type": "optional<string>",
              },
              "type": {
                "docs": "Insurance type.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "HealthInsuranceProviderAttachmentsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": "optional<double>",
              "label": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "HealthInsuranceProviderPlansItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "currency": {
                "docs": "Insurance payment currency.",
                "type": "optional<string>",
              },
              "id": {
                "docs": "Insurance plan id.",
                "type": "optional<double>",
              },
              "is_enabled": "optional<boolean>",
              "name": {
                "docs": "Insurance plan name.",
                "type": "optional<string>",
              },
              "price": {
                "docs": "Insurance price.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "HealthInsuranceStatusEnum": {
            "docs": "Health insurance status.",
            "enum": [
              "REQUIRED",
              "ENABLED",
              "DISABLED",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "HrisCompensation": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "currency": {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 3,
                  "minLength": 3,
                  "pattern": undefined,
                },
              },
              "gross_annual_salary": "float",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "HrisContractBase": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "contract_oid": {
                "docs": "The Hris Direct employee contract ID",
                "type": "string",
              },
              "employee_number": "optional<double>",
              "end_date": "optional<DateString>",
              "start_date": "DateStringRequired",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "HrisContractFullTime": {
            "docs": undefined,
            "extends": [
              "HrisContractBase",
            ],
            "inline": undefined,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "HrisContractPartTime": {
            "docs": undefined,
            "extends": [
              "HrisContractBase",
            ],
            "inline": undefined,
            "properties": {
              "part_time_percentage": {
                "docs": "required if employmentType is "PART_TIME"",
                "type": "double",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 99,
                  "min": 1,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "HrisDirectEmployee": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "compensation": "HrisCompensation",
              "contract": "HrisDirectEmployeeContract",
              "employee_details": "HrisDirectEmployeeDetails",
              "job_information": "HrisDirectEmployeeJobInformation",
              "team_information": "HrisTeamInformation",
              "vacation_info": "optional<HrisDirectEmployeeVacationInfo>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "HrisDirectEmployeeContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "HrisDirectEmployeeResponse",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "HrisDirectEmployeeContract": {
            "availability": undefined,
            "base-properties": {},
            "discriminant": "employment_type",
            "docs": undefined,
            "encoding": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": {
              "FULL_TIME": "HrisContractFullTime",
              "PART_TIME": "HrisContractPartTime",
            },
          },
          "HrisDirectEmployeeDetails": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "country": {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 2,
                  "minLength": 2,
                  "pattern": undefined,
                },
              },
              "email": {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": 3,
                  "pattern": undefined,
                },
              },
              "first_name": {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 100,
                  "minLength": 3,
                  "pattern": undefined,
                },
              },
              "last_name": {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 100,
                  "minLength": 3,
                  "pattern": undefined,
                },
              },
              "nationality": {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 2,
                  "minLength": 2,
                  "pattern": undefined,
                },
              },
              "state": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 50,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
              "work_email": {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": 3,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "HrisDirectEmployeeJobInformation": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "HrisJobInformationTitleId",
              "HrisJobInformationTitleName",
            ],
          },
          "HrisDirectEmployeeResponse": {
            "docs": undefined,
            "extends": [
              "HrisDirectEmployee",
            ],
            "inline": undefined,
            "properties": {
              "id": {
                "docs": "The Hris Direct employee ID",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "HrisDirectEmployeeVacationInfo": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "vacation_accrual_start_date": {
                "type": "string",
                "validation": {
                  "format": "date",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "vacation_yearly_policy": {
                "type": "double",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 365,
                  "min": 1,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "HrisJobInformationBase": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "seniority_id": "double",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "HrisJobInformationTitleId": {
            "docs": undefined,
            "extends": [
              "HrisJobInformationBase",
            ],
            "inline": undefined,
            "properties": {
              "job_title_id": "double",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "HrisJobInformationTitleName": {
            "docs": undefined,
            "extends": [
              "HrisJobInformationBase",
            ],
            "inline": undefined,
            "properties": {
              "job_title_name": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "HrisTeamInformation": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "legal_entity_id": "double",
              "team_id": "double",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InputToDeletePgoTask": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "PgoTaskToDelete",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InputToShieldContract": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "InputToShieldContractData",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InputToShieldContractData": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "agreement_id": {
                "docs": "MSA contract id (agreement).",
                "type": "double",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InvitationsOfBasicContract": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "client_email": "optional<EmailType>",
              "worker_email": "optional<EmailType>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Invoice": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "amount": {
                "docs": "Billed amount.",
                "type": "optional<double>",
              },
              "contract": "InvoiceContract",
              "created_at": "optional<DateTimeString>",
              "currency": "CurrencyCode",
              "exchange_fee": "optional<double>",
              "fee": {
                "docs": "Fee added to the amount.",
                "type": "optional<double>",
              },
              "id": {
                "docs": "Unique identifier of the invoice.",
                "type": "double",
              },
              "invoice_id": {
                "docs": "Unique oid of the invoice.",
                "type": "string",
              },
              "is_offcycle": {
                "docs": "Indicates if the invoice related to an offcycle payment.",
                "type": "optional<boolean>",
              },
              "is_overdue": {
                "docs": "Indicates if the invoice is overdue.",
                "type": "optional<boolean>",
              },
              "label": {
                "docs": "Invoice label as displayed in Deel platform.",
                "type": "optional<string>",
              },
              "money_received_at": "optional<DateTimeString>",
              "paid_at": "optional<DateTimeString>",
              "payment_currency": "CurrencyCode",
              "payment_method": "optional<PaymentMethodEnum>",
              "payment_processed_at": "optional<DateTimeString>",
              "status": "InvoiceStatusEnum",
              "total": {
                "docs": "Total invoice amount including Fee and VAT.",
                "type": "double",
              },
              "vat_percentage": {
                "docs": "VAT percentrage.",
                "type": "optional<double>",
              },
              "vat_total": {
                "docs": "Amount of VAT.",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InvoiceAdjustment": {
            "docs": undefined,
            "extends": [
              "BasicInvoiceAdjustment",
              "InvoiceAdjustmentApproversContainer",
            ],
            "inline": undefined,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InvoiceAdjustmentApprover": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "approved": "boolean",
              "email": "string",
              "full_name": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InvoiceAdjustmentApproverList": "list<InvoiceAdjustmentApprover>",
          "InvoiceAdjustmentApproversContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "approvers": "InvoiceAdjustmentApproverList",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InvoiceAdjustmentContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "InvoiceAdjustment",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InvoiceAdjustmentCreated": {
            "docs": "Details of invoice adjustment created.",
            "inline": undefined,
            "properties": {
              "created": "boolean",
              "created_at": "optional<DateTimeStringRequired>",
              "id": "optional<UniqueObjectIdentifier>",
              "public_id": "optional<PublicId>",
              "status": "optional<InvoiceAdjustmentStatusEnum>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InvoiceAdjustmentCreatedContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "InvoiceAdjustmentCreated",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InvoiceAdjustmentList": "list<BasicInvoiceAdjustment>",
          "InvoiceAdjustmentListContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "InvoiceAdjustmentList",
              "page": "PageInfoWithoutCursorNew",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InvoiceAdjustmentReviewToCreate": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "reason": "optional<string>",
              "status": "InvoiceAdjustmentReviewToCreateStatus",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InvoiceAdjustmentReviewToCreateStatus": {
            "enum": [
              "approved",
              "declined",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InvoiceAdjustmentReviewsToCreate": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "ids": "TimesheetIdItems",
              "reason": "optional<string>",
              "status": "InvoiceAdjustmentReviewsToCreateStatus",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InvoiceAdjustmentReviewsToCreateStatus": {
            "enum": [
              "approved",
              "declined",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InvoiceAdjustmentSearchContainer": {
            "docs": "This is a model to make it easier to understand and restrict search parameters",
            "inline": undefined,
            "properties": {
              "contract_id": "optional<string>",
              "contract_types": "optional<InvoiceAdjustmentSearchContainerContractTypes>",
              "date_from": "optional<DateString>",
              "date_to": "optional<DateString>",
              "invoice_id": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 10,
                  "minLength": undefined,
                  "pattern": "^\d+$",
                },
              },
              "limit": {
                "default": "10",
                "docs": "Return a page of results with given number of records.",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 2,
                  "minLength": undefined,
                  "pattern": "^\d{1,2}$",
                },
              },
              "offset": {
                "default": "10",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 2,
                  "minLength": undefined,
                  "pattern": "^\d{1,2}$",
                },
              },
              "order_direction": "optional<SortDirEnum>",
              "reporter_id": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 10,
                  "minLength": undefined,
                  "pattern": "^\d+$",
                },
              },
              "statuses": "optional<InvoiceAdjustmentSearchContainerStatuses>",
              "types": "optional<InvoiceAdjustmentSearchContainerTypes>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InvoiceAdjustmentSearchContainerContractTypes": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "ContractTypeEnumList",
              "ContractTypeEnum",
            ],
          },
          "InvoiceAdjustmentSearchContainerStatuses": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "InvoiceAdjustmentStatusEnumList",
              "optional<InvoiceAdjustmentStatusEnum>",
            ],
          },
          "InvoiceAdjustmentSearchContainerTypes": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "InvoiceAdjustmentTypeEnumList",
              "InvoiceAdjustmentTypeEnum",
            ],
          },
          "InvoiceAdjustmentStatusEnum": {
            "docs": "status of invoice adjustment",
            "type": "optional<string>",
          },
          "InvoiceAdjustmentStatusEnumList": "list<optional<InvoiceAdjustmentStatusEnum>>",
          "InvoiceAdjustmentToCreate": {
            "docs": "Details of invoice adjustment to create.",
            "inline": undefined,
            "properties": {
              "amount": {
                "docs": "Amount to be paid. Must be a positive number.",
                "type": "double",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "contract_id": {
                "docs": "Id of a Deel contract.",
                "type": "string",
              },
              "date_submitted": "DateStringRequired",
              "description": {
                "docs": "Description of the adjustment.",
                "type": "optional<string>",
              },
              "paymentCycleId": {
                "docs": "ID of an existing active payment cycle - required if type is "vat"",
                "type": "optional<double>",
              },
              "type": "InvoiceAdjustmentTypeToCreateEnum",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InvoiceAdjustmentToCreateWithFile": {
            "docs": undefined,
            "extends": [
              "InvoiceAdjustmentToCreate",
              "FileObject",
            ],
            "inline": undefined,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InvoiceAdjustmentToUpdate": {
            "docs": "Details of invoice adjustment to update.",
            "inline": undefined,
            "properties": {
              "amount": {
                "type": "optional<double>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "description": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InvoiceAdjustmentTypeEnum": {
            "docs": "Type of invoice adjustment.",
            "enum": [
              "accrued_holiday",
              "additional_fee",
              "allowance",
              "bonus",
              "commission",
              "deduction",
              "deposit",
              "deposit_refund",
              "employer_cost",
              "expense",
              "health_allowance",
              "health_benefit",
              "health_insurance_fee",
              "legal_fee",
              "management_fee",
              "milestone",
              "offcycle",
              "other",
              "overtime",
              "pension",
              "pro_rata",
              "setup_fee",
              "severance",
              "shield_service",
              "signing_bonus",
              "signing_bonus_employer_cost",
              "refund",
              "task",
              "time_off",
              "vat",
              "withholding_tax",
              "work",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InvoiceAdjustmentTypeEnumList": "list<InvoiceAdjustmentTypeEnum>",
          "InvoiceAdjustmentTypeToCreateEnum": {
            "docs": "Type of invoice adjustment.",
            "enum": [
              "bonus",
              "commission",
              "deduction",
              "expense",
              "other",
              "overtime",
              "time_off",
              "vat",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InvoiceContract": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "contract_type": {
                "docs": "Type of Deel contract.",
                "type": "string",
              },
              "id": {
                "docs": "Unique identifier of a Deel contract.",
                "type": "string",
              },
              "name": {
                "docs": "Contract title.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InvoiceContractTypes": {
            "docs": "invoice's allowed contract types",
            "enum": [
              "pending",
              "paid",
              "processing",
              "canceled",
              "skipped",
              "failed",
              "refunded",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InvoiceDownloadContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "InvoiceDownloadObject",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InvoiceDownloadObject": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "expires_at": {
                "docs": "Expiration date time of download URL.",
                "type": "optional<datetime>",
              },
              "id": {
                "docs": "Requested invoice id to download.",
                "type": "optional<string>",
              },
              "url": {
                "docs": "URL to requested invoice to download.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InvoiceList": "list<Invoice>",
          "InvoiceListContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "InvoiceObject",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InvoiceObject": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "rows": "optional<InvoiceList>",
              "total": "optional<double>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InvoiceStatusEnum": {
            "docs": "Current status of the invoice.",
            "enum": [
              "pending",
              "paid",
              "processing",
              "canceled",
              "skipped",
              "failed",
              "refunded",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InvoiceStatusEnumList": {
            "docs": "filter invoices by current status, show a invoice if its status is in this list",
            "type": "list<InvoiceStatusEnum>",
          },
          "InvoiceTypeEnum": {
            "docs": "invoice's type",
            "enum": [
              "PAYMENT",
              "EOR_DEPOSIT",
              "EOR_FIRST_PAYMENT",
              "EOR_TERMINATION_OFFCYCLE",
              "SIGNING_BONUS",
              "REFUND_STATEMENT",
              "EOR_TAX_RULING",
              "GP_DEPOSIT_STATEMENT",
              "GP_FUNDING_STATEMENT",
              "GLOBAL_PAYROLL_FEES",
              "SHIELD_DEPOSIT",
              "EOR_MANAGEMENT_FEE",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "JobTitle": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "id": {
                "docs": "Unique identifier for the job title in Deel platform.",
                "type": "double",
              },
              "name": {
                "docs": "Job title.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "JobTitleList": "list<JobTitle>",
          "JobTitleListContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "JobTitleList",
              "page": "JobTitleListContainerPage",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "JobTitleListContainerPage": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "cursor": {
                "docs": "Use for pagination to get next set of records after the given cursor.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "LegalEntityArray": "list<LegalEntityType>",
          "LegalEntityList": "list<BasicLegalEntity>",
          "LegalEntityListContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "optional<LegalEntityList>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "LegalEntitySubType": "string",
          "LegalEntityType": {
            "enum": [
              "individual",
              "company",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MetaDataOfContractToCreate": {
            "docs": "Additional custom info about a contract",
            "inline": undefined,
            "properties": {
              "documents_required": {
                "docs": "Require the contractor to upload necessary compliance documents as per their country’s labor laws.",
                "type": "boolean",
              },
              "is_main_income": "optional<boolean>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Milestone": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "amount": {
                "docs": "Amount to be paid for the milestone.",
                "type": "string",
              },
              "approval_requested": {
                "docs": "Indicates if the contractor has requested the approval for the milestone.",
                "type": "boolean",
              },
              "created_at": "optional<DateTimeString>",
              "description": {
                "docs": "Description of milestone.",
                "type": "string",
              },
              "id": {
                "docs": "Unique identifier for the milestone.",
                "type": "double",
              },
              "reported_by": {
                "docs": "Milestone creator.",
                "type": "MilestoneReportedBy",
              },
              "reviewed_by": {
                "docs": "Reviewer's information.",
                "type": "optional<MilestoneReviewedBy>",
              },
              "status": {
                "docs": "Current status of milestone.",
                "type": "string",
              },
              "title": {
                "docs": "Title of milestone.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MilestoneContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "Milestone",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MilestoneList": "list<Milestone>",
          "MilestoneListContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "MilestoneList",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MilestoneProperties": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "amount": {
                "docs": "Amount to be paid for the milestone.",
                "type": "string",
              },
              "description": {
                "docs": "Description of milestone.",
                "type": "string",
              },
              "title": {
                "docs": "Title of milestone.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MilestoneReportedBy": {
            "docs": "Milestone creator.",
            "inline": true,
            "properties": {
              "full_name": {
                "docs": "Reporter's full name.",
                "type": "string",
              },
              "id": {
                "docs": "Reporter's unique Deel id.",
                "type": "double",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MilestoneReviewToCreate": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "reason": "optional<string>",
              "status": "MilestoneReviewToCreateStatus",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MilestoneReviewToCreateStatus": {
            "enum": [
              "approved",
              "declined",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MilestoneReviewedBy": {
            "docs": "Reviewer's information.",
            "inline": true,
            "properties": {
              "full_name": {
                "docs": "Reviewer's full name.",
                "type": "string",
              },
              "id": {
                "docs": "Reviewer's unique Deel id.",
                "type": "double",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MilestoneReviewsToCreate": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "ids": "list<double>",
              "reason": "optional<string>",
              "status": "MilestoneReviewsToCreateStatus",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MilestoneReviewsToCreateStatus": {
            "enum": [
              "approved",
              "declined",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MilestoneToCreate": "MilestoneProperties",
          "MilestoneToCreateFormWithFile": {
            "docs": undefined,
            "extends": [
              "MilestoneProperties",
              "FileObject",
            ],
            "inline": undefined,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MonthlyPayment": {
            "docs": "Monthly payment details for the user",
            "inline": undefined,
            "properties": {
              "count": {
                "docs": "The number of monthly payments",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "NoticePeriod": {
            "docs": "Days before to notice the termination of contract for eather party.",
            "type": "double",
            "validation": {
              "exclusiveMax": undefined,
              "exclusiveMin": undefined,
              "max": undefined,
              "min": 0,
              "multipleOf": undefined,
            },
          },
          "OauthScope": {
            "enum": [
              {
                "docs": "View payments and invoices in your organization.",
                "name": "AccountingRead",
                "value": "accounting:read",
              },
              {
                "docs": "Create and edit payments and invoices.",
                "name": "AccountingWrite",
                "value": "accounting:write",
              },
              {
                "docs": "View contracts in your organization.",
                "name": "ContractsRead",
                "value": "contracts:read",
              },
              {
                "docs": "Create and amend contracts.",
                "name": "ContractsWrite",
                "value": "contracts:write",
              },
              {
                "docs": "View invoices of your workforce.",
                "name": "InvoiceAdjustmentsRead",
                "value": "invoice-adjustments:read",
              },
              {
                "docs": "Create, edit, review, and delete invoice adjustments.",
                "name": "InvoiceAdjustmentsWrite",
                "value": "invoice-adjustments:write",
              },
              {
                "docs": "View milestones of your contractors.",
                "name": "MilestonesRead",
                "value": "milestones:read",
              },
              {
                "docs": "Create, edit, review, and delete milestones.",
                "name": "MilestonesWrite",
                "value": "milestones:write",
              },
              {
                "docs": "View basic information about your organizations, teams, legal entities and agreements.",
                "name": "OrganizationsRead",
                "value": "organizations:read",
              },
              {
                "docs": "View your off-cycle payments.",
                "name": "OffCyclePaymentsRead",
                "value": "off-cycle-payments:read",
              },
              {
                "docs": "Create, edit, review your off-cycle payments.",
                "name": "OffCyclePaymentsWrite",
                "value": "off-cycle-payments:write",
              },
              {
                "docs": "View work submitted for time-based contracts.",
                "name": "TimesheetsRead",
                "value": "timesheets:read",
              },
              {
                "docs": "Create, edit, review, and delete timesheets.",
                "name": "TimesheetsWrite",
                "value": "timesheets:write",
              },
              {
                "docs": "View your pay-as-you-go tasks.",
                "name": "TasksRead",
                "value": "tasks:read",
              },
              {
                "docs": "Create, edit, review and delete your pay-as-you-go tasks.",
                "name": "TasksWrite",
                "value": "tasks:write",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OffCyclePayment": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "amount": {
                "docs": "Amount of off-cycle payment.",
                "type": "string",
              },
              "created_at": "optional<DateTimeStringRequired>",
              "currency_code": "CurrencyCodeRequired",
              "date_submitted": "optional<DateTimeStringRequired>",
              "description": {
                "docs": "Description of the off-cycle payment entry.",
                "type": "string",
              },
              "id": "UniqueObjectIdentifier",
              "public_id": "optional<PublicId>",
              "reported_by": "OffCyclePaymentReportedBy",
              "reviewed_by": "optional<OffCyclePaymentReviewedBy>",
              "status": "optional<InvoiceAdjustmentStatusEnum>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OffCyclePaymentContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "OffCyclePayment",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OffCyclePaymentList": "list<OffCyclePayment>",
          "OffCyclePaymentListContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "OffCyclePaymentList",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OffCyclePaymentReportedBy": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "full_name": {
                "docs": "Full name of the creator.",
                "type": "string",
              },
              "id": {
                "docs": "Profile id of the creator.",
                "type": "double",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OffCyclePaymentReviewedBy": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "full_name": {
                "docs": "Full name of the reviewer.",
                "type": "string",
              },
              "id": {
                "docs": "Profile if of the reviewer.",
                "type": "double",
              },
              "remarks": {
                "docs": "Remarks made during review process.",
                "type": "string",
              },
              "reviewed_at": {
                "docs": "Date of review.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OffCyclePaymentToCreate": {
            "docs": "Details of invoice adjustment to create.",
            "inline": undefined,
            "properties": {
              "amount": {
                "docs": "Amount to be paid. Must be a positive number.",
                "type": "double",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "date_submitted": "DateStringRequired",
              "description": {
                "docs": "Description of off-cycle payment.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OffCyclePaymentTypeEnum": {
            "docs": "Type for Off-cycle payments",
            "type": "literal<"offcycle">",
          },
          "OrganizationList": "list<BasicOrganization>",
          "OrganizationListContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "OrganizationList",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OutputToCreateFileRef": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "key": "string",
              "url": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OutputToCreateFileRefContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "OutputToCreateFileRef",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PageInfo": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "cursor": "string",
              "total_rows": "double",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PageInfoWithoutCursor": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "total_rows": "double",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PageInfoWithoutCursorNew": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "items_per_page": {
                "type": "double",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 99,
                  "min": 1,
                  "multipleOf": undefined,
                },
              },
              "offset": {
                "type": "double",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 999999999,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "total_rows": "double",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Payment": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "created_at": {
                "docs": "Timestamp when the record was created.",
                "type": "optional<DateTimeString>",
              },
              "id": {
                "docs": "Unique identifier of the payment.",
                "type": "double",
              },
              "label": "string",
              "paid_at": {
                "docs": "Timestamp when payment was paid.",
                "type": "optional<DateTimeString>",
              },
              "payment_currency": "CurrencyCode",
              "payment_method": "PaymentMethod",
              "status": "PaymentStatusEnum",
              "total": {
                "docs": "Total paid.",
                "type": "double",
              },
              "workers": "PaymentWorkerList",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PaymentBreakDown": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "adjustment": "optional<string>",
              "approve_date": "optional<string>",
              "approvers": "optional<string>",
              "bonus": "optional<string>",
              "commissions": "optional<string>",
              "contract_country": {
                "docs": "Country of the contract.",
                "type": "optional<string>",
              },
              "contract_start_date": {
                "docs": "Contract start date.",
                "type": "optional<string>",
              },
              "contractor_email": {
                "docs": "Worker's email.",
                "type": "optional<string>",
              },
              "contractor_employee_name": {
                "docs": "Worker's name.",
                "type": "optional<string>",
              },
              "contractor_unique_identifier": {
                "docs": "Worker's unique identifier.",
                "type": "optional<string>",
              },
              "currency": {
                "docs": "Currency code.",
                "type": "optional<string>",
              },
              "date": "optional<string>",
              "deductions": "optional<string>",
              "expenses": "optional<string>",
              "frequency": "optional<string>",
              "general_ledger_account": "optional<string>",
              "invoice_number": {
                "docs": "Invoice number.",
                "type": "optional<string>",
              },
              "others": "optional<string>",
              "overtime": "optional<string>",
              "payment_currency": "optional<string>",
              "payment_date": {
                "docs": "Date of payment.",
                "type": "optional<string>",
              },
              "pro_rata": "optional<string>",
              "processing_fee": "optional<string>",
              "receipt_number": "optional<string>",
              "team": "optional<string>",
              "total": {
                "docs": "Total due.",
                "type": "optional<string>",
              },
              "total_payment_currency": {
                "docs": "Total in payment currency.",
                "type": "optional<string>",
              },
              "work": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PaymentBreakDownContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "list<PaymentBreakDown>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PaymentList": "list<Payment>",
          "PaymentListContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "PaymentObject",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PaymentMethod": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "type": "PaymentMethodEnum",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PaymentMethodEnum": {
            "docs": "All the supported payment types",
            "enum": [
              "stripe_bacs_debit",
              "pay_pal",
              "stripe_card",
              "bt_card",
              "stripe_ach",
              "coinbase",
              "go_cardless",
              "brex",
              "stripe_sepa_debit",
              "transferwise",
              "go_cardless_becs",
              "bank_transfer",
              "mercury_wire",
              "bt_pay_pal",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PaymentMethodEnumList": {
            "docs": "filter invoices by payment method",
            "type": "list<PaymentMethodEnum>",
          },
          "PaymentObject": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "rows": "optional<PaymentList>",
              "total": "optional<double>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PaymentStatementInitiatedWebhook": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "billing_invoices": "list<double>",
              "invoices": "list<double>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PaymentStatusEnum": {
            "docs": "status of payment",
            "enum": [
              "paid",
              "processing",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PaymentStatusEnumList": "list<PaymentStatusEnum>",
          "PaymentWorker": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "contract_id": {
                "docs": "The worker's Deel contract Id.",
                "type": "optional<string>",
              },
              "name": {
                "default": "",
                "docs": "Worker's full name.",
                "type": "string",
              },
              "picUrl": {
                "docs": "URL to worker's Deel avatar.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PaymentWorkerList": "list<PaymentWorker>",
          "People": {
            "docs": "People object representing a Deel",
            "inline": undefined,
            "properties": {
              "birth_date": {
                "docs": "Date of birth of the user in ISO format (yyyy-mm-dd)",
                "type": "optional<string>",
              },
              "client_legal_entity": {
                "docs": "Object representing the client legal entity that the user is associated with",
                "type": "optional<PeopleClientLegalEntity>",
              },
              "completion_date": {
                "docs": "Date when the user's current employment is expected to end in ISO format (yyyy-mm-ddThh:mm:ss.sssZ)",
                "type": "optional<string>",
              },
              "contract_types": {
                "docs": "List of contract types that the user has had in the past and/or currently has",
                "type": "optional<list<string>>",
              },
              "country": {
                "docs": "ISO 3166-1 alpha-2 code of the country where the user is located",
                "type": "optional<string>",
              },
              "country_name": {
                "docs": "Name of the country where the user is located",
                "type": "optional<string>",
              },
              "department": {
                "docs": "Name of the department that the user belongs to",
                "type": "optional<string>",
              },
              "direct_manager": {
                "docs": "Name of the user's direct manager",
                "type": "optional<string>",
              },
              "direct_reports": {
                "docs": "Names of the user's direct reports",
                "type": "optional<string>",
              },
              "direct_reports_count": {
                "docs": "Number of direct reports that the user has",
                "type": "optional<integer>",
              },
              "email": {
                "docs": "Email address of the user",
                "type": "optional<string>",
              },
              "employments": {
                "docs": "List of employment objects representing the user's employment history",
                "type": "optional<list<Employment>>",
              },
              "first_name": {
                "docs": "First name of the user",
                "type": "optional<string>",
              },
              "full_name": {
                "docs": "Full name of the user",
                "type": "optional<string>",
              },
              "has_deel_user": {
                "docs": "Indicates whether the user has a Deel account or not",
                "type": "optional<boolean>",
              },
              "hiring_status": {
                "docs": "Hiring status of the user",
                "type": "optional<string>",
              },
              "hiring_type": {
                "docs": "Type of employment contract that the user has",
                "type": "optional<string>",
              },
              "hourly_report_total": {
                "docs": "Total amount of hours worked by the user in ISO format (hh:mm:ss)",
                "type": "optional<string>",
              },
              "id": {
                "docs": "Unique identifier for the user",
                "type": "optional<string>",
              },
              "job_title": {
                "docs": "Title of the user's role",
                "type": "optional<string>",
              },
              "last_name": {
                "docs": "Last name of the user",
                "type": "optional<string>",
              },
              "monthly_payment": {
                "docs": "Object representing the user's monthly payment information",
                "type": "optional<MonthlyPayment>",
              },
              "payments": {
                "docs": "List of payment objects representing the user's payment history",
                "type": "optional<list<Payment>>",
              },
              "personal_email": {
                "docs": "Personal email address of the user",
                "type": "optional<string>",
              },
              "pic_url": {
                "docs": "URL of the user's profile picture",
                "type": "optional<string>",
              },
              "seniority": {
                "docs": "Seniority level of the user's role",
                "type": "optional<string>",
              },
              "start_date": {
                "docs": "Date when the user started their current employment in ISO format (yyyy-mm-dd)",
                "type": "optional<string>",
              },
              "state": {
                "docs": "State where the user is located",
                "type": "optional<string>",
              },
              "team": {
                "docs": "Name of the team that the user belongs to",
                "type": "optional<string>",
              },
              "team_id": {
                "docs": "Unique identifier for the team that the user belongs to",
                "type": "optional<integer>",
              },
              "timezone": {
                "docs": "Time zone of the user's location",
                "type": "optional<string>",
              },
              "work_email": {
                "docs": "Work email address of the user",
                "type": "optional<string>",
              },
              "work_location": {
                "docs": "Name of the user's work location",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PeopleClientLegalEntity": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "id": {
                "docs": "The unique identifier for the client legal entity.",
                "type": "optional<integer>",
              },
              "name": {
                "docs": "The name of the client legal entity.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PeopleContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "list<People>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PeopleMe": {
            "docs": "People object representing a Deel",
            "inline": undefined,
            "properties": {
              "avatar_url": {
                "docs": "URL of the user's avatar",
                "type": "optional<string>",
              },
              "client_country": "optional<CountryCodeNulleable>",
              "contractor_country": "optional<CountryCodeNulleable>",
              "email": {
                "docs": "Email address of the user",
                "type": "optional<string>",
              },
              "first_name": {
                "docs": "First name of the user",
                "type": "optional<string>",
              },
              "full_name": {
                "docs": "Full name of the user",
                "type": "optional<string>",
              },
              "id": {
                "docs": "Unique identifier for the user profile",
                "type": "optional<double>",
              },
              "last_name": {
                "docs": "Last name of the user",
                "type": "optional<string>",
              },
              "middle_name": {
                "docs": "Middle name of the user",
                "type": "optional<string>",
              },
              "organization_id": {
                "docs": "Unique identifier for the organization",
                "type": "optional<double>",
              },
              "organization_name": {
                "docs": "Name of the organization",
                "type": "optional<string>",
              },
              "profile_type": "optional<ProfileTypeEnum>",
              "slack_team_id": {
                "docs": "User's team slack id",
                "type": "optional<string>",
              },
              "slack_user_id": {
                "docs": "User's slack id",
                "type": "optional<string>",
              },
              "user_id": {
                "docs": "Unique identifier for the user",
                "type": "optional<double>",
              },
              "username": {
                "docs": "Username of the user",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PeopleMeContainer": "PeopleMe",
          "PeoplePayment": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "contract_name": {
                "docs": "The name of the contract associated with the payment",
                "type": "optional<string>",
              },
              "currency": {
                "docs": "The currency code (ISO 4217) for the payment",
                "type": "optional<string>",
              },
              "rate": {
                "docs": "The payment rate",
                "type": "optional<integer>",
              },
              "scale": {
                "docs": "The payment scale (e.g., hourly, weekly, monthly, etc.)",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PgoTask": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "amount": {
                "docs": "Fixed rate for this task.",
                "type": "string",
              },
              "attachment": "optional<FileAttachmentInfo>",
              "date_submitted": "DateStringRequired",
              "description": {
                "docs": "Task description.",
                "type": "string",
              },
              "id": {
                "docs": "Unique identifier of the task.",
                "type": "double",
              },
              "status": "optional<TimesheetStatusEnum>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PgoTaskReviewsByIdToCreate": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "reason": {
                "docs": "Review comments.",
                "type": "optional<string>",
              },
              "status": {
                "docs": "Review status.",
                "type": "PgoTaskReviewsByIdToCreateStatus",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PgoTaskReviewsByIdToCreateStatus": {
            "docs": "Review status.",
            "enum": [
              "approved",
              "declined",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PgoTaskReviewsToCreate": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "ids": "list<double>",
              "reason": {
                "docs": "Additional comments with the reivew.",
                "type": "optional<string>",
              },
              "status": {
                "docs": "Review status.",
                "type": "PgoTaskReviewsToCreateStatus",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PgoTaskReviewsToCreateStatus": {
            "docs": "Review status.",
            "enum": [
              "approved",
              "declined",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PgoTaskToCreate": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "amount": {
                "docs": "Fixed rate for this task.",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
              "attachment": "optional<FileAttachmentInfo>",
              "date_submitted": "DateStringRequired",
              "description": {
                "docs": "Task description.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PgoTaskToDelete": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "delete_recurring_report": {
                "docs": "Request to delete recurring report.",
                "type": "optional<boolean>",
              },
              "description": {
                "docs": "Description of exclusion.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PremiumResultAdded": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "calculated_premium": {
                "docs": "Cost for Deel Premium.",
                "type": "double",
              },
              "id": {
                "docs": "Deel Premium plan id.",
                "type": "string",
              },
              "misclassification_guarantee": "PremiumResultAddedMisclassificationGuarantee",
              "penalties": "PremiumResultAddedPenalties",
              "third_party_liabilities": "PremiumResultAddedThirdPartyLiabilities",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PremiumResultAddedContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "PremiumResultAdded",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PremiumResultAddedMisclassificationGuarantee": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "description": {
                "docs": "Cover your legal defense costs.",
                "type": "optional<string>",
              },
              "name": {
                "docs": "Legal costs.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PremiumResultAddedPenalties": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "description": {
                "docs": "Get indemnity against tax authority penalties, liabilities and fines.",
                "type": "optional<string>",
              },
              "name": {
                "docs": "Penalties.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PremiumResultAddedThirdPartyLiabilities": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "description": {
                "docs": "Get indemnity against third parties up to $10k depending on the court's decision.",
                "type": "optional<string>",
              },
              "name": {
                "docs": "Third-party liabilities.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PremiumToAdd": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "agreement_reflects_relation": {
                "docs": "Is the Contractor Agreement selected on the Deel Platform perfectly reflecting your organizations relation and actual working practices with the contractor?",
                "type": "boolean",
              },
              "contractor_characteristics": {
                "docs": "Workers doing certain jobs may be considered to be employees by law, even if they would otherwise be considered independent contractors under common law. Is the work of this worker characterized as: Apprentice, Trainee, Labourer, Driver, Medical worker, Legal worker, Construction worker or someone working in the fields of Finance/Investment?",
                "type": "boolean",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProRata": {
            "docs": "Details of the pro rata for the first payment",
            "inline": undefined,
            "properties": {
              "calculation_type": {
                "docs": "Either works days or calendar days",
                "type": "optional<ProRataCalculationType>",
              },
              "cycle_end": "optional<DateStringRequired>",
              "cycle_start": "optional<DateStringRequired>",
              "cycle_work_days": {
                "docs": "Total days to be work.",
                "type": "optional<double>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "daily_rate": {
                "docs": "Daily rate to be paid.",
                "type": "optional<double>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "rate": {
                "docs": "Rate to be paid.",
                "type": "optional<double>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "total": {
                "docs": "Total to be paid.",
                "type": "optional<double>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "work_week_end": "optional<WeekDaysEnum>",
              "work_week_start": "optional<WeekDaysEnum>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProRataCalculationType": {
            "docs": "Either works days or calendar days",
            "enum": [
              "CUSTOM_AMOUNT",
              "WORK_DAYS",
              "CALENDAR_DAYS",
              "FULL_AMOUNT",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProfileTypeEnum": {
            "enum": [
              "client",
              "contractor",
              "icp",
              "direct_employee",
              "hris_direct_employee",
              "service_account",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PublicId": {
            "docs": "The public UUID of the object",
            "type": "optional<string>",
          },
          "ResponseEstimateFirstPayment": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "first_payment_dates": "optional<list<FirstPaymentDate>>",
              "pro_rata": "optional<ProRata>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ResponseEstimateFirstPaymentContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "ResponseEstimateFirstPayment",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Seniority": {
            "docs": "Seniority describes level of expertise at a job e.g. junior",
            "inline": undefined,
            "properties": {
              "id": {
                "docs": "Unique identifier for seniority record",
                "type": "double",
              },
              "level": {
                "docs": "Level of seniority level e.g. 2",
                "type": "optional<double>",
              },
              "name": {
                "docs": "Name of seniority level e.g. Mid (Individual Contributor Level 2)",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SeniorityList": "list<SeniorityRequired>",
          "SeniorityListContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "SeniorityList",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SeniorityRequired": {
            "docs": "Seniority describes level of expertise at a job e.g. junior",
            "inline": undefined,
            "properties": {
              "id": {
                "docs": "Unique identifier for seniority record.",
                "type": "double",
              },
              "level": {
                "docs": "Level of seniority level e.g. 2",
                "type": "double",
              },
              "name": {
                "docs": "Name of seniority level e.g. Mid (Individual Contributor Level 2)",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SignaturesOfBasicContract": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "client_signed_at": "optional<DateTimeString>",
              "worker_signature": {
                "docs": "Worker's signature.",
                "type": "string",
              },
              "worker_signed_at": "optional<DateTimeString>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SignaturesOfContract": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "client_signature": {
                "docs": "normally name of client is used as signature",
                "type": "string",
              },
              "client_signed_at": "optional<DateTimeString>",
              "signed_at": "optional<DateTimeString>",
              "worker_signature": {
                "docs": "Signatures of client representative.",
                "type": "string",
              },
              "worker_signed_at": "optional<DateTimeString>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SortDirEnum": {
            "enum": [
              "asc",
              "desc",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "StateOfCountry": {
            "docs": "It may be called states, provinces, prefectures or regions, or none at all",
            "inline": undefined,
            "properties": {
              "code": {
                "docs": "Territory code.",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
              "name": {
                "docs": "Territory name.",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TaskList": "list<PgoTask>",
          "TaskListContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "TaskList",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Team": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "id": {
                "docs": "The unique identifier for the team.",
                "type": "optional<integer>",
              },
              "name": {
                "docs": "The name of the team.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TeamList": "list<BasicTeam>",
          "TeamListContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "TeamList",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TeamOfBasicContract": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "id": {
                "docs": "Unique reference of a team",
                "type": "optional<double>",
              },
              "name": {
                "docs": "Name of a team",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TeamOfContract": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "id": {
                "docs": "Unique reference of a team",
                "type": "double",
              },
              "name": {
                "docs": "Name of a team",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TimeoffReview": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "denial_reason": {
                "docs": "Denial reason for the time off requested.",
                "type": "optional<string>",
              },
              "is_approved": {
                "docs": "Approve or decline employee's time off request.",
                "type": "boolean",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TimeoffTypeList": "list<string>",
          "TimeoffTypeListContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "TimeoffTypeList",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TimeoffsAttachments": {
            "docs": "A list of attachments. 2022-09-08 FE only allows for "SICK LEAVE"",
            "type": "list<TimeoffsAttachmentsItem>",
          },
          "TimeoffsAttachmentsItem": {
            "docs": "A item in attachments array. 2022-09-08 FE only allows for "SICK LEAVE"",
            "inline": undefined,
            "properties": {
              "file_extension": {
                "docs": "The file name extension",
                "type": "optional<string>",
              },
              "id": "optional<integer>",
              "label": {
                "docs": "The file name",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TimeoffsProfile": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "id": "double",
              "is_employee": {
                "docs": "Only valid for requester. True if requester is an employee.",
                "type": "optional<boolean>",
              },
              "name": "string",
              "pic_url": {
                "docs": "Avatar or selfie.",
                "type": "optional<UrlType>",
              },
              "profile_type": "ProfileTypeEnum",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TimeoffsStatusEnum": {
            "enum": [
              "REQUESTED",
              "APPROVED",
              "REJECTED",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TimeoffsTypeEnum": {
            "enum": [
              "VACATION",
              "SICK_LEAVE",
              "OTHER",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Timesheet": {
            "docs": undefined,
            "extends": [
              "BasicTimesheet",
              "TimesheetApproversContainer",
            ],
            "inline": undefined,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TimesheetAccountingRefs": "optional<list<TimesheetAccountingRefsItem>>",
          "TimesheetAccountingRefsItem": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "integration": "string",
              "mapping_category": "optional<TimesheetAccountingRefsItemMappingCategory>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TimesheetAccountingRefsItemMappingCategory": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": "string",
              "name": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TimesheetApprover": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "approved": "boolean",
              "email": "string",
              "full_name": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TimesheetApproverList": "list<TimesheetApprover>",
          "TimesheetApproversContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "approvers": "TimesheetApproverList",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TimesheetContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "Timesheet",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TimesheetIdItems": "list<TimesheetIdItemsItem>",
          "TimesheetIdItemsItem": {
            "discriminated": false,
            "docs": "ID of an existing timesheet record",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "double",
              "string",
            ],
          },
          "TimesheetList": "list<BasicTimesheet>",
          "TimesheetListContainer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "TimesheetList",
              "page": "PageInfoWithoutCursor",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TimesheetReviewToCreate": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "reason": "optional<string>",
              "status": "TimesheetReviewToCreateStatus",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TimesheetReviewToCreateStatus": {
            "enum": [
              "approved",
              "declined",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TimesheetReviewsToCreate": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "ids": "TimesheetIdItems",
              "reason": "optional<string>",
              "status": "TimesheetReviewsToCreateStatus",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TimesheetReviewsToCreateStatus": {
            "enum": [
              "approved",
              "declined",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TimesheetSearchContainer": {
            "docs": "This is a model to make it easier to understand and restrict search parameters",
            "inline": undefined,
            "properties": {
              "contract_id": "optional<string>",
              "contract_types": "optional<TimesheetSearchContainerContractTypes>",
              "date_from": "optional<DateString>",
              "date_to": "optional<DateString>",
              "invoice_id": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 10,
                  "minLength": undefined,
                  "pattern": "^\d+$",
                },
              },
              "limit": {
                "default": "10",
                "docs": "Return a page of results with given number of records.",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 2,
                  "minLength": undefined,
                  "pattern": "^\d{1,2}$",
                },
              },
              "offset": {
                "default": "10",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 2,
                  "minLength": undefined,
                  "pattern": "^\d{1,2}$",
                },
              },
              "order_direction": "optional<SortDirEnum>",
              "reporter_id": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 10,
                  "minLength": undefined,
                  "pattern": "^\d+$",
                },
              },
              "statuses": "optional<TimesheetSearchContainerStatuses>",
              "types": "optional<TimesheetSearchContainerTypes>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TimesheetSearchContainerContractTypes": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "ContractTypeEnumList",
              "ContractTypeEnum",
            ],
          },
          "TimesheetSearchContainerStatuses": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "TimesheetStatusEnumList",
              "optional<TimesheetStatusEnum>",
            ],
          },
          "TimesheetSearchContainerTypes": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "TimesheetTypeEnumList",
              "TimesheetTypeEnum",
            ],
          },
          "TimesheetSharedProperties": {
            "docs": "Details of timesheet to create; a client, contractor or EOR may create a timesheet",
            "inline": undefined,
            "properties": {
              "contract_id": {
                "docs": "Id of a Deel contract.",
                "type": "string",
              },
              "date_submitted": "DateStringRequired",
              "description": {
                "default": "",
                "type": "string",
              },
              "quantity": {
                "docs": "this is based on the scale of work statement of contract agreed e.g. 2 weeks",
                "type": "double",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TimesheetStatusEnum": {
            "docs": "Status of this entry.",
            "type": "optional<string>",
          },
          "TimesheetStatusEnumList": "list<optional<TimesheetStatusEnum>>",
          "TimesheetToCreate": "TimesheetSharedProperties",
          "TimesheetToCreateContainerWithFile": "TimesheetToCreateWithFile",
          "TimesheetToCreateWithFile": {
            "docs": undefined,
            "extends": [
              "TimesheetSharedProperties",
              "FileObject",
            ],
            "inline": undefined,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TimesheetToUpdate": {
            "docs": "Details of timesheet to create; a client, contractor or EOR may update a timesheet",
            "inline": undefined,
            "properties": {
              "description": "string",
              "quantity": "double",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TimesheetTypeEnum": {
            "docs": "Type for timesheet",
            "type": "literal<"work">",
          },
          "TimesheetTypeEnumList": "list<TimesheetTypeEnum>",
          "UniqueObjectIdentifier": {
            "discriminated": false,
            "docs": "Unique identifier of this resource.",
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "double",
            ],
          },
          "UrlType": {
            "type": "optional<string>",
            "validation": {
              "format": "uri",
              "maxLength": undefined,
              "minLength": 5,
              "pattern": undefined,
            },
          },
          "UrlTypeRequired": {
            "type": "string",
            "validation": {
              "format": "uri",
              "maxLength": undefined,
              "minLength": 5,
              "pattern": undefined,
            },
          },
          "WebhookItem": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "api_version": {
                "default": "v1",
                "docs": "Deel API version. Currently Deel only has one version: v1.",
                "type": "string",
              },
              "created_at": {
                "docs": "Time at which the webhook was created.",
                "type": "string",
              },
              "description": {
                "docs": "Webhook subscription description.",
                "type": "optional<string>",
              },
              "events": {
                "docs": "The list of events to enable for this subscription.",
                "type": "list<string>",
              },
              "hidden": {
                "docs": "Property to hide the webhook from frontend view. Commonly by Dell 3rd party apps",
                "type": "optional<boolean>",
              },
              "id": {
                "docs": "Webhook subscription's unique identifier.",
                "type": "double",
              },
              "name": {
                "docs": "Webhook subscription name.",
                "type": "optional<string>",
              },
              "signing_key": {
                "docs": "The webhook's signing key, used to generate webhook signatures.",
                "type": "optional<string>",
              },
              "status": {
                "docs": "Status of webhook.",
                "type": "WebhookItemStatus",
              },
              "updated_at": {
                "docs": "Time at which the webhook was updated.",
                "type": "string",
              },
              "url": {
                "docs": "Endpoint to receive webhook.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WebhookItemResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "WebhookItem",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WebhookItemStatus": {
            "docs": "Status of webhook.",
            "enum": [
              "enabled",
              "disabled",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WebhookListResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "list<WebhookItem>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WeekDaysEnum": {
            "docs": "Days of the week.",
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WorkStatementCycleEndTypeEnum": {
            "docs": "Cycle end can be weekly 1-7 (Monday = 1) or monthly 1-31.",
            "enum": [
              "DAY_OF_WEEK",
              "DAY_OF_LAST_WEEK",
              "DAY_OF_MONTH",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WorkStatementCycleScaleEnum": {
            "docs": "Scale of the invoice cycle.",
            "enum": [
              "weekly",
              "monthly",
              "biweekly",
              "semimonthly",
              {
                "name": "CalendarMonth",
                "value": "calendar-month",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WorkStatementPaymentDueTypeEnum": {
            "default": "REGULAR",
            "docs": "Type of payment due. If the payment is due on the last day of month, enter 'WITHIN_MONTH'.",
            "enum": [
              "REGULAR",
              "WITHIN_MONTH",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WorkStatementScaleEnum": {
            "docs": "Defines the scale at which the amount is paid. For example, enter 'hourly' to define the amount per hour. This field can be excluded when creating a Pay-as-you-go task-based or Milestone contracts.",
            "enum": [
              "hourly",
              "daily",
              "weekly",
              "monthly",
              "biweekly",
              "semimonthly",
              "custom",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WorkStatementScaleEnumOptional": {
            "docs": "Defines the scale at which the amount is paid. For example, enter 'hourly' to define the amount per hour. This field can be excluded when creating a Pay-as-you-go task-based or Milestone contracts.",
            "enum": [
              "hourly",
              "daily",
              "weekly",
              "monthly",
              "biweekly",
              "semimonthly",
              "custom",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WorkerEmailType": {
            "docs": "Worker's email address.",
            "type": "optional<string>",
            "validation": {
              "format": "email",
              "maxLength": undefined,
              "minLength": 5,
              "pattern": undefined,
            },
          },
          "WorkerLegalEntity": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "personal_name": "string",
              "registration_number": "string",
              "type": "LegalEntityType",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WorkerOfBasicContract": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "alternate_email": "optional<AlternateEmailList>",
              "email": "optional<EmailType>",
              "full_name": {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
              "id": "long",
              "image": "optional<UrlType>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WorkerOfContract": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "alternate_email": "optional<AlternateEmailList>",
              "date_of_birth": "optional<DateTimeString>",
              "email": "optional<EmailType>",
              "expected_email": "optional<WorkerEmailType>",
              "first_name": {
                "docs": "Worker's first name",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "full_name": {
                "docs": "Worker's full name.",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
              "id": "optional<long>",
              "image": "optional<string>",
              "last_name": {
                "docs": "Worker's last name",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 255,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "legal_entity": "optional<WorkerLegalEntity>",
              "nationality": {
                "docs": "Worker's nationality.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  OauthScope:
    enum:
      - value: accounting:read
        name: AccountingRead
        docs: View payments and invoices in your organization.
      - value: accounting:write
        name: AccountingWrite
        docs: Create and edit payments and invoices.
      - value: contracts:read
        name: ContractsRead
        docs: View contracts in your organization.
      - value: contracts:write
        name: ContractsWrite
        docs: Create and amend contracts.
      - value: invoice-adjustments:read
        name: InvoiceAdjustmentsRead
        docs: View invoices of your workforce.
      - value: invoice-adjustments:write
        name: InvoiceAdjustmentsWrite
        docs: Create, edit, review, and delete invoice adjustments.
      - value: milestones:read
        name: MilestonesRead
        docs: View milestones of your contractors.
      - value: milestones:write
        name: MilestonesWrite
        docs: Create, edit, review, and delete milestones.
      - value: organizations:read
        name: OrganizationsRead
        docs: >-
          View basic information about your organizations, teams, legal entities
          and agreements.
      - value: off-cycle-payments:read
        name: OffCyclePaymentsRead
        docs: View your off-cycle payments.
      - value: off-cycle-payments:write
        name: OffCyclePaymentsWrite
        docs: Create, edit, review your off-cycle payments.
      - value: timesheets:read
        name: TimesheetsRead
        docs: View work submitted for time-based contracts.
      - value: timesheets:write
        name: TimesheetsWrite
        docs: Create, edit, review, and delete timesheets.
      - value: tasks:read
        name: TasksRead
        docs: View your pay-as-you-go tasks.
      - value: tasks:write
        name: TasksWrite
        docs: Create, edit, review and delete your pay-as-you-go tasks.
    source:
      openapi: ../openapi.yml
  PaymentStatementInitiatedWebhook:
    properties:
      billing_invoices: list<double>
      invoices: list<double>
    source:
      openapi: ../openapi.yml
  AlternateEmailList:
    docs: List of alternate email addresses.
    type: list<AlternateEmailItem>
  AlternateEmailItem:
    properties:
      email: optional<EmailType>
      isVerified: boolean
    source:
      openapi: ../openapi.yml
  ApiErrorContainer:
    properties:
      request: optional<ApiErrorRequest>
      errors: optional<list<ApiError>>
    source:
      openapi: ../openapi.yml
  ApiErrorRequest:
    properties:
      method:
        type: optional<string>
        docs: The HTTP method of the failed request
      url:
        type: optional<string>
        docs: The relative URL of the failed request
      status:
        type: optional<double>
        docs: The status code of the response
      api_req_id:
        type: optional<string>
        docs: The request ID of the failed request
      docs:
        type: optional<string>
        docs: >-
          A link to the official documentation for the requested endpoint
          resource
      source:
        type: optional<string>
        docs: The source handler which produced the returned error
      code:
        type: optional<double>
        docs: The code of the source handler which produced the returned error
    source:
      openapi: ../openapi.yml
  ApiError:
    properties:
      message:
        type: optional<string>
        docs: A description of the returned error
      path:
        type: optional<string>
        docs: The JSON path where input validation failed
    source:
      openapi: ../openapi.yml
  ContractSearchForm:
    discriminated: false
    docs: >-
      Search form should include parameters varied based on usage of cursor for
      pagination. NOTE: that all query parameters are based on strings
    union:
      - ContractSearchFormWithCursor
      - ContractSearchFormWithoutCursor
    source:
      openapi: ../openapi.yml
  ContractSearchFormWithCursor:
    docs: >-
      This is a model to make it easier to understand and restrict search
      parameters
    properties:
      after_cursor:
        type: optional<string>
        docs: Return next page of results after given cursor.
      limit:
        type: optional<string>
        docs: Return a page of results with given number of records.
        default: '10'
        validation:
          pattern: ^\d{1,2}$
    source:
      openapi: ../openapi.yml
  ContractSearchFormWithoutCursorTypes:
    discriminated: false
    union:
      - ContractTypeEnum
      - ContractTypeEnumList
    source:
      openapi: ../openapi.yml
    inline: true
  ContractSearchFormWithoutCursorStatuses:
    discriminated: false
    union:
      - ContractStatusEnumList
      - ContractStatusEnum
    source:
      openapi: ../openapi.yml
    inline: true
  ContractSearchFormWithoutCursorCountries:
    discriminated: false
    union:
      - CountryCodeList
      - CountryCode
    source:
      openapi: ../openapi.yml
    inline: true
  ContractSearchFormWithoutCursorCurrencies:
    discriminated: false
    union:
      - CurrencyCodeList
      - CurrencyCodeRequired
    source:
      openapi: ../openapi.yml
    inline: true
  ContractSearchFormWithoutCursor:
    docs: >-
      This is a model to make it easier to understand and restrict search
      parameters
    properties:
      limit:
        type: optional<string>
        docs: Return a page of results with given number of records.
        default: '10'
        validation:
          pattern: ^\d{1,2}$
      order_direction: optional<SortDirEnum>
      types: optional<ContractSearchFormWithoutCursorTypes>
      statuses: optional<ContractSearchFormWithoutCursorStatuses>
      team_id:
        type: optional<string>
        docs: >-
          Filter contracts for given team ID; NOTE: technically ALL query
          parameters are strings or array of strings
        validation:
          pattern: ^\d{1,9}$
      external_id:
        type: optional<string>
        docs: Filter contracts for given external ID
        validation:
          maxLength: 255
      countries: optional<ContractSearchFormWithoutCursorCountries>
      currencies: optional<ContractSearchFormWithoutCursorCurrencies>
      search:
        type: optional<string>
        docs: >-
          Include a contract if by name or contractor name contains given search
          term.
      sort_by: optional<ContractsSortByEnum>
    source:
      openapi: ../openapi.yml
  ContractListContainer:
    properties:
      data: ContractList
      page: PageInfo
    source:
      openapi: ../openapi.yml
  ContractList: list<BasicContract>
  BasicContract:
    properties:
      id:
        type: string
        validation:
          minLength: 1
      title:
        type: string
        validation:
          minLength: 1
      type: ContractTypeEnum
      status: ContractStatusEnum
      client: ClientOfBasicContract
      worker: optional<WorkerOfBasicContract>
      invitations: InvitationsOfBasicContract
      signatures: SignaturesOfBasicContract
      is_shielded: boolean
      is_archived: boolean
      created_at: optional<DateTimeString>
      termination_date: optional<DateTimeString>
      notice_period: optional<NoticePeriod>
      who_reports: optional<ContractWhoReportsEnum>
      external_id:
        type: optional<string>
        docs: A unique identifier for the object provided by an external system.
    source:
      openapi: ../openapi.yml
  ContractContainer:
    properties:
      data: Contract
    source:
      openapi: ../openapi.yml
  ContractContainerPayAsYouGoTimeBased:
    properties:
      data: Contract
    source:
      openapi: ../openapi.yml
  ContractContainerPaygTasks:
    properties:
      data: Contract
    source:
      openapi: ../openapi.yml
  ContractContainerPaygMilestones:
    properties:
      data: Contract
    source:
      openapi: ../openapi.yml
  ContractContainerOngoingTimeBased:
    properties:
      data: Contract
    source:
      openapi: ../openapi.yml
  ResponseEstimateFirstPaymentContainer:
    properties:
      data: ResponseEstimateFirstPayment
    source:
      openapi: ../openapi.yml
  ResponseEstimateFirstPayment:
    properties:
      pro_rata: optional<ProRata>
      first_payment_dates: optional<list<FirstPaymentDate>>
    source:
      openapi: ../openapi.yml
  Contract:
    properties:
      id:
        type: string
        validation:
          minLength: 1
      title:
        type: string
        validation:
          minLength: 1
      type: ContractTypeEnum
      status: ContractStatusEnum
      created_at: optional<DateTimeString>
      job_title: string
      seniority: optional<Seniority>
      who_reports: optional<ContractWhoReportsEnum>
      scope_of_work: optional<string>
      start_date: optional<DateTimeString>
      termination_date: optional<DateTimeString>
      special_clause: string
      is_archived: boolean
      client: optional<ClientOfContract>
      worker: optional<WorkerOfContract>
      invitations: InvitationsOfBasicContract
      signatures: SignaturesOfContract
      compensation_details: CompensationDetailsOfContract
      employment_details: EmploymentDetailsOfContract
      notice_period: optional<NoticePeriod>
      custom_fields: optional<list<ContractCustomField>>
      external_id:
        type: optional<string>
        docs: A unique identifier for the object provided by an external system.
    source:
      openapi: ../openapi.yml
  ClientOfBasicContract:
    properties:
      team: optional<TeamOfBasicContract>
    source:
      openapi: ../openapi.yml
  ClientOfContract:
    properties:
      id: long
      full_name: string
      email: optional<EmailType>
      team: TeamOfContract
      legal_entity: optional<ClientLegalEntity>
    source:
      openapi: ../openapi.yml
  ClientLegalEntity:
    properties:
      id: long
      name: string
      email: optional<EmailType>
      type: LegalEntityType
      subtype: LegalEntitySubType
      registration_number: string
      vat_number: string
    source:
      openapi: ../openapi.yml
  DateStringDefaultNow:
    type: string
    docs: >-
      Short date in format ISO-8601 (YYYY-MM-DD). For example: 2022-12-31.
      Defaults to current date
    validation:
      format: date
      pattern: ^\d{4}-\d{2}-\d{2}$
  DateStringRequired:
    type: string
    docs: 'Short date in format ISO-8601 (YYYY-MM-DD). For example: 2022-12-31.'
    validation:
      format: date
      pattern: ^\d{4}-\d{2}-\d{2}$
  DateString:
    type: optional<string>
    docs: 'Short date in format ISO-8601 (YYYY-MM-DD). For example: 2022-12-31.'
    validation:
      format: date
      pattern: ^\d{4}-\d{2}-\d{2}$
  DateTimeStringRequired:
    type: optional<datetime>
    docs: Long date-time format following ISO-8601
  DateTimeString:
    type: optional<datetime>
    docs: Long date-time format following ISO-8601
  WorkerOfBasicContract:
    properties:
      id: long
      full_name:
        type: string
        validation:
          minLength: 1
      email: optional<EmailType>
      alternate_email: optional<AlternateEmailList>
      image: optional<UrlType>
    source:
      openapi: ../openapi.yml
  WorkerOfContract:
    properties:
      id: optional<long>
      full_name:
        type: optional<string>
        docs: Worker's full name.
        validation:
          minLength: 1
      email: optional<EmailType>
      alternate_email: optional<AlternateEmailList>
      nationality:
        type: optional<string>
        docs: Worker's nationality.
      image: optional<string>
      legal_entity: optional<WorkerLegalEntity>
      date_of_birth: optional<DateTimeString>
      expected_email: optional<WorkerEmailType>
      first_name:
        type: optional<string>
        docs: Worker's first name
        validation:
          maxLength: 255
      last_name:
        type: optional<string>
        docs: Worker's last name
        validation:
          maxLength: 255
    source:
      openapi: ../openapi.yml
  WorkerLegalEntity:
    properties:
      type: LegalEntityType
      personal_name: string
      registration_number: string
    source:
      openapi: ../openapi.yml
  TeamOfBasicContract:
    properties:
      id:
        type: optional<double>
        docs: Unique reference of a team
      name:
        type: optional<string>
        docs: Name of a team
    source:
      openapi: ../openapi.yml
  TeamOfContract:
    properties:
      id:
        type: double
        docs: Unique reference of a team
      name:
        type: string
        docs: Name of a team
    source:
      openapi: ../openapi.yml
  InvitationsOfBasicContract:
    properties:
      client_email: optional<EmailType>
      worker_email: optional<EmailType>
    source:
      openapi: ../openapi.yml
  SignaturesOfBasicContract:
    properties:
      client_signed_at: optional<DateTimeString>
      worker_signature:
        type: string
        docs: Worker's signature.
      worker_signed_at: optional<DateTimeString>
    source:
      openapi: ../openapi.yml
  SignaturesOfContract:
    properties:
      client_signature:
        type: string
        docs: normally name of client is used as signature
      client_signed_at: optional<DateTimeString>
      worker_signature:
        type: string
        docs: Signatures of client representative.
      worker_signed_at: optional<DateTimeString>
      signed_at: optional<DateTimeString>
    source:
      openapi: ../openapi.yml
  CompensationDetailsOfContract:
    properties:
      currency_code: CurrencyCodeRequired
      amount: string
      scale: string
      frequency: string
      first_payment: string
      first_payment_date: optional<DateTimeString>
      gross_annual_salary: string
      gross_signing_bonus: string
      gross_variable_bonus: string
    source:
      openapi: ../openapi.yml
  EmploymentDetailsOfContract:
    properties:
      type: string
      days_per_week: double
      hours_per_day: double
      probation_period: optional<double>
      paid_vacation_days: double
      country: optional<CountryCode>
      state:
        type: optional<string>
        docs: State code.
    source:
      openapi: ../openapi.yml
  ContractDetailsToAmend:
    docs: You can specify any combination of data points that need changing.
    properties:
      amount:
        type: optional<double>
        validation:
          min: 1
      currency_code: optional<CurrencyCodeRequired>
      scale: optional<WorkStatementScaleEnum>
      effective_date: optional<DateStringRequired>
      first_payment_date: optional<DateStringRequired>
      first_payment:
        type: optional<double>
        validation:
          min: 0
      frequency: optional<WorkStatementCycleScaleEnum>
      cycle_end:
        type: optional<double>
        validation:
          min: 1
          max: 31
      cycle_end_type: optional<WorkStatementCycleEndTypeEnum>
      payment_due_type: optional<WorkStatementPaymentDueTypeEnum>
      payment_due_days:
        type: optional<double>
        validation:
          min: 0
          max: 90
      pay_before_weekends:
        type: optional<boolean>
        docs: If the payment due is on a weekend, pay on Friday.
      job_title_name:
        type: optional<string>
        docs: You can enter new job title.
      job_title_id:
        type: optional<double>
        docs: If you want to use a predefined job title, please use a job title ID
      seniority_id:
        type: optional<double>
        docs: You can use a predefined seniority level ID.
      special_clause:
        type: optional<string>
        docs: Text to describe any special clause in contract.
      scope_of_work:
        type: optional<string>
        docs: Text to describe the scope of work of the contract.
    source:
      openapi: ../openapi.yml
  ContractToCreate:
    discriminated: false
    union:
      - ContractToCreatePayAsYouGoTimeBased
      - ContractToCreatePaygTasks
      - ContractToCreatePaygMilestones
      - ContractToCreateOngoingTimeBased
    source:
      openapi: ../openapi.yml
  ContractToCreatePayAsYouGoTimeBasedCompensationDetails:
    properties:
      amount:
        type: optional<double>
        docs: >-
          Amount to be paid. This field can be excluded when creating a
          Pay-as-you-go task-based or Milestone contracts.
      currency_code: CurrencyCodeRequired
      frequency: WorkStatementCycleScaleEnum
      cycle_end:
        type: double
        docs: Date invoice cycle ends.
        validation:
          min: 1
          max: 31
      cycle_end_type: WorkStatementCycleEndTypeEnum
      payment_due_type: WorkStatementPaymentDueTypeEnum
      payment_due_days:
        type: double
        validation:
          min: 0
          max: 90
      pay_before_weekends:
        type: optional<boolean>
        docs: If the payment due is on a weekend, pay on Friday.
      first_payment_date: optional<DateString>
      first_payment:
        type: optional<double>
        docs: First payment amount.
        default: 0
        validation:
          min: 0
      notice_period: optional<NoticePeriod>
      scale: WorkStatementScaleEnum
    source:
      openapi: ../openapi.yml
    inline: true
  ContractToCreatePayAsYouGoTimeBased:
    properties:
      type: literal<"pay_as_you_go_time_based">
      compensation_details: ContractToCreatePayAsYouGoTimeBasedCompensationDetails
    extends:
      - ContractToCreateShared
    source:
      openapi: ../openapi.yml
  ContractToCreatePaygTasks:
    properties:
      type: literal<"payg_tasks">
      compensation_details: CompensationDetailsOfContractToCreateShared
    extends:
      - ContractToCreateShared
    source:
      openapi: ../openapi.yml
  ContractToCreatePaygMilestones:
    properties:
      type: literal<"payg_milestones">
      compensation_details: CompensationDetailsOfContractToCreateShared
    extends:
      - ContractToCreateShared
    source:
      openapi: ../openapi.yml
  ContractToCreateOngoingTimeBasedCompensationDetails:
    properties:
      amount:
        type: optional<double>
        docs: >-
          Amount to be paid. This field can be excluded when creating a
          Pay-as-you-go task-based or Milestone contracts.
      currency_code: CurrencyCodeRequired
      frequency: WorkStatementCycleScaleEnum
      cycle_end:
        type: double
        docs: Date invoice cycle ends.
        validation:
          min: 1
          max: 31
      cycle_end_type: WorkStatementCycleEndTypeEnum
      payment_due_type: WorkStatementPaymentDueTypeEnum
      payment_due_days:
        type: double
        validation:
          min: 0
          max: 90
      pay_before_weekends:
        type: optional<boolean>
        docs: If the payment due is on a weekend, pay on Friday.
      first_payment_date: optional<DateString>
      first_payment:
        type: optional<double>
        docs: First payment amount.
        default: 0
        validation:
          min: 0
      notice_period: optional<NoticePeriod>
      scale: WorkStatementScaleEnum
    source:
      openapi: ../openapi.yml
    inline: true
  ContractToCreateOngoingTimeBased:
    properties:
      type: literal<"ongoing_time_based">
      compensation_details: ContractToCreateOngoingTimeBasedCompensationDetails
    extends:
      - ContractToCreateShared
    source:
      openapi: ../openapi.yml
  ContractToCreateSharedClientLegalEntity:
    docs: >-
      Choose the Deel legal entity for this contract. Use legal entity endpoint
      to retrieve a list of legal entities in your organization.
    properties:
      id: double
    source:
      openapi: ../openapi.yml
    inline: true
  ContractToCreateSharedClientTeam:
    docs: >-
      Choose the Deel team for this contract. Use teams endpoint to retrieve a
      list of teams in your organization.
    properties:
      id: double
    source:
      openapi: ../openapi.yml
    inline: true
  ContractToCreateSharedClient:
    properties:
      legal_entity:
        type: ContractToCreateSharedClientLegalEntity
        docs: >-
          Choose the Deel legal entity for this contract. Use legal entity
          endpoint to retrieve a list of legal entities in your organization.
      team:
        type: ContractToCreateSharedClientTeam
        docs: >-
          Choose the Deel team for this contract. Use teams endpoint to retrieve
          a list of teams in your organization.
    source:
      openapi: ../openapi.yml
    inline: true
  ContractToCreateSharedJobTitle:
    docs: >-
      Worker's job title. You can enter a custom job title or use a pre-defiled
      job title using the Id retrieved in job-titles endpoint.
    properties:
      id:
        type: optional<double>
        docs: Id of an predefined job title.
      name:
        type: optional<string>
        docs: Job title. Please leave it blank when entering an Id.
        validation:
          maxLength: 255
    source:
      openapi: ../openapi.yml
    inline: true
  ContractToCreateSharedSeniority:
    docs: >-
      Job seniority level. Please use the seniority levels endpoint to retrieve
      the list of seniority levels.
    properties:
      id: optional<double>
    source:
      openapi: ../openapi.yml
    inline: true
  ContractToCreateSharedWorker:
    docs: Worker properties
    properties:
      expected_email: optional<WorkerEmailType>
      first_name:
        type: optional<string>
        docs: Worker's first name
        validation:
          maxLength: 255
      last_name:
        type: optional<string>
        docs: Worker's last name
        validation:
          maxLength: 255
    source:
      openapi: ../openapi.yml
    inline: true
  ContractToCreateShared:
    docs: Details of contract to create
    properties:
      title:
        type: string
        docs: The title of the contract.
      country_code: optional<CountryCode>
      state_code:
        type: optional<string>
        docs: >-
          The state or province code. Use country lookup endpoint to retrieve
          state codes.
      scope_of_work:
        type: optional<string>
        docs: Describe the work to be performed.
      special_clause:
        type: optional<string>
        docs: Enter any special clause you may have.
      start_date: optional<DateStringRequired>
      termination_date: optional<DateString>
      client: ContractToCreateSharedClient
      job_title:
        type: ContractToCreateSharedJobTitle
        docs: >-
          Worker's job title. You can enter a custom job title or use a
          pre-defiled job title using the Id retrieved in job-titles endpoint.
      seniority:
        type: optional<ContractToCreateSharedSeniority>
        docs: >-
          Job seniority level. Please use the seniority levels endpoint to
          retrieve the list of seniority levels.
      notice_period: optional<NoticePeriod>
      who_reports: optional<ContractWhoReportsEnum>
      meta: MetaDataOfContractToCreate
      external_id:
        type: optional<string>
        docs: External Id.
      worker:
        type: optional<ContractToCreateSharedWorker>
        docs: Worker properties
    source:
      openapi: ../openapi.yml
  MetaDataOfContractToCreate:
    docs: Additional custom info about a contract
    properties:
      documents_required:
        type: boolean
        docs: >-
          Require the contractor to upload necessary compliance documents as per
          their country’s labor laws.
      is_main_income: optional<boolean>
    source:
      openapi: ../openapi.yml
  CompensationDetailsOfContractToCreatePayAsYouGoTimeBased:
    properties:
      amount: double
      scale: WorkStatementScaleEnum
    source:
      openapi: ../openapi.yml
  CompensationDetailsOfContractToCreateOngoingTimeBased:
    properties:
      amount: double
      scale: WorkStatementScaleEnum
    source:
      openapi: ../openapi.yml
  CompensationDetailsOfContractToCreateShared:
    properties:
      amount:
        type: optional<double>
        docs: >-
          Amount to be paid. This field can be excluded when creating a
          Pay-as-you-go task-based or Milestone contracts.
      currency_code: CurrencyCodeRequired
      frequency: WorkStatementCycleScaleEnum
      cycle_end:
        type: double
        docs: Date invoice cycle ends.
        validation:
          min: 1
          max: 31
      cycle_end_type: WorkStatementCycleEndTypeEnum
      payment_due_type: WorkStatementPaymentDueTypeEnum
      payment_due_days:
        type: double
        validation:
          min: 0
          max: 90
      pay_before_weekends:
        type: optional<boolean>
        docs: If the payment due is on a weekend, pay on Friday.
      first_payment_date: optional<DateString>
      first_payment:
        type: optional<double>
        docs: First payment amount.
        default: 0
        validation:
          min: 0
      notice_period: optional<NoticePeriod>
    source:
      openapi: ../openapi.yml
  ContractSignatureToCreate:
    properties:
      client_signature:
        type: string
        docs: Signature of client.
        validation:
          minLength: 2
      contract_template_id:
        type: optional<double>
        docs: >-
          Please use null to use default Deel contract template; otherwise you
          can use the template you created and customized. If template ID is not
          in payload, template stays unchanged.
    source:
      openapi: ../openapi.yml
  ContractInvitationToCreate:
    properties:
      email: EmailTypeRequired
      message:
        type: string
        docs: Message for the worker.
        validation:
          minLength: 1
    source:
      openapi: ../openapi.yml
  WorkStatementScaleEnumOptional:
    enum:
      - hourly
      - daily
      - weekly
      - monthly
      - biweekly
      - semimonthly
      - custom
    docs: >-
      Defines the scale at which the amount is paid. For example, enter 'hourly'
      to define the amount per hour. This field can be excluded when creating a
      Pay-as-you-go task-based or Milestone contracts.
    source:
      openapi: ../openapi.yml
  WorkStatementScaleEnum:
    enum:
      - hourly
      - daily
      - weekly
      - monthly
      - biweekly
      - semimonthly
      - custom
    docs: >-
      Defines the scale at which the amount is paid. For example, enter 'hourly'
      to define the amount per hour. This field can be excluded when creating a
      Pay-as-you-go task-based or Milestone contracts.
    source:
      openapi: ../openapi.yml
  WorkStatementCycleScaleEnum:
    enum:
      - weekly
      - monthly
      - biweekly
      - semimonthly
      - value: calendar-month
        name: CalendarMonth
    docs: Scale of the invoice cycle.
    source:
      openapi: ../openapi.yml
  WorkStatementCycleEndTypeEnum:
    enum:
      - DAY_OF_WEEK
      - DAY_OF_LAST_WEEK
      - DAY_OF_MONTH
    docs: Cycle end can be weekly 1-7 (Monday = 1) or monthly 1-31.
    source:
      openapi: ../openapi.yml
  WeekDaysEnum:
    enum:
      - Sunday
      - Monday
      - Tuesday
      - Wednesday
      - Thursday
      - Friday
      - Saturday
    docs: Days of the week.
    source:
      openapi: ../openapi.yml
  WorkStatementPaymentDueTypeEnum:
    enum:
      - REGULAR
      - WITHIN_MONTH
    docs: >-
      Type of payment due. If the payment is due on the last day of month, enter
      'WITHIN_MONTH'.
    default: REGULAR
    source:
      openapi: ../openapi.yml
  LegalEntityListContainer:
    properties:
      data: optional<LegalEntityList>
    source:
      openapi: ../openapi.yml
  LegalEntityList: list<BasicLegalEntity>
  BasicLegalEntity:
    properties:
      id: double
      name: string
      entity_type: LegalEntityType
      entity_subtype: LegalEntitySubType
    source:
      openapi: ../openapi.yml
  OrganizationListContainer:
    properties:
      data: OrganizationList
    source:
      openapi: ../openapi.yml
  OrganizationList: list<BasicOrganization>
  BasicOrganization:
    properties:
      id: double
      name:
        type: string
        validation:
          minLength: 1
    source:
      openapi: ../openapi.yml
  TeamListContainer:
    properties:
      data: TeamList
    source:
      openapi: ../openapi.yml
  TeamList: list<BasicTeam>
  BasicTeam:
    properties:
      id: double
      name:
        type: string
        validation:
          minLength: 1
    source:
      openapi: ../openapi.yml
  TimesheetListContainer:
    properties:
      data: TimesheetList
      page: PageInfoWithoutCursor
    source:
      openapi: ../openapi.yml
  TimesheetList: list<BasicTimesheet>
  BasicTimesheetWorksheet:
    properties:
      weeks:
        type: double
        validation:
          min: 0
      days:
        type: double
        validation:
          min: 0
      hours:
        type: double
        validation:
          min: 0
      minutes:
        type: double
        validation:
          min: 0
    source:
      openapi: ../openapi.yml
    inline: true
  BasicTimesheetReviewedBy:
    properties:
      id: double
      full_name: string
      reviewed_at: string
      remarks: string
    source:
      openapi: ../openapi.yml
    inline: true
  BasicTimesheetContract:
    properties:
      id: string
      title: string
      type: ContractTypeEnum
    source:
      openapi: ../openapi.yml
    inline: true
  BasicTimesheetPaymentCycle:
    properties:
      start_date: optional<DateTimeString>
      end_date: optional<DateTimeString>
    source:
      openapi: ../openapi.yml
    inline: true
  BasicTimesheetReportedBy:
    properties:
      id: double
      full_name: string
    source:
      openapi: ../openapi.yml
    inline: true
  BasicTimesheet:
    properties:
      id: UniqueObjectIdentifier
      public_id: optional<PublicId>
      type:
        type: string
        docs: Deprecated - it is always "work"
      status: optional<TimesheetStatusEnum>
      description: string
      date_submitted: optional<DateTimeStringRequired>
      currency_code: CurrencyCodeRequired
      total_amount:
        type: string
        docs: >-
          is equal to quantity times rate of active work statement + bonus in
          this record
      quantity: optional<double>
      created_at: string
      scale: optional<string>
      custom_scale: optional<string>
      attachment: optional<FileAttachmentInfo>
      worksheet: optional<BasicTimesheetWorksheet>
      reviewed_by: optional<BasicTimesheetReviewedBy>
      contract: BasicTimesheetContract
      payment_cycle: optional<BasicTimesheetPaymentCycle>
      reported_by: BasicTimesheetReportedBy
    source:
      openapi: ../openapi.yml
  TimesheetContainer:
    properties:
      data: Timesheet
    source:
      openapi: ../openapi.yml
  Timesheet:
    properties: {}
    extends:
      - BasicTimesheet
      - TimesheetApproversContainer
    source:
      openapi: ../openapi.yml
  TimesheetApproversContainer:
    properties:
      approvers: TimesheetApproverList
    source:
      openapi: ../openapi.yml
  TimesheetApproverList: list<TimesheetApprover>
  TimesheetApprover:
    properties:
      full_name: string
      email: string
      approved: boolean
    source:
      openapi: ../openapi.yml
  TimesheetToCreateContainerWithFile: TimesheetToCreateWithFile
  TimesheetSharedProperties:
    docs: >-
      Details of timesheet to create; a client, contractor or EOR may create a
      timesheet
    properties:
      contract_id:
        type: string
        docs: Id of a Deel contract.
      description:
        type: string
        default: ''
      date_submitted: DateStringRequired
      quantity:
        type: double
        docs: >-
          this is based on the scale of work statement of contract agreed e.g. 2
          weeks
    source:
      openapi: ../openapi.yml
  TimesheetToCreate: TimesheetSharedProperties
  TimesheetToCreateWithFile:
    properties: {}
    extends:
      - TimesheetSharedProperties
      - FileObject
    source:
      openapi: ../openapi.yml
  TimesheetToUpdate:
    docs: >-
      Details of timesheet to create; a client, contractor or EOR may update a
      timesheet
    properties:
      description: string
      quantity: double
    source:
      openapi: ../openapi.yml
  TimesheetReviewsToCreateStatus:
    enum:
      - approved
      - declined
    inline: true
    source:
      openapi: ../openapi.yml
  TimesheetReviewsToCreate:
    properties:
      status: TimesheetReviewsToCreateStatus
      reason: optional<string>
      ids: TimesheetIdItems
    source:
      openapi: ../openapi.yml
  GenericReportReviewCreatedContainer:
    properties:
      data: GenericReportReviewCreatedList
    source:
      openapi: ../openapi.yml
  GenericReportReviewCreatedList: list<GenericReportReviewCreated>
  GenericReportReviewCreated:
    properties:
      status: optional<InvoiceAdjustmentStatusEnum>
      id: UniqueObjectIdentifier
      public_id: optional<PublicId>
    source:
      openapi: ../openapi.yml
  PgoTaskReviewsByIdToCreateStatus:
    enum:
      - approved
      - declined
    docs: Review status.
    inline: true
    source:
      openapi: ../openapi.yml
  PgoTaskReviewsByIdToCreate:
    properties:
      status:
        type: PgoTaskReviewsByIdToCreateStatus
        docs: Review status.
      reason:
        type: optional<string>
        docs: Review comments.
    source:
      openapi: ../openapi.yml
  PgoTaskReviewsToCreateStatus:
    enum:
      - approved
      - declined
    docs: Review status.
    inline: true
    source:
      openapi: ../openapi.yml
  PgoTaskReviewsToCreate:
    properties:
      status:
        type: PgoTaskReviewsToCreateStatus
        docs: Review status.
      reason:
        type: optional<string>
        docs: Additional comments with the reivew.
      ids: list<double>
    source:
      openapi: ../openapi.yml
  TimesheetReviewToCreateStatus:
    enum:
      - approved
      - declined
    inline: true
    source:
      openapi: ../openapi.yml
  TimesheetReviewToCreate:
    properties:
      status: TimesheetReviewToCreateStatus
      reason: optional<string>
    source:
      openapi: ../openapi.yml
  TimesheetSearchContainerContractTypes:
    discriminated: false
    union:
      - ContractTypeEnumList
      - ContractTypeEnum
    source:
      openapi: ../openapi.yml
    inline: true
  TimesheetSearchContainerTypes:
    discriminated: false
    union:
      - TimesheetTypeEnumList
      - TimesheetTypeEnum
    source:
      openapi: ../openapi.yml
    inline: true
  TimesheetSearchContainerStatuses:
    discriminated: false
    union:
      - TimesheetStatusEnumList
      - optional<TimesheetStatusEnum>
    source:
      openapi: ../openapi.yml
    inline: true
  TimesheetSearchContainer:
    docs: >-
      This is a model to make it easier to understand and restrict search
      parameters
    properties:
      limit:
        type: optional<string>
        docs: Return a page of results with given number of records.
        default: '10'
        validation:
          pattern: ^\d{1,2}$
          maxLength: 2
      offset:
        type: optional<string>
        default: '10'
        validation:
          pattern: ^\d{1,2}$
          maxLength: 2
      order_direction: optional<SortDirEnum>
      contract_id: optional<string>
      invoice_id:
        type: optional<string>
        validation:
          pattern: ^\d+$
          maxLength: 10
      reporter_id:
        type: optional<string>
        validation:
          pattern: ^\d+$
          maxLength: 10
      contract_types: optional<TimesheetSearchContainerContractTypes>
      types: optional<TimesheetSearchContainerTypes>
      statuses: optional<TimesheetSearchContainerStatuses>
      date_from: optional<DateString>
      date_to: optional<DateString>
    source:
      openapi: ../openapi.yml
  TimesheetAccountingRefsItemMappingCategory:
    properties:
      id: string
      name: string
    source:
      openapi: ../openapi.yml
    inline: true
  TimesheetAccountingRefsItem:
    properties:
      integration: string
      mapping_category: optional<TimesheetAccountingRefsItemMappingCategory>
    source:
      openapi: ../openapi.yml
  TimesheetAccountingRefs: optional<list<TimesheetAccountingRefsItem>>
  InvoiceAdjustmentSearchContainerContractTypes:
    discriminated: false
    union:
      - ContractTypeEnumList
      - ContractTypeEnum
    source:
      openapi: ../openapi.yml
    inline: true
  InvoiceAdjustmentSearchContainerTypes:
    discriminated: false
    union:
      - InvoiceAdjustmentTypeEnumList
      - InvoiceAdjustmentTypeEnum
    source:
      openapi: ../openapi.yml
    inline: true
  InvoiceAdjustmentSearchContainerStatuses:
    discriminated: false
    union:
      - InvoiceAdjustmentStatusEnumList
      - optional<InvoiceAdjustmentStatusEnum>
    source:
      openapi: ../openapi.yml
    inline: true
  InvoiceAdjustmentSearchContainer:
    docs: >-
      This is a model to make it easier to understand and restrict search
      parameters
    properties:
      limit:
        type: optional<string>
        docs: Return a page of results with given number of records.
        default: '10'
        validation:
          pattern: ^\d{1,2}$
          maxLength: 2
      offset:
        type: optional<string>
        default: '10'
        validation:
          pattern: ^\d{1,2}$
          maxLength: 2
      order_direction: optional<SortDirEnum>
      contract_id: optional<string>
      invoice_id:
        type: optional<string>
        validation:
          pattern: ^\d+$
          maxLength: 10
      reporter_id:
        type: optional<string>
        validation:
          pattern: ^\d+$
          maxLength: 10
      contract_types: optional<InvoiceAdjustmentSearchContainerContractTypes>
      types: optional<InvoiceAdjustmentSearchContainerTypes>
      statuses: optional<InvoiceAdjustmentSearchContainerStatuses>
      date_from: optional<DateString>
      date_to: optional<DateString>
    source:
      openapi: ../openapi.yml
  InvoiceAdjustmentListContainer:
    properties:
      data: InvoiceAdjustmentList
      page: PageInfoWithoutCursorNew
    source:
      openapi: ../openapi.yml
  InvoiceAdjustmentList: list<BasicInvoiceAdjustment>
  BasicInvoiceAdjustmentWorksheet:
    properties:
      weeks:
        type: double
        validation:
          min: 0
      days:
        type: double
        validation:
          min: 0
      hours:
        type: double
        validation:
          min: 0
      minutes:
        type: double
        validation:
          min: 0
    source:
      openapi: ../openapi.yml
    inline: true
  BasicInvoiceAdjustmentReviewedBy:
    properties:
      id: double
      full_name: string
      reviewed_at: string
      remarks: string
    source:
      openapi: ../openapi.yml
    inline: true
  BasicInvoiceAdjustmentContract:
    properties:
      id: string
      title: string
      type: ContractTypeEnum
    source:
      openapi: ../openapi.yml
    inline: true
  BasicInvoiceAdjustmentPaymentCycle:
    properties:
      start_date: optional<DateTimeStringRequired>
      end_date: optional<DateTimeStringRequired>
    source:
      openapi: ../openapi.yml
    inline: true
  BasicInvoiceAdjustmentReportedBy:
    properties:
      id: double
      full_name: string
    source:
      openapi: ../openapi.yml
    inline: true
  BasicInvoiceAdjustment:
    properties:
      id: UniqueObjectIdentifier
      public_id: optional<PublicId>
      type: InvoiceAdjustmentTypeEnum
      status: optional<InvoiceAdjustmentStatusEnum>
      description: string
      date_submitted: optional<DateTimeStringRequired>
      currency_code: CurrencyCodeRequired
      quantity: optional<double>
      total_amount: string
      created_at: optional<DateTimeStringRequired>
      scale: optional<string>
      custom_scale: optional<string>
      attachment: optional<FileAttachmentInfo>
      worksheet: optional<BasicInvoiceAdjustmentWorksheet>
      reviewed_by: optional<BasicInvoiceAdjustmentReviewedBy>
      contract: BasicInvoiceAdjustmentContract
      payment_cycle: BasicInvoiceAdjustmentPaymentCycle
      reported_by: BasicInvoiceAdjustmentReportedBy
    source:
      openapi: ../openapi.yml
  InvoiceAdjustmentContainer:
    properties:
      data: InvoiceAdjustment
    source:
      openapi: ../openapi.yml
  InvoiceAdjustment:
    properties: {}
    extends:
      - BasicInvoiceAdjustment
      - InvoiceAdjustmentApproversContainer
    source:
      openapi: ../openapi.yml
  InvoiceAdjustmentApproversContainer:
    properties:
      approvers: InvoiceAdjustmentApproverList
    source:
      openapi: ../openapi.yml
  InvoiceAdjustmentApproverList: list<InvoiceAdjustmentApprover>
  InvoiceAdjustmentApprover:
    properties:
      full_name: string
      email: string
      approved: boolean
    source:
      openapi: ../openapi.yml
  InvoiceAdjustmentToCreateWithFile:
    properties: {}
    extends:
      - InvoiceAdjustmentToCreate
      - FileObject
    source:
      openapi: ../openapi.yml
  InvoiceAdjustmentToCreate:
    docs: Details of invoice adjustment to create.
    properties:
      contract_id:
        type: string
        docs: Id of a Deel contract.
      date_submitted: DateStringRequired
      type: InvoiceAdjustmentTypeToCreateEnum
      amount:
        type: double
        docs: Amount to be paid. Must be a positive number.
        validation:
          min: 0
      description:
        type: optional<string>
        docs: Description of the adjustment.
      paymentCycleId:
        type: optional<double>
        docs: ID of an existing active payment cycle - required if type is "vat"
    source:
      openapi: ../openapi.yml
  InvoiceAdjustmentCreatedContainer:
    properties:
      data: InvoiceAdjustmentCreated
    source:
      openapi: ../openapi.yml
  InvoiceAdjustmentCreated:
    docs: Details of invoice adjustment created.
    properties:
      created: boolean
      id: optional<UniqueObjectIdentifier>
      public_id: optional<PublicId>
      status: optional<InvoiceAdjustmentStatusEnum>
      created_at: optional<DateTimeStringRequired>
    source:
      openapi: ../openapi.yml
  InvoiceAdjustmentToUpdate:
    docs: Details of invoice adjustment to update.
    properties:
      description: string
      amount:
        type: optional<double>
        validation:
          min: 0
    source:
      openapi: ../openapi.yml
  InvoiceAdjustmentReviewsToCreateStatus:
    enum:
      - approved
      - declined
    inline: true
    source:
      openapi: ../openapi.yml
  InvoiceAdjustmentReviewsToCreate:
    properties:
      status: InvoiceAdjustmentReviewsToCreateStatus
      reason: optional<string>
      ids: TimesheetIdItems
    source:
      openapi: ../openapi.yml
  TimesheetIdItemsItem:
    discriminated: false
    docs: ID of an existing timesheet record
    union:
      - double
      - string
    source:
      openapi: ../openapi.yml
  TimesheetIdItems: list<TimesheetIdItemsItem>
  InvoiceAdjustmentReviewToCreateStatus:
    enum:
      - approved
      - declined
    inline: true
    source:
      openapi: ../openapi.yml
  InvoiceAdjustmentReviewToCreate:
    properties:
      status: InvoiceAdjustmentReviewToCreateStatus
      reason: optional<string>
    source:
      openapi: ../openapi.yml
  GenericResultCreatedData:
    properties:
      created: boolean
    source:
      openapi: ../openapi.yml
    inline: true
  GenericResultCreated:
    properties:
      data: GenericResultCreatedData
    source:
      openapi: ../openapi.yml
  ContractExternalIdPatchedResponseContainer: ContractExternalIdToPatch
  ContractExternalIdPatchedContainer:
    properties:
      data: ContractExternalIdToPatch
    source:
      openapi: ../openapi.yml
  GenericResultUpdatedData:
    properties:
      updated: boolean
    source:
      openapi: ../openapi.yml
    inline: true
  GenericResultUpdated:
    properties:
      data: GenericResultUpdatedData
    source:
      openapi: ../openapi.yml
  GenericResultDeletedData:
    properties:
      deleted:
        type: boolean
        docs: Confirms the deletion.
    source:
      openapi: ../openapi.yml
    inline: true
  GenericResultDeleted:
    properties:
      data: GenericResultDeletedData
    source:
      openapi: ../openapi.yml
  ContractTypeEnumList:
    docs: List of contract types
    type: list<ContractTypeEnum>
  ContractTypeEnum:
    enum:
      - ongoing_time_based
      - milestones
      - time_based
      - pay_as_you_go_time_based
      - commission
      - payg_milestones
      - payg_tasks
      - eor
      - unknown
      - employee
      - global_payroll
      - shield_msa
      - hris_direct_employee
    docs: Type of a contract
    source:
      openapi: ../openapi.yml
  ContractTypeEnumToCreate:
    enum:
      - pay_as_you_go_time_based
      - payg_tasks
      - payg_milestones
    docs: Type of a contract
    source:
      openapi: ../openapi.yml
  ContractStatusEnumList:
    docs: List of contract statuses
    type: list<ContractStatusEnum>
  ContractStatusEnum:
    enum:
      - new
      - under_review
      - waiting_for_employee_contract
      - waiting_for_client_sign
      - processing_payment
      - waiting_for_contractor_sign
      - waiting_for_eor_sign
      - waiting_for_employee_sign
      - awaiting_deposit_payment
      - in_progress
      - completed
      - cancelled
      - user_cancelled
      - rejected
      - waiting_for_client_payment
    docs: Status of a contract in Deel workflow
    source:
      openapi: ../openapi.yml
  ContractWhoReportsEnum:
    enum:
      - both
      - client
      - contractor
    docs: Flag to indicate who is supposed to provide regular reports
    source:
      openapi: ../openapi.yml
  ContractFirstSignEnum:
    enum:
      - client
      - contractor
    docs: Flag to indicate who is supposed to sign a contract
    source:
      openapi: ../openapi.yml
  ContractsSortByEnum:
    enum:
      - contract_title
      - client_name
      - worker_name
      - total
      - status
    source:
      openapi: ../openapi.yml
  ProfileTypeEnum:
    enum:
      - client
      - contractor
      - icp
      - direct_employee
      - hris_direct_employee
      - service_account
    source:
      openapi: ../openapi.yml
  CountryListContainer:
    properties:
      data: CountryList
    source:
      openapi: ../openapi.yml
  CountryList: list<Country>
  Country:
    properties:
      code: CountryCode
      name:
        type: string
        docs: Country name.
        validation:
          minLength: 1
      visa_support:
        type: boolean
        docs: >-
          Identifies if Deel provides visa support for employees being hired in
          this country.
      eor_support:
        type: boolean
        docs: Identifies if Deel support EoR in this country.
      state_type:
        type: optional<string>
        docs: >-
          Identifies the type of sub-territory within a country where local laws
          may apply. Some countries may have states, provinces, prefectures or
          regions.
      states: list<StateOfCountry>
    source:
      openapi: ../openapi.yml
  StateOfCountry:
    docs: It may be called states, provinces, prefectures or regions, or none at all
    properties:
      code:
        type: string
        docs: Territory code.
        validation:
          minLength: 1
      name:
        type: string
        docs: Territory name.
        validation:
          minLength: 1
    source:
      openapi: ../openapi.yml
  CurrencyListContainer:
    properties:
      data: CurrencyList
    source:
      openapi: ../openapi.yml
  CurrencyList: list<Currency>
  Currency:
    properties:
      code: CurrencyCodeRequired
      name:
        type: string
        validation:
          minLength: 1
    source:
      openapi: ../openapi.yml
  PaymentMethodEnumList:
    docs: filter invoices by payment method
    type: list<PaymentMethodEnum>
  PaymentMethodEnum:
    enum:
      - stripe_bacs_debit
      - pay_pal
      - stripe_card
      - bt_card
      - stripe_ach
      - coinbase
      - go_cardless
      - brex
      - stripe_sepa_debit
      - transferwise
      - go_cardless_becs
      - bank_transfer
      - mercury_wire
      - bt_pay_pal
    docs: All the supported payment types
    source:
      openapi: ../openapi.yml
  PaymentStatusEnumList: list<PaymentStatusEnum>
  PaymentStatusEnum:
    enum:
      - paid
      - processing
    docs: status of payment
    source:
      openapi: ../openapi.yml
  InvoiceStatusEnumList:
    docs: >-
      filter invoices by current status, show a invoice if its status is in this
      list
    type: list<InvoiceStatusEnum>
  InvoiceStatusEnum:
    enum:
      - pending
      - paid
      - processing
      - canceled
      - skipped
      - failed
      - refunded
    docs: Current status of the invoice.
    source:
      openapi: ../openapi.yml
  InvoiceTypeEnum:
    enum:
      - PAYMENT
      - EOR_DEPOSIT
      - EOR_FIRST_PAYMENT
      - EOR_TERMINATION_OFFCYCLE
      - SIGNING_BONUS
      - REFUND_STATEMENT
      - EOR_TAX_RULING
      - GP_DEPOSIT_STATEMENT
      - GP_FUNDING_STATEMENT
      - GLOBAL_PAYROLL_FEES
      - SHIELD_DEPOSIT
      - EOR_MANAGEMENT_FEE
    docs: invoice's type
    source:
      openapi: ../openapi.yml
  CountryCodeList: list<CountryCode>
  CountryCode:
    type: string
    docs: >-
      Country code. [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2)
      country code.
    validation:
      pattern: ^[A-Z]{2}$
      minLength: 2
      maxLength: 2
  CountryCodeNulleable:
    type: optional<string>
    docs: >-
      Country code. [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2)
      country code.
    validation:
      pattern: ^[A-Z]{2}$
      minLength: 2
      maxLength: 2
  CurrencyCodeList: list<CurrencyCodeRequired>
  CurrencyCodeRequired:
    type: string
    validation:
      pattern: ^[A-Z]{3}$
      minLength: 3
      maxLength: 3
  CurrencyCode:
    type: string
    docs: Currency code.
    validation:
      pattern: ^[A-Z]{3}$
      minLength: 3
      maxLength: 3
  LegalEntityArray: list<LegalEntityType>
  LegalEntityType:
    enum:
      - individual
      - company
    source:
      openapi: ../openapi.yml
  LegalEntitySubType: string
  JobTitleListContainerPage:
    properties:
      cursor:
        type: string
        docs: Use for pagination to get next set of records after the given cursor.
    source:
      openapi: ../openapi.yml
    inline: true
  JobTitleListContainer:
    properties:
      data: JobTitleList
      page: JobTitleListContainerPage
    source:
      openapi: ../openapi.yml
  JobTitleList: list<JobTitle>
  JobTitle:
    properties:
      id:
        type: double
        docs: Unique identifier for the job title in Deel platform.
      name:
        type: string
        docs: Job title.
    source:
      openapi: ../openapi.yml
  SeniorityListContainer:
    properties:
      data: SeniorityList
    source:
      openapi: ../openapi.yml
  SeniorityList: list<SeniorityRequired>
  SeniorityRequired:
    docs: Seniority describes level of expertise at a job e.g. junior
    properties:
      id:
        type: double
        docs: Unique identifier for seniority record.
      name:
        type: string
        docs: Name of seniority level e.g. Mid (Individual Contributor Level 2)
        validation:
          minLength: 1
      level:
        type: double
        docs: Level of seniority level e.g. 2
    source:
      openapi: ../openapi.yml
  Seniority:
    docs: Seniority describes level of expertise at a job e.g. junior
    properties:
      id:
        type: double
        docs: Unique identifier for seniority record
      name:
        type: string
        docs: Name of seniority level e.g. Mid (Individual Contributor Level 2)
        validation:
          minLength: 1
      level:
        type: optional<double>
        docs: Level of seniority level e.g. 2
    source:
      openapi: ../openapi.yml
  TimesheetTypeEnumList: list<TimesheetTypeEnum>
  TimesheetTypeEnum:
    type: literal<"work">
    docs: Type for timesheet
  OffCyclePaymentTypeEnum:
    type: literal<"offcycle">
    docs: Type for Off-cycle payments
  TimesheetStatusEnumList: list<optional<TimesheetStatusEnum>>
  TimesheetStatusEnum:
    type: optional<string>
    docs: Status of this entry.
  InvoiceAdjustmentTypeEnumList: list<InvoiceAdjustmentTypeEnum>
  InvoiceAdjustmentTypeEnum:
    enum:
      - accrued_holiday
      - additional_fee
      - allowance
      - bonus
      - commission
      - deduction
      - deposit
      - deposit_refund
      - employer_cost
      - expense
      - health_allowance
      - health_benefit
      - health_insurance_fee
      - legal_fee
      - management_fee
      - milestone
      - offcycle
      - other
      - overtime
      - pension
      - pro_rata
      - setup_fee
      - severance
      - shield_service
      - signing_bonus
      - signing_bonus_employer_cost
      - refund
      - task
      - time_off
      - vat
      - withholding_tax
      - work
    docs: Type of invoice adjustment.
    source:
      openapi: ../openapi.yml
  InvoiceAdjustmentTypeToCreateEnum:
    enum:
      - bonus
      - commission
      - deduction
      - expense
      - other
      - overtime
      - time_off
      - vat
    docs: Type of invoice adjustment.
    source:
      openapi: ../openapi.yml
  InvoiceAdjustmentStatusEnumList: list<optional<InvoiceAdjustmentStatusEnum>>
  InvoiceAdjustmentStatusEnum:
    type: optional<string>
    docs: status of invoice adjustment
  SortDirEnum:
    enum:
      - asc
      - desc
    source:
      openapi: ../openapi.yml
  EmailTypeRequired:
    type: string
    docs: Worker's email address.
    validation:
      format: email
      minLength: 5
  WorkerEmailType:
    type: optional<string>
    docs: Worker's email address.
    validation:
      format: email
      minLength: 5
  EmailType:
    type: optional<string>
    docs: User's email address.
    validation:
      format: email
      minLength: 5
  UrlTypeRequired:
    type: string
    validation:
      format: uri
      minLength: 5
  UrlType:
    type: optional<string>
    validation:
      format: uri
      minLength: 5
  PageInfo:
    properties:
      cursor: string
      total_rows: double
    source:
      openapi: ../openapi.yml
  PageInfoWithoutCursor:
    properties:
      total_rows: double
    source:
      openapi: ../openapi.yml
  PageInfoWithoutCursorNew:
    properties:
      total_rows: double
      items_per_page:
        type: double
        validation:
          min: 1
          max: 99
      offset:
        type: double
        validation:
          min: 0
          max: 999999999
    source:
      openapi: ../openapi.yml
  MilestoneContainer:
    properties:
      data: Milestone
    source:
      openapi: ../openapi.yml
  MilestoneToCreateFormWithFile:
    properties: {}
    extends:
      - MilestoneProperties
      - FileObject
    source:
      openapi: ../openapi.yml
  MilestoneToCreate: MilestoneProperties
  MilestoneProperties:
    properties:
      amount:
        type: string
        docs: Amount to be paid for the milestone.
      title:
        type: string
        docs: Title of milestone.
      description:
        type: string
        docs: Description of milestone.
    source:
      openapi: ../openapi.yml
  MilestoneListContainer:
    properties:
      data: MilestoneList
    source:
      openapi: ../openapi.yml
  MilestoneList: list<Milestone>
  MilestoneReviewedBy:
    docs: Reviewer's information.
    properties:
      id:
        type: double
        docs: Reviewer's unique Deel id.
      full_name:
        type: string
        docs: Reviewer's full name.
    source:
      openapi: ../openapi.yml
    inline: true
  MilestoneReportedBy:
    docs: Milestone creator.
    properties:
      id:
        type: double
        docs: Reporter's unique Deel id.
      full_name:
        type: string
        docs: Reporter's full name.
    source:
      openapi: ../openapi.yml
    inline: true
  Milestone:
    properties:
      id:
        type: double
        docs: Unique identifier for the milestone.
      amount:
        type: string
        docs: Amount to be paid for the milestone.
      approval_requested:
        type: boolean
        docs: >-
          Indicates if the contractor has requested the approval for the
          milestone.
      reviewed_by:
        type: optional<MilestoneReviewedBy>
        docs: Reviewer's information.
      reported_by:
        type: MilestoneReportedBy
        docs: Milestone creator.
      title:
        type: string
        docs: Title of milestone.
      description:
        type: string
        docs: Description of milestone.
      status:
        type: string
        docs: Current status of milestone.
      created_at: optional<DateTimeString>
    source:
      openapi: ../openapi.yml
  MilestoneReviewsToCreateStatus:
    enum:
      - approved
      - declined
    inline: true
    source:
      openapi: ../openapi.yml
  MilestoneReviewsToCreate:
    properties:
      status: MilestoneReviewsToCreateStatus
      reason: optional<string>
      ids: list<double>
    source:
      openapi: ../openapi.yml
  MilestoneReviewToCreateStatus:
    enum:
      - approved
      - declined
    inline: true
    source:
      openapi: ../openapi.yml
  MilestoneReviewToCreate:
    properties:
      status: MilestoneReviewToCreateStatus
      reason: optional<string>
    source:
      openapi: ../openapi.yml
  OffCyclePaymentContainer:
    properties:
      data: OffCyclePayment
    source:
      openapi: ../openapi.yml
  OffCyclePaymentToCreate:
    docs: Details of invoice adjustment to create.
    properties:
      date_submitted: DateStringRequired
      amount:
        type: double
        docs: Amount to be paid. Must be a positive number.
        validation:
          min: 0
      description:
        type: optional<string>
        docs: Description of off-cycle payment.
    source:
      openapi: ../openapi.yml
  EstimateFirstPaymentCompensationDetailsCalculationType:
    enum:
      - CUSTOM_AMOUNT
      - WORK_DAYS
      - CALENDAR_DAYS
      - FULL_AMOUNT
    docs: Either works days or calendar days
    inline: true
    source:
      openapi: ../openapi.yml
  EstimateFirstPaymentCompensationDetails:
    properties:
      amount:
        type: optional<double>
        docs: Amount to be paid. Must be a positive number.
        validation:
          min: 0
      currency_code: optional<CurrencyCodeRequired>
      scale: optional<WorkStatementCycleScaleEnum>
      cycle_end:
        type: optional<double>
        docs: Date invoice cycle ends.
        validation:
          min: 1
          max: 31
      cycle_end_type: optional<WorkStatementCycleEndTypeEnum>
      payment_due_type: optional<WorkStatementPaymentDueTypeEnum>
      payment_due_days:
        type: optional<double>
        validation:
          min: 0
          max: 90
      calculation_type:
        type: optional<EstimateFirstPaymentCompensationDetailsCalculationType>
        docs: Either works days or calendar days
      work_week_start: optional<WeekDaysEnum>
      work_week_end: optional<WeekDaysEnum>
    source:
      openapi: ../openapi.yml
    inline: true
  EstimateFirstPayment:
    docs: Details of pro rata payment to create.
    properties:
      type: ContractTypeEnum
      country_code: CountryCode
      start_date: DateStringRequired
      compensation_details: EstimateFirstPaymentCompensationDetails
    source:
      openapi: ../openapi.yml
  ProRataCalculationType:
    enum:
      - CUSTOM_AMOUNT
      - WORK_DAYS
      - CALENDAR_DAYS
      - FULL_AMOUNT
    docs: Either works days or calendar days
    inline: true
    source:
      openapi: ../openapi.yml
  ProRata:
    docs: Details of the pro rata for the first payment
    properties:
      calculation_type:
        type: optional<ProRataCalculationType>
        docs: Either works days or calendar days
      rate:
        type: optional<double>
        docs: Rate to be paid.
        validation:
          min: 0
      daily_rate:
        type: optional<double>
        docs: Daily rate to be paid.
        validation:
          min: 0
      total:
        type: optional<double>
        docs: Total to be paid.
        validation:
          min: 0
      cycle_work_days:
        type: optional<double>
        docs: Total days to be work.
        validation:
          min: 0
      work_week_start: optional<WeekDaysEnum>
      work_week_end: optional<WeekDaysEnum>
      cycle_start: optional<DateStringRequired>
      cycle_end: optional<DateStringRequired>
    source:
      openapi: ../openapi.yml
  FirstPaymentDate:
    docs: First payment date
    properties:
      due: optional<DateStringRequired>
    source:
      openapi: ../openapi.yml
  OffCyclePaymentListContainer:
    properties:
      data: OffCyclePaymentList
    source:
      openapi: ../openapi.yml
  OffCyclePaymentList: list<OffCyclePayment>
  OffCyclePaymentReviewedBy:
    properties:
      id:
        type: double
        docs: Profile if of the reviewer.
      full_name:
        type: string
        docs: Full name of the reviewer.
      reviewed_at:
        type: string
        docs: Date of review.
      remarks:
        type: string
        docs: Remarks made during review process.
    source:
      openapi: ../openapi.yml
    inline: true
  OffCyclePaymentReportedBy:
    properties:
      id:
        type: double
        docs: Profile id of the creator.
      full_name:
        type: string
        docs: Full name of the creator.
    source:
      openapi: ../openapi.yml
    inline: true
  OffCyclePayment:
    properties:
      id: UniqueObjectIdentifier
      public_id: optional<PublicId>
      status: optional<InvoiceAdjustmentStatusEnum>
      description:
        type: string
        docs: Description of the off-cycle payment entry.
      date_submitted: optional<DateTimeStringRequired>
      currency_code: CurrencyCodeRequired
      amount:
        type: string
        docs: Amount of off-cycle payment.
      created_at: optional<DateTimeStringRequired>
      reviewed_by: optional<OffCyclePaymentReviewedBy>
      reported_by: OffCyclePaymentReportedBy
    source:
      openapi: ../openapi.yml
  FileAttachmentInfo:
    docs: This object is used for linking file attachments to your records.
    properties:
      filename:
        type: string
        docs: Original filename you used to upload using attachments end-point.
      key:
        type: string
        docs: >-
          You can call attachments end-point, get key and URL to upload your
          file.
    source:
      openapi: ../openapi.yml
  FileObject:
    docs: This is the file you will upload in a multi-part form.
    properties:
      file:
        type: optional<string>
        docs: Upload the file you want to attach to this entry.
        validation:
          format: binary
    source:
      openapi: ../openapi.yml
  FileRefTypeEnum:
    enum:
      - value: application/pdf
        name: ApplicationPdf
      - value: text/csv
        name: TextCsv
      - value: text/plain
        name: TextPlain
      - value: image/jpeg
        name: ImageJpeg
      - value: image/png
        name: ImagePng
    docs: type of files allowed when uploading attachments
    source:
      openapi: ../openapi.yml
  OutputToCreateFileRef:
    properties:
      key: string
      url: string
    source:
      openapi: ../openapi.yml
  OutputToCreateFileRefContainer:
    properties:
      data: OutputToCreateFileRef
    source:
      openapi: ../openapi.yml
  InputToDeletePgoTask:
    properties:
      data: PgoTaskToDelete
    source:
      openapi: ../openapi.yml
  ContractExternalIdToPatch:
    properties:
      external_id:
        type: string
        docs: A unique identifier for the object provided by an external system.
    source:
      openapi: ../openapi.yml
  PgoTaskToCreate:
    properties:
      amount:
        type: string
        docs: Fixed rate for this task.
        validation:
          minLength: 1
      date_submitted: DateStringRequired
      description:
        type: optional<string>
        docs: Task description.
      attachment: optional<FileAttachmentInfo>
    source:
      openapi: ../openapi.yml
  PgoTask:
    properties:
      id:
        type: double
        docs: Unique identifier of the task.
      amount:
        type: string
        docs: Fixed rate for this task.
      date_submitted: DateStringRequired
      description:
        type: string
        docs: Task description.
      status: optional<TimesheetStatusEnum>
      attachment: optional<FileAttachmentInfo>
    source:
      openapi: ../openapi.yml
  PgoTaskToDelete:
    properties:
      description:
        type: optional<string>
        docs: Description of exclusion.
      delete_recurring_report:
        type: optional<boolean>
        docs: Request to delete recurring report.
    source:
      openapi: ../openapi.yml
  TaskListContainer:
    properties:
      data: TaskList
    source:
      openapi: ../openapi.yml
  TaskList: list<PgoTask>
  AgreementsSearchForm:
    docs: >-
      Convenient model to encapsulate query parameters to get a list of
      agreements.
    properties:
      contract_id: optional<string>
      limit: optional<AgreementsParamLimit>
      offset: optional<AgreementsParamOffset>
    source:
      openapi: ../openapi.yml
  AgreementsParamLimit:
    type: string
    docs: >-
      Maximum number of records to return. This is supposed to be an integer but
      query parameters are string. Maximum is 50.
  AgreementsParamOffset:
    type: string
    docs: >-
      Offset/index of record for the next page of records to return. This is
      supposed to be an integer but query parameters are string.
  AgreementListContainer:
    properties:
      data: AgreementList
      page: optional<PageInfoWithoutCursor>
    source:
      openapi: ../openapi.yml
  AgreementList: list<Agreement>
  AgreementMsa:
    properties:
      id: string
      title: string
    source:
      openapi: ../openapi.yml
    inline: true
  AgreementClientLegalEntity:
    properties:
      id: double
      name: string
    source:
      openapi: ../openapi.yml
    inline: true
  AgreementProviderLegalEntity:
    properties:
      id: double
      name: string
    source:
      openapi: ../openapi.yml
    inline: true
  Agreement:
    properties:
      id: double
      agreement_title: string
      agreement_type: string
      msa: AgreementMsa
      client_legal_entity: AgreementClientLegalEntity
      provider_legal_entity: AgreementProviderLegalEntity
    source:
      openapi: ../openapi.yml
  InputToShieldContractData:
    properties:
      agreement_id:
        type: double
        docs: MSA contract id (agreement).
    source:
      openapi: ../openapi.yml
    inline: true
  InputToShieldContract:
    properties:
      data: InputToShieldContractData
    source:
      openapi: ../openapi.yml
  PremiumToAdd:
    properties:
      agreement_reflects_relation:
        type: boolean
        docs: >-
          Is the Contractor Agreement selected on the Deel Platform perfectly
          reflecting your organizations relation and actual working practices
          with the contractor?
      contractor_characteristics:
        type: boolean
        docs: >-
          Workers doing certain jobs may be considered to be employees by law,
          even if they would otherwise be considered independent contractors
          under common law. Is the work of this worker characterized as:
          Apprentice, Trainee, Labourer, Driver, Medical worker, Legal worker,
          Construction worker or someone working in the fields of
          Finance/Investment?
    source:
      openapi: ../openapi.yml
  PremiumResultAddedContainer:
    properties:
      data: PremiumResultAdded
    source:
      openapi: ../openapi.yml
  EorEntitlementsContainer:
    properties:
      data: EorEntitlements
    source:
      openapi: ../openapi.yml
  EorTimeoffsContainer:
    properties:
      data: EorTimeoffs
    source:
      openapi: ../openapi.yml
  EorTimeoffsItemContainer:
    properties:
      data: EorTimeoffsItem
    source:
      openapi: ../openapi.yml
  EorClientTimeoffsContainer:
    properties:
      data: EorClientTimeoffs
    source:
      openapi: ../openapi.yml
  FinalPaymentCalculatedContainer:
    properties:
      data: FinalPaymentCalculated
    source:
      openapi: ../openapi.yml
  FinalPaymentCalculatedLastCycle:
    docs: The last payment cycle.
    properties:
      start: optional<DateTimeStringRequired>
      end: optional<DateTimeStringRequired>
      completion_date: optional<DateTimeStringRequired>
    source:
      openapi: ../openapi.yml
    inline: true
  FinalPaymentCalculatedCalculationType:
    enum:
      - CUSTOM_AMOUNT
      - WORK_DAYS
      - CALENDAR_DAYS
      - FULL_AMOUNT
    docs: Either works days or calendar days
    inline: true
    source:
      openapi: ../openapi.yml
  FinalPaymentCalculated:
    properties:
      daily_rate:
        type: string
        docs: The daily rate paid.
      total:
        type: string
        docs: Total amount to pay.
      remaining_days:
        type: string
        docs: Dais remaining to end the contract.
      last_cycle:
        type: FinalPaymentCalculatedLastCycle
        docs: The last payment cycle.
      calculation_type:
        type: FinalPaymentCalculatedCalculationType
        docs: Either works days or calendar days
      workweek_start:
        type: double
        docs: The day the work week starts, 0 to 6
        default: 1
      workweek_end:
        type: double
        docs: The day the work week starts, 0 to 6
        default: 5
    source:
      openapi: ../openapi.yml
  PremiumResultAddedMisclassificationGuarantee:
    properties:
      name:
        type: optional<string>
        docs: Legal costs.
      description:
        type: optional<string>
        docs: Cover your legal defense costs.
    source:
      openapi: ../openapi.yml
    inline: true
  PremiumResultAddedPenalties:
    properties:
      name:
        type: optional<string>
        docs: Penalties.
      description:
        type: optional<string>
        docs: Get indemnity against tax authority penalties, liabilities and fines.
    source:
      openapi: ../openapi.yml
    inline: true
  PremiumResultAddedThirdPartyLiabilities:
    properties:
      name:
        type: optional<string>
        docs: Third-party liabilities.
      description:
        type: optional<string>
        docs: >-
          Get indemnity against third parties up to $10k depending on the
          court's decision.
    source:
      openapi: ../openapi.yml
    inline: true
  PremiumResultAdded:
    properties:
      id:
        type: string
        docs: Deel Premium plan id.
      calculated_premium:
        type: double
        docs: Cost for Deel Premium.
      misclassification_guarantee: PremiumResultAddedMisclassificationGuarantee
      penalties: PremiumResultAddedPenalties
      third_party_liabilities: PremiumResultAddedThirdPartyLiabilities
    source:
      openapi: ../openapi.yml
  EorEntitlements:
    docs: Time-off Entitlements for EOR contracts.
    properties:
      entitlements:
        docs: List of entitlements.
        type: list<EorEntitlementListItem>
    source:
      openapi: ../openapi.yml
  EorEntitlementListItem:
    docs: Entitlement Item for a given year.
    properties:
      year: optional<double>
      vacation_allowed:
        type: optional<string>
        docs: Minimum vacation allowed.
      sick_leave_allowed:
        type: optional<string>
        docs: Maximum sick leave allowed.
      vacation_requested:
        type: optional<string>
        docs: Vacation days requested by the employee.
      vacation_approved:
        type: optional<string>
        docs: Vacation days approved.
      vacation_used:
        type: optional<string>
        docs: Vacation days used by the employee.
      vacation_total:
        type: optional<string>
        docs: Total number of vacation days requested, approved and used.
      sick_leave_requested:
        type: optional<string>
        docs: Sick days requested by the employee.
      sick_leave_approved:
        type: optional<string>
        docs: Sick days approved.
      sick_leave_used:
        type: optional<string>
        docs: Sick days used by the employee.
      sick_leave_total:
        type: optional<string>
        docs: Total number of sick days requested, approved and used.
      other_leave_requested:
        type: optional<string>
        docs: Other type of time off requested by the employee.
      other_leave_approved:
        type: optional<string>
        docs: Other type of time off days approved.
      other_leave_used:
        type: optional<string>
        docs: Other type of time off days used by the employee.
      other_leave_total:
        type: optional<string>
        docs: >-
          Total number of other type of time off days requested, approved and
          used.
      rollover_type: optional<EorHolidaysRolloverType>
      max_rollover_yearly: optional<string>
    source:
      openapi: ../openapi.yml
  EorHolidaysRolloverType:
    enum:
      - EXPIRATION
      - PAY_OUT
      - UNLIMITED_ROLLOVER
      - LIMITED_ROLLOVER
      - UNSET
    source:
      openapi: ../openapi.yml
  ContractToTerminate:
    properties:
      completion_date: optional<DateString>
      terminate_now: optional<boolean>
      message:
        type: optional<string>
        docs: A message for the termination
    source:
      openapi: ../openapi.yml
  ContractTerminationResultContainer:
    properties:
      data: ContractTerminationResult
    source:
      openapi: ../openapi.yml
  ContractTerminationResult:
    properties:
      id:
        type: optional<string>
        docs: Deel Contract ID.
      completion_date:
        type: optional<DateString>
        docs: Date the contract is marked for completion
    source:
      openapi: ../openapi.yml
  ContractTemplateListContainer:
    properties:
      data: optional<ContractTemplateList>
    source:
      openapi: ../openapi.yml
  ContractTemplateList: list<ContractTemplateSummary>
  ContractTemplateSummary:
    properties:
      id:
        type: double
        docs: Unique identifier of a contract template
      title:
        type: string
        docs: Title of a contract template
    source:
      openapi: ../openapi.yml
  NoticePeriod:
    type: double
    docs: Days before to notice the termination of contract for eather party.
    validation:
      min: 0
  ContractCustomField:
    docs: Customized attributes on contracts (Employee ID, Project code, etc).
    properties:
      name:
        type: optional<string>
        docs: Custom field property name.
      value:
        type: optional<string>
        docs: Custom field property value.
    source:
      openapi: ../openapi.yml
  EorCountryValidationsContainer:
    properties:
      data: EorCountryValidations
    source:
      openapi: ../openapi.yml
  EorContractCreatedContainer:
    properties:
      data: EorContractCreated
    source:
      openapi: ../openapi.yml
  EorContractToCreateEmployeeAddress:
    properties:
      street:
        type: optional<string>
        docs: Street and number.
      city:
        type: optional<string>
        docs: City name.
      state:
        type: optional<string>
        docs: State code.
      zip:
        type: optional<string>
        docs: Zip code.
      country: optional<CountryCode>
    source:
      openapi: ../openapi.yml
    inline: true
  EorContractToCreateEmployee:
    properties:
      first_name:
        type: string
        docs: Employee's first name.
      last_name:
        type: string
        docs: Employee's last name.
      email:
        type: optional<string>
        docs: Employee's email address.
      nationality:
        type: string
        docs: Employee's nationality.
      address: optional<EorContractToCreateEmployeeAddress>
    source:
      openapi: ../openapi.yml
    inline: true
  EorContractToCreateEmploymentType:
    enum:
      - value: Full-time
        name: FullTime
      - value: Part-time
        name: PartTime
    docs: Is it a full-time contract or a part-time contract?
    inline: true
    source:
      openapi: ../openapi.yml
  EorContractToCreateEmploymentTimeOffType:
    enum:
      - STANDARD
      - SPECIFIC
    docs: >-
      If you want to use standard number of holidays for this employee, choose
      "STANDARD". If you want to enter a specific number of holidays, choose
      "SPECIFIC" and enter the number of days in the holidays field.
    inline: true
    source:
      openapi: ../openapi.yml
  EorContractToCreateEmployment:
    properties:
      country: optional<CountryCode>
      state:
        type: optional<string>
        docs: >-
          State code of the state/province where the this person will be
          employed.
      type:
        type: optional<EorContractToCreateEmploymentType>
        docs: Is it a full-time contract or a part-time contract?
      work_visa_required:
        type: optional<boolean>
        docs: Do you require Deel to apply for work visa for this person?
        default: false
      start_date: optional<DateString>
      end_date: optional<DateString>
      probation_period:
        type: optional<double>
        docs: Number of probation days.
      scope_of_work:
        type: optional<string>
        docs: Scope of work description.
      time_off_type:
        type: optional<EorContractToCreateEmploymentTimeOffType>
        docs: >-
          If you want to use standard number of holidays for this employee,
          choose "STANDARD". If you want to enter a specific number of holidays,
          choose "SPECIFIC" and enter the number of days in the holidays field.
      holidays:
        type: optional<double>
        docs: >-
          Enter the number of holidays. Leave this field blank if you are
          chooseing "STANDARD" time_off_type.
    source:
      openapi: ../openapi.yml
    inline: true
  EorContractToCreateSeniority:
    properties:
      id:
        type: optional<double>
        docs: >-
          Enter the Id retrieved from the seniority lookup endpoint. Enter 34
          for "Not Applicable".
    source:
      openapi: ../openapi.yml
    inline: true
  EorContractToCreateClientLegalEntity:
    properties:
      id:
        type: optional<double>
        docs: >-
          Enter the Id of legal entity under which you want to hire this person.
          Use /legal-entities endpoint to retrieve a list of legal entities in
          your organization.
    source:
      openapi: ../openapi.yml
    inline: true
  EorContractToCreateClientTeam:
    properties:
      id:
        type: optional<double>
        docs: >-
          Enter the Id of team this person will be hired in. Use /teams endpoint
          to retrieve a list of teams in your organization.
    source:
      openapi: ../openapi.yml
    inline: true
  EorContractToCreateClient:
    properties:
      legal_entity: optional<EorContractToCreateClientLegalEntity>
      team: optional<EorContractToCreateClientTeam>
    source:
      openapi: ../openapi.yml
    inline: true
  EorContractToCreateCompensationDetails:
    properties:
      salary:
        type: optional<double>
        docs: Employee's gross annual salary.
      currency:
        type: optional<string>
        docs: Salary currency.
      variable_compensation:
        type: optional<double>
        docs: >-
          Varable compensation. For example, if the person will earn 5% of the
          gross annual salary as the variable compensation, enter 5.
      variable_compensation_type:
        type: optional<string>
        docs: >-
          Should be set only if variable_compensation is set. It can be
          PERCENTAGE or FIXED.
    source:
      openapi: ../openapi.yml
    inline: true
  EorContractToCreateQuoteAdditionalFieldsWorkerType:
    enum:
      - Skilled
      - Unskilled
    docs: Type of worker.
    inline: true
    source:
      openapi: ../openapi.yml
  EorContractToCreateQuoteAdditionalFields:
    docs: >-
      Some countries require additional employee information for employment
      contracts.
    properties:
      gender:
        type: optional<string>
        docs: Employee's gender.
      worker_type:
        type: optional<EorContractToCreateQuoteAdditionalFieldsWorkerType>
        docs: Type of worker.
      dob:
        type: optional<string>
        docs: Employee's date of birth.
    source:
      openapi: ../openapi.yml
    inline: true
  EorContractToCreate:
    properties:
      employee: optional<EorContractToCreateEmployee>
      employment: EorContractToCreateEmployment
      job_title:
        type: optional<string>
        docs: Employee's job title.
      seniority: EorContractToCreateSeniority
      client: EorContractToCreateClient
      compensation_details: EorContractToCreateCompensationDetails
      quote_additional_fields:
        type: optional<EorContractToCreateQuoteAdditionalFields>
        docs: >-
          Some countries require additional employee information for employment
          contracts.
      health_plan_id:
        type: optional<string>
        docs: >-
          Healthare plan Id. You can see available healthcare plans in the
          country guide endpoint.
    source:
      openapi: ../openapi.yml
  EorContractCreatedEmployment:
    properties:
      scope_of_work:
        type: optional<string>
        docs: Scope of work description.
      start_date: optional<DateString>
      end_date: optional<DateString>
      country:
        type: optional<string>
        docs: Country of employement.
      state:
        type: optional<string>
        docs: >-
          State code of the state/province where the this person will be
          employed.
      work_visa_required:
        type: optional<boolean>
        docs: Do you require Deel to apply for work visa for this person?
      time_off_type:
        type: optional<string>
        docs: >-
          If you want to use standard number of holidays for this employee,
          choose "STANDARD". If you want to enter a specific number of holidays,
          choose "SPECIFIC" and enter the number of days in the holidays field.
      probation_period:
        type: optional<double>
        docs: Number of probation days.
      calculated_holidays:
        type: optional<string>
        docs: Number of calculate holidays for this contract.
    source:
      openapi: ../openapi.yml
    inline: true
  EorContractCreatedClientLegalEntity:
    properties:
      name:
        type: optional<string>
        docs: Legal entity name.
    source:
      openapi: ../openapi.yml
    inline: true
  EorContractCreatedClient:
    properties:
      legal_entity: optional<EorContractCreatedClientLegalEntity>
    source:
      openapi: ../openapi.yml
    inline: true
  EorContractCreatedCompensationDetails:
    properties:
      salary:
        type: optional<double>
        docs: Gross annual salary.
      currency:
        type: optional<string>
        docs: Currency of gross annual salary.
      variable_compensation:
        type: optional<string>
        docs: Variable compensation acount or percentage.
      variable_compensation_type:
        type: optional<string>
        docs: Type fo variable compensation.
    source:
      openapi: ../openapi.yml
    inline: true
  EorContractCreatedEmployee:
    properties:
      legal_name:
        type: optional<string>
        docs: Employee's legal name.
      first_name:
        type: optional<string>
        docs: Employee's first name.
      last_name:
        type: optional<string>
        docs: Employee's last name.
      email:
        type: optional<string>
        docs: Employee's email.
    source:
      openapi: ../openapi.yml
    inline: true
  EorContractCreatedHealthPlan:
    properties:
      id:
        type: optional<string>
        docs: Health plan ID
      name:
        type: optional<string>
        docs: Health plan name
    source:
      openapi: ../openapi.yml
    inline: true
  EorContractCreated:
    properties:
      id:
        type: optional<string>
        docs: Id of the contract quote created
      type: optional<ContractTypeEnum>
      created_at: optional<DateTimeString>
      status: optional<ContractStatusEnum>
      job_title:
        type: optional<string>
        docs: Employee's job title.
      employment: optional<EorContractCreatedEmployment>
      client: optional<EorContractCreatedClient>
      compensation_details: optional<EorContractCreatedCompensationDetails>
      employee: optional<EorContractCreatedEmployee>
      health_plan: optional<EorContractCreatedHealthPlan>
      seniority: optional<Seniority>
    source:
      openapi: ../openapi.yml
  EorCountryValidationsHoliday:
    docs: Range of the number of holidays.
    properties:
      min:
        type: optional<string>
        docs: Minimum number of holidays required for a legally compliant contract.
    source:
      openapi: ../openapi.yml
    inline: true
  EorCountryValidationsPartTimeHolidayType:
    enum:
      - PRORATED
      - STANDARD
      - SPECIFIC
    inline: true
    source:
      openapi: ../openapi.yml
  EorCountryValidationsPartTimeHoliday:
    docs: Holiday type and range for part-time contracts.
    properties:
      type: optional<EorCountryValidationsPartTimeHolidayType>
      min:
        type: optional<string>
        docs: Minimum number of holidays required for a legally compliant contract.
    source:
      openapi: ../openapi.yml
    inline: true
  EorCountryValidationsSickDays:
    properties:
      min:
        type: optional<string>
        docs: Minimum number of sick days required for a legally compliant contract.
      max:
        type: optional<string>
        docs: Maximum number of sick days allowed for a legally compliant contract.
    source:
      openapi: ../openapi.yml
    inline: true
  EorCountryValidationsSalary:
    docs: Salary range.
    properties:
      min:
        type: optional<string>
        docs: Minimum wage for a legally compliant contract.
      max:
        type: optional<string>
        docs: Maximum wage allowed for a legally compliant contract.
    source:
      openapi: ../openapi.yml
    inline: true
  EorCountryValidationsProbation:
    docs: Probation period range.
    properties:
      min:
        type: optional<string>
        docs: Minimum probation days required for a legally compliant contract.
      max:
        type: optional<double>
        docs: Maximum probation days allowed for a legally compliant contract.
    source:
      openapi: ../openapi.yml
    inline: true
  EorCountryValidationsPartTimeProbation:
    docs: Probation period range for part-time contracts.
    properties:
      min:
        type: optional<double>
        docs: Minimum probation days required for a legally compliant contract.
      max:
        type: optional<double>
        docs: Maximum probation days allowed for a legally compliant contract.
    source:
      openapi: ../openapi.yml
    inline: true
  EorCountryValidationsWorkScheduleDays:
    properties:
      max: optional<string>
    source:
      openapi: ../openapi.yml
    inline: true
  EorCountryValidationsWorkScheduleHours:
    properties:
      max: optional<string>
    source:
      openapi: ../openapi.yml
    inline: true
  EorCountryValidationsWorkSchedule:
    docs: Employee's Work schedule in days and hours.
    properties:
      days: optional<EorCountryValidationsWorkScheduleDays>
      hours: optional<EorCountryValidationsWorkScheduleHours>
    source:
      openapi: ../openapi.yml
    inline: true
  EorCountryValidationsDefiniteContractType:
    enum:
      - ALLOWED_WITHOUT_LIMITATION
      - ALLOWED_WITH_MAXIMUM_LIMITATION
      - NOT_ALLOWED
    inline: true
    source:
      openapi: ../openapi.yml
  EorCountryValidationsDefiniteContract:
    docs: Conditions to make definitive contract.
    properties:
      type: optional<EorCountryValidationsDefiniteContractType>
      maximum_limitation: optional<double>
    source:
      openapi: ../openapi.yml
    inline: true
  EorCountryValidationsHealthInsurance:
    properties:
      status: optional<HealthInsuranceStatusEnum>
      providers: optional<list<HealthInsuranceProvider>>
    source:
      openapi: ../openapi.yml
    inline: true
  EorCountryValidations:
    properties:
      holiday:
        type: optional<EorCountryValidationsHoliday>
        docs: Range of the number of holidays.
      part_time_holiday:
        type: optional<EorCountryValidationsPartTimeHoliday>
        docs: Holiday type and range for part-time contracts.
      sick_days: optional<EorCountryValidationsSickDays>
      salary:
        type: optional<EorCountryValidationsSalary>
        docs: Salary range.
      probation:
        type: optional<EorCountryValidationsProbation>
        docs: Probation period range.
      part_time_probation:
        type: optional<EorCountryValidationsPartTimeProbation>
        docs: Probation period range for part-time contracts.
      work_schedule:
        type: optional<EorCountryValidationsWorkSchedule>
        docs: Employee's Work schedule in days and hours.
      insurance_fee:
        type: optional<string>
        docs: Insurance fee.
      currency:
        type: optional<string>
        docs: Country currency.
      hiring_guide_country_name:
        type: optional<string>
        docs: Country name.
      start_date_buffer:
        type: optional<double>
        docs: >-
          Calculate employee's minimum start date using the start date buffer.
          Today's date + (number of business days x start_date_buffer) = Minimum
          start date.
      definite_contract:
        type: optional<EorCountryValidationsDefiniteContract>
        docs: Conditions to make definitive contract.
      adjustments_information_box:
        type: optional<string>
        docs: Country specific notes and information.
      health_insurance: optional<EorCountryValidationsHealthInsurance>
    source:
      openapi: ../openapi.yml
  HealthInsuranceProviderAttachmentsItem:
    properties:
      id: optional<double>
      label: optional<string>
    source:
      openapi: ../openapi.yml
    inline: true
  HealthInsuranceProviderPlansItem:
    properties:
      id:
        type: optional<double>
        docs: Insurance plan id.
      name:
        type: optional<string>
        docs: Insurance plan name.
      price:
        type: optional<string>
        docs: Insurance price.
      currency:
        type: optional<string>
        docs: Insurance payment currency.
      is_enabled: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  HealthInsuranceProvider:
    docs: Health insurance provider.
    properties:
      name:
        type: optional<string>
        docs: Name of insurance provider.
      is_unisure: optional<boolean>
      home_page_url:
        type: optional<string>
        docs: Insurance provider's home page url.
      currency:
        type: optional<string>
        docs: Payment currency.
      type:
        type: optional<string>
        docs: Insurance type.
      ending_rule:
        type: optional<string>
        docs: Insurance cycle ending rule.
      days_to_cancel:
        type: optional<string>
        docs: Days to cancel the insurance.
      pricing_info_link:
        type: optional<string>
        docs: URL to price info.
      fixed_price:
        type: optional<boolean>
        docs: URL to price info.
      attachments:
        type: optional<list<HealthInsuranceProviderAttachmentsItem>>
        docs: File attachments.
      client_info_banner:
        type: optional<string>
        docs: Health insurance info banner.
      is_available_for_new_quotes: optional<boolean>
      plans: optional<list<HealthInsuranceProviderPlansItem>>
    source:
      openapi: ../openapi.yml
  EorClientTimeoffs:
    properties:
      employees:
        docs: List of employee time offs.
        type: list<EorTimeoffsEmployeeItem>
      total_requests: double
    source:
      openapi: ../openapi.yml
  EorTimeoffsEmployeeItem:
    properties:
      id: double
      name: string
      eor_contract_id: double
      contract_id: string
      vacations:
        docs: List of employee vacation time offs.
        type: list<EorClientTimeoffRequests>
      sick_leaves:
        docs: List of employee sick leave time offs.
        type: list<EorClientTimeoffRequests>
      others:
        docs: List of all other employee time offs.
        type: list<EorClientTimeoffRequests>
      time_zones: string
    source:
      openapi: ../openapi.yml
  EorClientTimeoffRequests:
    properties:
      year: optional<double>
      days_requested:
        type: optional<double>
        docs: Days off requested by employee.
      current_approved:
        type: optional<double>
        docs: Days off approved.
      yearly_limit:
        type: optional<double>
        docs: Total number of days off allowed per year.
      over_annual_limit:
        type: optional<boolean>
        docs: Too many days off requested by employee.
      yearly_requests:
        type: optional<double>
        docs: Total number of time off requests this year.
      requests:
        docs: List of time offs.
        type: list<EorTimeoffsItem>
    source:
      openapi: ../openapi.yml
  EorTimeoffs:
    docs: List of time offs.
    type: list<EorTimeoffsItem>
  EorTimeoffsItem:
    properties:
      id: double
      contract_id: optional<string>
      created_at: optional<DateTimeString>
      updated_at: optional<DateTimeString>
      start_date: optional<DateTimeString>
      end_date: optional<DateTimeString>
      can_request_changes:
        type: optional<boolean>
        docs: Indicates if it is possible to make changes to the time off request.
      is_updated:
        type: optional<boolean>
        docs: If true, an update to the original time off request was made.
      change_request:
        type: optional<EorTimeoffsBaseItem>
        docs: >-
          Only valid if the requester asks to change existing time off and it
          has been reviewed.
      applied_changes:
        type: optional<list<EorTimeoffsBaseItem>>
        docs: List of changes applied to the time off.
    extends:
      - EorTimeoffsBaseItem
    source:
      openapi: ../openapi.yml
  EorTimeoffsBaseItem:
    properties:
      reason:
        type: optional<string>
        docs: Reason for requesting time off.
      type:
        type: TimeoffsTypeEnum
        docs: The type of time off.
      requested_at:
        type: optional<DateTimeString>
        docs: Timestamp when time off was requested.
      reviewed_at:
        type: optional<DateTimeString>
        docs: Timestamp when time off was reviewed.
      denial_reason:
        type: optional<string>
        docs: Reason why time off was denied.
      has_multiple_dates:
        type: optional<boolean>
        docs: Indicates if multiple time off days are requested.
      status:
        type: TimeoffsStatusEnum
        docs: Status of the time off request.
      other_timeoff_name:
        type: optional<string>
        docs: Custom title for the time off. Only specify if type is "OTHER".
      requester:
        type: optional<TimeoffsProfile>
        docs: Employee who requested the time off.
      reviewer:
        type: optional<TimeoffsProfile>
        docs: User who reviewed the time off.
      days_used_start_year:
        type: optional<string>
        docs: Days used at the start year.
      days_used_end_year:
        type: optional<string>
        docs: Days used at the end year.
      total_days_used:
        type: optional<string>
        docs: Total number of time off days used.
      start_date_is_half_day:
        type: optional<boolean>
        docs: Indicates if the first day of time off is a half day.
      end_date_is_half_day:
        type: optional<boolean>
        docs: Indicates if the last day of time off is a half day.
      single_date: optional<DateTimeString>
      date_is_half_day:
        type: optional<boolean>
        docs: If true, only a single date was specified.
      attachments: optional<TimeoffsAttachments>
    source:
      openapi: ../openapi.yml
  TimeoffsAttachments:
    docs: A list of attachments. 2022-09-08 FE only allows for "SICK LEAVE"
    type: list<TimeoffsAttachmentsItem>
  TimeoffsAttachmentsItem:
    docs: A item in attachments array. 2022-09-08 FE only allows for "SICK LEAVE"
    properties:
      id: optional<integer>
      label:
        type: optional<string>
        docs: The file name
      file_extension:
        type: optional<string>
        docs: The file name extension
    source:
      openapi: ../openapi.yml
  TimeoffsStatusEnum:
    enum:
      - REQUESTED
      - APPROVED
      - REJECTED
    source:
      openapi: ../openapi.yml
  TimeoffsTypeEnum:
    enum:
      - VACATION
      - SICK_LEAVE
      - OTHER
    source:
      openapi: ../openapi.yml
  HealthInsuranceStatusEnum:
    enum:
      - REQUIRED
      - ENABLED
      - DISABLED
    docs: Health insurance status.
    source:
      openapi: ../openapi.yml
  InvoiceContractTypes:
    enum:
      - pending
      - paid
      - processing
      - canceled
      - skipped
      - failed
      - refunded
    docs: invoice's allowed contract types
    source:
      openapi: ../openapi.yml
  InvoiceContract:
    properties:
      id:
        type: string
        docs: Unique identifier of a Deel contract.
      name:
        type: optional<string>
        docs: Contract title.
      contract_type:
        type: string
        docs: Type of Deel contract.
    source:
      openapi: ../openapi.yml
  TimeoffsProfile:
    properties:
      id: double
      name: string
      pic_url:
        type: optional<UrlType>
        docs: Avatar or selfie.
      profile_type: ProfileTypeEnum
      is_employee:
        type: optional<boolean>
        docs: Only valid for requester. True if requester is an employee.
    source:
      openapi: ../openapi.yml
  TimeoffReview:
    properties:
      is_approved:
        type: boolean
        docs: Approve or decline employee's time off request.
      denial_reason:
        type: optional<string>
        docs: Denial reason for the time off requested.
    source:
      openapi: ../openapi.yml
  TimeoffTypeListContainer:
    properties:
      data: TimeoffTypeList
    source:
      openapi: ../openapi.yml
  TimeoffTypeList: list<string>
  CreateTimeoffContainer:
    properties:
      data: CreateTimeoff
    source:
      openapi: ../openapi.yml
  CreateTimeoffType:
    enum:
      - VACATION
      - SICK_LEAVE
      - OTHER
    docs: Time off type.
    inline: true
    source:
      openapi: ../openapi.yml
  CreateTimeoff:
    properties:
      type:
        type: CreateTimeoffType
        docs: Time off type.
      start_date:
        type: optional<string>
        docs: Start date of employee's time off.
      end_date:
        type: optional<string>
        docs: End date of employee's time off.
      with_multiple_dates:
        type: boolean
        docs: >-
          If true, then multiple time off days were requested. You must supply a
          start and end date. If false, end date is ignored
      reason:
        type: optional<string>
        docs: Description for employee's time off.
      is_start_date_half_day:
        type: optional<boolean>
        docs: Is the start day a half day?
      is_end_date_half_day:
        type: optional<boolean>
        docs: Is the start day a half day?
      other_timeoff_name:
        type: optional<string>
        docs: Custom name for this time off.
    source:
      openapi: ../openapi.yml
  EmployeeListContainer:
    properties:
      data: list<EmployeeList>
    source:
      openapi: ../openapi.yml
  EmployeeListPaymentsItem:
    properties:
      rate: optional<double>
      scale: optional<string>
      currency: optional<string>
      contract_name: optional<string>
    source:
      openapi: ../openapi.yml
    inline: true
  EmployeeListClientLegalEntity:
    properties:
      id: optional<double>
      name: optional<string>
    source:
      openapi: ../openapi.yml
    inline: true
  EmployeeListMonthlyPayment:
    properties:
      count: optional<double>
    source:
      openapi: ../openapi.yml
    inline: true
  EmployeeList:
    properties:
      id: optional<string>
      first_name: optional<string>
      last_name: optional<string>
      full_name: optional<string>
      email: optional<string>
      timezone: optional<string>
      personal_email: optional<string>
      country: optional<string>
      birth_date: optional<string>
      pic_url: optional<string>
      hiring_type: optional<string>
      start_date: optional<string>
      team: optional<string>
      team_id: optional<double>
      job_title: optional<string>
      payments: optional<list<EmployeeListPaymentsItem>>
      hourly_report_total: optional<string>
      client_legal_entity: optional<EmployeeListClientLegalEntity>
      state: optional<string>
      seniority: optional<string>
      completion_date: optional<string>
      hiring_status: optional<string>
      monthly_payment: optional<EmployeeListMonthlyPayment>
    source:
      openapi: ../openapi.yml
  WebhookItemStatus:
    enum:
      - enabled
      - disabled
    docs: Status of webhook.
    inline: true
    source:
      openapi: ../openapi.yml
  WebhookItem:
    properties:
      id:
        type: double
        docs: Webhook subscription's unique identifier.
      name:
        type: optional<string>
        docs: Webhook subscription name.
      description:
        type: optional<string>
        docs: Webhook subscription description.
      status:
        type: WebhookItemStatus
        docs: Status of webhook.
      url:
        type: string
        docs: Endpoint to receive webhook.
      signing_key:
        type: optional<string>
        docs: The webhook's signing key, used to generate webhook signatures.
      api_version:
        type: string
        docs: 'Deel API version. Currently Deel only has one version: v1.'
        default: v1
      events:
        docs: The list of events to enable for this subscription.
        type: list<string>
      created_at:
        type: string
        docs: Time at which the webhook was created.
      updated_at:
        type: string
        docs: Time at which the webhook was updated.
      hidden:
        type: optional<boolean>
        docs: >-
          Property to hide the webhook from frontend view. Commonly by Dell 3rd
          party apps
    source:
      openapi: ../openapi.yml
  WebhookListResponse:
    properties:
      data: list<WebhookItem>
    source:
      openapi: ../openapi.yml
  WebhookItemResponse:
    properties:
      data: WebhookItem
    source:
      openapi: ../openapi.yml
  PaymentObject:
    properties:
      rows: optional<PaymentList>
      total: optional<double>
    source:
      openapi: ../openapi.yml
  PaymentListContainer:
    properties:
      data: PaymentObject
    source:
      openapi: ../openapi.yml
  PaymentList: list<Payment>
  PaymentWorkerList: list<PaymentWorker>
  PaymentWorker:
    properties:
      name:
        type: string
        docs: Worker's full name.
        default: ''
      picUrl:
        type: optional<string>
        docs: URL to worker's Deel avatar.
      contract_id:
        type: optional<string>
        docs: The worker's Deel contract Id.
    source:
      openapi: ../openapi.yml
  PaymentMethod:
    properties:
      type: PaymentMethodEnum
    source:
      openapi: ../openapi.yml
  Payment:
    properties:
      id:
        type: double
        docs: Unique identifier of the payment.
      payment_method: PaymentMethod
      status: PaymentStatusEnum
      payment_currency: CurrencyCode
      label: string
      paid_at:
        type: optional<DateTimeString>
        docs: Timestamp when payment was paid.
      created_at:
        type: optional<DateTimeString>
        docs: Timestamp when the record was created.
      total:
        type: double
        docs: Total paid.
      workers: PaymentWorkerList
    source:
      openapi: ../openapi.yml
  PaymentBreakDownContainer:
    properties:
      data: list<PaymentBreakDown>
    source:
      openapi: ../openapi.yml
  PeopleContainer:
    properties:
      data: list<People>
    source:
      openapi: ../openapi.yml
  PeopleMeContainer: PeopleMe
  ContractDocumentContainer:
    properties:
      data: optional<FileAttachmentInfo>
    source:
      openapi: ../openapi.yml
  PaymentBreakDown:
    properties:
      date: optional<string>
      general_ledger_account: optional<string>
      team: optional<string>
      contractor_unique_identifier:
        type: optional<string>
        docs: Worker's unique identifier.
      contractor_employee_name:
        type: optional<string>
        docs: Worker's name.
      contractor_email:
        type: optional<string>
        docs: Worker's email.
      invoice_number:
        type: optional<string>
        docs: Invoice number.
      currency:
        type: optional<string>
        docs: Currency code.
      payment_currency: optional<string>
      receipt_number: optional<string>
      work: optional<string>
      bonus: optional<string>
      expenses: optional<string>
      commissions: optional<string>
      deductions: optional<string>
      overtime: optional<string>
      pro_rata: optional<string>
      others: optional<string>
      processing_fee: optional<string>
      adjustment: optional<string>
      total:
        type: optional<string>
        docs: Total due.
      total_payment_currency:
        type: optional<string>
        docs: Total in payment currency.
      payment_date:
        type: optional<string>
        docs: Date of payment.
      frequency: optional<string>
      contract_country:
        type: optional<string>
        docs: Country of the contract.
      contract_start_date:
        type: optional<string>
        docs: Contract start date.
      approvers: optional<string>
      approve_date: optional<string>
    source:
      openapi: ../openapi.yml
  InvoiceObject:
    properties:
      rows: optional<InvoiceList>
      total: optional<double>
    source:
      openapi: ../openapi.yml
  InvoiceDownloadObject:
    properties:
      id:
        type: optional<string>
        docs: Requested invoice id to download.
      url:
        type: optional<string>
        docs: URL to requested invoice to download.
      expires_at:
        type: optional<datetime>
        docs: Expiration date time of download URL.
    source:
      openapi: ../openapi.yml
  InvoiceListContainer:
    properties:
      data: InvoiceObject
    source:
      openapi: ../openapi.yml
  InvoiceDownloadContainer:
    properties:
      data: InvoiceDownloadObject
    source:
      openapi: ../openapi.yml
  InvoiceList: list<Invoice>
  ExchangeRates:
    properties:
      risk: optional<double>
      rates: optional<map<string, unknown>>
    source:
      openapi: ../openapi.yml
  Invoice:
    properties:
      id:
        type: double
        docs: Unique identifier of the invoice.
      invoice_id:
        type: string
        docs: Unique oid of the invoice.
      status: InvoiceStatusEnum
      currency: CurrencyCode
      payment_currency: CurrencyCode
      contract: InvoiceContract
      created_at: optional<DateTimeString>
      total:
        type: double
        docs: Total invoice amount including Fee and VAT.
      label:
        type: optional<string>
        docs: Invoice label as displayed in Deel platform.
      payment_method: optional<PaymentMethodEnum>
      paid_at: optional<DateTimeString>
      money_received_at: optional<DateTimeString>
      payment_processed_at: optional<DateTimeString>
      fee:
        type: optional<double>
        docs: Fee added to the amount.
      exchange_fee: optional<double>
      amount:
        type: optional<double>
        docs: Billed amount.
      vat_total:
        type: optional<double>
        docs: Amount of VAT.
      vat_percentage:
        type: optional<double>
        docs: VAT percentrage.
      is_overdue:
        type: optional<boolean>
        docs: Indicates if the invoice is overdue.
      is_offcycle:
        type: optional<boolean>
        docs: Indicates if the invoice related to an offcycle payment.
    source:
      openapi: ../openapi.yml
  Contractor:
    properties:
      name:
        type: string
        default: ''
    source:
      openapi: ../openapi.yml
  HrisDirectEmployeeDetails:
    properties:
      first_name:
        type: string
        validation:
          minLength: 3
          maxLength: 100
      last_name:
        type: string
        validation:
          minLength: 3
          maxLength: 100
      email:
        type: string
        validation:
          minLength: 3
          maxLength: 255
      work_email:
        type: string
        validation:
          minLength: 3
          maxLength: 255
      nationality:
        type: string
        validation:
          minLength: 2
          maxLength: 2
      country:
        type: string
        validation:
          minLength: 2
          maxLength: 2
      state:
        type: optional<string>
        validation:
          minLength: 1
          maxLength: 50
    source:
      openapi: ../openapi.yml
  HrisTeamInformation:
    properties:
      team_id: double
      legal_entity_id: double
    source:
      openapi: ../openapi.yml
  HrisJobInformationBase:
    properties:
      seniority_id: double
    source:
      openapi: ../openapi.yml
  HrisJobInformationTitleId:
    properties:
      job_title_id: double
    extends:
      - HrisJobInformationBase
    source:
      openapi: ../openapi.yml
  HrisJobInformationTitleName:
    properties:
      job_title_name: string
    extends:
      - HrisJobInformationBase
    source:
      openapi: ../openapi.yml
  HrisCompensation:
    properties:
      gross_annual_salary: float
      currency:
        type: string
        validation:
          minLength: 3
          maxLength: 3
    source:
      openapi: ../openapi.yml
  HrisContractBase:
    properties:
      contract_oid:
        type: string
        docs: The Hris Direct employee contract ID
      start_date: DateStringRequired
      employee_number: optional<double>
      end_date: optional<DateString>
    source:
      openapi: ../openapi.yml
  HrisContractPartTime:
    properties:
      part_time_percentage:
        type: double
        docs: required if employmentType is "PART_TIME"
        validation:
          min: 1
          max: 99
    extends:
      - HrisContractBase
    source:
      openapi: ../openapi.yml
  HrisContractFullTime:
    properties: {}
    extends:
      - HrisContractBase
    source:
      openapi: ../openapi.yml
  HrisDirectEmployeeJobInformation:
    discriminated: false
    union:
      - HrisJobInformationTitleId
      - HrisJobInformationTitleName
    source:
      openapi: ../openapi.yml
    inline: true
  HrisDirectEmployeeContract:
    discriminant: employment_type
    base-properties: {}
    union:
      PART_TIME: HrisContractPartTime
      FULL_TIME: HrisContractFullTime
    source:
      openapi: ../openapi.yml
  HrisDirectEmployeeVacationInfo:
    properties:
      vacation_accrual_start_date:
        type: string
        validation:
          format: date
      vacation_yearly_policy:
        type: double
        validation:
          min: 1
          max: 365
    source:
      openapi: ../openapi.yml
    inline: true
  HrisDirectEmployee:
    properties:
      employee_details: HrisDirectEmployeeDetails
      team_information: HrisTeamInformation
      job_information: HrisDirectEmployeeJobInformation
      compensation: HrisCompensation
      contract: HrisDirectEmployeeContract
      vacation_info: optional<HrisDirectEmployeeVacationInfo>
    source:
      openapi: ../openapi.yml
  HrisDirectEmployeeResponse:
    properties:
      id:
        type: optional<string>
        docs: The Hris Direct employee ID
    extends:
      - HrisDirectEmployee
    source:
      openapi: ../openapi.yml
  HrisDirectEmployeeContainer:
    properties:
      data: HrisDirectEmployeeResponse
    source:
      openapi: ../openapi.yml
  PeopleClientLegalEntity:
    properties:
      id:
        type: optional<integer>
        docs: The unique identifier for the client legal entity.
      name:
        type: optional<string>
        docs: The name of the client legal entity.
    source:
      openapi: ../openapi.yml
  PeoplePayment:
    properties:
      rate:
        type: optional<integer>
        docs: The payment rate
      scale:
        type: optional<string>
        docs: The payment scale (e.g., hourly, weekly, monthly, etc.)
      currency:
        type: optional<string>
        docs: The currency code (ISO 4217) for the payment
      contract_name:
        type: optional<string>
        docs: The name of the contract associated with the payment
    source:
      openapi: ../openapi.yml
  Employment:
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the employment.
      name:
        type: optional<string>
        docs: The name of the employment.
      team:
        type: optional<Team>
        docs: The team associated with the employment.
      email:
        type: optional<string>
        docs: The email associated with the employment.
      state:
        type: optional<string>
        docs: The state associated with the employment.
      country:
        type: optional<string>
        docs: The country associated with the employment.
      payment:
        type: optional<PeoplePayment>
        docs: The payment information associated with the employment.
      is_ended:
        type: optional<boolean>
        docs: Indicates whether the employment has ended.
      timezone:
        type: optional<string>
        docs: The timezone associated with the employment.
      job_title:
        type: optional<string>
        docs: The job title associated with the employment.
      seniority:
        type: optional<string>
        docs: The seniority level associated with the employment.
      start_date:
        type: optional<string>
        docs: The start date of the employment.
      work_email:
        type: optional<string>
        docs: The work email associated with the employment.
      hiring_type:
        type: optional<string>
        docs: The hiring type associated with the employment.
      hiring_status:
        type: optional<string>
        docs: The hiring status associated with the employment.
      completion_date:
        type: optional<string>
        docs: The completion date of the employment.
      contract_status:
        type: optional<string>
        docs: The contract status associated with the employment.
      voluntarily_left:
        type: optional<boolean>
        docs: Indicates whether the employment was left voluntarily.
      client_legal_entity:
        type: optional<PeopleClientLegalEntity>
        docs: The client legal entity associated with the employment.
      has_eor_termination:
        type: optional<boolean>
        docs: Indicates whether the employment had an EOR termination.
      contract_is_archived:
        type: optional<boolean>
        docs: Indicates whether the employment's contract is archived.
    source:
      openapi: ../openapi.yml
  MonthlyPayment:
    docs: Monthly payment details for the user
    properties:
      count:
        type: optional<integer>
        docs: The number of monthly payments
    source:
      openapi: ../openapi.yml
  Team:
    properties:
      id:
        type: optional<integer>
        docs: The unique identifier for the team.
      name:
        type: optional<string>
        docs: The name of the team.
    source:
      openapi: ../openapi.yml
  People:
    docs: People object representing a Deel
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the user
      first_name:
        type: optional<string>
        docs: First name of the user
      last_name:
        type: optional<string>
        docs: Last name of the user
      full_name:
        type: optional<string>
        docs: Full name of the user
      email:
        type: optional<string>
        docs: Email address of the user
      work_email:
        type: optional<string>
        docs: Work email address of the user
      personal_email:
        type: optional<string>
        docs: Personal email address of the user
      country_name:
        type: optional<string>
        docs: Name of the country where the user is located
      birth_date:
        type: optional<string>
        docs: Date of birth of the user in ISO format (yyyy-mm-dd)
      pic_url:
        type: optional<string>
        docs: URL of the user's profile picture
      start_date:
        type: optional<string>
        docs: >-
          Date when the user started their current employment in ISO format
          (yyyy-mm-dd)
      payments:
        type: optional<list<Payment>>
        docs: List of payment objects representing the user's payment history
      hourly_report_total:
        type: optional<string>
        docs: Total amount of hours worked by the user in ISO format (hh:mm:ss)
      client_legal_entity:
        type: optional<PeopleClientLegalEntity>
        docs: >-
          Object representing the client legal entity that the user is
          associated with
      state:
        type: optional<string>
        docs: State where the user is located
      seniority:
        type: optional<string>
        docs: Seniority level of the user's role
      completion_date:
        type: optional<string>
        docs: >-
          Date when the user's current employment is expected to end in ISO
          format (yyyy-mm-ddThh:mm:ss.sssZ)
      monthly_payment:
        type: optional<MonthlyPayment>
        docs: Object representing the user's monthly payment information
      direct_manager:
        type: optional<string>
        docs: Name of the user's direct manager
      direct_reports:
        type: optional<string>
        docs: Names of the user's direct reports
      direct_reports_count:
        type: optional<integer>
        docs: Number of direct reports that the user has
      employments:
        type: optional<list<Employment>>
        docs: List of employment objects representing the user's employment history
      hiring_status:
        type: optional<string>
        docs: Hiring status of the user
      hiring_type:
        type: optional<string>
        docs: Type of employment contract that the user has
      job_title:
        type: optional<string>
        docs: Title of the user's role
      country:
        type: optional<string>
        docs: ISO 3166-1 alpha-2 code of the country where the user is located
      team_id:
        type: optional<integer>
        docs: Unique identifier for the team that the user belongs to
      team:
        type: optional<string>
        docs: Name of the team that the user belongs to
      timezone:
        type: optional<string>
        docs: Time zone of the user's location
      department:
        type: optional<string>
        docs: Name of the department that the user belongs to
      work_location:
        type: optional<string>
        docs: Name of the user's work location
      contract_types:
        type: optional<list<string>>
        docs: >-
          List of contract types that the user has had in the past and/or
          currently has
      has_deel_user:
        type: optional<boolean>
        docs: Indicates whether the user has a Deel account or not
    source:
      openapi: ../openapi.yml
  PeopleMe:
    docs: People object representing a Deel
    properties:
      id:
        type: optional<double>
        docs: Unique identifier for the user profile
      user_id:
        type: optional<double>
        docs: Unique identifier for the user
      username:
        type: optional<string>
        docs: Username of the user
      first_name:
        type: optional<string>
        docs: First name of the user
      middle_name:
        type: optional<string>
        docs: Middle name of the user
      last_name:
        type: optional<string>
        docs: Last name of the user
      full_name:
        type: optional<string>
        docs: Full name of the user
      email:
        type: optional<string>
        docs: Email address of the user
      avatar_url:
        type: optional<string>
        docs: URL of the user's avatar
      profile_type: optional<ProfileTypeEnum>
      slack_user_id:
        type: optional<string>
        docs: User's slack id
      slack_team_id:
        type: optional<string>
        docs: User's team slack id
      organization_id:
        type: optional<double>
        docs: Unique identifier for the organization
      organization_name:
        type: optional<string>
        docs: Name of the organization
      client_country: optional<CountryCodeNulleable>
      contractor_country: optional<CountryCodeNulleable>
    source:
      openapi: ../openapi.yml
  ContractPreview: string
  UniqueObjectIdentifier:
    discriminated: false
    docs: Unique identifier of this resource.
    union:
      - string
      - double
    source:
      openapi: ../openapi.yml
  PublicId:
    type: optional<string>
    docs: The public UUID of the object
errors:
  CreateDirectEmployeeRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateDirectEmployeeRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateDirectEmployeeRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateDirectEmployeeRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateDirectEmployeeRequestConflictError:
    status-code: 409
    type: unknown
    docs: A matching profile already exists
  CreateDirectEmployeeRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetEorCountryValidationsRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetEorCountryValidationsRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetEorCountryValidationsRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetEorCountryValidationsRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateEorContractRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateEorContractRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateEorContractRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateEorContractRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractTimeBasedRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractTimeBasedRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractTimeBasedRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractTimeBasedRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractTimeBasedRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractTimeBasedRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractTimeBasedRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractTaskBasedRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractTaskBasedRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractTaskBasedRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractTaskBasedRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractTaskBasedRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractTaskBasedRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractTaskBasedRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractMilestoneBasedRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractMilestoneBasedRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractMilestoneBasedRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractMilestoneBasedRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractMilestoneBasedRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractMilestoneBasedRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractMilestoneBasedRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractFixedRateRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractFixedRateRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractFixedRateRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractFixedRateRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractFixedRateRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractFixedRateRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractFixedRateRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetContractListRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetContractListRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetContractListRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetContractListRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetContractListRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetContractListRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetContractListRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetContractByIdRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetContractByIdRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetContractByIdRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetContractByIdRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetContractByIdRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetContractByIdRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetContractByIdRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  AttachExternalIdRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  AttachExternalIdRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  AttachExternalIdRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  AttachExternalIdRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  AttachExternalIdRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  AttachExternalIdRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  AttachExternalIdRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  AddContractDocumentRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  AddContractDocumentRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  AddContractDocumentRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  AddContractDocumentRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  AddContractDocumentRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  AddContractDocumentRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  AddContractDocumentRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  EditContractDocumentRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  EditContractDocumentRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  EditContractDocumentRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  EditContractDocumentRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  EditContractDocumentRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  EditContractDocumentRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  EditContractDocumentRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetContractPreviewRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetContractPreviewRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetContractPreviewRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetContractPreviewRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetContractPreviewRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetContractPreviewRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetContractPreviewRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTasksByContractRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTasksByContractRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTasksByContractRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTasksByContractRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTasksByContractRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTasksByContractRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTasksByContractRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractPgoTakRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractPgoTakRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractPgoTakRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractPgoTakRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractPgoTakRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractPgoTakRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateContractPgoTakRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetAlternateEmailsByContractIdRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetAlternateEmailsByContractIdRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetAlternateEmailsByContractIdRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetAlternateEmailsByContractIdRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetAlternateEmailsByContractIdRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTaskManyReviewRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTaskManyReviewRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTaskManyReviewRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTaskManyReviewRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTaskManyReviewRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTaskManyReviewRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTaskManyReviewRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTaskReviewByIdRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTaskReviewByIdRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTaskReviewByIdRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTaskReviewByIdRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTaskReviewByIdRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTaskReviewByIdRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTaskReviewByIdRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  DeleteContractPgoTakRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  DeleteContractPgoTakRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  DeleteContractPgoTakRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  DeleteContractPgoTakRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  DeleteContractPgoTakRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  DeleteContractPgoTakRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  DeleteContractPgoTakRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  AmendContractDetailsRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  AmendContractDetailsRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  AmendContractDetailsRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  AmendContractDetailsRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  AmendContractDetailsRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  AmendContractDetailsRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  AmendContractDetailsRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  TerminateContractRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  TerminateContractRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  TerminateContractRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  TerminateContractRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  TerminateContractRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  TerminateContractRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  TerminateContractRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  SignContractRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  SignContractRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  SignContractRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  SignContractRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  SignContractRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  SignContractRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  SignContractRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  ArchiveContractRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  ArchiveContractRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  ArchiveContractRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  ArchiveContractRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  ArchiveContractRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  InviteToSignContractRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  InviteToSignContractRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  InviteToSignContractRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  InviteToSignContractRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  InviteToSignContractRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  InviteToSignContractRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  InviteToSignContractRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  UninviteToSignContractRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  UninviteToSignContractRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  UninviteToSignContractRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  UninviteToSignContractRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  UninviteToSignContractRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  UninviteToSignContractRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  UninviteToSignContractRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTimesheetsByContractRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTimesheetsByContractRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTimesheetsByContractRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTimesheetsByContractRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTimesheetsByContractRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTimesheetsByContractRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTimesheetsByContractRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetMilestonesByContractRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetMilestonesByContractRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetMilestonesByContractRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetMilestonesByContractRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetMilestonesByContractRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetMilestonesByContractRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetMilestonesByContractRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateMilestoneRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateMilestoneRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateMilestoneRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateMilestoneRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateMilestoneRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateMilestoneRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateMilestoneRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetMilestonesByContractAndIdRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetMilestonesByContractAndIdRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetMilestonesByContractAndIdRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetMilestonesByContractAndIdRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetMilestonesByContractAndIdRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetMilestonesByContractAndIdRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetMilestonesByContractAndIdRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  DeleteMilestoneByIdRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  DeleteMilestoneByIdRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  DeleteMilestoneByIdRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  DeleteMilestoneByIdRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  DeleteMilestoneByIdRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  DeleteMilestoneByIdRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  DeleteMilestoneByIdRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateMilestoneReviewRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateMilestoneReviewRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateMilestoneReviewRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateMilestoneReviewRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateMilestoneReviewRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateMilestoneReviewRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateMilestoneReviewRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateMilestoneReviewsRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateMilestoneReviewsRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateMilestoneReviewsRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateMilestoneReviewsRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateMilestoneReviewsRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateMilestoneReviewsRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateMilestoneReviewsRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetOffCyclePaymentsByContractRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetOffCyclePaymentsByContractRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetOffCyclePaymentsByContractRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetOffCyclePaymentsByContractRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetOffCyclePaymentsByContractRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetOffCyclePaymentsByContractRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetOffCyclePaymentsByContractRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateOffCyclePaymentRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateOffCyclePaymentRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateOffCyclePaymentRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateOffCyclePaymentRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateOffCyclePaymentRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateOffCyclePaymentRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateOffCyclePaymentRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetOffCyclePaymentByContractAndIdRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetOffCyclePaymentByContractAndIdRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetOffCyclePaymentByContractAndIdRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetOffCyclePaymentByContractAndIdRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetOffCyclePaymentByContractAndIdRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetOffCyclePaymentByContractAndIdRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetOffCyclePaymentByContractAndIdRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  AddPremiumRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  AddPremiumRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  AddPremiumRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  AddPremiumRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  RemovePremiumFromContractRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  RemovePremiumFromContractRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  RemovePremiumFromContractRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  RemovePremiumFromContractRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  RemovePremiumFromContractRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  RemovePremiumFromContractRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  RemovePremiumFromContractRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CalculateFinalPaymentRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CalculateFinalPaymentRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CalculateFinalPaymentRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CalculateFinalPaymentRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  PostContractEstimateRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  PostContractEstimateRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  PostContractEstimateRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  PostContractEstimateRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetEorTimeOffsRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetEorTimeOffsRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetEorTimeOffsRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetEorTimeOffsRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateEorTimeOffsRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateEorTimeOffsRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateEorTimeOffsRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateEorTimeOffsRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  EditEorTimeOffsRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  EditEorTimeOffsRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  EditEorTimeOffsRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  EditEorTimeOffsRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  DeleteEorTimeOffsRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  DeleteEorTimeOffsRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  DeleteEorTimeOffsRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  DeleteEorTimeOffsRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTimesheetsRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTimesheetsRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTimesheetsRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTimesheetsRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTimesheetsRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTimesheetsRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTimesheetsRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTimesheetRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTimesheetRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTimesheetRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTimesheetRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTimesheetRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTimesheetRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTimesheetRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTimesheetByIdRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTimesheetByIdRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTimesheetByIdRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTimesheetByIdRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTimesheetByIdRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTimesheetByIdRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTimesheetByIdRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  DeleteTimesheetByIdRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  DeleteTimesheetByIdRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  DeleteTimesheetByIdRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  DeleteTimesheetByIdRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  DeleteTimesheetByIdRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  DeleteTimesheetByIdRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  DeleteTimesheetByIdRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  UpdateTimesheetByIdRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  UpdateTimesheetByIdRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  UpdateTimesheetByIdRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  UpdateTimesheetByIdRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  UpdateTimesheetByIdRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  UpdateTimesheetByIdRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  UpdateTimesheetByIdRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTimesheetReviewRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTimesheetReviewRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTimesheetReviewRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTimesheetReviewRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTimesheetReviewRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTimesheetReviewRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTimesheetReviewRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTimesheetReviewsRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTimesheetReviewsRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTimesheetReviewsRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTimesheetReviewsRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTimesheetReviewsRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTimesheetReviewsRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateTimesheetReviewsRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetInvoiceAdjustmentsByContractIdRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetInvoiceAdjustmentsByContractIdRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetInvoiceAdjustmentsByContractIdRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetInvoiceAdjustmentsByContractIdRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetInvoiceAdjustmentsByContractIdRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetInvoiceAdjustmentsByContractIdRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetInvoiceAdjustmentsByContractIdRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetInvoiceAdjustmentsRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetInvoiceAdjustmentsRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetInvoiceAdjustmentsRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetInvoiceAdjustmentsRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetInvoiceAdjustmentsRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetInvoiceAdjustmentsRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetInvoiceAdjustmentsRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateInvoiceAdjustmentRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateInvoiceAdjustmentRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateInvoiceAdjustmentRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateInvoiceAdjustmentRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateInvoiceAdjustmentRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateInvoiceAdjustmentRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateInvoiceAdjustmentRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  DeleteInvoiceAdjustmentByIdRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  DeleteInvoiceAdjustmentByIdRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  DeleteInvoiceAdjustmentByIdRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  DeleteInvoiceAdjustmentByIdRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  DeleteInvoiceAdjustmentByIdRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  DeleteInvoiceAdjustmentByIdRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  DeleteInvoiceAdjustmentByIdRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  UpdateInvoiceAdjustmentByIdRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  UpdateInvoiceAdjustmentByIdRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  UpdateInvoiceAdjustmentByIdRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  UpdateInvoiceAdjustmentByIdRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  UpdateInvoiceAdjustmentByIdRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  UpdateInvoiceAdjustmentByIdRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  UpdateInvoiceAdjustmentByIdRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateInvoiceAdjustmentReviewRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateInvoiceAdjustmentReviewRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateInvoiceAdjustmentReviewRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateInvoiceAdjustmentReviewRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateInvoiceAdjustmentReviewRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateInvoiceAdjustmentReviewRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateInvoiceAdjustmentReviewRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateInvoiceAdjustmentReviewsRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateInvoiceAdjustmentReviewsRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateInvoiceAdjustmentReviewsRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateInvoiceAdjustmentReviewsRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateInvoiceAdjustmentReviewsRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateInvoiceAdjustmentReviewsRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateInvoiceAdjustmentReviewsRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetLegalEntityListRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetLegalEntityListRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetLegalEntityListRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetLegalEntityListRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetLegalEntityListRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetLegalEntityListRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetLegalEntityListRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetCountriesRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetCountriesRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetCountriesRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetCountriesRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetCountriesRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetCountriesRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetCountriesRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetCurrenciesRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetCurrenciesRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetCurrenciesRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetCurrenciesRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetCurrenciesRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetCurrenciesRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetCurrenciesRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetJobTitleListRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetJobTitleListRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetJobTitleListRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetJobTitleListRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetJobTitleListRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetJobTitleListRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetJobTitleListRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetSeniorityListRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetSeniorityListRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetSeniorityListRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetSeniorityListRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetSeniorityListRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetSeniorityListRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetSeniorityListRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTimeoffTypeListRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTimeoffTypeListRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTimeoffTypeListRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTimeoffTypeListRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTimeoffTypeListRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTimeoffTypeListRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTimeoffTypeListRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetOrganizationsRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetOrganizationsRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetOrganizationsRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetOrganizationsRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetOrganizationsRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetOrganizationsRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetOrganizationsRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTeamsRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTeamsRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTeamsRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTeamsRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTeamsRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTeamsRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetTeamsRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateFileRefRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateFileRefRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateFileRefRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateFileRefRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateFileRefRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateFileRefRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetAgreementsRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetAgreementsRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetAgreementsRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetAgreementsRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetAgreementsRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetAgreementsRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetContractTemplatesRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetContractTemplatesRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetContractTemplatesRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetContractTemplatesRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetContractTemplatesRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetContractTemplatesRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetEorEntitlementsRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetEorEntitlementsRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetEorEntitlementsRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetEorEntitlementsRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetEorClientTimeOffsRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetEorClientTimeOffsRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetEorClientTimeOffsRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetEorClientTimeOffsRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  ReviewTimeoffRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  ReviewTimeoffRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  ReviewTimeoffRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  ReviewTimeoffRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  ReviewTimeoffRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  ReviewTimeoffRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  ReviewTimeoffRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetInvoiceListRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetInvoiceListRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetInvoiceListRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetInvoiceListRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetInvoiceListRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetInvoiceDownloadLinkRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetInvoiceDownloadLinkRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetInvoiceDownloadLinkRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetInvoiceDownloadLinkRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetInvoiceDownloadLinkRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetInvoiceDownloadLinkRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetInvoiceDownloadLinkRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetBillingInvoiceDownloadLinkRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetBillingInvoiceDownloadLinkRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetBillingInvoiceDownloadLinkRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetBillingInvoiceDownloadLinkRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetBillingInvoiceDownloadLinkRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetBillingInvoiceDownloadLinkRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetBillingInvoiceDownloadLinkRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetPaymentListRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetPaymentListRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetPaymentListRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetPaymentListRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetPaymentListRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetPeopleListRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetPeopleListRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetPeopleListRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetPeopleListRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetPeopleListRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetPeopleListRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetPeopleListRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetPeopleRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetPeopleRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetPeopleRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetPeopleRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetPeopleRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetPeopleRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetPeopleRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetAllWebhooksRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetAllWebhooksRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetAllWebhooksRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetAllWebhooksRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetAllWebhooksRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetAllWebhooksRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetAllWebhooksRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateWebhookRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateWebhookRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateWebhookRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateWebhookRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateWebhookRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateWebhookRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  CreateWebhookRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  WebhookControllerGetByIdRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  WebhookControllerGetByIdRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  WebhookControllerGetByIdRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  WebhookControllerGetByIdRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  WebhookControllerGetByIdRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  WebhookControllerGetByIdRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  WebhookControllerGetByIdRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  WebhookControllerDeleteByIdRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  WebhookControllerDeleteByIdRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  WebhookControllerDeleteByIdRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  WebhookControllerDeleteByIdRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  WebhookControllerDeleteByIdRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  WebhookControllerDeleteByIdRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  WebhookControllerDeleteByIdRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  WebhookControllerEditByIdRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  WebhookControllerEditByIdRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  WebhookControllerEditByIdRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  WebhookControllerEditByIdRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  WebhookControllerEditByIdRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  WebhookControllerEditByIdRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  WebhookControllerEditByIdRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetPaymentsBreakDownByIdRequestBadRequestError:
    status-code: 400
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetPaymentsBreakDownByIdRequestUnauthorizedError:
    status-code: 401
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetPaymentsBreakDownByIdRequestForbiddenError:
    status-code: 403
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetPaymentsBreakDownByIdRequestNotFoundError:
    status-code: 404
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetPaymentsBreakDownByIdRequestMethodNotAllowedError:
    status-code: 405
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetPaymentsBreakDownByIdRequestTooManyRequestsError:
    status-code: 429
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
  GetPaymentsBreakDownByIdRequestInternalServerError:
    status-code: 500
    type: ApiErrorContainer
    docs: Operation failed.
    examples:
      - value: {}
",
    },
    "accounting.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "End-points to retrieve paid invoices and reciepts.",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Accounting",
          "endpoints": {
            "GetPaymentsBreakDownById": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Retrieve a payment breakdown",
              "docs": "Get a full breakdown of a payment made to Deel. Breakdown will include individual invoices and Deel fee as line items.",
              "errors": [
                "root.GetPaymentsBreakDownByIdRequestBadRequestError",
                "root.GetPaymentsBreakDownByIdRequestUnauthorizedError",
                "root.GetPaymentsBreakDownByIdRequestForbiddenError",
                "root.GetPaymentsBreakDownByIdRequestNotFoundError",
                "root.GetPaymentsBreakDownByIdRequestMethodNotAllowedError",
                "root.GetPaymentsBreakDownByIdRequestTooManyRequestsError",
                "root.GetPaymentsBreakDownByIdRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "payment_id": "payment_id",
                  },
                  "response": {
                    "body": {
                      "data": [
                        {
                          "adjustment": "0.00",
                          "approve_date": "approve_date",
                          "approvers": "approvers",
                          "bonus": "0.00",
                          "commissions": "0.00",
                          "contract_country": "US",
                          "contract_start_date": "2020-03-31T10:58:49.780Z",
                          "contractor_email": "name@email.com",
                          "contractor_employee_name": "Jane Doe",
                          "contractor_unique_identifier": "12345",
                          "currency": "USD",
                          "date": "2022-10-01T00:59:28.482Z",
                          "deductions": "0.00",
                          "expenses": "0.00",
                          "frequency": "",
                          "general_ledger_account": "",
                          "invoice_number": "5069872",
                          "others": "0.00",
                          "overtime": "0.00",
                          "payment_currency": "USD",
                          "payment_date": "2022-11-01T17:20:32.837Z",
                          "pro_rata": "0.00",
                          "processing_fee": "0.00",
                          "receipt_number": "5551621",
                          "team": "Deel Inc.",
                          "total": "1000.00",
                          "total_payment_currency": "1000.00",
                          "work": "0.00",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/payments/{payment_id}/breakdown",
              "path-parameters": {
                "payment_id": "string",
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.PaymentBreakDownContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getBillingInvoiceDownloadLink": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Download Deel invoice PDF",
              "docs": "Get a link to download the Deel billing invoice PDF.",
              "errors": [
                "root.GetBillingInvoiceDownloadLinkRequestBadRequestError",
                "root.GetBillingInvoiceDownloadLinkRequestUnauthorizedError",
                "root.GetBillingInvoiceDownloadLinkRequestForbiddenError",
                "root.GetBillingInvoiceDownloadLinkRequestNotFoundError",
                "root.GetBillingInvoiceDownloadLinkRequestMethodNotAllowedError",
                "root.GetBillingInvoiceDownloadLinkRequestTooManyRequestsError",
                "root.GetBillingInvoiceDownloadLinkRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "invoice_id": 1000000,
                  },
                  "response": {
                    "body": {
                      "data": {
                        "expires_at": "2020-03-31T10:58:49Z",
                        "id": "12345",
                        "url": "https://s3URL/letsdeel.com/invoices/12345.pdf",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/billing/{invoice_id}/download",
              "path-parameters": {
                "invoice_id": {
                  "docs": "ID of an existing invoice",
                  "type": "long",
                },
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.InvoiceDownloadContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getInvoiceDownloadLink": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Download invoice PDF",
              "docs": "Get link to download the invoice PDF.",
              "errors": [
                "root.GetInvoiceDownloadLinkRequestBadRequestError",
                "root.GetInvoiceDownloadLinkRequestUnauthorizedError",
                "root.GetInvoiceDownloadLinkRequestForbiddenError",
                "root.GetInvoiceDownloadLinkRequestNotFoundError",
                "root.GetInvoiceDownloadLinkRequestMethodNotAllowedError",
                "root.GetInvoiceDownloadLinkRequestTooManyRequestsError",
                "root.GetInvoiceDownloadLinkRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "invoice_id": 1000000,
                  },
                  "response": {
                    "body": {
                      "data": {
                        "expires_at": "2020-03-31T10:58:49Z",
                        "id": "12345",
                        "url": "https://s3URL/letsdeel.com/invoices/12345.pdf",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/invoices/{invoice_id}/download",
              "path-parameters": {
                "invoice_id": {
                  "docs": "ID of an existing invoice",
                  "type": "long",
                },
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.InvoiceDownloadContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getInvoiceList": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Retrieve invoices",
              "docs": "Retrieve a list of paid invoices for your workforce.",
              "errors": [
                "root.GetInvoiceListRequestBadRequestError",
                "root.GetInvoiceListRequestUnauthorizedError",
                "root.GetInvoiceListRequestForbiddenError",
                "root.GetInvoiceListRequestNotFoundError",
                "root.GetInvoiceListRequestInternalServerError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "data": {
                        "rows": [
                          {
                            "contract": {
                              "contract_type": "pay_as_you_go_time_based",
                              "id": "rhCTiRd9Mad41RwjsFWw-",
                              "name": "Lisandro Shanahan-Dynamic Web Specialist",
                            },
                            "created_at": "2022-05-24T09:38:46Z",
                            "currency": "USD",
                            "id": 5586317,
                            "invoice_id": "rhCTiRd9Mad41RwjsFWw-",
                            "payment_currency": "USD",
                            "status": "pending",
                            "total": 1000,
                          },
                        ],
                        "total": 1.1,
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/invoices",
              "request": {
                "name": "GetInvoiceListRequest",
                "query-parameters": {
                  "entities": {
                    "allow-multiple": true,
                    "docs": "Filter by legal entity type; company, or individual",
                    "type": "optional<root.LegalEntityType>",
                  },
                  "issued_from_date": {
                    "docs": "to get records created after given issue date",
                    "type": "optional<string>",
                  },
                  "issued_to_date": {
                    "docs": "to get records created before given issued date",
                    "type": "optional<string>",
                  },
                  "statuses": {
                    "allow-multiple": true,
                    "docs": "statuses of invoices to filter",
                    "type": "optional<root.InvoiceStatusEnum>",
                  },
                },
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.InvoiceListContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getPaymentList": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Retrieve payment reciepts",
              "docs": "Retrieve a list of payments made to Deel.",
              "errors": [
                "root.GetPaymentListRequestBadRequestError",
                "root.GetPaymentListRequestUnauthorizedError",
                "root.GetPaymentListRequestForbiddenError",
                "root.GetPaymentListRequestNotFoundError",
                "root.GetPaymentListRequestInternalServerError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "data": {
                        "rows": [
                          {
                            "created_at": "2022-05-24T09:38:46Z",
                            "id": 12345,
                            "label": "label",
                            "paid_at": "2022-05-24T09:38:46Z",
                            "payment_currency": "USD",
                            "payment_method": {
                              "type": "stripe_bacs_debit",
                            },
                            "status": "paid",
                            "total": 1015,
                            "workers": [
                              {
                                "name": "Jane Doe",
                              },
                            ],
                          },
                        ],
                        "total": 1.1,
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/payments",
              "request": {
                "name": "GetPaymentListRequest",
                "query-parameters": {
                  "currencies": {
                    "allow-multiple": true,
                    "docs": "Currency codes of contracts to filter.",
                    "type": "optional<root.CurrencyCodeRequired>",
                  },
                  "date_from": {
                    "docs": "Filtered results will include records created on or after the provided date.",
                    "type": "optional<root.DateString>",
                  },
                  "date_to": {
                    "docs": "Filtered results will include records created before the provided date.",
                    "type": "optional<root.DateString>",
                  },
                  "entities": {
                    "allow-multiple": true,
                    "docs": "Filter by legal entity type; company, or individual",
                    "type": "optional<root.LegalEntityType>",
                  },
                  "statuses": {
                    "allow-multiple": true,
                    "docs": "statuses of payments to filter",
                    "type": "optional<root.PaymentStatusEnum>",
                  },
                },
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.PaymentListContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    getInvoiceList:
      path: /invoices
      method: GET
      auth: true
      docs: Retrieve a list of paid invoices for your workforce.
      source:
        openapi: ../openapi.yml
      display-name: Retrieve invoices
      request:
        name: GetInvoiceListRequest
        query-parameters:
          issued_from_date:
            type: optional<string>
            docs: to get records created after given issue date
          issued_to_date:
            type: optional<string>
            docs: to get records created before given issued date
          statuses:
            type: optional<root.InvoiceStatusEnum>
            allow-multiple: true
            docs: statuses of invoices to filter
          entities:
            type: optional<root.LegalEntityType>
            allow-multiple: true
            docs: Filter by legal entity type; company, or individual
      response:
        docs: Successful operation.
        type: root.InvoiceListContainer
        status-code: 200
      errors:
        - root.GetInvoiceListRequestBadRequestError
        - root.GetInvoiceListRequestUnauthorizedError
        - root.GetInvoiceListRequestForbiddenError
        - root.GetInvoiceListRequestNotFoundError
        - root.GetInvoiceListRequestInternalServerError
      examples:
        - response:
            body:
              data:
                rows:
                  - id: 5586317
                    invoice_id: rhCTiRd9Mad41RwjsFWw-
                    status: pending
                    currency: USD
                    payment_currency: USD
                    contract:
                      id: rhCTiRd9Mad41RwjsFWw-
                      name: Lisandro Shanahan-Dynamic Web Specialist
                      contract_type: pay_as_you_go_time_based
                    created_at: '2022-05-24T09:38:46Z'
                    total: 1000
                total: 1.1
      audiences:
        - external
    getInvoiceDownloadLink:
      path: /invoices/{invoice_id}/download
      method: GET
      auth: true
      docs: Get link to download the invoice PDF.
      source:
        openapi: ../openapi.yml
      path-parameters:
        invoice_id:
          type: long
          docs: ID of an existing invoice
      display-name: Download invoice PDF
      response:
        docs: Successful operation.
        type: root.InvoiceDownloadContainer
        status-code: 200
      errors:
        - root.GetInvoiceDownloadLinkRequestBadRequestError
        - root.GetInvoiceDownloadLinkRequestUnauthorizedError
        - root.GetInvoiceDownloadLinkRequestForbiddenError
        - root.GetInvoiceDownloadLinkRequestNotFoundError
        - root.GetInvoiceDownloadLinkRequestMethodNotAllowedError
        - root.GetInvoiceDownloadLinkRequestTooManyRequestsError
        - root.GetInvoiceDownloadLinkRequestInternalServerError
      examples:
        - path-parameters:
            invoice_id: 1000000
          response:
            body:
              data:
                id: '12345'
                url: https://s3URL/letsdeel.com/invoices/12345.pdf
                expires_at: '2020-03-31T10:58:49Z'
      audiences:
        - external
    getBillingInvoiceDownloadLink:
      path: /billing/{invoice_id}/download
      method: GET
      auth: true
      docs: Get a link to download the Deel billing invoice PDF.
      source:
        openapi: ../openapi.yml
      path-parameters:
        invoice_id:
          type: long
          docs: ID of an existing invoice
      display-name: Download Deel invoice PDF
      response:
        docs: Successful operation.
        type: root.InvoiceDownloadContainer
        status-code: 200
      errors:
        - root.GetBillingInvoiceDownloadLinkRequestBadRequestError
        - root.GetBillingInvoiceDownloadLinkRequestUnauthorizedError
        - root.GetBillingInvoiceDownloadLinkRequestForbiddenError
        - root.GetBillingInvoiceDownloadLinkRequestNotFoundError
        - root.GetBillingInvoiceDownloadLinkRequestMethodNotAllowedError
        - root.GetBillingInvoiceDownloadLinkRequestTooManyRequestsError
        - root.GetBillingInvoiceDownloadLinkRequestInternalServerError
      examples:
        - path-parameters:
            invoice_id: 1000000
          response:
            body:
              data:
                id: '12345'
                url: https://s3URL/letsdeel.com/invoices/12345.pdf
                expires_at: '2020-03-31T10:58:49Z'
      audiences:
        - external
    getPaymentList:
      path: /payments
      method: GET
      auth: true
      docs: Retrieve a list of payments made to Deel.
      source:
        openapi: ../openapi.yml
      display-name: Retrieve payment reciepts
      request:
        name: GetPaymentListRequest
        query-parameters:
          date_from:
            type: optional<root.DateString>
            docs: >-
              Filtered results will include records created on or after the
              provided date.
          date_to:
            type: optional<root.DateString>
            docs: >-
              Filtered results will include records created before the provided
              date.
          currencies:
            type: optional<root.CurrencyCodeRequired>
            allow-multiple: true
            docs: Currency codes of contracts to filter.
          statuses:
            type: optional<root.PaymentStatusEnum>
            allow-multiple: true
            docs: statuses of payments to filter
          entities:
            type: optional<root.LegalEntityType>
            allow-multiple: true
            docs: Filter by legal entity type; company, or individual
      response:
        docs: Successful operation.
        type: root.PaymentListContainer
        status-code: 200
      errors:
        - root.GetPaymentListRequestBadRequestError
        - root.GetPaymentListRequestUnauthorizedError
        - root.GetPaymentListRequestForbiddenError
        - root.GetPaymentListRequestNotFoundError
        - root.GetPaymentListRequestInternalServerError
      examples:
        - response:
            body:
              data:
                rows:
                  - id: 12345
                    payment_method:
                      type: stripe_bacs_debit
                    status: paid
                    payment_currency: USD
                    label: label
                    paid_at: '2022-05-24T09:38:46Z'
                    created_at: '2022-05-24T09:38:46Z'
                    total: 1015
                    workers:
                      - name: Jane Doe
                total: 1.1
      audiences:
        - external
    GetPaymentsBreakDownById:
      path: /payments/{payment_id}/breakdown
      method: GET
      auth: true
      docs: >-
        Get a full breakdown of a payment made to Deel. Breakdown will include
        individual invoices and Deel fee as line items.
      source:
        openapi: ../openapi.yml
      path-parameters:
        payment_id: string
      display-name: Retrieve a payment breakdown
      response:
        docs: Successful operation.
        type: root.PaymentBreakDownContainer
        status-code: 200
      errors:
        - root.GetPaymentsBreakDownByIdRequestBadRequestError
        - root.GetPaymentsBreakDownByIdRequestUnauthorizedError
        - root.GetPaymentsBreakDownByIdRequestForbiddenError
        - root.GetPaymentsBreakDownByIdRequestNotFoundError
        - root.GetPaymentsBreakDownByIdRequestMethodNotAllowedError
        - root.GetPaymentsBreakDownByIdRequestTooManyRequestsError
        - root.GetPaymentsBreakDownByIdRequestInternalServerError
      examples:
        - path-parameters:
            payment_id: payment_id
          response:
            body:
              data:
                - date: '2022-10-01T00:59:28.482Z'
                  general_ledger_account: ''
                  team: Deel Inc.
                  contractor_unique_identifier: '12345'
                  contractor_employee_name: Jane Doe
                  contractor_email: name@email.com
                  invoice_number: '5069872'
                  currency: USD
                  payment_currency: USD
                  receipt_number: '5551621'
                  work: '0.00'
                  bonus: '0.00'
                  expenses: '0.00'
                  commissions: '0.00'
                  deductions: '0.00'
                  overtime: '0.00'
                  pro_rata: '0.00'
                  others: '0.00'
                  processing_fee: '0.00'
                  adjustment: '0.00'
                  total: '1000.00'
                  total_payment_currency: '1000.00'
                  payment_date: '2022-11-01T17:20:32.837Z'
                  frequency: ''
                  contract_country: US
                  contract_start_date: '2020-03-31T10:58:49.780Z'
                  approvers: approvers
                  approve_date: approve_date
      audiences:
        - external
  source:
    openapi: ../openapi.yml
  display-name: Accounting
docs: End-points to retrieve paid invoices and reciepts.
",
    },
    "attachments.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "createFileRef": {
              "auth": true,
              "display-name": "Upload file to Deel",
              "docs": "Upload file to Deel storage to use the file attachment feature for other endpoints.",
              "errors": [
                "root.CreateFileRefRequestUnauthorizedError",
                "root.CreateFileRefRequestForbiddenError",
                "root.CreateFileRefRequestNotFoundError",
                "root.CreateFileRefRequestMethodNotAllowedError",
                "root.CreateFileRefRequestTooManyRequestsError",
                "root.CreateFileRefRequestInternalServerError",
              ],
              "examples": [
                {
                  "request": {
                    "data": {
                      "content_type": "application/pdf",
                    },
                  },
                  "response": {
                    "body": {
                      "data": {
                        "key": "key",
                        "url": "url",
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/attachments",
              "request": {
                "body": {
                  "properties": {
                    "data": "InputToCreateFileRefData",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "InputToCreateFileRef",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.OutputToCreateFileRefContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "InputToCreateFileRefData": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "content_type": "root.FileRefTypeEnum",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
types:
  InputToCreateFileRefData:
    properties:
      content_type: root.FileRefTypeEnum
    source:
      openapi: ../openapi.yml
    inline: true
service:
  auth: false
  base-path: ''
  endpoints:
    createFileRef:
      path: /attachments
      method: POST
      auth: true
      docs: >-
        Upload file to Deel storage to use the file attachment feature for other
        endpoints.
      source:
        openapi: ../openapi.yml
      display-name: Upload file to Deel
      request:
        name: InputToCreateFileRef
        body:
          properties:
            data: InputToCreateFileRefData
        content-type: application/json
      response:
        docs: Successful operation.
        type: root.OutputToCreateFileRefContainer
        status-code: 200
      errors:
        - root.CreateFileRefRequestUnauthorizedError
        - root.CreateFileRefRequestForbiddenError
        - root.CreateFileRefRequestNotFoundError
        - root.CreateFileRefRequestMethodNotAllowedError
        - root.CreateFileRefRequestTooManyRequestsError
        - root.CreateFileRefRequestInternalServerError
      examples:
        - request:
            data:
              content_type: application/pdf
          response:
            body:
              data:
                key: key
                url: url
  source:
    openapi: ../openapi.yml
",
    },
    "contract.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "getPeople": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Get my current profile",
              "docs": undefined,
              "errors": [
                "root.GetPeopleRequestBadRequestError",
                "root.GetPeopleRequestUnauthorizedError",
                "root.GetPeopleRequestForbiddenError",
                "root.GetPeopleRequestNotFoundError",
                "root.GetPeopleRequestMethodNotAllowedError",
                "root.GetPeopleRequestTooManyRequestsError",
                "root.GetPeopleRequestInternalServerError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "avatar_url": "avatar_url",
                      "client_country": "US",
                      "contractor_country": "US",
                      "email": "email",
                      "first_name": "first_name",
                      "full_name": "full_name",
                      "id": 1.1,
                      "last_name": "last_name",
                      "middle_name": "middle_name",
                      "organization_id": 1.1,
                      "organization_name": "organization_name",
                      "profile_type": "client",
                      "slack_team_id": "slack_team_id",
                      "slack_user_id": "slack_user_id",
                      "user_id": 1.1,
                      "username": "username",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/people/me",
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.PeopleMeContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getPeopleList": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Get people list",
              "docs": undefined,
              "errors": [
                "root.GetPeopleListRequestBadRequestError",
                "root.GetPeopleListRequestUnauthorizedError",
                "root.GetPeopleListRequestForbiddenError",
                "root.GetPeopleListRequestNotFoundError",
                "root.GetPeopleListRequestMethodNotAllowedError",
                "root.GetPeopleListRequestTooManyRequestsError",
                "root.GetPeopleListRequestInternalServerError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "data": [
                        {
                          "birth_date": "birth_date",
                          "completion_date": "completion_date",
                          "contract_types": [
                            "contract_types",
                          ],
                          "country": "country",
                          "country_name": "country_name",
                          "department": "department",
                          "direct_manager": "direct_manager",
                          "direct_reports": "direct_reports",
                          "direct_reports_count": 1,
                          "email": "email",
                          "employments": [
                            {},
                          ],
                          "first_name": "first_name",
                          "full_name": "full_name",
                          "has_deel_user": true,
                          "hiring_status": "hiring_status",
                          "hiring_type": "hiring_type",
                          "hourly_report_total": "hourly_report_total",
                          "id": "id",
                          "job_title": "job_title",
                          "last_name": "last_name",
                          "payments": [
                            {
                              "created_at": "2022-05-24T09:38:46Z",
                              "id": 12345,
                              "label": "label",
                              "paid_at": "2022-05-24T09:38:46Z",
                              "payment_currency": "USD",
                              "payment_method": {
                                "type": "stripe_bacs_debit",
                              },
                              "status": "paid",
                              "total": 1015,
                              "workers": [
                                {
                                  "name": "Jane Doe",
                                },
                              ],
                            },
                          ],
                          "personal_email": "personal_email",
                          "pic_url": "pic_url",
                          "seniority": "seniority",
                          "start_date": "start_date",
                          "state": "state",
                          "team": "team",
                          "team_id": 1,
                          "timezone": "timezone",
                          "work_email": "work_email",
                          "work_location": "work_location",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/people",
              "request": {
                "name": "GetPeopleListRequest",
                "query-parameters": {
                  "limit": {
                    "docs": "Return a page of results with given number of records.",
                    "type": "optional<double>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 200,
                      "min": 1,
                      "multipleOf": undefined,
                    },
                  },
                  "offset": {
                    "default": 0,
                    "docs": "Return a page of results with given number of records.",
                    "type": "optional<long>",
                  },
                },
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.PeopleContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    getPeopleList:
      path: /people
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Get people list
      request:
        name: GetPeopleListRequest
        query-parameters:
          offset:
            type: optional<long>
            default: 0
            docs: Return a page of results with given number of records.
          limit:
            type: optional<double>
            docs: Return a page of results with given number of records.
            validation:
              min: 1
              max: 200
      response:
        docs: Successful operation.
        type: root.PeopleContainer
        status-code: 200
      errors:
        - root.GetPeopleListRequestBadRequestError
        - root.GetPeopleListRequestUnauthorizedError
        - root.GetPeopleListRequestForbiddenError
        - root.GetPeopleListRequestNotFoundError
        - root.GetPeopleListRequestMethodNotAllowedError
        - root.GetPeopleListRequestTooManyRequestsError
        - root.GetPeopleListRequestInternalServerError
      examples:
        - response:
            body:
              data:
                - id: id
                  first_name: first_name
                  last_name: last_name
                  full_name: full_name
                  email: email
                  work_email: work_email
                  personal_email: personal_email
                  country_name: country_name
                  birth_date: birth_date
                  pic_url: pic_url
                  start_date: start_date
                  payments:
                    - id: 12345
                      payment_method:
                        type: stripe_bacs_debit
                      status: paid
                      payment_currency: USD
                      label: label
                      paid_at: '2022-05-24T09:38:46Z'
                      created_at: '2022-05-24T09:38:46Z'
                      total: 1015
                      workers:
                        - name: Jane Doe
                  hourly_report_total: hourly_report_total
                  state: state
                  seniority: seniority
                  completion_date: completion_date
                  direct_manager: direct_manager
                  direct_reports: direct_reports
                  direct_reports_count: 1
                  employments:
                    - {}
                  hiring_status: hiring_status
                  hiring_type: hiring_type
                  job_title: job_title
                  country: country
                  team_id: 1
                  team: team
                  timezone: timezone
                  department: department
                  work_location: work_location
                  contract_types:
                    - contract_types
                  has_deel_user: true
      audiences:
        - external
    getPeople:
      path: /people/me
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Get my current profile
      response:
        docs: Successful operation.
        type: root.PeopleMeContainer
        status-code: 200
      errors:
        - root.GetPeopleRequestBadRequestError
        - root.GetPeopleRequestUnauthorizedError
        - root.GetPeopleRequestForbiddenError
        - root.GetPeopleRequestNotFoundError
        - root.GetPeopleRequestMethodNotAllowedError
        - root.GetPeopleRequestTooManyRequestsError
        - root.GetPeopleRequestInternalServerError
      examples:
        - response:
            body:
              id: 1.1
              user_id: 1.1
              username: username
              first_name: first_name
              middle_name: middle_name
              last_name: last_name
              full_name: full_name
              email: email
              avatar_url: avatar_url
              profile_type: client
              slack_user_id: slack_user_id
              slack_team_id: slack_team_id
              organization_id: 1.1
              organization_name: organization_name
              client_country: US
              contractor_country: US
      audiences:
        - external
  source:
    openapi: ../openapi.yml
",
    },
    "contractors.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "The Contracts resource lets you create, amend and, retrieve Deel contracts.",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Contractors",
          "endpoints": {
            "addPremium": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Upgrade to Premium",
              "docs": "Add additional protection against misclassification by upgrading to Deel Premium.",
              "errors": [
                "root.AddPremiumRequestUnauthorizedError",
                "root.AddPremiumRequestForbiddenError",
                "root.AddPremiumRequestNotFoundError",
                "root.AddPremiumRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                  },
                  "request": {
                    "data": {
                      "agreement_reflects_relation": true,
                      "contractor_characteristics": false,
                    },
                  },
                  "response": {
                    "body": {
                      "data": {
                        "calculated_premium": 50,
                        "id": "d3f79ad9-b0b5-4e0d-af2e-ad84435c0acb",
                        "misclassification_guarantee": {
                          "description": "description",
                          "name": "name",
                        },
                        "penalties": {
                          "description": "description",
                          "name": "name",
                        },
                        "third_party_liabilities": {
                          "description": "description",
                          "name": "name",
                        },
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/contracts/{contract_id}/premium",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "data": "root.PremiumToAdd",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "PremiumToAddContainer",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 201,
                "type": "root.PremiumResultAddedContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "amendContractDetails": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Amend contract",
              "docs": "Amend payment details of a contract.",
              "errors": [
                "root.AmendContractDetailsRequestBadRequestError",
                "root.AmendContractDetailsRequestUnauthorizedError",
                "root.AmendContractDetailsRequestForbiddenError",
                "root.AmendContractDetailsRequestNotFoundError",
                "root.AmendContractDetailsRequestMethodNotAllowedError",
                "root.AmendContractDetailsRequestTooManyRequestsError",
                "root.AmendContractDetailsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                  },
                  "request": {
                    "data": {},
                  },
                  "response": {
                    "body": {
                      "data": {
                        "created": true,
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/contracts/{contract_id}/amendments",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "data": "root.ContractDetailsToAmend",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ContractToAmendDetailsContainer",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 201,
                "type": "root.GenericResultCreated",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "createContract": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Create a new contract",
              "docs": "Create a new Deel contract.",
              "errors": [
                "root.CreateContractRequestBadRequestError",
                "root.CreateContractRequestUnauthorizedError",
                "root.CreateContractRequestForbiddenError",
                "root.CreateContractRequestNotFoundError",
                "root.CreateContractRequestMethodNotAllowedError",
                "root.CreateContractRequestTooManyRequestsError",
                "root.CreateContractRequestInternalServerError",
              ],
              "examples": [
                {
                  "request": {
                    "data": {
                      "client": {
                        "legal_entity": {
                          "id": 1.1,
                        },
                        "team": {
                          "id": 1.1,
                        },
                      },
                      "compensation_details": {
                        "amount": 100,
                        "currency_code": "USD",
                        "cycle_end": 25,
                        "cycle_end_type": "DAY_OF_WEEK",
                        "frequency": "weekly",
                        "payment_due_days": 5,
                        "payment_due_type": "REGULAR",
                        "scale": "hourly",
                      },
                      "job_title": {},
                      "meta": {
                        "documents_required": true,
                      },
                      "title": "title",
                      "type": "pay_as_you_go_time_based",
                    },
                  },
                  "response": {
                    "body": {
                      "data": {
                        "client": {
                          "email": "email",
                          "full_name": "full_name",
                          "id": 1000000,
                          "legal_entity": {
                            "id": 1000000,
                            "name": "name",
                            "registration_number": "registration_number",
                            "subtype": "subtype",
                            "type": "individual",
                            "vat_number": "vat_number",
                          },
                          "team": {
                            "id": 1.1,
                            "name": "name",
                          },
                        },
                        "compensation_details": {
                          "amount": "amount",
                          "currency_code": "USD",
                          "first_payment": "first_payment",
                          "first_payment_date": "2022-05-24T09:38:46Z",
                          "frequency": "frequency",
                          "gross_annual_salary": "gross_annual_salary",
                          "gross_signing_bonus": "gross_signing_bonus",
                          "gross_variable_bonus": "gross_variable_bonus",
                          "scale": "scale",
                        },
                        "created_at": "2022-05-24T09:38:46Z",
                        "custom_fields": [
                          {
                            "name": "Employee ID",
                            "value": "54234",
                          },
                        ],
                        "employment_details": {
                          "country": "US",
                          "days_per_week": 1.1,
                          "hours_per_day": 1.1,
                          "paid_vacation_days": 1.1,
                          "probation_period": 1.1,
                          "state": "CO",
                          "type": "type",
                        },
                        "external_id": "external_id",
                        "id": "id",
                        "invitations": {
                          "client_email": "client_email",
                          "worker_email": "worker_email",
                        },
                        "is_archived": true,
                        "job_title": "job_title",
                        "notice_period": 15,
                        "scope_of_work": "scope_of_work",
                        "seniority": {
                          "id": 2,
                          "level": 2,
                          "name": "Mid (Individual Contributor Level 2)",
                        },
                        "signatures": {
                          "client_signature": "client_signature",
                          "client_signed_at": "2022-05-24T09:38:46Z",
                          "signed_at": "2022-05-24T09:38:46Z",
                          "worker_signature": "worker_signature",
                          "worker_signed_at": "2022-05-24T09:38:46Z",
                        },
                        "special_clause": "special_clause",
                        "start_date": "2022-05-24T09:38:46Z",
                        "status": "new",
                        "termination_date": "2022-05-24T09:38:46Z",
                        "title": "title",
                        "type": "ongoing_time_based",
                        "who_reports": "both",
                        "worker": {
                          "alternate_email": [
                            {
                              "isVerified": true,
                            },
                          ],
                          "date_of_birth": "2022-05-24T09:38:46Z",
                          "email": "email",
                          "expected_email": "expected_email",
                          "first_name": "John",
                          "full_name": "full_name",
                          "id": 1000000,
                          "image": "image",
                          "last_name": "Doe",
                          "legal_entity": {
                            "personal_name": "personal_name",
                            "registration_number": "registration_number",
                            "type": "individual",
                          },
                          "nationality": "US",
                        },
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/contracts",
              "request": {
                "body": {
                  "properties": {
                    "data": "root.ContractToCreate",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ContractToCreateContainer",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 201,
                "type": "root.ContractContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "createContractFixedRate": {
              "auth": true,
              "display-name": "Create a new contract (fixed-rate)",
              "docs": undefined,
              "errors": [
                "root.CreateContractFixedRateRequestBadRequestError",
                "root.CreateContractFixedRateRequestUnauthorizedError",
                "root.CreateContractFixedRateRequestForbiddenError",
                "root.CreateContractFixedRateRequestNotFoundError",
                "root.CreateContractFixedRateRequestMethodNotAllowedError",
                "root.CreateContractFixedRateRequestTooManyRequestsError",
                "root.CreateContractFixedRateRequestInternalServerError",
              ],
              "examples": [
                {
                  "request": {
                    "data": {
                      "client": {
                        "legal_entity": {
                          "id": 1.1,
                        },
                        "team": {
                          "id": 1.1,
                        },
                      },
                      "compensation_details": {
                        "amount": 100,
                        "currency_code": "USD",
                        "cycle_end": 25,
                        "cycle_end_type": "DAY_OF_WEEK",
                        "frequency": "weekly",
                        "payment_due_days": 5,
                        "payment_due_type": "REGULAR",
                        "scale": "hourly",
                      },
                      "job_title": {},
                      "meta": {
                        "documents_required": true,
                      },
                      "title": "title",
                      "type": "ongoing_time_based",
                    },
                  },
                  "response": {
                    "body": {
                      "data": {
                        "client": {
                          "email": "email",
                          "full_name": "full_name",
                          "id": 1000000,
                          "legal_entity": {
                            "id": 1000000,
                            "name": "name",
                            "registration_number": "registration_number",
                            "subtype": "subtype",
                            "type": "individual",
                            "vat_number": "vat_number",
                          },
                          "team": {
                            "id": 1.1,
                            "name": "name",
                          },
                        },
                        "compensation_details": {
                          "amount": "amount",
                          "currency_code": "USD",
                          "first_payment": "first_payment",
                          "first_payment_date": "2022-05-24T09:38:46Z",
                          "frequency": "frequency",
                          "gross_annual_salary": "gross_annual_salary",
                          "gross_signing_bonus": "gross_signing_bonus",
                          "gross_variable_bonus": "gross_variable_bonus",
                          "scale": "scale",
                        },
                        "created_at": "2022-05-24T09:38:46Z",
                        "custom_fields": [
                          {
                            "name": "Employee ID",
                            "value": "54234",
                          },
                        ],
                        "employment_details": {
                          "country": "US",
                          "days_per_week": 1.1,
                          "hours_per_day": 1.1,
                          "paid_vacation_days": 1.1,
                          "probation_period": 1.1,
                          "state": "CO",
                          "type": "type",
                        },
                        "external_id": "external_id",
                        "id": "id",
                        "invitations": {
                          "client_email": "client_email",
                          "worker_email": "worker_email",
                        },
                        "is_archived": true,
                        "job_title": "job_title",
                        "notice_period": 15,
                        "scope_of_work": "scope_of_work",
                        "seniority": {
                          "id": 2,
                          "level": 2,
                          "name": "Mid (Individual Contributor Level 2)",
                        },
                        "signatures": {
                          "client_signature": "client_signature",
                          "client_signed_at": "2022-05-24T09:38:46Z",
                          "signed_at": "2022-05-24T09:38:46Z",
                          "worker_signature": "worker_signature",
                          "worker_signed_at": "2022-05-24T09:38:46Z",
                        },
                        "special_clause": "special_clause",
                        "start_date": "2022-05-24T09:38:46Z",
                        "status": "new",
                        "termination_date": "2022-05-24T09:38:46Z",
                        "title": "title",
                        "type": "ongoing_time_based",
                        "who_reports": "both",
                        "worker": {
                          "alternate_email": [
                            {
                              "isVerified": true,
                            },
                          ],
                          "date_of_birth": "2022-05-24T09:38:46Z",
                          "email": "email",
                          "expected_email": "expected_email",
                          "first_name": "John",
                          "full_name": "full_name",
                          "id": 1000000,
                          "image": "image",
                          "last_name": "Doe",
                          "legal_entity": {
                            "personal_name": "personal_name",
                            "registration_number": "registration_number",
                            "type": "individual",
                          },
                          "nationality": "US",
                        },
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/contracts/fixed-rate",
              "request": {
                "body": {
                  "properties": {
                    "data": "root.ContractToCreateOngoingTimeBased",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ContractToCreateContainerOngoingTimeBased",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 201,
                "type": "root.ContractContainerOngoingTimeBased",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "createContractMilestoneBased": {
              "auth": true,
              "display-name": "Create a new contract (milestone-based)",
              "docs": undefined,
              "errors": [
                "root.CreateContractMilestoneBasedRequestBadRequestError",
                "root.CreateContractMilestoneBasedRequestUnauthorizedError",
                "root.CreateContractMilestoneBasedRequestForbiddenError",
                "root.CreateContractMilestoneBasedRequestNotFoundError",
                "root.CreateContractMilestoneBasedRequestMethodNotAllowedError",
                "root.CreateContractMilestoneBasedRequestTooManyRequestsError",
                "root.CreateContractMilestoneBasedRequestInternalServerError",
              ],
              "examples": [
                {
                  "request": {
                    "data": {
                      "client": {
                        "legal_entity": {
                          "id": 1.1,
                        },
                        "team": {
                          "id": 1.1,
                        },
                      },
                      "compensation_details": {
                        "currency_code": "USD",
                        "cycle_end": 25,
                        "cycle_end_type": "DAY_OF_WEEK",
                        "frequency": "weekly",
                        "payment_due_days": 5,
                        "payment_due_type": "REGULAR",
                      },
                      "job_title": {},
                      "meta": {
                        "documents_required": true,
                      },
                      "title": "title",
                      "type": "payg_milestones",
                    },
                  },
                  "response": {
                    "body": {
                      "data": {
                        "client": {
                          "email": "email",
                          "full_name": "full_name",
                          "id": 1000000,
                          "legal_entity": {
                            "id": 1000000,
                            "name": "name",
                            "registration_number": "registration_number",
                            "subtype": "subtype",
                            "type": "individual",
                            "vat_number": "vat_number",
                          },
                          "team": {
                            "id": 1.1,
                            "name": "name",
                          },
                        },
                        "compensation_details": {
                          "amount": "amount",
                          "currency_code": "USD",
                          "first_payment": "first_payment",
                          "first_payment_date": "2022-05-24T09:38:46Z",
                          "frequency": "frequency",
                          "gross_annual_salary": "gross_annual_salary",
                          "gross_signing_bonus": "gross_signing_bonus",
                          "gross_variable_bonus": "gross_variable_bonus",
                          "scale": "scale",
                        },
                        "created_at": "2022-05-24T09:38:46Z",
                        "custom_fields": [
                          {
                            "name": "Employee ID",
                            "value": "54234",
                          },
                        ],
                        "employment_details": {
                          "country": "US",
                          "days_per_week": 1.1,
                          "hours_per_day": 1.1,
                          "paid_vacation_days": 1.1,
                          "probation_period": 1.1,
                          "state": "CO",
                          "type": "type",
                        },
                        "external_id": "external_id",
                        "id": "id",
                        "invitations": {
                          "client_email": "client_email",
                          "worker_email": "worker_email",
                        },
                        "is_archived": true,
                        "job_title": "job_title",
                        "notice_period": 15,
                        "scope_of_work": "scope_of_work",
                        "seniority": {
                          "id": 2,
                          "level": 2,
                          "name": "Mid (Individual Contributor Level 2)",
                        },
                        "signatures": {
                          "client_signature": "client_signature",
                          "client_signed_at": "2022-05-24T09:38:46Z",
                          "signed_at": "2022-05-24T09:38:46Z",
                          "worker_signature": "worker_signature",
                          "worker_signed_at": "2022-05-24T09:38:46Z",
                        },
                        "special_clause": "special_clause",
                        "start_date": "2022-05-24T09:38:46Z",
                        "status": "new",
                        "termination_date": "2022-05-24T09:38:46Z",
                        "title": "title",
                        "type": "ongoing_time_based",
                        "who_reports": "both",
                        "worker": {
                          "alternate_email": [
                            {
                              "isVerified": true,
                            },
                          ],
                          "date_of_birth": "2022-05-24T09:38:46Z",
                          "email": "email",
                          "expected_email": "expected_email",
                          "first_name": "John",
                          "full_name": "full_name",
                          "id": 1000000,
                          "image": "image",
                          "last_name": "Doe",
                          "legal_entity": {
                            "personal_name": "personal_name",
                            "registration_number": "registration_number",
                            "type": "individual",
                          },
                          "nationality": "US",
                        },
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/contracts/milestone-based",
              "request": {
                "body": {
                  "properties": {
                    "data": "root.ContractToCreatePaygMilestones",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ContractToCreateContainerPaygMilestones",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 201,
                "type": "root.ContractContainerPaygMilestones",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "createContractTaskBased": {
              "auth": true,
              "display-name": "Create a new contract (task-based)",
              "docs": undefined,
              "errors": [
                "root.CreateContractTaskBasedRequestBadRequestError",
                "root.CreateContractTaskBasedRequestUnauthorizedError",
                "root.CreateContractTaskBasedRequestForbiddenError",
                "root.CreateContractTaskBasedRequestNotFoundError",
                "root.CreateContractTaskBasedRequestMethodNotAllowedError",
                "root.CreateContractTaskBasedRequestTooManyRequestsError",
                "root.CreateContractTaskBasedRequestInternalServerError",
              ],
              "examples": [
                {
                  "request": {
                    "data": {
                      "client": {
                        "legal_entity": {
                          "id": 1.1,
                        },
                        "team": {
                          "id": 1.1,
                        },
                      },
                      "compensation_details": {
                        "currency_code": "USD",
                        "cycle_end": 25,
                        "cycle_end_type": "DAY_OF_WEEK",
                        "frequency": "weekly",
                        "payment_due_days": 5,
                        "payment_due_type": "REGULAR",
                      },
                      "job_title": {},
                      "meta": {
                        "documents_required": true,
                      },
                      "title": "title",
                      "type": "payg_tasks",
                    },
                  },
                  "response": {
                    "body": {
                      "data": {
                        "client": {
                          "email": "email",
                          "full_name": "full_name",
                          "id": 1000000,
                          "legal_entity": {
                            "id": 1000000,
                            "name": "name",
                            "registration_number": "registration_number",
                            "subtype": "subtype",
                            "type": "individual",
                            "vat_number": "vat_number",
                          },
                          "team": {
                            "id": 1.1,
                            "name": "name",
                          },
                        },
                        "compensation_details": {
                          "amount": "amount",
                          "currency_code": "USD",
                          "first_payment": "first_payment",
                          "first_payment_date": "2022-05-24T09:38:46Z",
                          "frequency": "frequency",
                          "gross_annual_salary": "gross_annual_salary",
                          "gross_signing_bonus": "gross_signing_bonus",
                          "gross_variable_bonus": "gross_variable_bonus",
                          "scale": "scale",
                        },
                        "created_at": "2022-05-24T09:38:46Z",
                        "custom_fields": [
                          {
                            "name": "Employee ID",
                            "value": "54234",
                          },
                        ],
                        "employment_details": {
                          "country": "US",
                          "days_per_week": 1.1,
                          "hours_per_day": 1.1,
                          "paid_vacation_days": 1.1,
                          "probation_period": 1.1,
                          "state": "CO",
                          "type": "type",
                        },
                        "external_id": "external_id",
                        "id": "id",
                        "invitations": {
                          "client_email": "client_email",
                          "worker_email": "worker_email",
                        },
                        "is_archived": true,
                        "job_title": "job_title",
                        "notice_period": 15,
                        "scope_of_work": "scope_of_work",
                        "seniority": {
                          "id": 2,
                          "level": 2,
                          "name": "Mid (Individual Contributor Level 2)",
                        },
                        "signatures": {
                          "client_signature": "client_signature",
                          "client_signed_at": "2022-05-24T09:38:46Z",
                          "signed_at": "2022-05-24T09:38:46Z",
                          "worker_signature": "worker_signature",
                          "worker_signed_at": "2022-05-24T09:38:46Z",
                        },
                        "special_clause": "special_clause",
                        "start_date": "2022-05-24T09:38:46Z",
                        "status": "new",
                        "termination_date": "2022-05-24T09:38:46Z",
                        "title": "title",
                        "type": "ongoing_time_based",
                        "who_reports": "both",
                        "worker": {
                          "alternate_email": [
                            {
                              "isVerified": true,
                            },
                          ],
                          "date_of_birth": "2022-05-24T09:38:46Z",
                          "email": "email",
                          "expected_email": "expected_email",
                          "first_name": "John",
                          "full_name": "full_name",
                          "id": 1000000,
                          "image": "image",
                          "last_name": "Doe",
                          "legal_entity": {
                            "personal_name": "personal_name",
                            "registration_number": "registration_number",
                            "type": "individual",
                          },
                          "nationality": "US",
                        },
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/contracts/task-based",
              "request": {
                "body": {
                  "properties": {
                    "data": "root.ContractToCreatePaygTasks",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ContractToCreateContainerPaygTasks",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 201,
                "type": "root.ContractContainerPaygTasks",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "createContractTimeBased": {
              "auth": true,
              "display-name": "Create a new contract (time-based)",
              "docs": undefined,
              "errors": [
                "root.CreateContractTimeBasedRequestBadRequestError",
                "root.CreateContractTimeBasedRequestUnauthorizedError",
                "root.CreateContractTimeBasedRequestForbiddenError",
                "root.CreateContractTimeBasedRequestNotFoundError",
                "root.CreateContractTimeBasedRequestMethodNotAllowedError",
                "root.CreateContractTimeBasedRequestTooManyRequestsError",
                "root.CreateContractTimeBasedRequestInternalServerError",
              ],
              "examples": [
                {
                  "request": {
                    "data": {
                      "client": {
                        "legal_entity": {
                          "id": 1.1,
                        },
                        "team": {
                          "id": 1.1,
                        },
                      },
                      "compensation_details": {
                        "amount": 100,
                        "currency_code": "USD",
                        "cycle_end": 25,
                        "cycle_end_type": "DAY_OF_WEEK",
                        "frequency": "weekly",
                        "payment_due_days": 5,
                        "payment_due_type": "REGULAR",
                        "scale": "hourly",
                      },
                      "job_title": {},
                      "meta": {
                        "documents_required": true,
                      },
                      "title": "title",
                      "type": "pay_as_you_go_time_based",
                    },
                  },
                  "response": {
                    "body": {
                      "data": {
                        "client": {
                          "email": "email",
                          "full_name": "full_name",
                          "id": 1000000,
                          "legal_entity": {
                            "id": 1000000,
                            "name": "name",
                            "registration_number": "registration_number",
                            "subtype": "subtype",
                            "type": "individual",
                            "vat_number": "vat_number",
                          },
                          "team": {
                            "id": 1.1,
                            "name": "name",
                          },
                        },
                        "compensation_details": {
                          "amount": "amount",
                          "currency_code": "USD",
                          "first_payment": "first_payment",
                          "first_payment_date": "2022-05-24T09:38:46Z",
                          "frequency": "frequency",
                          "gross_annual_salary": "gross_annual_salary",
                          "gross_signing_bonus": "gross_signing_bonus",
                          "gross_variable_bonus": "gross_variable_bonus",
                          "scale": "scale",
                        },
                        "created_at": "2022-05-24T09:38:46Z",
                        "custom_fields": [
                          {
                            "name": "Employee ID",
                            "value": "54234",
                          },
                        ],
                        "employment_details": {
                          "country": "US",
                          "days_per_week": 1.1,
                          "hours_per_day": 1.1,
                          "paid_vacation_days": 1.1,
                          "probation_period": 1.1,
                          "state": "CO",
                          "type": "type",
                        },
                        "external_id": "external_id",
                        "id": "id",
                        "invitations": {
                          "client_email": "client_email",
                          "worker_email": "worker_email",
                        },
                        "is_archived": true,
                        "job_title": "job_title",
                        "notice_period": 15,
                        "scope_of_work": "scope_of_work",
                        "seniority": {
                          "id": 2,
                          "level": 2,
                          "name": "Mid (Individual Contributor Level 2)",
                        },
                        "signatures": {
                          "client_signature": "client_signature",
                          "client_signed_at": "2022-05-24T09:38:46Z",
                          "signed_at": "2022-05-24T09:38:46Z",
                          "worker_signature": "worker_signature",
                          "worker_signed_at": "2022-05-24T09:38:46Z",
                        },
                        "special_clause": "special_clause",
                        "start_date": "2022-05-24T09:38:46Z",
                        "status": "new",
                        "termination_date": "2022-05-24T09:38:46Z",
                        "title": "title",
                        "type": "ongoing_time_based",
                        "who_reports": "both",
                        "worker": {
                          "alternate_email": [
                            {
                              "isVerified": true,
                            },
                          ],
                          "date_of_birth": "2022-05-24T09:38:46Z",
                          "email": "email",
                          "expected_email": "expected_email",
                          "first_name": "John",
                          "full_name": "full_name",
                          "id": 1000000,
                          "image": "image",
                          "last_name": "Doe",
                          "legal_entity": {
                            "personal_name": "personal_name",
                            "registration_number": "registration_number",
                            "type": "individual",
                          },
                          "nationality": "US",
                        },
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/contracts/time-based",
              "request": {
                "body": {
                  "properties": {
                    "data": "root.ContractToCreatePayAsYouGoTimeBased",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ContractToCreateContainerPayAsYouGoTimeBased",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 201,
                "type": "root.ContractContainerPayAsYouGoTimeBased",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getContractPreview": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Preview a contract agreement",
              "docs": "Retrieve an IC contract agreement content in HTML. If no template is specified, the default or currently assigned template will be used. This endpoint does not support EOR and Global Payroll contract types.",
              "errors": [
                "root.GetContractPreviewRequestBadRequestError",
                "root.GetContractPreviewRequestUnauthorizedError",
                "root.GetContractPreviewRequestForbiddenError",
                "root.GetContractPreviewRequestNotFoundError",
                "root.GetContractPreviewRequestMethodNotAllowedError",
                "root.GetContractPreviewRequestTooManyRequestsError",
                "root.GetContractPreviewRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/contracts/{contract_id}/preview",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
              },
              "request": {
                "name": "GetContractPreviewRequest",
                "query-parameters": {
                  "templateId": {
                    "docs": "ID of an existing contract template.",
                    "type": "optional<string>",
                  },
                },
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "removePremiumFromContract": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Downgrade from Premium",
              "docs": "Remove Deel Premium from an existing contract.",
              "errors": [
                "root.RemovePremiumFromContractRequestBadRequestError",
                "root.RemovePremiumFromContractRequestUnauthorizedError",
                "root.RemovePremiumFromContractRequestForbiddenError",
                "root.RemovePremiumFromContractRequestNotFoundError",
                "root.RemovePremiumFromContractRequestMethodNotAllowedError",
                "root.RemovePremiumFromContractRequestTooManyRequestsError",
                "root.RemovePremiumFromContractRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                  },
                  "response": {
                    "body": {
                      "data": {
                        "deleted": true,
                      },
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/contracts/{contract_id}/premium",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
              },
              "request": {
                "name": "RemovePremiumFromContractRequest",
                "query-parameters": {
                  "reason": {
                    "docs": "Reason for deleting an existing Deel Premium from a contract.",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.GenericResultDeleted",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "terminateContract": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Terminate contract",
              "docs": "Terminate an active contract.",
              "errors": [
                "root.TerminateContractRequestBadRequestError",
                "root.TerminateContractRequestUnauthorizedError",
                "root.TerminateContractRequestForbiddenError",
                "root.TerminateContractRequestNotFoundError",
                "root.TerminateContractRequestMethodNotAllowedError",
                "root.TerminateContractRequestTooManyRequestsError",
                "root.TerminateContractRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                  },
                  "request": {
                    "data": {},
                  },
                  "response": {
                    "body": {
                      "data": {
                        "completion_date": "1999-12-31",
                        "id": "id",
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/contracts/{contract_id}/terminations",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "data": "root.ContractToTerminate",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ContractToTerminateContainer",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 201,
                "type": "root.ContractTerminationResultContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    createContractTimeBased:
      path: /contracts/time-based
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Create a new contract (time-based)
      request:
        name: ContractToCreateContainerPayAsYouGoTimeBased
        body:
          properties:
            data: root.ContractToCreatePayAsYouGoTimeBased
        content-type: application/json
      response:
        docs: Successful operation.
        type: root.ContractContainerPayAsYouGoTimeBased
        status-code: 201
      errors:
        - root.CreateContractTimeBasedRequestBadRequestError
        - root.CreateContractTimeBasedRequestUnauthorizedError
        - root.CreateContractTimeBasedRequestForbiddenError
        - root.CreateContractTimeBasedRequestNotFoundError
        - root.CreateContractTimeBasedRequestMethodNotAllowedError
        - root.CreateContractTimeBasedRequestTooManyRequestsError
        - root.CreateContractTimeBasedRequestInternalServerError
      examples:
        - request:
            data:
              title: title
              client:
                legal_entity:
                  id: 1.1
                team:
                  id: 1.1
              job_title: {}
              meta:
                documents_required: true
              type: pay_as_you_go_time_based
              compensation_details:
                amount: 100
                scale: hourly
                currency_code: USD
                frequency: weekly
                cycle_end: 25
                cycle_end_type: DAY_OF_WEEK
                payment_due_type: REGULAR
                payment_due_days: 5
          response:
            body:
              data:
                id: id
                title: title
                type: ongoing_time_based
                status: new
                created_at: '2022-05-24T09:38:46Z'
                job_title: job_title
                seniority:
                  id: 2
                  name: Mid (Individual Contributor Level 2)
                  level: 2
                who_reports: both
                scope_of_work: scope_of_work
                start_date: '2022-05-24T09:38:46Z'
                termination_date: '2022-05-24T09:38:46Z'
                special_clause: special_clause
                is_archived: true
                client:
                  id: 1000000
                  full_name: full_name
                  email: email
                  team:
                    id: 1.1
                    name: name
                  legal_entity:
                    id: 1000000
                    name: name
                    type: individual
                    subtype: subtype
                    registration_number: registration_number
                    vat_number: vat_number
                worker:
                  id: 1000000
                  full_name: full_name
                  email: email
                  alternate_email:
                    - isVerified: true
                  nationality: US
                  image: image
                  legal_entity:
                    type: individual
                    personal_name: personal_name
                    registration_number: registration_number
                  date_of_birth: '2022-05-24T09:38:46Z'
                  expected_email: expected_email
                  first_name: John
                  last_name: Doe
                invitations:
                  client_email: client_email
                  worker_email: worker_email
                signatures:
                  client_signature: client_signature
                  client_signed_at: '2022-05-24T09:38:46Z'
                  worker_signature: worker_signature
                  worker_signed_at: '2022-05-24T09:38:46Z'
                  signed_at: '2022-05-24T09:38:46Z'
                compensation_details:
                  currency_code: USD
                  amount: amount
                  scale: scale
                  frequency: frequency
                  first_payment: first_payment
                  first_payment_date: '2022-05-24T09:38:46Z'
                  gross_annual_salary: gross_annual_salary
                  gross_signing_bonus: gross_signing_bonus
                  gross_variable_bonus: gross_variable_bonus
                employment_details:
                  type: type
                  days_per_week: 1.1
                  hours_per_day: 1.1
                  probation_period: 1.1
                  paid_vacation_days: 1.1
                  country: US
                  state: CO
                notice_period: 15
                custom_fields:
                  - name: Employee ID
                    value: '54234'
                external_id: external_id
    createContractTaskBased:
      path: /contracts/task-based
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Create a new contract (task-based)
      request:
        name: ContractToCreateContainerPaygTasks
        body:
          properties:
            data: root.ContractToCreatePaygTasks
        content-type: application/json
      response:
        docs: Successful operation.
        type: root.ContractContainerPaygTasks
        status-code: 201
      errors:
        - root.CreateContractTaskBasedRequestBadRequestError
        - root.CreateContractTaskBasedRequestUnauthorizedError
        - root.CreateContractTaskBasedRequestForbiddenError
        - root.CreateContractTaskBasedRequestNotFoundError
        - root.CreateContractTaskBasedRequestMethodNotAllowedError
        - root.CreateContractTaskBasedRequestTooManyRequestsError
        - root.CreateContractTaskBasedRequestInternalServerError
      examples:
        - request:
            data:
              title: title
              client:
                legal_entity:
                  id: 1.1
                team:
                  id: 1.1
              job_title: {}
              meta:
                documents_required: true
              type: payg_tasks
              compensation_details:
                currency_code: USD
                frequency: weekly
                cycle_end: 25
                cycle_end_type: DAY_OF_WEEK
                payment_due_type: REGULAR
                payment_due_days: 5
          response:
            body:
              data:
                id: id
                title: title
                type: ongoing_time_based
                status: new
                created_at: '2022-05-24T09:38:46Z'
                job_title: job_title
                seniority:
                  id: 2
                  name: Mid (Individual Contributor Level 2)
                  level: 2
                who_reports: both
                scope_of_work: scope_of_work
                start_date: '2022-05-24T09:38:46Z'
                termination_date: '2022-05-24T09:38:46Z'
                special_clause: special_clause
                is_archived: true
                client:
                  id: 1000000
                  full_name: full_name
                  email: email
                  team:
                    id: 1.1
                    name: name
                  legal_entity:
                    id: 1000000
                    name: name
                    type: individual
                    subtype: subtype
                    registration_number: registration_number
                    vat_number: vat_number
                worker:
                  id: 1000000
                  full_name: full_name
                  email: email
                  alternate_email:
                    - isVerified: true
                  nationality: US
                  image: image
                  legal_entity:
                    type: individual
                    personal_name: personal_name
                    registration_number: registration_number
                  date_of_birth: '2022-05-24T09:38:46Z'
                  expected_email: expected_email
                  first_name: John
                  last_name: Doe
                invitations:
                  client_email: client_email
                  worker_email: worker_email
                signatures:
                  client_signature: client_signature
                  client_signed_at: '2022-05-24T09:38:46Z'
                  worker_signature: worker_signature
                  worker_signed_at: '2022-05-24T09:38:46Z'
                  signed_at: '2022-05-24T09:38:46Z'
                compensation_details:
                  currency_code: USD
                  amount: amount
                  scale: scale
                  frequency: frequency
                  first_payment: first_payment
                  first_payment_date: '2022-05-24T09:38:46Z'
                  gross_annual_salary: gross_annual_salary
                  gross_signing_bonus: gross_signing_bonus
                  gross_variable_bonus: gross_variable_bonus
                employment_details:
                  type: type
                  days_per_week: 1.1
                  hours_per_day: 1.1
                  probation_period: 1.1
                  paid_vacation_days: 1.1
                  country: US
                  state: CO
                notice_period: 15
                custom_fields:
                  - name: Employee ID
                    value: '54234'
                external_id: external_id
    createContractMilestoneBased:
      path: /contracts/milestone-based
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Create a new contract (milestone-based)
      request:
        name: ContractToCreateContainerPaygMilestones
        body:
          properties:
            data: root.ContractToCreatePaygMilestones
        content-type: application/json
      response:
        docs: Successful operation.
        type: root.ContractContainerPaygMilestones
        status-code: 201
      errors:
        - root.CreateContractMilestoneBasedRequestBadRequestError
        - root.CreateContractMilestoneBasedRequestUnauthorizedError
        - root.CreateContractMilestoneBasedRequestForbiddenError
        - root.CreateContractMilestoneBasedRequestNotFoundError
        - root.CreateContractMilestoneBasedRequestMethodNotAllowedError
        - root.CreateContractMilestoneBasedRequestTooManyRequestsError
        - root.CreateContractMilestoneBasedRequestInternalServerError
      examples:
        - request:
            data:
              title: title
              client:
                legal_entity:
                  id: 1.1
                team:
                  id: 1.1
              job_title: {}
              meta:
                documents_required: true
              type: payg_milestones
              compensation_details:
                currency_code: USD
                frequency: weekly
                cycle_end: 25
                cycle_end_type: DAY_OF_WEEK
                payment_due_type: REGULAR
                payment_due_days: 5
          response:
            body:
              data:
                id: id
                title: title
                type: ongoing_time_based
                status: new
                created_at: '2022-05-24T09:38:46Z'
                job_title: job_title
                seniority:
                  id: 2
                  name: Mid (Individual Contributor Level 2)
                  level: 2
                who_reports: both
                scope_of_work: scope_of_work
                start_date: '2022-05-24T09:38:46Z'
                termination_date: '2022-05-24T09:38:46Z'
                special_clause: special_clause
                is_archived: true
                client:
                  id: 1000000
                  full_name: full_name
                  email: email
                  team:
                    id: 1.1
                    name: name
                  legal_entity:
                    id: 1000000
                    name: name
                    type: individual
                    subtype: subtype
                    registration_number: registration_number
                    vat_number: vat_number
                worker:
                  id: 1000000
                  full_name: full_name
                  email: email
                  alternate_email:
                    - isVerified: true
                  nationality: US
                  image: image
                  legal_entity:
                    type: individual
                    personal_name: personal_name
                    registration_number: registration_number
                  date_of_birth: '2022-05-24T09:38:46Z'
                  expected_email: expected_email
                  first_name: John
                  last_name: Doe
                invitations:
                  client_email: client_email
                  worker_email: worker_email
                signatures:
                  client_signature: client_signature
                  client_signed_at: '2022-05-24T09:38:46Z'
                  worker_signature: worker_signature
                  worker_signed_at: '2022-05-24T09:38:46Z'
                  signed_at: '2022-05-24T09:38:46Z'
                compensation_details:
                  currency_code: USD
                  amount: amount
                  scale: scale
                  frequency: frequency
                  first_payment: first_payment
                  first_payment_date: '2022-05-24T09:38:46Z'
                  gross_annual_salary: gross_annual_salary
                  gross_signing_bonus: gross_signing_bonus
                  gross_variable_bonus: gross_variable_bonus
                employment_details:
                  type: type
                  days_per_week: 1.1
                  hours_per_day: 1.1
                  probation_period: 1.1
                  paid_vacation_days: 1.1
                  country: US
                  state: CO
                notice_period: 15
                custom_fields:
                  - name: Employee ID
                    value: '54234'
                external_id: external_id
    createContractFixedRate:
      path: /contracts/fixed-rate
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Create a new contract (fixed-rate)
      request:
        name: ContractToCreateContainerOngoingTimeBased
        body:
          properties:
            data: root.ContractToCreateOngoingTimeBased
        content-type: application/json
      response:
        docs: Successful operation.
        type: root.ContractContainerOngoingTimeBased
        status-code: 201
      errors:
        - root.CreateContractFixedRateRequestBadRequestError
        - root.CreateContractFixedRateRequestUnauthorizedError
        - root.CreateContractFixedRateRequestForbiddenError
        - root.CreateContractFixedRateRequestNotFoundError
        - root.CreateContractFixedRateRequestMethodNotAllowedError
        - root.CreateContractFixedRateRequestTooManyRequestsError
        - root.CreateContractFixedRateRequestInternalServerError
      examples:
        - request:
            data:
              title: title
              client:
                legal_entity:
                  id: 1.1
                team:
                  id: 1.1
              job_title: {}
              meta:
                documents_required: true
              type: ongoing_time_based
              compensation_details:
                amount: 100
                scale: hourly
                currency_code: USD
                frequency: weekly
                cycle_end: 25
                cycle_end_type: DAY_OF_WEEK
                payment_due_type: REGULAR
                payment_due_days: 5
          response:
            body:
              data:
                id: id
                title: title
                type: ongoing_time_based
                status: new
                created_at: '2022-05-24T09:38:46Z'
                job_title: job_title
                seniority:
                  id: 2
                  name: Mid (Individual Contributor Level 2)
                  level: 2
                who_reports: both
                scope_of_work: scope_of_work
                start_date: '2022-05-24T09:38:46Z'
                termination_date: '2022-05-24T09:38:46Z'
                special_clause: special_clause
                is_archived: true
                client:
                  id: 1000000
                  full_name: full_name
                  email: email
                  team:
                    id: 1.1
                    name: name
                  legal_entity:
                    id: 1000000
                    name: name
                    type: individual
                    subtype: subtype
                    registration_number: registration_number
                    vat_number: vat_number
                worker:
                  id: 1000000
                  full_name: full_name
                  email: email
                  alternate_email:
                    - isVerified: true
                  nationality: US
                  image: image
                  legal_entity:
                    type: individual
                    personal_name: personal_name
                    registration_number: registration_number
                  date_of_birth: '2022-05-24T09:38:46Z'
                  expected_email: expected_email
                  first_name: John
                  last_name: Doe
                invitations:
                  client_email: client_email
                  worker_email: worker_email
                signatures:
                  client_signature: client_signature
                  client_signed_at: '2022-05-24T09:38:46Z'
                  worker_signature: worker_signature
                  worker_signed_at: '2022-05-24T09:38:46Z'
                  signed_at: '2022-05-24T09:38:46Z'
                compensation_details:
                  currency_code: USD
                  amount: amount
                  scale: scale
                  frequency: frequency
                  first_payment: first_payment
                  first_payment_date: '2022-05-24T09:38:46Z'
                  gross_annual_salary: gross_annual_salary
                  gross_signing_bonus: gross_signing_bonus
                  gross_variable_bonus: gross_variable_bonus
                employment_details:
                  type: type
                  days_per_week: 1.1
                  hours_per_day: 1.1
                  probation_period: 1.1
                  paid_vacation_days: 1.1
                  country: US
                  state: CO
                notice_period: 15
                custom_fields:
                  - name: Employee ID
                    value: '54234'
                external_id: external_id
    createContract:
      path: /contracts
      method: POST
      auth: true
      docs: Create a new Deel contract.
      source:
        openapi: ../openapi.yml
      display-name: Create a new contract
      request:
        name: ContractToCreateContainer
        body:
          properties:
            data: root.ContractToCreate
        content-type: application/json
      response:
        docs: Successful operation.
        type: root.ContractContainer
        status-code: 201
      errors:
        - root.CreateContractRequestBadRequestError
        - root.CreateContractRequestUnauthorizedError
        - root.CreateContractRequestForbiddenError
        - root.CreateContractRequestNotFoundError
        - root.CreateContractRequestMethodNotAllowedError
        - root.CreateContractRequestTooManyRequestsError
        - root.CreateContractRequestInternalServerError
      examples:
        - request:
            data:
              title: title
              client:
                legal_entity:
                  id: 1.1
                team:
                  id: 1.1
              job_title: {}
              meta:
                documents_required: true
              type: pay_as_you_go_time_based
              compensation_details:
                amount: 100
                scale: hourly
                currency_code: USD
                frequency: weekly
                cycle_end: 25
                cycle_end_type: DAY_OF_WEEK
                payment_due_type: REGULAR
                payment_due_days: 5
          response:
            body:
              data:
                id: id
                title: title
                type: ongoing_time_based
                status: new
                created_at: '2022-05-24T09:38:46Z'
                job_title: job_title
                seniority:
                  id: 2
                  name: Mid (Individual Contributor Level 2)
                  level: 2
                who_reports: both
                scope_of_work: scope_of_work
                start_date: '2022-05-24T09:38:46Z'
                termination_date: '2022-05-24T09:38:46Z'
                special_clause: special_clause
                is_archived: true
                client:
                  id: 1000000
                  full_name: full_name
                  email: email
                  team:
                    id: 1.1
                    name: name
                  legal_entity:
                    id: 1000000
                    name: name
                    type: individual
                    subtype: subtype
                    registration_number: registration_number
                    vat_number: vat_number
                worker:
                  id: 1000000
                  full_name: full_name
                  email: email
                  alternate_email:
                    - isVerified: true
                  nationality: US
                  image: image
                  legal_entity:
                    type: individual
                    personal_name: personal_name
                    registration_number: registration_number
                  date_of_birth: '2022-05-24T09:38:46Z'
                  expected_email: expected_email
                  first_name: John
                  last_name: Doe
                invitations:
                  client_email: client_email
                  worker_email: worker_email
                signatures:
                  client_signature: client_signature
                  client_signed_at: '2022-05-24T09:38:46Z'
                  worker_signature: worker_signature
                  worker_signed_at: '2022-05-24T09:38:46Z'
                  signed_at: '2022-05-24T09:38:46Z'
                compensation_details:
                  currency_code: USD
                  amount: amount
                  scale: scale
                  frequency: frequency
                  first_payment: first_payment
                  first_payment_date: '2022-05-24T09:38:46Z'
                  gross_annual_salary: gross_annual_salary
                  gross_signing_bonus: gross_signing_bonus
                  gross_variable_bonus: gross_variable_bonus
                employment_details:
                  type: type
                  days_per_week: 1.1
                  hours_per_day: 1.1
                  probation_period: 1.1
                  paid_vacation_days: 1.1
                  country: US
                  state: CO
                notice_period: 15
                custom_fields:
                  - name: Employee ID
                    value: '54234'
                external_id: external_id
      audiences:
        - external
    getContractPreview:
      path: /contracts/{contract_id}/preview
      method: GET
      auth: true
      docs: >-
        Retrieve an IC contract agreement content in HTML. If no template is
        specified, the default or currently assigned template will be used. This
        endpoint does not support EOR and Global Payroll contract types.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
      display-name: Preview a contract agreement
      request:
        name: GetContractPreviewRequest
        query-parameters:
          templateId:
            type: optional<string>
            docs: ID of an existing contract template.
      errors:
        - root.GetContractPreviewRequestBadRequestError
        - root.GetContractPreviewRequestUnauthorizedError
        - root.GetContractPreviewRequestForbiddenError
        - root.GetContractPreviewRequestNotFoundError
        - root.GetContractPreviewRequestMethodNotAllowedError
        - root.GetContractPreviewRequestTooManyRequestsError
        - root.GetContractPreviewRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
      audiences:
        - external
    amendContractDetails:
      path: /contracts/{contract_id}/amendments
      method: POST
      auth: true
      docs: Amend payment details of a contract.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
      display-name: Amend contract
      request:
        name: ContractToAmendDetailsContainer
        body:
          properties:
            data: root.ContractDetailsToAmend
        content-type: application/json
      response:
        docs: Successful operation.
        type: root.GenericResultCreated
        status-code: 201
      errors:
        - root.AmendContractDetailsRequestBadRequestError
        - root.AmendContractDetailsRequestUnauthorizedError
        - root.AmendContractDetailsRequestForbiddenError
        - root.AmendContractDetailsRequestNotFoundError
        - root.AmendContractDetailsRequestMethodNotAllowedError
        - root.AmendContractDetailsRequestTooManyRequestsError
        - root.AmendContractDetailsRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
          request:
            data: {}
          response:
            body:
              data:
                created: true
      audiences:
        - external
    terminateContract:
      path: /contracts/{contract_id}/terminations
      method: POST
      auth: true
      docs: Terminate an active contract.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
      display-name: Terminate contract
      request:
        name: ContractToTerminateContainer
        body:
          properties:
            data: root.ContractToTerminate
        content-type: application/json
      response:
        docs: Successful operation.
        type: root.ContractTerminationResultContainer
        status-code: 201
      errors:
        - root.TerminateContractRequestBadRequestError
        - root.TerminateContractRequestUnauthorizedError
        - root.TerminateContractRequestForbiddenError
        - root.TerminateContractRequestNotFoundError
        - root.TerminateContractRequestMethodNotAllowedError
        - root.TerminateContractRequestTooManyRequestsError
        - root.TerminateContractRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
          request:
            data: {}
          response:
            body:
              data:
                id: id
                completion_date: '1999-12-31'
      audiences:
        - external
    addPremium:
      path: /contracts/{contract_id}/premium
      method: POST
      auth: true
      docs: >-
        Add additional protection against misclassification by upgrading to Deel
        Premium.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
      display-name: Upgrade to Premium
      request:
        name: PremiumToAddContainer
        body:
          properties:
            data: root.PremiumToAdd
        content-type: application/json
      response:
        docs: Successful operation.
        type: root.PremiumResultAddedContainer
        status-code: 201
      errors:
        - root.AddPremiumRequestUnauthorizedError
        - root.AddPremiumRequestForbiddenError
        - root.AddPremiumRequestNotFoundError
        - root.AddPremiumRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
          request:
            data:
              agreement_reflects_relation: true
              contractor_characteristics: false
          response:
            body:
              data:
                id: d3f79ad9-b0b5-4e0d-af2e-ad84435c0acb
                calculated_premium: 50
                misclassification_guarantee:
                  name: name
                  description: description
                penalties:
                  name: name
                  description: description
                third_party_liabilities:
                  name: name
                  description: description
      audiences:
        - external
    removePremiumFromContract:
      path: /contracts/{contract_id}/premium
      method: DELETE
      auth: true
      docs: Remove Deel Premium from an existing contract.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
      display-name: Downgrade from Premium
      request:
        name: RemovePremiumFromContractRequest
        query-parameters:
          reason:
            type: optional<string>
            docs: Reason for deleting an existing Deel Premium from a contract.
      response:
        docs: Successful operation.
        type: root.GenericResultDeleted
        status-code: 200
      errors:
        - root.RemovePremiumFromContractRequestBadRequestError
        - root.RemovePremiumFromContractRequestUnauthorizedError
        - root.RemovePremiumFromContractRequestForbiddenError
        - root.RemovePremiumFromContractRequestNotFoundError
        - root.RemovePremiumFromContractRequestMethodNotAllowedError
        - root.RemovePremiumFromContractRequestTooManyRequestsError
        - root.RemovePremiumFromContractRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
          response:
            body:
              data:
                deleted: true
      audiences:
        - external
  source:
    openapi: ../openapi.yml
  display-name: Contractors
docs: The Contracts resource lets you create, amend and, retrieve Deel contracts.
",
    },
    "contracts.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "The Contracts resource lets you create, amend and, retrieve Deel contracts.",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Contracts",
          "endpoints": {
            "addContractDocument": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Add documents",
              "docs": "Attach document to a contract. You can only add one document at a time. If you need to attach more documents please attach a Zip file.",
              "errors": [
                "root.AddContractDocumentRequestBadRequestError",
                "root.AddContractDocumentRequestUnauthorizedError",
                "root.AddContractDocumentRequestForbiddenError",
                "root.AddContractDocumentRequestNotFoundError",
                "root.AddContractDocumentRequestMethodNotAllowedError",
                "root.AddContractDocumentRequestTooManyRequestsError",
                "root.AddContractDocumentRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                  },
                  "request": {},
                  "response": {
                    "body": {
                      "data": {
                        "filename": "filename",
                        "key": "key",
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/contracts/{contract_id}/documents",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "file": "optional<file>",
                  },
                },
                "content-type": "multipart/form-data",
                "docs": "This is the file you will upload in a multi-part form.",
                "headers": undefined,
                "name": "AddContractDocumentRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.ContractDocumentContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "archiveContract": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Archive a contract",
              "docs": "Archive a terminated, cancelled or completed contract.",
              "errors": [
                "root.ArchiveContractRequestBadRequestError",
                "root.ArchiveContractRequestUnauthorizedError",
                "root.ArchiveContractRequestForbiddenError",
                "root.ArchiveContractRequestNotFoundError",
                "root.ArchiveContractRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                  },
                  "response": {
                    "body": {
                      "data": {
                        "updated": true,
                      },
                    },
                  },
                },
              ],
              "method": "PATCH",
              "pagination": undefined,
              "path": "/contracts/{contract_id}/archive",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 204,
                "type": "root.GenericResultUpdated",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "attachExternalId": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "External Id",
              "docs": "Add an external Id to a Deel contract. You can use this to add a Deel contract's refernece Id in your platform. External Id can be passed as a query parameter in List contract endpoint to find this conract later.",
              "errors": [
                "root.AttachExternalIdRequestBadRequestError",
                "root.AttachExternalIdRequestUnauthorizedError",
                "root.AttachExternalIdRequestForbiddenError",
                "root.AttachExternalIdRequestNotFoundError",
                "root.AttachExternalIdRequestMethodNotAllowedError",
                "root.AttachExternalIdRequestTooManyRequestsError",
                "root.AttachExternalIdRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                  },
                  "request": {
                    "data": {
                      "external_id": "external_id",
                    },
                  },
                  "response": {
                    "body": {
                      "data": {
                        "created": true,
                      },
                    },
                  },
                },
              ],
              "method": "PATCH",
              "pagination": undefined,
              "path": "/contracts/{contract_id}",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "data": "root.ContractExternalIdToPatch",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "InputToPatchContractExternalId",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.GenericResultCreated",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "calculateFinalPayment": {
              "auth": true,
              "display-name": "Calculate final payment",
              "docs": "Calculate the final payment due to the contractor when ending the contract.",
              "errors": [
                "root.CalculateFinalPaymentRequestUnauthorizedError",
                "root.CalculateFinalPaymentRequestForbiddenError",
                "root.CalculateFinalPaymentRequestNotFoundError",
                "root.CalculateFinalPaymentRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                  },
                  "response": {
                    "body": {
                      "data": {
                        "calculation_type": "CUSTOM_AMOUNT",
                        "daily_rate": "5.8571",
                        "last_cycle": {
                          "completion_date": "2022-05-24T09:38:46Z",
                          "end": "2022-05-24T09:38:46Z",
                          "start": "2022-05-24T09:38:46Z",
                        },
                        "remaining_days": "5.8571",
                        "total": "5.8571",
                        "workweek_end": 1.1,
                        "workweek_start": 1.1,
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/contracts/{contract_id}/final-payments",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
              },
              "request": {
                "name": "CalculateFinalPaymentRequest",
                "query-parameters": {
                  "calculation_type": {
                    "docs": "The days to calculate.",
                    "type": "optional<CalculateFinalPaymentRequestCalculationType>",
                  },
                  "end_date": {
                    "docs": "The day to end the contract.",
                    "type": "optional<root.DateString>",
                  },
                  "workweek_end": {
                    "docs": "The day the work week ends, 0 to 6",
                    "type": "optional<string>",
                  },
                  "workweek_start": {
                    "docs": "The day the work week starts, 0 to 6",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.FinalPaymentCalculatedContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "editContractDocument": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Edit the file attached to contract document.",
              "docs": "Overwrite the file currently attached to contract document.",
              "errors": [
                "root.EditContractDocumentRequestBadRequestError",
                "root.EditContractDocumentRequestUnauthorizedError",
                "root.EditContractDocumentRequestForbiddenError",
                "root.EditContractDocumentRequestNotFoundError",
                "root.EditContractDocumentRequestMethodNotAllowedError",
                "root.EditContractDocumentRequestTooManyRequestsError",
                "root.EditContractDocumentRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                  },
                  "request": {},
                  "response": {
                    "body": {
                      "data": {
                        "filename": "filename",
                        "key": "key",
                      },
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/contracts/{contract_id}/documents",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "file": "optional<file>",
                  },
                },
                "content-type": "multipart/form-data",
                "docs": "This is the file you will upload in a multi-part form.",
                "headers": undefined,
                "name": "EditContractDocumentRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.ContractDocumentContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getAlternateEmailsByContractId": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Find contract emails by ID",
              "docs": "Returns an array of alternate email objects",
              "errors": [
                "root.GetAlternateEmailsByContractIdRequestBadRequestError",
                "root.GetAlternateEmailsByContractIdRequestUnauthorizedError",
                "root.GetAlternateEmailsByContractIdRequestForbiddenError",
                "root.GetAlternateEmailsByContractIdRequestNotFoundError",
                "root.GetAlternateEmailsByContractIdRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                  },
                  "response": {
                    "body": [
                      {
                        "email": "email",
                        "isVerified": true,
                      },
                    ],
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/contracts/{contract_id}/alternate_emails",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.AlternateEmailList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getContractById": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Retrieve a single contract",
              "docs": "Retrieve a single contract.",
              "errors": [
                "root.GetContractByIdRequestBadRequestError",
                "root.GetContractByIdRequestUnauthorizedError",
                "root.GetContractByIdRequestForbiddenError",
                "root.GetContractByIdRequestNotFoundError",
                "root.GetContractByIdRequestMethodNotAllowedError",
                "root.GetContractByIdRequestTooManyRequestsError",
                "root.GetContractByIdRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                  },
                  "response": {
                    "body": {
                      "data": {
                        "client": {
                          "email": "email",
                          "full_name": "full_name",
                          "id": 1000000,
                          "legal_entity": {
                            "id": 1000000,
                            "name": "name",
                            "registration_number": "registration_number",
                            "subtype": "subtype",
                            "type": "individual",
                            "vat_number": "vat_number",
                          },
                          "team": {
                            "id": 1.1,
                            "name": "name",
                          },
                        },
                        "compensation_details": {
                          "amount": "amount",
                          "currency_code": "USD",
                          "first_payment": "first_payment",
                          "first_payment_date": "2022-05-24T09:38:46Z",
                          "frequency": "frequency",
                          "gross_annual_salary": "gross_annual_salary",
                          "gross_signing_bonus": "gross_signing_bonus",
                          "gross_variable_bonus": "gross_variable_bonus",
                          "scale": "scale",
                        },
                        "created_at": "2022-05-24T09:38:46Z",
                        "custom_fields": [
                          {
                            "name": "Employee ID",
                            "value": "54234",
                          },
                        ],
                        "employment_details": {
                          "country": "US",
                          "days_per_week": 1.1,
                          "hours_per_day": 1.1,
                          "paid_vacation_days": 1.1,
                          "probation_period": 1.1,
                          "state": "CO",
                          "type": "type",
                        },
                        "external_id": "external_id",
                        "id": "id",
                        "invitations": {
                          "client_email": "client_email",
                          "worker_email": "worker_email",
                        },
                        "is_archived": true,
                        "job_title": "job_title",
                        "notice_period": 15,
                        "scope_of_work": "scope_of_work",
                        "seniority": {
                          "id": 2,
                          "level": 2,
                          "name": "Mid (Individual Contributor Level 2)",
                        },
                        "signatures": {
                          "client_signature": "client_signature",
                          "client_signed_at": "2022-05-24T09:38:46Z",
                          "signed_at": "2022-05-24T09:38:46Z",
                          "worker_signature": "worker_signature",
                          "worker_signed_at": "2022-05-24T09:38:46Z",
                        },
                        "special_clause": "special_clause",
                        "start_date": "2022-05-24T09:38:46Z",
                        "status": "new",
                        "termination_date": "2022-05-24T09:38:46Z",
                        "title": "title",
                        "type": "ongoing_time_based",
                        "who_reports": "both",
                        "worker": {
                          "alternate_email": [
                            {
                              "isVerified": true,
                            },
                          ],
                          "date_of_birth": "2022-05-24T09:38:46Z",
                          "email": "email",
                          "expected_email": "expected_email",
                          "first_name": "John",
                          "full_name": "full_name",
                          "id": 1000000,
                          "image": "image",
                          "last_name": "Doe",
                          "legal_entity": {
                            "personal_name": "personal_name",
                            "registration_number": "registration_number",
                            "type": "individual",
                          },
                          "nationality": "US",
                        },
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/contracts/{contract_id}",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.ContractContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getContractList": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "List of contracts",
              "docs": "Retrieve a list of contracts.",
              "errors": [
                "root.GetContractListRequestBadRequestError",
                "root.GetContractListRequestUnauthorizedError",
                "root.GetContractListRequestForbiddenError",
                "root.GetContractListRequestNotFoundError",
                "root.GetContractListRequestMethodNotAllowedError",
                "root.GetContractListRequestTooManyRequestsError",
                "root.GetContractListRequestInternalServerError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "data": [
                        {
                          "client": {},
                          "created_at": "2022-05-24T09:38:46Z",
                          "external_id": "external_id",
                          "id": "id",
                          "invitations": {},
                          "is_archived": true,
                          "is_shielded": true,
                          "notice_period": 15,
                          "signatures": {
                            "client_signed_at": "2022-05-24T09:38:46Z",
                            "worker_signature": "Jane Doe",
                            "worker_signed_at": "2022-05-24T09:38:46Z",
                          },
                          "status": "new",
                          "termination_date": "2022-05-24T09:38:46Z",
                          "title": "title",
                          "type": "ongoing_time_based",
                          "who_reports": "both",
                          "worker": {
                            "full_name": "full_name",
                            "id": 1000000,
                          },
                        },
                      ],
                      "page": {
                        "cursor": "cursor",
                        "total_rows": 1.1,
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/contracts",
              "request": {
                "name": "GetContractListRequest",
                "query-parameters": {
                  "after_cursor": {
                    "docs": "Return next page of results after given cursor.",
                    "type": "optional<string>",
                  },
                  "countries": {
                    "allow-multiple": true,
                    "docs": "Country codes of contracts to filter.",
                    "type": "optional<root.CountryCode>",
                  },
                  "currencies": {
                    "allow-multiple": true,
                    "docs": "Currency codes of contracts to filter.",
                    "type": "optional<root.CurrencyCodeRequired>",
                  },
                  "external_id": {
                    "docs": "Filter contracts for given external ID",
                    "type": "optional<string>",
                  },
                  "limit": {
                    "docs": "Return a page of results with given number of records.",
                    "type": "optional<double>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 10,
                      "min": 1,
                      "multipleOf": undefined,
                    },
                  },
                  "order_direction": {
                    "docs": "Order direction of results; ascending or descending.",
                    "type": "optional<root.SortDirEnum>",
                  },
                  "search": {
                    "docs": "Include a contract if by name or contractor name contains given search term.",
                    "type": "optional<string>",
                  },
                  "sort_by": {
                    "docs": "Sort contracts by given field name.",
                    "type": "optional<root.ContractsSortByEnum>",
                  },
                  "statuses": {
                    "allow-multiple": true,
                    "docs": "You can filter contracts by current status, a contract is included in results if its status is in this list.",
                    "type": "optional<root.ContractStatusEnum>",
                  },
                  "team_id": {
                    "docs": "Filter contracts for given team ID; NOTE: technically ALL query parameters are strings or array of strings",
                    "type": "optional<double>",
                  },
                  "types": {
                    "allow-multiple": true,
                    "docs": "You can filter contracts by type, a contract is included in results if its type is in this list.",
                    "type": "optional<root.ContractTypeEnum>",
                  },
                },
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.ContractListContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getContractTemplates": {
              "auth": true,
              "display-name": "Get contract templates",
              "docs": "Retrieve a list of contract templates in your organization.",
              "errors": [
                "root.GetContractTemplatesRequestUnauthorizedError",
                "root.GetContractTemplatesRequestForbiddenError",
                "root.GetContractTemplatesRequestNotFoundError",
                "root.GetContractTemplatesRequestMethodNotAllowedError",
                "root.GetContractTemplatesRequestTooManyRequestsError",
                "root.GetContractTemplatesRequestInternalServerError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "data": [
                        {
                          "id": 1,
                          "title": "UK Employment Contract 2022.",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/contract-templates",
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.ContractTemplateListContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "inviteToSignContract": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Send contract to worker",
              "docs": "Invite a worker to sign the contract. Worker will be notified via email.",
              "errors": [
                "root.InviteToSignContractRequestBadRequestError",
                "root.InviteToSignContractRequestUnauthorizedError",
                "root.InviteToSignContractRequestForbiddenError",
                "root.InviteToSignContractRequestNotFoundError",
                "root.InviteToSignContractRequestMethodNotAllowedError",
                "root.InviteToSignContractRequestTooManyRequestsError",
                "root.InviteToSignContractRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                  },
                  "request": {
                    "data": {
                      "email": "email",
                      "message": "message",
                    },
                  },
                  "response": {
                    "body": {
                      "data": {
                        "created": true,
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/contracts/{contract_id}/invitations",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "data": "root.ContractInvitationToCreate",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ContractInvitationToCreateContainer",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 201,
                "type": "root.GenericResultCreated",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "postContractEstimate": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Calculate first payment amount",
              "docs": "First payment is calculated from the number of working/calendar days between their start date and the start of the payment cycle.",
              "errors": [
                "root.PostContractEstimateRequestUnauthorizedError",
                "root.PostContractEstimateRequestForbiddenError",
                "root.PostContractEstimateRequestNotFoundError",
                "root.PostContractEstimateRequestInternalServerError",
              ],
              "examples": [
                {
                  "request": {
                    "data": {
                      "compensation_details": {},
                      "country_code": "US",
                      "start_date": "1999-12-31",
                      "type": "ongoing_time_based",
                    },
                  },
                  "response": {
                    "body": {
                      "data": {
                        "first_payment_dates": [
                          {
                            "due": "1999-12-31",
                          },
                        ],
                        "pro_rata": {
                          "calculation_type": "CUSTOM_AMOUNT",
                          "cycle_end": "1999-12-31",
                          "cycle_start": "1999-12-31",
                          "cycle_work_days": 11,
                          "daily_rate": 2500,
                          "rate": 2500,
                          "total": 2500,
                          "work_week_end": "Sunday",
                          "work_week_start": "Sunday",
                        },
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/contracts/estimate",
              "request": {
                "body": {
                  "properties": {
                    "data": "root.EstimateFirstPayment",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "EstimateFirstPaymentContainer",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.ResponseEstimateFirstPaymentContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "signContract": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Sign a contract",
              "docs": "Sign a contract as a client.",
              "errors": [
                "root.SignContractRequestBadRequestError",
                "root.SignContractRequestUnauthorizedError",
                "root.SignContractRequestForbiddenError",
                "root.SignContractRequestNotFoundError",
                "root.SignContractRequestMethodNotAllowedError",
                "root.SignContractRequestTooManyRequestsError",
                "root.SignContractRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                  },
                  "request": {
                    "data": {
                      "client_signature": "client_signature",
                    },
                  },
                  "response": {
                    "body": {
                      "data": {
                        "created": true,
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/contracts/{contract_id}/signatures",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "data": "root.ContractSignatureToCreate",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ContractSignatureToCreateContainer",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 201,
                "type": "root.GenericResultCreated",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "uninviteToSignContract": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Remove invite",
              "docs": "Remove invite in order to re-invite a worker to sign the contract.",
              "errors": [
                "root.UninviteToSignContractRequestBadRequestError",
                "root.UninviteToSignContractRequestUnauthorizedError",
                "root.UninviteToSignContractRequestForbiddenError",
                "root.UninviteToSignContractRequestNotFoundError",
                "root.UninviteToSignContractRequestMethodNotAllowedError",
                "root.UninviteToSignContractRequestTooManyRequestsError",
                "root.UninviteToSignContractRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                  },
                  "response": {
                    "body": {
                      "data": {
                        "deleted": true,
                      },
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/contracts/{contract_id}/invitations",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.GenericResultDeleted",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "CalculateFinalPaymentRequestCalculationType": {
            "enum": [
              "CUSTOM_AMOUNT",
              "WORK_DAYS",
              "CALENDAR_DAYS",
              "FULL_AMOUNT",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    getContractList:
      path: /contracts
      method: GET
      auth: true
      docs: Retrieve a list of contracts.
      source:
        openapi: ../openapi.yml
      display-name: List of contracts
      request:
        name: GetContractListRequest
        query-parameters:
          after_cursor:
            type: optional<string>
            docs: Return next page of results after given cursor.
          limit:
            type: optional<double>
            docs: Return a page of results with given number of records.
            validation:
              min: 1
              max: 10
          order_direction:
            type: optional<root.SortDirEnum>
            docs: Order direction of results; ascending or descending.
          types:
            type: optional<root.ContractTypeEnum>
            allow-multiple: true
            docs: >-
              You can filter contracts by type, a contract is included in
              results if its type is in this list.
          statuses:
            type: optional<root.ContractStatusEnum>
            allow-multiple: true
            docs: >-
              You can filter contracts by current status, a contract is included
              in results if its status is in this list.
          team_id:
            type: optional<double>
            docs: >-
              Filter contracts for given team ID; NOTE: technically ALL query
              parameters are strings or array of strings
          external_id:
            type: optional<string>
            docs: Filter contracts for given external ID
          countries:
            type: optional<root.CountryCode>
            allow-multiple: true
            docs: Country codes of contracts to filter.
          currencies:
            type: optional<root.CurrencyCodeRequired>
            allow-multiple: true
            docs: Currency codes of contracts to filter.
          search:
            type: optional<string>
            docs: >-
              Include a contract if by name or contractor name contains given
              search term.
          sort_by:
            type: optional<root.ContractsSortByEnum>
            docs: Sort contracts by given field name.
      response:
        docs: Successful operation.
        type: root.ContractListContainer
        status-code: 200
      errors:
        - root.GetContractListRequestBadRequestError
        - root.GetContractListRequestUnauthorizedError
        - root.GetContractListRequestForbiddenError
        - root.GetContractListRequestNotFoundError
        - root.GetContractListRequestMethodNotAllowedError
        - root.GetContractListRequestTooManyRequestsError
        - root.GetContractListRequestInternalServerError
      examples:
        - response:
            body:
              data:
                - id: id
                  title: title
                  type: ongoing_time_based
                  status: new
                  client: {}
                  worker:
                    id: 1000000
                    full_name: full_name
                  invitations: {}
                  signatures:
                    client_signed_at: '2022-05-24T09:38:46Z'
                    worker_signature: Jane Doe
                    worker_signed_at: '2022-05-24T09:38:46Z'
                  is_shielded: true
                  is_archived: true
                  created_at: '2022-05-24T09:38:46Z'
                  termination_date: '2022-05-24T09:38:46Z'
                  notice_period: 15
                  who_reports: both
                  external_id: external_id
              page:
                cursor: cursor
                total_rows: 1.1
      audiences:
        - external
    getContractById:
      path: /contracts/{contract_id}
      method: GET
      auth: true
      docs: Retrieve a single contract.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
      display-name: Retrieve a single contract
      response:
        docs: Successful operation.
        type: root.ContractContainer
        status-code: 200
      errors:
        - root.GetContractByIdRequestBadRequestError
        - root.GetContractByIdRequestUnauthorizedError
        - root.GetContractByIdRequestForbiddenError
        - root.GetContractByIdRequestNotFoundError
        - root.GetContractByIdRequestMethodNotAllowedError
        - root.GetContractByIdRequestTooManyRequestsError
        - root.GetContractByIdRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
          response:
            body:
              data:
                id: id
                title: title
                type: ongoing_time_based
                status: new
                created_at: '2022-05-24T09:38:46Z'
                job_title: job_title
                seniority:
                  id: 2
                  name: Mid (Individual Contributor Level 2)
                  level: 2
                who_reports: both
                scope_of_work: scope_of_work
                start_date: '2022-05-24T09:38:46Z'
                termination_date: '2022-05-24T09:38:46Z'
                special_clause: special_clause
                is_archived: true
                client:
                  id: 1000000
                  full_name: full_name
                  email: email
                  team:
                    id: 1.1
                    name: name
                  legal_entity:
                    id: 1000000
                    name: name
                    type: individual
                    subtype: subtype
                    registration_number: registration_number
                    vat_number: vat_number
                worker:
                  id: 1000000
                  full_name: full_name
                  email: email
                  alternate_email:
                    - isVerified: true
                  nationality: US
                  image: image
                  legal_entity:
                    type: individual
                    personal_name: personal_name
                    registration_number: registration_number
                  date_of_birth: '2022-05-24T09:38:46Z'
                  expected_email: expected_email
                  first_name: John
                  last_name: Doe
                invitations:
                  client_email: client_email
                  worker_email: worker_email
                signatures:
                  client_signature: client_signature
                  client_signed_at: '2022-05-24T09:38:46Z'
                  worker_signature: worker_signature
                  worker_signed_at: '2022-05-24T09:38:46Z'
                  signed_at: '2022-05-24T09:38:46Z'
                compensation_details:
                  currency_code: USD
                  amount: amount
                  scale: scale
                  frequency: frequency
                  first_payment: first_payment
                  first_payment_date: '2022-05-24T09:38:46Z'
                  gross_annual_salary: gross_annual_salary
                  gross_signing_bonus: gross_signing_bonus
                  gross_variable_bonus: gross_variable_bonus
                employment_details:
                  type: type
                  days_per_week: 1.1
                  hours_per_day: 1.1
                  probation_period: 1.1
                  paid_vacation_days: 1.1
                  country: US
                  state: CO
                notice_period: 15
                custom_fields:
                  - name: Employee ID
                    value: '54234'
                external_id: external_id
      audiences:
        - external
    attachExternalId:
      path: /contracts/{contract_id}
      method: PATCH
      auth: true
      docs: >-
        Add an external Id to a Deel contract. You can use this to add a Deel
        contract's refernece Id in your platform. External Id can be passed as a
        query parameter in List contract endpoint to find this conract later.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
      display-name: External Id
      request:
        name: InputToPatchContractExternalId
        body:
          properties:
            data: root.ContractExternalIdToPatch
        content-type: application/json
      response:
        docs: Successful operation.
        type: root.GenericResultCreated
        status-code: 200
      errors:
        - root.AttachExternalIdRequestBadRequestError
        - root.AttachExternalIdRequestUnauthorizedError
        - root.AttachExternalIdRequestForbiddenError
        - root.AttachExternalIdRequestNotFoundError
        - root.AttachExternalIdRequestMethodNotAllowedError
        - root.AttachExternalIdRequestTooManyRequestsError
        - root.AttachExternalIdRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
          request:
            data:
              external_id: external_id
          response:
            body:
              data:
                created: true
      audiences:
        - external
    addContractDocument:
      path: /contracts/{contract_id}/documents
      method: POST
      auth: true
      docs: >-
        Attach document to a contract. You can only add one document at a time.
        If you need to attach more documents please attach a Zip file.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
      display-name: Add documents
      request:
        name: AddContractDocumentRequest
        body:
          properties:
            file: optional<file>
        content-type: multipart/form-data
        docs: This is the file you will upload in a multi-part form.
      response:
        docs: Successful operation.
        type: root.ContractDocumentContainer
        status-code: 200
      errors:
        - root.AddContractDocumentRequestBadRequestError
        - root.AddContractDocumentRequestUnauthorizedError
        - root.AddContractDocumentRequestForbiddenError
        - root.AddContractDocumentRequestNotFoundError
        - root.AddContractDocumentRequestMethodNotAllowedError
        - root.AddContractDocumentRequestTooManyRequestsError
        - root.AddContractDocumentRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
          request: {}
          response:
            body:
              data:
                filename: filename
                key: key
      audiences:
        - external
    editContractDocument:
      path: /contracts/{contract_id}/documents
      method: PUT
      auth: true
      docs: Overwrite the file currently attached to contract document.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
      display-name: Edit the file attached to contract document.
      request:
        name: EditContractDocumentRequest
        body:
          properties:
            file: optional<file>
        content-type: multipart/form-data
        docs: This is the file you will upload in a multi-part form.
      response:
        docs: Successful operation.
        type: root.ContractDocumentContainer
        status-code: 200
      errors:
        - root.EditContractDocumentRequestBadRequestError
        - root.EditContractDocumentRequestUnauthorizedError
        - root.EditContractDocumentRequestForbiddenError
        - root.EditContractDocumentRequestNotFoundError
        - root.EditContractDocumentRequestMethodNotAllowedError
        - root.EditContractDocumentRequestTooManyRequestsError
        - root.EditContractDocumentRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
          request: {}
          response:
            body:
              data:
                filename: filename
                key: key
      audiences:
        - external
    getAlternateEmailsByContractId:
      path: /contracts/{contract_id}/alternate_emails
      method: GET
      auth: true
      docs: Returns an array of alternate email objects
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
      display-name: Find contract emails by ID
      response:
        docs: Successful operation.
        type: root.AlternateEmailList
        status-code: 200
      errors:
        - root.GetAlternateEmailsByContractIdRequestBadRequestError
        - root.GetAlternateEmailsByContractIdRequestUnauthorizedError
        - root.GetAlternateEmailsByContractIdRequestForbiddenError
        - root.GetAlternateEmailsByContractIdRequestNotFoundError
        - root.GetAlternateEmailsByContractIdRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
          response:
            body:
              - email: email
                isVerified: true
      audiences:
        - external
    signContract:
      path: /contracts/{contract_id}/signatures
      method: POST
      auth: true
      docs: Sign a contract as a client.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
      display-name: Sign a contract
      request:
        name: ContractSignatureToCreateContainer
        body:
          properties:
            data: root.ContractSignatureToCreate
        content-type: application/json
      response:
        docs: Successful operation.
        type: root.GenericResultCreated
        status-code: 201
      errors:
        - root.SignContractRequestBadRequestError
        - root.SignContractRequestUnauthorizedError
        - root.SignContractRequestForbiddenError
        - root.SignContractRequestNotFoundError
        - root.SignContractRequestMethodNotAllowedError
        - root.SignContractRequestTooManyRequestsError
        - root.SignContractRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
          request:
            data:
              client_signature: client_signature
          response:
            body:
              data:
                created: true
      audiences:
        - external
    archiveContract:
      path: /contracts/{contract_id}/archive
      method: PATCH
      auth: true
      docs: Archive a terminated, cancelled or completed contract.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
      display-name: Archive a contract
      response:
        docs: Successful operation.
        type: root.GenericResultUpdated
        status-code: 204
      errors:
        - root.ArchiveContractRequestBadRequestError
        - root.ArchiveContractRequestUnauthorizedError
        - root.ArchiveContractRequestForbiddenError
        - root.ArchiveContractRequestNotFoundError
        - root.ArchiveContractRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
          response:
            body:
              data:
                updated: true
      audiences:
        - external
    inviteToSignContract:
      path: /contracts/{contract_id}/invitations
      method: POST
      auth: true
      docs: Invite a worker to sign the contract. Worker will be notified via email.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
      display-name: Send contract to worker
      request:
        name: ContractInvitationToCreateContainer
        body:
          properties:
            data: root.ContractInvitationToCreate
        content-type: application/json
      response:
        docs: Successful operation.
        type: root.GenericResultCreated
        status-code: 201
      errors:
        - root.InviteToSignContractRequestBadRequestError
        - root.InviteToSignContractRequestUnauthorizedError
        - root.InviteToSignContractRequestForbiddenError
        - root.InviteToSignContractRequestNotFoundError
        - root.InviteToSignContractRequestMethodNotAllowedError
        - root.InviteToSignContractRequestTooManyRequestsError
        - root.InviteToSignContractRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
          request:
            data:
              email: email
              message: message
          response:
            body:
              data:
                created: true
      audiences:
        - external
    uninviteToSignContract:
      path: /contracts/{contract_id}/invitations
      method: DELETE
      auth: true
      docs: Remove invite in order to re-invite a worker to sign the contract.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
      display-name: Remove invite
      response:
        docs: Successful operation.
        type: root.GenericResultDeleted
        status-code: 200
      errors:
        - root.UninviteToSignContractRequestBadRequestError
        - root.UninviteToSignContractRequestUnauthorizedError
        - root.UninviteToSignContractRequestForbiddenError
        - root.UninviteToSignContractRequestNotFoundError
        - root.UninviteToSignContractRequestMethodNotAllowedError
        - root.UninviteToSignContractRequestTooManyRequestsError
        - root.UninviteToSignContractRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
          response:
            body:
              data:
                deleted: true
      audiences:
        - external
    calculateFinalPayment:
      path: /contracts/{contract_id}/final-payments
      method: GET
      auth: true
      docs: >-
        Calculate the final payment due to the contractor when ending the
        contract.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
      display-name: Calculate final payment
      request:
        name: CalculateFinalPaymentRequest
        query-parameters:
          end_date:
            type: optional<root.DateString>
            docs: The day to end the contract.
          calculation_type:
            type: optional<CalculateFinalPaymentRequestCalculationType>
            docs: The days to calculate.
          workweek_start:
            type: optional<string>
            docs: The day the work week starts, 0 to 6
          workweek_end:
            type: optional<string>
            docs: The day the work week ends, 0 to 6
      response:
        docs: Successful operation.
        type: root.FinalPaymentCalculatedContainer
        status-code: 200
      errors:
        - root.CalculateFinalPaymentRequestUnauthorizedError
        - root.CalculateFinalPaymentRequestForbiddenError
        - root.CalculateFinalPaymentRequestNotFoundError
        - root.CalculateFinalPaymentRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
          response:
            body:
              data:
                daily_rate: '5.8571'
                total: '5.8571'
                remaining_days: '5.8571'
                last_cycle:
                  start: '2022-05-24T09:38:46Z'
                  end: '2022-05-24T09:38:46Z'
                  completion_date: '2022-05-24T09:38:46Z'
                calculation_type: CUSTOM_AMOUNT
                workweek_start: 1.1
                workweek_end: 1.1
    postContractEstimate:
      path: /contracts/estimate
      method: POST
      auth: true
      docs: >-
        First payment is calculated from the number of working/calendar days
        between their start date and the start of the payment cycle.
      source:
        openapi: ../openapi.yml
      display-name: Calculate first payment amount
      request:
        name: EstimateFirstPaymentContainer
        body:
          properties:
            data: root.EstimateFirstPayment
        content-type: application/json
      response:
        docs: Successful operation.
        type: root.ResponseEstimateFirstPaymentContainer
        status-code: 200
      errors:
        - root.PostContractEstimateRequestUnauthorizedError
        - root.PostContractEstimateRequestForbiddenError
        - root.PostContractEstimateRequestNotFoundError
        - root.PostContractEstimateRequestInternalServerError
      examples:
        - request:
            data:
              type: ongoing_time_based
              country_code: US
              start_date: '1999-12-31'
              compensation_details: {}
          response:
            body:
              data:
                pro_rata:
                  calculation_type: CUSTOM_AMOUNT
                  rate: 2500
                  daily_rate: 2500
                  total: 2500
                  cycle_work_days: 11
                  work_week_start: Sunday
                  work_week_end: Sunday
                  cycle_start: '1999-12-31'
                  cycle_end: '1999-12-31'
                first_payment_dates:
                  - due: '1999-12-31'
      audiences:
        - external
    getContractTemplates:
      path: /contract-templates
      method: GET
      auth: true
      docs: Retrieve a list of contract templates in your organization.
      source:
        openapi: ../openapi.yml
      display-name: Get contract templates
      response:
        docs: Successful operation.
        type: root.ContractTemplateListContainer
        status-code: 200
      errors:
        - root.GetContractTemplatesRequestUnauthorizedError
        - root.GetContractTemplatesRequestForbiddenError
        - root.GetContractTemplatesRequestNotFoundError
        - root.GetContractTemplatesRequestMethodNotAllowedError
        - root.GetContractTemplatesRequestTooManyRequestsError
        - root.GetContractTemplatesRequestInternalServerError
      examples:
        - response:
            body:
              data:
                - id: 1
                  title: UK Employment Contract 2022.
  source:
    openapi: ../openapi.yml
  display-name: Contracts
docs: The Contracts resource lets you create, amend and, retrieve Deel contracts.
types:
  CalculateFinalPaymentRequestCalculationType:
    enum:
      - CUSTOM_AMOUNT
      - WORK_DAYS
      - CALENDAR_DAYS
      - FULL_AMOUNT
    source:
      openapi: ../openapi.yml
",
    },
    "eor.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Employee of Record (EOR).",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "EOR",
          "endpoints": {
            "createEorContract": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Create an EOR contract",
              "docs": "Create an Employee of Record (EOR) contract quote. The endpoints creates a contract quote request. Deel will process the information and get back with a quote for this contract.",
              "errors": [
                "root.CreateEorContractRequestUnauthorizedError",
                "root.CreateEorContractRequestForbiddenError",
                "root.CreateEorContractRequestNotFoundError",
                "root.CreateEorContractRequestInternalServerError",
              ],
              "examples": [
                {
                  "request": {
                    "data": {
                      "client": {},
                      "compensation_details": {},
                      "employment": {},
                      "seniority": {},
                    },
                  },
                  "response": {
                    "body": {
                      "data": {
                        "compensation_details": {
                          "currency": "currency",
                          "salary": 1.1,
                          "variable_compensation": "variable_compensation",
                          "variable_compensation_type": "variable_compensation_type",
                        },
                        "created_at": "2022-05-24T09:38:46Z",
                        "employee": {
                          "email": "email",
                          "first_name": "first_name",
                          "last_name": "last_name",
                          "legal_name": "legal_name",
                        },
                        "employment": {
                          "calculated_holidays": "calculated_holidays",
                          "country": "country",
                          "end_date": "1999-12-31",
                          "probation_period": 1.1,
                          "scope_of_work": "A designer works on the entire process of defining requirements, visualizing and creating graphics including illustrations or logos. Also, the designer works on shaping the visual aspects of websites, product packaging, and more.",
                          "start_date": "1999-12-31",
                          "state": "state",
                          "time_off_type": "time_off_type",
                          "work_visa_required": true,
                        },
                        "health_plan": {
                          "id": "id",
                          "name": "name",
                        },
                        "id": "id",
                        "job_title": "Designer",
                        "seniority": {
                          "id": 2,
                          "level": 2,
                          "name": "Mid (Individual Contributor Level 2)",
                        },
                        "status": "new",
                        "type": "ongoing_time_based",
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/eor",
              "request": {
                "body": {
                  "properties": {
                    "data": "root.EorContractToCreate",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "EorContractToCreateContainer",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.EorContractCreatedContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getEorCountryValidations": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Retrieve country guide",
              "docs": "Retrieve the hiring guide data for a country. This data can be used to create Employee of Record (EOR) contract quotes.",
              "errors": [
                "root.GetEorCountryValidationsRequestUnauthorizedError",
                "root.GetEorCountryValidationsRequestForbiddenError",
                "root.GetEorCountryValidationsRequestNotFoundError",
                "root.GetEorCountryValidationsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "country_code": "US",
                  },
                  "response": {
                    "body": {
                      "data": {
                        "adjustments_information_box": "Not allowed to contract people under 21.",
                        "currency": "BRL",
                        "definite_contract": {
                          "maximum_limitation": 36,
                          "type": "ALLOWED_WITHOUT_LIMITATION",
                        },
                        "health_insurance": {
                          "providers": [
                            {
                              "currency": "USD",
                              "ending_rule": "END_OF_MONTH",
                              "home_page_url": "https://bit.ly/3uW72fp",
                              "name": "United Healthcare VSP Vision & Delta Dental: Singles Only",
                              "type": "PLAN",
                            },
                          ],
                          "status": "REQUIRED",
                        },
                        "hiring_guide_country_name": "brazil",
                        "holiday": {
                          "min": "20",
                        },
                        "insurance_fee": "15.00",
                        "part_time_holiday": {
                          "min": "15",
                          "type": "PRORATED",
                        },
                        "part_time_probation": {
                          "max": 60,
                          "min": 30,
                        },
                        "probation": {
                          "max": 90,
                          "min": "min",
                        },
                        "salary": {
                          "max": "2649300.00",
                          "min": "14544.00",
                        },
                        "sick_days": {
                          "max": "max",
                          "min": "0",
                        },
                        "start_date_buffer": 5,
                        "work_schedule": {
                          "days": {
                            "max": "6",
                          },
                          "hours": {
                            "max": "10",
                          },
                        },
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/eor/validations/{country_code}",
              "path-parameters": {
                "country_code": {
                  "docs": "Country code.",
                  "type": "root.CountryCode",
                },
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.EorCountryValidationsContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    getEorCountryValidations:
      path: /eor/validations/{country_code}
      method: GET
      auth: true
      docs: >-
        Retrieve the hiring guide data for a country. This data can be used to
        create Employee of Record (EOR) contract quotes.
      source:
        openapi: ../openapi.yml
      path-parameters:
        country_code:
          type: root.CountryCode
          docs: Country code.
      display-name: Retrieve country guide
      response:
        docs: Successful operation.
        type: root.EorCountryValidationsContainer
        status-code: 200
      errors:
        - root.GetEorCountryValidationsRequestUnauthorizedError
        - root.GetEorCountryValidationsRequestForbiddenError
        - root.GetEorCountryValidationsRequestNotFoundError
        - root.GetEorCountryValidationsRequestInternalServerError
      examples:
        - path-parameters:
            country_code: US
          response:
            body:
              data:
                holiday:
                  min: '20'
                part_time_holiday:
                  type: PRORATED
                  min: '15'
                sick_days:
                  min: '0'
                  max: max
                salary:
                  min: '14544.00'
                  max: '2649300.00'
                probation:
                  min: min
                  max: 90
                part_time_probation:
                  min: 30
                  max: 60
                work_schedule:
                  days:
                    max: '6'
                  hours:
                    max: '10'
                insurance_fee: '15.00'
                currency: BRL
                hiring_guide_country_name: brazil
                start_date_buffer: 5
                definite_contract:
                  type: ALLOWED_WITHOUT_LIMITATION
                  maximum_limitation: 36
                adjustments_information_box: Not allowed to contract people under 21.
                health_insurance:
                  status: REQUIRED
                  providers:
                    - name: >-
                        United Healthcare VSP Vision & Delta Dental: Singles
                        Only
                      home_page_url: https://bit.ly/3uW72fp
                      currency: USD
                      type: PLAN
                      ending_rule: END_OF_MONTH
      audiences:
        - external
    createEorContract:
      path: /eor
      method: POST
      auth: true
      docs: >-
        Create an Employee of Record (EOR) contract quote. The endpoints creates
        a contract quote request. Deel will process the information and get back
        with a quote for this contract.
      source:
        openapi: ../openapi.yml
      display-name: Create an EOR contract
      request:
        name: EorContractToCreateContainer
        body:
          properties:
            data: root.EorContractToCreate
        content-type: application/json
      response:
        docs: Successful operation.
        type: root.EorContractCreatedContainer
        status-code: 200
      errors:
        - root.CreateEorContractRequestUnauthorizedError
        - root.CreateEorContractRequestForbiddenError
        - root.CreateEorContractRequestNotFoundError
        - root.CreateEorContractRequestInternalServerError
      examples:
        - request:
            data:
              employment: {}
              seniority: {}
              client: {}
              compensation_details: {}
          response:
            body:
              data:
                id: id
                type: ongoing_time_based
                created_at: '2022-05-24T09:38:46Z'
                status: new
                job_title: Designer
                employment:
                  scope_of_work: >-
                    A designer works on the entire process of defining
                    requirements, visualizing and creating graphics including
                    illustrations or logos. Also, the designer works on shaping
                    the visual aspects of websites, product packaging, and more.
                  start_date: '1999-12-31'
                  end_date: '1999-12-31'
                  country: country
                  state: state
                  work_visa_required: true
                  time_off_type: time_off_type
                  probation_period: 1.1
                  calculated_holidays: calculated_holidays
                compensation_details:
                  salary: 1.1
                  currency: currency
                  variable_compensation: variable_compensation
                  variable_compensation_type: variable_compensation_type
                employee:
                  legal_name: legal_name
                  first_name: first_name
                  last_name: last_name
                  email: email
                health_plan:
                  id: id
                  name: name
                seniority:
                  id: 2
                  name: Mid (Individual Contributor Level 2)
                  level: 2
      audiences:
        - external
  source:
    openapi: ../openapi.yml
  display-name: EOR
docs: Employee of Record (EOR).
",
    },
    "hris.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "API end-points related to HRIS data.",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Hris",
          "endpoints": {
            "createDirectEmployee": {
              "audiences": [
                "external",
              ],
              "auth": false,
              "display-name": "Create a new Hris direct employee",
              "docs": undefined,
              "errors": [
                "root.CreateDirectEmployeeRequestBadRequestError",
                "root.CreateDirectEmployeeRequestUnauthorizedError",
                "root.CreateDirectEmployeeRequestForbiddenError",
                "root.CreateDirectEmployeeRequestNotFoundError",
                "root.CreateDirectEmployeeRequestConflictError",
                "root.CreateDirectEmployeeRequestInternalServerError",
              ],
              "examples": [
                {
                  "request": {
                    "compensation": {
                      "currency": "USD",
                      "gross_annual_salary": 1.1,
                    },
                    "contract": {
                      "contract_oid": "pdcMQe0cXCCXWTkqkdytw",
                      "employment_type": "FULL_TIME",
                      "start_date": "1999-12-31",
                    },
                    "employee_details": {
                      "country": "BR",
                      "email": "john.doe@domain.com",
                      "first_name": "John",
                      "last_name": "Doe",
                      "nationality": "CA",
                      "work_email": "john.doe@domain.com",
                    },
                    "job_information": {
                      "job_title_id": 1.1,
                      "seniority_id": 1.1,
                    },
                    "team_information": {
                      "legal_entity_id": 1.1,
                      "team_id": 1.1,
                    },
                  },
                  "response": {
                    "body": {
                      "data": {
                        "compensation": {
                          "currency": "USD",
                          "gross_annual_salary": 1.1,
                        },
                        "contract": {
                          "contract_oid": "pdcMQe0cXCCXWTkqkdytw",
                          "employee_number": 1.1,
                          "employment_type": "FULL_TIME",
                          "end_date": "1999-12-31",
                          "start_date": "1999-12-31",
                        },
                        "employee_details": {
                          "country": "BR",
                          "email": "john.doe@domain.com",
                          "first_name": "John",
                          "last_name": "Doe",
                          "nationality": "CA",
                          "state": "AC",
                          "work_email": "john.doe@domain.com",
                        },
                        "id": "6733c95b-df52-419e-906d-6904d3117dab",
                        "job_information": {
                          "job_title_id": 1.1,
                          "seniority_id": 1.1,
                        },
                        "team_information": {
                          "legal_entity_id": 1.1,
                          "team_id": 1.1,
                        },
                        "vacation_info": {
                          "vacation_accrual_start_date": "vacation_accrual_start_date",
                          "vacation_yearly_policy": 1.1,
                        },
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/hris/direct-employees",
              "request": {
                "body": "root.HrisDirectEmployee",
                "content-type": "application/json",
              },
              "response": {
                "docs": "Hris direct employee object that was created or edited",
                "status-code": 201,
                "type": "root.HrisDirectEmployeeContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    createDirectEmployee:
      path: /hris/direct-employees
      method: POST
      auth: false
      source:
        openapi: ../openapi.yml
      display-name: Create a new Hris direct employee
      request:
        body: root.HrisDirectEmployee
        content-type: application/json
      response:
        docs: Hris direct employee object that was created or edited
        type: root.HrisDirectEmployeeContainer
        status-code: 201
      errors:
        - root.CreateDirectEmployeeRequestBadRequestError
        - root.CreateDirectEmployeeRequestUnauthorizedError
        - root.CreateDirectEmployeeRequestForbiddenError
        - root.CreateDirectEmployeeRequestNotFoundError
        - root.CreateDirectEmployeeRequestConflictError
        - root.CreateDirectEmployeeRequestInternalServerError
      examples:
        - request:
            employee_details:
              first_name: John
              last_name: Doe
              email: john.doe@domain.com
              work_email: john.doe@domain.com
              nationality: CA
              country: BR
            team_information:
              team_id: 1.1
              legal_entity_id: 1.1
            job_information:
              seniority_id: 1.1
              job_title_id: 1.1
            compensation:
              gross_annual_salary: 1.1
              currency: USD
            contract:
              employment_type: FULL_TIME
              contract_oid: pdcMQe0cXCCXWTkqkdytw
              start_date: '1999-12-31'
          response:
            body:
              data:
                employee_details:
                  first_name: John
                  last_name: Doe
                  email: john.doe@domain.com
                  work_email: john.doe@domain.com
                  nationality: CA
                  country: BR
                  state: AC
                team_information:
                  team_id: 1.1
                  legal_entity_id: 1.1
                job_information:
                  seniority_id: 1.1
                  job_title_id: 1.1
                compensation:
                  gross_annual_salary: 1.1
                  currency: USD
                contract:
                  employment_type: FULL_TIME
                  contract_oid: pdcMQe0cXCCXWTkqkdytw
                  start_date: '1999-12-31'
                  employee_number: 1.1
                  end_date: '1999-12-31'
                vacation_info:
                  vacation_accrual_start_date: vacation_accrual_start_date
                  vacation_yearly_policy: 1.1
                id: 6733c95b-df52-419e-906d-6904d3117dab
      audiences:
        - external
  source:
    openapi: ../openapi.yml
  display-name: Hris
docs: API end-points related to HRIS data.
",
    },
    "invoices.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "The Invoices resource lets you create, amend and retrieve invoices related to Deel contracts.",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Invoices",
          "endpoints": {
            "createInvoiceAdjustment": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Create an invoice adjustment",
              "docs": "Create an invoice adjustment using this endpoint. For example, you can add a bonus, commission, VAT %, deduction etc. to an invoice.",
              "errors": [
                "root.CreateInvoiceAdjustmentRequestBadRequestError",
                "root.CreateInvoiceAdjustmentRequestUnauthorizedError",
                "root.CreateInvoiceAdjustmentRequestForbiddenError",
                "root.CreateInvoiceAdjustmentRequestNotFoundError",
                "root.CreateInvoiceAdjustmentRequestMethodNotAllowedError",
                "root.CreateInvoiceAdjustmentRequestTooManyRequestsError",
                "root.CreateInvoiceAdjustmentRequestInternalServerError",
              ],
              "examples": [
                {
                  "request": {
                    "data": {
                      "amount": 2500,
                      "contract_id": "contract_id",
                      "date_submitted": "1999-12-31",
                      "type": "bonus",
                    },
                  },
                  "response": {
                    "body": {
                      "data": {
                        "created": true,
                        "created_at": "2022-05-24T09:38:46Z",
                        "id": "id",
                        "public_id": "00000000-0000-0000-0000-000000000000",
                        "status": "status",
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/invoice-adjustments",
              "request": {
                "body": {
                  "properties": {
                    "data": "root.InvoiceAdjustmentToCreate",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "InvoiceAdjustmentToCreateContainer",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 201,
                "type": "root.InvoiceAdjustmentCreatedContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "createInvoiceAdjustmentReview": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Review an invoice adjustment",
              "docs": "Review an invoice adjustment to approve or decline it.",
              "errors": [
                "root.CreateInvoiceAdjustmentReviewRequestBadRequestError",
                "root.CreateInvoiceAdjustmentReviewRequestUnauthorizedError",
                "root.CreateInvoiceAdjustmentReviewRequestForbiddenError",
                "root.CreateInvoiceAdjustmentReviewRequestNotFoundError",
                "root.CreateInvoiceAdjustmentReviewRequestMethodNotAllowedError",
                "root.CreateInvoiceAdjustmentReviewRequestTooManyRequestsError",
                "root.CreateInvoiceAdjustmentReviewRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "invoice_adjustment_id": 1.1,
                  },
                  "request": {
                    "data": {
                      "status": "approved",
                    },
                  },
                  "response": {
                    "body": {
                      "data": {
                        "created": true,
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/invoice-adjustments/{invoice_adjustment_id}/reviews",
              "path-parameters": {
                "invoice_adjustment_id": {
                  "docs": "ID of an existing invoice adjustment",
                  "type": "double",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "data": "root.InvoiceAdjustmentReviewToCreate",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "InvoiceAdjustmentReviewToCreateContainer",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 201,
                "type": "root.GenericResultCreated",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "createInvoiceAdjustmentReviews": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Bulk review invoice adjustments",
              "docs": "Review multiple invoice adjustments to approve or decline a batch.",
              "errors": [
                "root.CreateInvoiceAdjustmentReviewsRequestBadRequestError",
                "root.CreateInvoiceAdjustmentReviewsRequestUnauthorizedError",
                "root.CreateInvoiceAdjustmentReviewsRequestForbiddenError",
                "root.CreateInvoiceAdjustmentReviewsRequestNotFoundError",
                "root.CreateInvoiceAdjustmentReviewsRequestMethodNotAllowedError",
                "root.CreateInvoiceAdjustmentReviewsRequestTooManyRequestsError",
                "root.CreateInvoiceAdjustmentReviewsRequestInternalServerError",
              ],
              "examples": [
                {
                  "request": {
                    "data": {
                      "ids": [
                        1.1,
                      ],
                      "status": "approved",
                    },
                  },
                  "response": {
                    "body": {
                      "data": {
                        "created": true,
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/invoice-adjustments/many/reviews",
              "request": {
                "body": {
                  "properties": {
                    "data": "root.InvoiceAdjustmentReviewsToCreate",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "InvoiceAdjustmentReviewsToCreateContainer",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 201,
                "type": "root.GenericResultCreated",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "deleteInvoiceAdjustmentById": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Delete an invoice adjustment",
              "docs": "Update an existing invoice adjustment.",
              "errors": [
                "root.DeleteInvoiceAdjustmentByIdRequestBadRequestError",
                "root.DeleteInvoiceAdjustmentByIdRequestUnauthorizedError",
                "root.DeleteInvoiceAdjustmentByIdRequestForbiddenError",
                "root.DeleteInvoiceAdjustmentByIdRequestNotFoundError",
                "root.DeleteInvoiceAdjustmentByIdRequestMethodNotAllowedError",
                "root.DeleteInvoiceAdjustmentByIdRequestTooManyRequestsError",
                "root.DeleteInvoiceAdjustmentByIdRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "invoice_adjustment_id": 1.1,
                  },
                  "response": {
                    "body": {
                      "data": {
                        "deleted": true,
                      },
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/invoice-adjustments/{invoice_adjustment_id}",
              "path-parameters": {
                "invoice_adjustment_id": {
                  "docs": "ID of an existing invoice adjustment",
                  "type": "double",
                },
              },
              "request": {
                "name": "DeleteInvoiceAdjustmentByIdRequest",
                "query-parameters": {
                  "reason": {
                    "docs": "Reason for deleting an existing invoice adjustment",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.GenericResultDeleted",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getInvoiceAdjustments": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "List of invoice details",
              "docs": "Retrieve a list of invoice details. You can filter the list by providing additional paramters e.g. contract_id, contract_type etc.",
              "errors": [
                "root.GetInvoiceAdjustmentsRequestBadRequestError",
                "root.GetInvoiceAdjustmentsRequestUnauthorizedError",
                "root.GetInvoiceAdjustmentsRequestForbiddenError",
                "root.GetInvoiceAdjustmentsRequestNotFoundError",
                "root.GetInvoiceAdjustmentsRequestMethodNotAllowedError",
                "root.GetInvoiceAdjustmentsRequestTooManyRequestsError",
                "root.GetInvoiceAdjustmentsRequestInternalServerError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "data": [
                        {
                          "attachment": {
                            "filename": "filename",
                            "key": "key",
                          },
                          "contract": {
                            "id": "id",
                            "title": "title",
                            "type": "ongoing_time_based",
                          },
                          "created_at": "2022-05-24T09:38:46Z",
                          "currency_code": "USD",
                          "custom_scale": "custom_scale",
                          "date_submitted": "2022-05-24T09:38:46Z",
                          "description": "description",
                          "id": "id",
                          "payment_cycle": {
                            "end_date": "2022-05-24T09:38:46Z",
                            "start_date": "2022-05-24T09:38:46Z",
                          },
                          "public_id": "00000000-0000-0000-0000-000000000000",
                          "quantity": 1,
                          "reported_by": {
                            "full_name": "John Smith",
                            "id": 123456,
                          },
                          "reviewed_by": {
                            "full_name": "Jane Smith",
                            "id": 123456,
                            "remarks": "remarks",
                            "reviewed_at": "2022-05-04T03:45:27.899Z",
                          },
                          "scale": "custom",
                          "status": "status",
                          "total_amount": "200.0000",
                          "type": "accrued_holiday",
                          "worksheet": {
                            "days": 0,
                            "hours": 1,
                            "minutes": 0,
                            "weeks": 0,
                          },
                        },
                      ],
                      "page": {
                        "items_per_page": 1.1,
                        "offset": 1.1,
                        "total_rows": 1.1,
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/invoice-adjustments",
              "request": {
                "name": "GetInvoiceAdjustmentsRequest",
                "query-parameters": {
                  "contract_id": {
                    "docs": "Id of an Deel contract.",
                    "type": "optional<string>",
                  },
                  "contract_types": {
                    "allow-multiple": true,
                    "docs": "types of contracts to filter",
                    "type": "optional<root.ContractTypeEnum>",
                  },
                  "date_from": {
                    "docs": "to get invoice adjustments submitted on or after given start date (inclusive)",
                    "type": "optional<root.DateString>",
                  },
                  "date_to": {
                    "docs": "to get invoice adjustments submitted before given end date (excludes records submitted on this date)",
                    "type": "optional<root.DateString>",
                  },
                  "invoice_id": {
                    "docs": "ID of an existing invoice; NOTE: technically ALL query parameters are strings or array of strings",
                    "type": "optional<long>",
                  },
                  "limit": {
                    "default": 10,
                    "docs": "Return a page of results with given number of records; NOTE: technically ALL query parameters are strings or array of strings",
                    "type": "optional<double>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 99,
                      "min": 1,
                      "multipleOf": undefined,
                    },
                  },
                  "offset": {
                    "default": 0,
                    "docs": "Return a page of results after given index of row; NOTE: technically ALL query parameters are strings or array of strings",
                    "type": "optional<long>",
                  },
                  "reporter_id": {
                    "docs": "ID of an existing profile; NOTE: technically ALL query parameters are strings or array of strings",
                    "type": "optional<double>",
                  },
                  "statuses": {
                    "allow-multiple": true,
                    "docs": "statuses of invoice adjustment to filter",
                    "type": "optional<root.InvoiceAdjustmentStatusEnum>",
                  },
                  "types": {
                    "allow-multiple": true,
                    "docs": "types of invoice adjustments to filter",
                    "type": "optional<root.InvoiceAdjustmentTypeEnum>",
                  },
                },
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.InvoiceAdjustmentListContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getInvoiceAdjustmentsByContractId": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Invoice details by contract",
              "docs": "Retrieve a list of invoice details for the given contract id.",
              "errors": [
                "root.GetInvoiceAdjustmentsByContractIdRequestBadRequestError",
                "root.GetInvoiceAdjustmentsByContractIdRequestUnauthorizedError",
                "root.GetInvoiceAdjustmentsByContractIdRequestForbiddenError",
                "root.GetInvoiceAdjustmentsByContractIdRequestNotFoundError",
                "root.GetInvoiceAdjustmentsByContractIdRequestMethodNotAllowedError",
                "root.GetInvoiceAdjustmentsByContractIdRequestTooManyRequestsError",
                "root.GetInvoiceAdjustmentsByContractIdRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                  },
                  "response": {
                    "body": {
                      "data": [
                        {
                          "attachment": {
                            "filename": "filename",
                            "key": "key",
                          },
                          "contract": {
                            "id": "id",
                            "title": "title",
                            "type": "ongoing_time_based",
                          },
                          "created_at": "2022-05-24T09:38:46Z",
                          "currency_code": "USD",
                          "custom_scale": "custom_scale",
                          "date_submitted": "2022-05-24T09:38:46Z",
                          "description": "description",
                          "id": "id",
                          "payment_cycle": {
                            "end_date": "2022-05-24T09:38:46Z",
                            "start_date": "2022-05-24T09:38:46Z",
                          },
                          "public_id": "00000000-0000-0000-0000-000000000000",
                          "quantity": 1,
                          "reported_by": {
                            "full_name": "John Smith",
                            "id": 123456,
                          },
                          "reviewed_by": {
                            "full_name": "Jane Smith",
                            "id": 123456,
                            "remarks": "remarks",
                            "reviewed_at": "2022-05-04T03:45:27.899Z",
                          },
                          "scale": "custom",
                          "status": "status",
                          "total_amount": "200.0000",
                          "type": "accrued_holiday",
                          "worksheet": {
                            "days": 0,
                            "hours": 1,
                            "minutes": 0,
                            "weeks": 0,
                          },
                        },
                      ],
                      "page": {
                        "items_per_page": 1.1,
                        "offset": 1.1,
                        "total_rows": 1.1,
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/contracts/{contract_id}/invoice-adjustments",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
              },
              "request": {
                "name": "GetInvoiceAdjustmentsByContractIdRequest",
                "query-parameters": {
                  "contract_types": {
                    "allow-multiple": true,
                    "docs": "types of contracts to filter",
                    "type": "optional<root.ContractTypeEnum>",
                  },
                  "date_from": {
                    "docs": "to get invoice adjustments submitted on or after given start date (inclusive)",
                    "type": "optional<root.DateString>",
                  },
                  "date_to": {
                    "docs": "to get invoice adjustments submitted before given end date (excludes records submitted on this date)",
                    "type": "optional<root.DateString>",
                  },
                  "invoice_id": {
                    "docs": "ID of an existing invoice; NOTE: technically ALL query parameters are strings or array of strings",
                    "type": "optional<long>",
                  },
                  "limit": {
                    "default": 10,
                    "docs": "Return a page of results with given number of records; NOTE: technically ALL query parameters are strings or array of strings",
                    "type": "optional<double>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 99,
                      "min": 1,
                      "multipleOf": undefined,
                    },
                  },
                  "offset": {
                    "default": 0,
                    "docs": "Return a page of results after given index of row; NOTE: technically ALL query parameters are strings or array of strings",
                    "type": "optional<long>",
                  },
                  "reporter_id": {
                    "docs": "ID of an existing profile; NOTE: technically ALL query parameters are strings or array of strings",
                    "type": "optional<double>",
                  },
                  "statuses": {
                    "allow-multiple": true,
                    "docs": "statuses of invoice adjustment to filter",
                    "type": "optional<root.InvoiceAdjustmentStatusEnum>",
                  },
                  "types": {
                    "allow-multiple": true,
                    "docs": "types of invoice adjustments to filter",
                    "type": "optional<root.InvoiceAdjustmentTypeEnum>",
                  },
                },
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.InvoiceAdjustmentListContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "updateInvoiceAdjustmentById": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Update an invoice adjustment",
              "docs": "Update an existing invoice adjustment. It is not possible to update VAT adjustments, we recommend you to delete the existing VAT adjust and create a new one.",
              "errors": [
                "root.UpdateInvoiceAdjustmentByIdRequestBadRequestError",
                "root.UpdateInvoiceAdjustmentByIdRequestUnauthorizedError",
                "root.UpdateInvoiceAdjustmentByIdRequestForbiddenError",
                "root.UpdateInvoiceAdjustmentByIdRequestNotFoundError",
                "root.UpdateInvoiceAdjustmentByIdRequestMethodNotAllowedError",
                "root.UpdateInvoiceAdjustmentByIdRequestTooManyRequestsError",
                "root.UpdateInvoiceAdjustmentByIdRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "invoice_adjustment_id": 1.1,
                  },
                  "request": {
                    "data": {
                      "description": "description",
                    },
                  },
                  "response": {
                    "body": {
                      "data": {
                        "updated": true,
                      },
                    },
                  },
                },
              ],
              "method": "PATCH",
              "pagination": undefined,
              "path": "/invoice-adjustments/{invoice_adjustment_id}",
              "path-parameters": {
                "invoice_adjustment_id": {
                  "docs": "ID of an existing invoice adjustment",
                  "type": "double",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "data": "root.InvoiceAdjustmentToUpdate",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "InvoiceAdjustmentToUpdateContainer",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.GenericResultUpdated",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    getInvoiceAdjustmentsByContractId:
      path: /contracts/{contract_id}/invoice-adjustments
      method: GET
      auth: true
      docs: Retrieve a list of invoice details for the given contract id.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
      display-name: Invoice details by contract
      request:
        name: GetInvoiceAdjustmentsByContractIdRequest
        query-parameters:
          contract_types:
            type: optional<root.ContractTypeEnum>
            allow-multiple: true
            docs: types of contracts to filter
          types:
            type: optional<root.InvoiceAdjustmentTypeEnum>
            allow-multiple: true
            docs: types of invoice adjustments to filter
          statuses:
            type: optional<root.InvoiceAdjustmentStatusEnum>
            allow-multiple: true
            docs: statuses of invoice adjustment to filter
          invoice_id:
            type: optional<long>
            docs: >-
              ID of an existing invoice; NOTE: technically ALL query parameters
              are strings or array of strings
          reporter_id:
            type: optional<double>
            docs: >-
              ID of an existing profile; NOTE: technically ALL query parameters
              are strings or array of strings
          date_from:
            type: optional<root.DateString>
            docs: >-
              to get invoice adjustments submitted on or after given start date
              (inclusive)
          date_to:
            type: optional<root.DateString>
            docs: >-
              to get invoice adjustments submitted before given end date
              (excludes records submitted on this date)
          limit:
            type: optional<double>
            default: 10
            docs: >-
              Return a page of results with given number of records; NOTE:
              technically ALL query parameters are strings or array of strings
            validation:
              min: 1
              max: 99
          offset:
            type: optional<long>
            default: 0
            docs: >-
              Return a page of results after given index of row; NOTE:
              technically ALL query parameters are strings or array of strings
      response:
        docs: Successful operation.
        type: root.InvoiceAdjustmentListContainer
        status-code: 200
      errors:
        - root.GetInvoiceAdjustmentsByContractIdRequestBadRequestError
        - root.GetInvoiceAdjustmentsByContractIdRequestUnauthorizedError
        - root.GetInvoiceAdjustmentsByContractIdRequestForbiddenError
        - root.GetInvoiceAdjustmentsByContractIdRequestNotFoundError
        - root.GetInvoiceAdjustmentsByContractIdRequestMethodNotAllowedError
        - root.GetInvoiceAdjustmentsByContractIdRequestTooManyRequestsError
        - root.GetInvoiceAdjustmentsByContractIdRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
          response:
            body:
              data:
                - id: id
                  public_id: 00000000-0000-0000-0000-000000000000
                  type: accrued_holiday
                  status: status
                  description: description
                  date_submitted: '2022-05-24T09:38:46Z'
                  currency_code: USD
                  quantity: 1
                  total_amount: '200.0000'
                  created_at: '2022-05-24T09:38:46Z'
                  scale: custom
                  custom_scale: custom_scale
                  attachment:
                    filename: filename
                    key: key
                  worksheet:
                    weeks: 0
                    days: 0
                    hours: 1
                    minutes: 0
                  reviewed_by:
                    id: 123456
                    full_name: Jane Smith
                    reviewed_at: '2022-05-04T03:45:27.899Z'
                    remarks: remarks
                  contract:
                    id: id
                    title: title
                    type: ongoing_time_based
                  payment_cycle:
                    start_date: '2022-05-24T09:38:46Z'
                    end_date: '2022-05-24T09:38:46Z'
                  reported_by:
                    id: 123456
                    full_name: John Smith
              page:
                total_rows: 1.1
                items_per_page: 1.1
                offset: 1.1
      audiences:
        - external
    getInvoiceAdjustments:
      path: /invoice-adjustments
      method: GET
      auth: true
      docs: >-
        Retrieve a list of invoice details. You can filter the list by providing
        additional paramters e.g. contract_id, contract_type etc.
      source:
        openapi: ../openapi.yml
      display-name: List of invoice details
      request:
        name: GetInvoiceAdjustmentsRequest
        query-parameters:
          contract_id:
            type: optional<string>
            docs: Id of an Deel contract.
          contract_types:
            type: optional<root.ContractTypeEnum>
            allow-multiple: true
            docs: types of contracts to filter
          types:
            type: optional<root.InvoiceAdjustmentTypeEnum>
            allow-multiple: true
            docs: types of invoice adjustments to filter
          statuses:
            type: optional<root.InvoiceAdjustmentStatusEnum>
            allow-multiple: true
            docs: statuses of invoice adjustment to filter
          invoice_id:
            type: optional<long>
            docs: >-
              ID of an existing invoice; NOTE: technically ALL query parameters
              are strings or array of strings
          reporter_id:
            type: optional<double>
            docs: >-
              ID of an existing profile; NOTE: technically ALL query parameters
              are strings or array of strings
          date_from:
            type: optional<root.DateString>
            docs: >-
              to get invoice adjustments submitted on or after given start date
              (inclusive)
          date_to:
            type: optional<root.DateString>
            docs: >-
              to get invoice adjustments submitted before given end date
              (excludes records submitted on this date)
          limit:
            type: optional<double>
            default: 10
            docs: >-
              Return a page of results with given number of records; NOTE:
              technically ALL query parameters are strings or array of strings
            validation:
              min: 1
              max: 99
          offset:
            type: optional<long>
            default: 0
            docs: >-
              Return a page of results after given index of row; NOTE:
              technically ALL query parameters are strings or array of strings
      response:
        docs: Successful operation.
        type: root.InvoiceAdjustmentListContainer
        status-code: 200
      errors:
        - root.GetInvoiceAdjustmentsRequestBadRequestError
        - root.GetInvoiceAdjustmentsRequestUnauthorizedError
        - root.GetInvoiceAdjustmentsRequestForbiddenError
        - root.GetInvoiceAdjustmentsRequestNotFoundError
        - root.GetInvoiceAdjustmentsRequestMethodNotAllowedError
        - root.GetInvoiceAdjustmentsRequestTooManyRequestsError
        - root.GetInvoiceAdjustmentsRequestInternalServerError
      examples:
        - response:
            body:
              data:
                - id: id
                  public_id: 00000000-0000-0000-0000-000000000000
                  type: accrued_holiday
                  status: status
                  description: description
                  date_submitted: '2022-05-24T09:38:46Z'
                  currency_code: USD
                  quantity: 1
                  total_amount: '200.0000'
                  created_at: '2022-05-24T09:38:46Z'
                  scale: custom
                  custom_scale: custom_scale
                  attachment:
                    filename: filename
                    key: key
                  worksheet:
                    weeks: 0
                    days: 0
                    hours: 1
                    minutes: 0
                  reviewed_by:
                    id: 123456
                    full_name: Jane Smith
                    reviewed_at: '2022-05-04T03:45:27.899Z'
                    remarks: remarks
                  contract:
                    id: id
                    title: title
                    type: ongoing_time_based
                  payment_cycle:
                    start_date: '2022-05-24T09:38:46Z'
                    end_date: '2022-05-24T09:38:46Z'
                  reported_by:
                    id: 123456
                    full_name: John Smith
              page:
                total_rows: 1.1
                items_per_page: 1.1
                offset: 1.1
      audiences:
        - external
    createInvoiceAdjustment:
      path: /invoice-adjustments
      method: POST
      auth: true
      docs: >-
        Create an invoice adjustment using this endpoint. For example, you can
        add a bonus, commission, VAT %, deduction etc. to an invoice.
      source:
        openapi: ../openapi.yml
      display-name: Create an invoice adjustment
      request:
        name: InvoiceAdjustmentToCreateContainer
        body:
          properties:
            data: root.InvoiceAdjustmentToCreate
        content-type: application/json
      response:
        docs: Successful operation.
        type: root.InvoiceAdjustmentCreatedContainer
        status-code: 201
      errors:
        - root.CreateInvoiceAdjustmentRequestBadRequestError
        - root.CreateInvoiceAdjustmentRequestUnauthorizedError
        - root.CreateInvoiceAdjustmentRequestForbiddenError
        - root.CreateInvoiceAdjustmentRequestNotFoundError
        - root.CreateInvoiceAdjustmentRequestMethodNotAllowedError
        - root.CreateInvoiceAdjustmentRequestTooManyRequestsError
        - root.CreateInvoiceAdjustmentRequestInternalServerError
      examples:
        - request:
            data:
              contract_id: contract_id
              date_submitted: '1999-12-31'
              type: bonus
              amount: 2500
          response:
            body:
              data:
                created: true
                id: id
                public_id: 00000000-0000-0000-0000-000000000000
                status: status
                created_at: '2022-05-24T09:38:46Z'
      audiences:
        - external
    deleteInvoiceAdjustmentById:
      path: /invoice-adjustments/{invoice_adjustment_id}
      method: DELETE
      auth: true
      docs: Update an existing invoice adjustment.
      source:
        openapi: ../openapi.yml
      path-parameters:
        invoice_adjustment_id:
          type: double
          docs: ID of an existing invoice adjustment
      display-name: Delete an invoice adjustment
      request:
        name: DeleteInvoiceAdjustmentByIdRequest
        query-parameters:
          reason:
            type: optional<string>
            docs: Reason for deleting an existing invoice adjustment
      response:
        docs: Successful operation.
        type: root.GenericResultDeleted
        status-code: 200
      errors:
        - root.DeleteInvoiceAdjustmentByIdRequestBadRequestError
        - root.DeleteInvoiceAdjustmentByIdRequestUnauthorizedError
        - root.DeleteInvoiceAdjustmentByIdRequestForbiddenError
        - root.DeleteInvoiceAdjustmentByIdRequestNotFoundError
        - root.DeleteInvoiceAdjustmentByIdRequestMethodNotAllowedError
        - root.DeleteInvoiceAdjustmentByIdRequestTooManyRequestsError
        - root.DeleteInvoiceAdjustmentByIdRequestInternalServerError
      examples:
        - path-parameters:
            invoice_adjustment_id: 1.1
          response:
            body:
              data:
                deleted: true
      audiences:
        - external
    updateInvoiceAdjustmentById:
      path: /invoice-adjustments/{invoice_adjustment_id}
      method: PATCH
      auth: true
      docs: >-
        Update an existing invoice adjustment. It is not possible to update VAT
        adjustments, we recommend you to delete the existing VAT adjust and
        create a new one.
      source:
        openapi: ../openapi.yml
      path-parameters:
        invoice_adjustment_id:
          type: double
          docs: ID of an existing invoice adjustment
      display-name: Update an invoice adjustment
      request:
        name: InvoiceAdjustmentToUpdateContainer
        body:
          properties:
            data: root.InvoiceAdjustmentToUpdate
        content-type: application/json
      response:
        docs: Successful operation.
        type: root.GenericResultUpdated
        status-code: 200
      errors:
        - root.UpdateInvoiceAdjustmentByIdRequestBadRequestError
        - root.UpdateInvoiceAdjustmentByIdRequestUnauthorizedError
        - root.UpdateInvoiceAdjustmentByIdRequestForbiddenError
        - root.UpdateInvoiceAdjustmentByIdRequestNotFoundError
        - root.UpdateInvoiceAdjustmentByIdRequestMethodNotAllowedError
        - root.UpdateInvoiceAdjustmentByIdRequestTooManyRequestsError
        - root.UpdateInvoiceAdjustmentByIdRequestInternalServerError
      examples:
        - path-parameters:
            invoice_adjustment_id: 1.1
          request:
            data:
              description: description
          response:
            body:
              data:
                updated: true
      audiences:
        - external
    createInvoiceAdjustmentReview:
      path: /invoice-adjustments/{invoice_adjustment_id}/reviews
      method: POST
      auth: true
      docs: Review an invoice adjustment to approve or decline it.
      source:
        openapi: ../openapi.yml
      path-parameters:
        invoice_adjustment_id:
          type: double
          docs: ID of an existing invoice adjustment
      display-name: Review an invoice adjustment
      request:
        name: InvoiceAdjustmentReviewToCreateContainer
        body:
          properties:
            data: root.InvoiceAdjustmentReviewToCreate
        content-type: application/json
      response:
        docs: Successful operation.
        type: root.GenericResultCreated
        status-code: 201
      errors:
        - root.CreateInvoiceAdjustmentReviewRequestBadRequestError
        - root.CreateInvoiceAdjustmentReviewRequestUnauthorizedError
        - root.CreateInvoiceAdjustmentReviewRequestForbiddenError
        - root.CreateInvoiceAdjustmentReviewRequestNotFoundError
        - root.CreateInvoiceAdjustmentReviewRequestMethodNotAllowedError
        - root.CreateInvoiceAdjustmentReviewRequestTooManyRequestsError
        - root.CreateInvoiceAdjustmentReviewRequestInternalServerError
      examples:
        - path-parameters:
            invoice_adjustment_id: 1.1
          request:
            data:
              status: approved
          response:
            body:
              data:
                created: true
      audiences:
        - external
    createInvoiceAdjustmentReviews:
      path: /invoice-adjustments/many/reviews
      method: POST
      auth: true
      docs: Review multiple invoice adjustments to approve or decline a batch.
      source:
        openapi: ../openapi.yml
      display-name: Bulk review invoice adjustments
      request:
        name: InvoiceAdjustmentReviewsToCreateContainer
        body:
          properties:
            data: root.InvoiceAdjustmentReviewsToCreate
        content-type: application/json
      response:
        docs: Successful operation.
        type: root.GenericResultCreated
        status-code: 201
      errors:
        - root.CreateInvoiceAdjustmentReviewsRequestBadRequestError
        - root.CreateInvoiceAdjustmentReviewsRequestUnauthorizedError
        - root.CreateInvoiceAdjustmentReviewsRequestForbiddenError
        - root.CreateInvoiceAdjustmentReviewsRequestNotFoundError
        - root.CreateInvoiceAdjustmentReviewsRequestMethodNotAllowedError
        - root.CreateInvoiceAdjustmentReviewsRequestTooManyRequestsError
        - root.CreateInvoiceAdjustmentReviewsRequestInternalServerError
      examples:
        - request:
            data:
              status: approved
              ids:
                - 1.1
          response:
            body:
              data:
                created: true
      audiences:
        - external
  source:
    openapi: ../openapi.yml
  display-name: Invoices
docs: >-
  The Invoices resource lets you create, amend and retrieve invoices related to
  Deel contracts.
",
    },
    "lookups.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Helper end-points for choosing options for other operations",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Lookups",
          "endpoints": {
            "getCountries": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Country list",
              "docs": "Retrieve a list of countries supported by Deel.",
              "errors": [
                "root.GetCountriesRequestBadRequestError",
                "root.GetCountriesRequestUnauthorizedError",
                "root.GetCountriesRequestForbiddenError",
                "root.GetCountriesRequestNotFoundError",
                "root.GetCountriesRequestMethodNotAllowedError",
                "root.GetCountriesRequestTooManyRequestsError",
                "root.GetCountriesRequestInternalServerError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "data": [
                        {
                          "code": "US",
                          "eor_support": true,
                          "name": "United States",
                          "state_type": "state",
                          "states": [
                            {
                              "code": "NY",
                              "name": "New York",
                            },
                          ],
                          "visa_support": true,
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/lookups/countries",
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.CountryListContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getCurrencies": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Currency list",
              "docs": "Retrieve the list of currencies used by Deel.",
              "errors": [
                "root.GetCurrenciesRequestBadRequestError",
                "root.GetCurrenciesRequestUnauthorizedError",
                "root.GetCurrenciesRequestForbiddenError",
                "root.GetCurrenciesRequestNotFoundError",
                "root.GetCurrenciesRequestMethodNotAllowedError",
                "root.GetCurrenciesRequestTooManyRequestsError",
                "root.GetCurrenciesRequestInternalServerError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "data": [
                        {
                          "code": "USD",
                          "name": "Euro",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/lookups/currencies",
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.CurrencyListContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getJobTitleList": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Job titles list",
              "docs": "Retrieve a list of pre-defined job titles in Deel platform.",
              "errors": [
                "root.GetJobTitleListRequestBadRequestError",
                "root.GetJobTitleListRequestUnauthorizedError",
                "root.GetJobTitleListRequestForbiddenError",
                "root.GetJobTitleListRequestNotFoundError",
                "root.GetJobTitleListRequestMethodNotAllowedError",
                "root.GetJobTitleListRequestTooManyRequestsError",
                "root.GetJobTitleListRequestInternalServerError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "data": [
                        {
                          "id": 1,
                          "name": "3D Artist",
                        },
                      ],
                      "page": {
                        "cursor": "eyJvZmZzZXQiOjEwMCwibGltaXQiOjEwMCwiZmlsdGVyVHlwZSI6ImFsbCJ9",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/lookups/job-titles",
              "request": {
                "name": "GetJobTitleListRequest",
                "query-parameters": {
                  "after_cursor": {
                    "docs": "Return next page of results after given cursor",
                    "type": "optional<string>",
                  },
                  "limit": {
                    "default": 99,
                    "docs": "Return a page of results with given number of records; NOTE: technically ALL query parameters are strings or array of strings",
                    "type": "optional<long>",
                  },
                },
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.JobTitleListContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getSeniorityList": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Seniority levels",
              "docs": "Retrieve a list of pre-defined seniority level for roles in Deel platform.",
              "errors": [
                "root.GetSeniorityListRequestBadRequestError",
                "root.GetSeniorityListRequestUnauthorizedError",
                "root.GetSeniorityListRequestForbiddenError",
                "root.GetSeniorityListRequestNotFoundError",
                "root.GetSeniorityListRequestMethodNotAllowedError",
                "root.GetSeniorityListRequestTooManyRequestsError",
                "root.GetSeniorityListRequestInternalServerError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "data": [
                        {
                          "id": 2,
                          "level": 2,
                          "name": "Mid (Individual Contributor Level 2)",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/lookups/seniorities",
              "request": {
                "name": "GetSeniorityListRequest",
                "query-parameters": {
                  "limit": {
                    "default": 50,
                    "docs": "Return a page of results with given number of records; NOTE: technically ALL query parameters are strings or array of strings",
                    "type": "optional<long>",
                  },
                },
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.SeniorityListContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getTimeoffTypeList": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Time-off types",
              "docs": "Retrieve a list of pre-defined time off types to register in Deel platform.",
              "errors": [
                "root.GetTimeoffTypeListRequestBadRequestError",
                "root.GetTimeoffTypeListRequestUnauthorizedError",
                "root.GetTimeoffTypeListRequestForbiddenError",
                "root.GetTimeoffTypeListRequestNotFoundError",
                "root.GetTimeoffTypeListRequestMethodNotAllowedError",
                "root.GetTimeoffTypeListRequestTooManyRequestsError",
                "root.GetTimeoffTypeListRequestInternalServerError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "data": [
                        "VACATION",
                        "SICK_LEAVE",
                        "OTHER",
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/lookups/time-off-types",
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.TimeoffTypeListContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    getCountries:
      path: /lookups/countries
      method: GET
      auth: true
      docs: Retrieve a list of countries supported by Deel.
      source:
        openapi: ../openapi.yml
      display-name: Country list
      response:
        docs: Successful operation.
        type: root.CountryListContainer
        status-code: 200
      errors:
        - root.GetCountriesRequestBadRequestError
        - root.GetCountriesRequestUnauthorizedError
        - root.GetCountriesRequestForbiddenError
        - root.GetCountriesRequestNotFoundError
        - root.GetCountriesRequestMethodNotAllowedError
        - root.GetCountriesRequestTooManyRequestsError
        - root.GetCountriesRequestInternalServerError
      examples:
        - response:
            body:
              data:
                - code: US
                  name: United States
                  visa_support: true
                  eor_support: true
                  state_type: state
                  states:
                    - code: NY
                      name: New York
      audiences:
        - external
    getCurrencies:
      path: /lookups/currencies
      method: GET
      auth: true
      docs: Retrieve the list of currencies used by Deel.
      source:
        openapi: ../openapi.yml
      display-name: Currency list
      response:
        docs: Successful operation.
        type: root.CurrencyListContainer
        status-code: 200
      errors:
        - root.GetCurrenciesRequestBadRequestError
        - root.GetCurrenciesRequestUnauthorizedError
        - root.GetCurrenciesRequestForbiddenError
        - root.GetCurrenciesRequestNotFoundError
        - root.GetCurrenciesRequestMethodNotAllowedError
        - root.GetCurrenciesRequestTooManyRequestsError
        - root.GetCurrenciesRequestInternalServerError
      examples:
        - response:
            body:
              data:
                - code: USD
                  name: Euro
      audiences:
        - external
    getJobTitleList:
      path: /lookups/job-titles
      method: GET
      auth: true
      docs: Retrieve a list of pre-defined job titles in Deel platform.
      source:
        openapi: ../openapi.yml
      display-name: Job titles list
      request:
        name: GetJobTitleListRequest
        query-parameters:
          limit:
            type: optional<long>
            default: 99
            docs: >-
              Return a page of results with given number of records; NOTE:
              technically ALL query parameters are strings or array of strings
          after_cursor:
            type: optional<string>
            docs: Return next page of results after given cursor
      response:
        docs: Successful operation.
        type: root.JobTitleListContainer
        status-code: 200
      errors:
        - root.GetJobTitleListRequestBadRequestError
        - root.GetJobTitleListRequestUnauthorizedError
        - root.GetJobTitleListRequestForbiddenError
        - root.GetJobTitleListRequestNotFoundError
        - root.GetJobTitleListRequestMethodNotAllowedError
        - root.GetJobTitleListRequestTooManyRequestsError
        - root.GetJobTitleListRequestInternalServerError
      examples:
        - response:
            body:
              data:
                - id: 1
                  name: 3D Artist
              page:
                cursor: eyJvZmZzZXQiOjEwMCwibGltaXQiOjEwMCwiZmlsdGVyVHlwZSI6ImFsbCJ9
      audiences:
        - external
    getSeniorityList:
      path: /lookups/seniorities
      method: GET
      auth: true
      docs: >-
        Retrieve a list of pre-defined seniority level for roles in Deel
        platform.
      source:
        openapi: ../openapi.yml
      display-name: Seniority levels
      request:
        name: GetSeniorityListRequest
        query-parameters:
          limit:
            type: optional<long>
            default: 50
            docs: >-
              Return a page of results with given number of records; NOTE:
              technically ALL query parameters are strings or array of strings
      response:
        docs: Successful operation.
        type: root.SeniorityListContainer
        status-code: 200
      errors:
        - root.GetSeniorityListRequestBadRequestError
        - root.GetSeniorityListRequestUnauthorizedError
        - root.GetSeniorityListRequestForbiddenError
        - root.GetSeniorityListRequestNotFoundError
        - root.GetSeniorityListRequestMethodNotAllowedError
        - root.GetSeniorityListRequestTooManyRequestsError
        - root.GetSeniorityListRequestInternalServerError
      examples:
        - response:
            body:
              data:
                - id: 2
                  name: Mid (Individual Contributor Level 2)
                  level: 2
      audiences:
        - external
    getTimeoffTypeList:
      path: /lookups/time-off-types
      method: GET
      auth: true
      docs: >-
        Retrieve a list of pre-defined time off types to register in Deel
        platform.
      source:
        openapi: ../openapi.yml
      display-name: Time-off types
      response:
        docs: Successful operation.
        type: root.TimeoffTypeListContainer
        status-code: 200
      errors:
        - root.GetTimeoffTypeListRequestBadRequestError
        - root.GetTimeoffTypeListRequestUnauthorizedError
        - root.GetTimeoffTypeListRequestForbiddenError
        - root.GetTimeoffTypeListRequestNotFoundError
        - root.GetTimeoffTypeListRequestMethodNotAllowedError
        - root.GetTimeoffTypeListRequestTooManyRequestsError
        - root.GetTimeoffTypeListRequestInternalServerError
      examples:
        - response:
            body:
              data:
                - VACATION
                - SICK_LEAVE
                - OTHER
      audiences:
        - external
  source:
    openapi: ../openapi.yml
  display-name: Lookups
docs: Helper end-points for choosing options for other operations
",
    },
    "milestones.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Helper end-points for managing milestones of Deel contracts",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Milestones",
          "endpoints": {
            "createMilestone": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Create a milestone",
              "docs": "Add a new milestone to contract.",
              "errors": [
                "root.CreateMilestoneRequestBadRequestError",
                "root.CreateMilestoneRequestUnauthorizedError",
                "root.CreateMilestoneRequestForbiddenError",
                "root.CreateMilestoneRequestNotFoundError",
                "root.CreateMilestoneRequestMethodNotAllowedError",
                "root.CreateMilestoneRequestTooManyRequestsError",
                "root.CreateMilestoneRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                  },
                  "request": {
                    "data": {
                      "amount": "900.00",
                      "description": "Sprint #2",
                      "title": "Sprint 2",
                    },
                  },
                  "response": {
                    "body": {
                      "data": {
                        "created": true,
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/contracts/{contract_id}/milestones",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "data": "root.MilestoneToCreate",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "MilestoneToCreateContainer",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.GenericResultCreated",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "createMilestoneReview": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Review a single milestone",
              "docs": "Review a milestone to approve or decline submitted work.",
              "errors": [
                "root.CreateMilestoneReviewRequestBadRequestError",
                "root.CreateMilestoneReviewRequestUnauthorizedError",
                "root.CreateMilestoneReviewRequestForbiddenError",
                "root.CreateMilestoneReviewRequestNotFoundError",
                "root.CreateMilestoneReviewRequestMethodNotAllowedError",
                "root.CreateMilestoneReviewRequestTooManyRequestsError",
                "root.CreateMilestoneReviewRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                    "milestone_id": "milestone_id",
                  },
                  "request": {
                    "data": {
                      "status": "approved",
                    },
                  },
                  "response": {
                    "body": {
                      "data": {
                        "created": true,
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/contracts/{contract_id}/milestones/{milestone_id}/reviews",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
                "milestone_id": {
                  "docs": "ID of milestone to return",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "data": "root.MilestoneReviewToCreate",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "MilestoneReviewToCreateContainer",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 201,
                "type": "root.GenericResultCreated",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "createMilestoneReviews": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Review multiple milestones",
              "docs": "Review a batch of milestones to approve or reject submitted work.",
              "errors": [
                "root.CreateMilestoneReviewsRequestBadRequestError",
                "root.CreateMilestoneReviewsRequestUnauthorizedError",
                "root.CreateMilestoneReviewsRequestForbiddenError",
                "root.CreateMilestoneReviewsRequestNotFoundError",
                "root.CreateMilestoneReviewsRequestMethodNotAllowedError",
                "root.CreateMilestoneReviewsRequestTooManyRequestsError",
                "root.CreateMilestoneReviewsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                  },
                  "request": {
                    "data": {
                      "ids": [
                        1.1,
                      ],
                      "status": "approved",
                    },
                  },
                  "response": {
                    "body": {
                      "data": {
                        "created": true,
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/contracts/{contract_id}/milestones/many/reviews",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "data": "root.MilestoneReviewsToCreate",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "MilestoneReviewsToCreateContainer",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 201,
                "type": "root.GenericResultCreated",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "deleteMilestoneById": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Delete a milestone",
              "docs": "Delete a single milestone from a contract.",
              "errors": [
                "root.DeleteMilestoneByIdRequestBadRequestError",
                "root.DeleteMilestoneByIdRequestUnauthorizedError",
                "root.DeleteMilestoneByIdRequestForbiddenError",
                "root.DeleteMilestoneByIdRequestNotFoundError",
                "root.DeleteMilestoneByIdRequestMethodNotAllowedError",
                "root.DeleteMilestoneByIdRequestTooManyRequestsError",
                "root.DeleteMilestoneByIdRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                    "milestone_id": "milestone_id",
                  },
                  "response": {
                    "body": {
                      "data": {
                        "deleted": true,
                      },
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/contracts/{contract_id}/milestones/{milestone_id}",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
                "milestone_id": {
                  "docs": "ID of milestone to return",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.GenericResultDeleted",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getMilestonesByContract": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "List of milestones by contract",
              "docs": "Retrieve a list of milestones found for a contract.",
              "errors": [
                "root.GetMilestonesByContractRequestBadRequestError",
                "root.GetMilestonesByContractRequestUnauthorizedError",
                "root.GetMilestonesByContractRequestForbiddenError",
                "root.GetMilestonesByContractRequestNotFoundError",
                "root.GetMilestonesByContractRequestMethodNotAllowedError",
                "root.GetMilestonesByContractRequestTooManyRequestsError",
                "root.GetMilestonesByContractRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                  },
                  "response": {
                    "body": {
                      "data": [
                        {
                          "amount": "900.00",
                          "approval_requested": false,
                          "created_at": "2022-05-24T09:38:46Z",
                          "description": "Sprint #1",
                          "id": 2625861,
                          "reported_by": {
                            "full_name": "Jane Doe",
                            "id": 1,
                          },
                          "reviewed_by": {
                            "full_name": "Jane Doe",
                            "id": 1,
                          },
                          "status": "pending",
                          "title": "Sprint 1",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/contracts/{contract_id}/milestones",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.MilestoneListContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getMilestonesByContractAndId": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Retrieve a single milestone",
              "docs": "Retrieve a single milestone.",
              "errors": [
                "root.GetMilestonesByContractAndIdRequestBadRequestError",
                "root.GetMilestonesByContractAndIdRequestUnauthorizedError",
                "root.GetMilestonesByContractAndIdRequestForbiddenError",
                "root.GetMilestonesByContractAndIdRequestNotFoundError",
                "root.GetMilestonesByContractAndIdRequestMethodNotAllowedError",
                "root.GetMilestonesByContractAndIdRequestTooManyRequestsError",
                "root.GetMilestonesByContractAndIdRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                    "milestone_id": "milestone_id",
                  },
                  "response": {
                    "body": {
                      "data": {
                        "amount": "900.00",
                        "approval_requested": false,
                        "created_at": "2022-05-24T09:38:46Z",
                        "description": "Sprint #1",
                        "id": 2625861,
                        "reported_by": {
                          "full_name": "Jane Doe",
                          "id": 1,
                        },
                        "reviewed_by": {
                          "full_name": "Jane Doe",
                          "id": 1,
                        },
                        "status": "pending",
                        "title": "Sprint 1",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/contracts/{contract_id}/milestones/{milestone_id}",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
                "milestone_id": {
                  "docs": "ID of milestone to return",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.MilestoneContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    getMilestonesByContract:
      path: /contracts/{contract_id}/milestones
      method: GET
      auth: true
      docs: Retrieve a list of milestones found for a contract.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
      display-name: List of milestones by contract
      response:
        docs: Successful operation.
        type: root.MilestoneListContainer
        status-code: 200
      errors:
        - root.GetMilestonesByContractRequestBadRequestError
        - root.GetMilestonesByContractRequestUnauthorizedError
        - root.GetMilestonesByContractRequestForbiddenError
        - root.GetMilestonesByContractRequestNotFoundError
        - root.GetMilestonesByContractRequestMethodNotAllowedError
        - root.GetMilestonesByContractRequestTooManyRequestsError
        - root.GetMilestonesByContractRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
          response:
            body:
              data:
                - id: 2625861
                  amount: '900.00'
                  approval_requested: false
                  reviewed_by:
                    id: 1
                    full_name: Jane Doe
                  reported_by:
                    id: 1
                    full_name: Jane Doe
                  title: Sprint 1
                  description: 'Sprint #1'
                  status: pending
                  created_at: '2022-05-24T09:38:46Z'
      audiences:
        - external
    createMilestone:
      path: /contracts/{contract_id}/milestones
      method: POST
      auth: true
      docs: Add a new milestone to contract.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
      display-name: Create a milestone
      request:
        name: MilestoneToCreateContainer
        body:
          properties:
            data: root.MilestoneToCreate
        content-type: application/json
      response:
        docs: Successful operation.
        type: root.GenericResultCreated
        status-code: 200
      errors:
        - root.CreateMilestoneRequestBadRequestError
        - root.CreateMilestoneRequestUnauthorizedError
        - root.CreateMilestoneRequestForbiddenError
        - root.CreateMilestoneRequestNotFoundError
        - root.CreateMilestoneRequestMethodNotAllowedError
        - root.CreateMilestoneRequestTooManyRequestsError
        - root.CreateMilestoneRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
          request:
            data:
              amount: '900.00'
              title: Sprint 2
              description: 'Sprint #2'
          response:
            body:
              data:
                created: true
      audiences:
        - external
    getMilestonesByContractAndId:
      path: /contracts/{contract_id}/milestones/{milestone_id}
      method: GET
      auth: true
      docs: Retrieve a single milestone.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
        milestone_id:
          type: string
          docs: ID of milestone to return
      display-name: Retrieve a single milestone
      response:
        docs: Successful operation.
        type: root.MilestoneContainer
        status-code: 200
      errors:
        - root.GetMilestonesByContractAndIdRequestBadRequestError
        - root.GetMilestonesByContractAndIdRequestUnauthorizedError
        - root.GetMilestonesByContractAndIdRequestForbiddenError
        - root.GetMilestonesByContractAndIdRequestNotFoundError
        - root.GetMilestonesByContractAndIdRequestMethodNotAllowedError
        - root.GetMilestonesByContractAndIdRequestTooManyRequestsError
        - root.GetMilestonesByContractAndIdRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
            milestone_id: milestone_id
          response:
            body:
              data:
                id: 2625861
                amount: '900.00'
                approval_requested: false
                reviewed_by:
                  id: 1
                  full_name: Jane Doe
                reported_by:
                  id: 1
                  full_name: Jane Doe
                title: Sprint 1
                description: 'Sprint #1'
                status: pending
                created_at: '2022-05-24T09:38:46Z'
      audiences:
        - external
    deleteMilestoneById:
      path: /contracts/{contract_id}/milestones/{milestone_id}
      method: DELETE
      auth: true
      docs: Delete a single milestone from a contract.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
        milestone_id:
          type: string
          docs: ID of milestone to return
      display-name: Delete a milestone
      response:
        docs: Successful operation.
        type: root.GenericResultDeleted
        status-code: 200
      errors:
        - root.DeleteMilestoneByIdRequestBadRequestError
        - root.DeleteMilestoneByIdRequestUnauthorizedError
        - root.DeleteMilestoneByIdRequestForbiddenError
        - root.DeleteMilestoneByIdRequestNotFoundError
        - root.DeleteMilestoneByIdRequestMethodNotAllowedError
        - root.DeleteMilestoneByIdRequestTooManyRequestsError
        - root.DeleteMilestoneByIdRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
            milestone_id: milestone_id
          response:
            body:
              data:
                deleted: true
      audiences:
        - external
    createMilestoneReview:
      path: /contracts/{contract_id}/milestones/{milestone_id}/reviews
      method: POST
      auth: true
      docs: Review a milestone to approve or decline submitted work.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
        milestone_id:
          type: string
          docs: ID of milestone to return
      display-name: Review a single milestone
      request:
        name: MilestoneReviewToCreateContainer
        body:
          properties:
            data: root.MilestoneReviewToCreate
        content-type: application/json
      response:
        docs: Successful operation.
        type: root.GenericResultCreated
        status-code: 201
      errors:
        - root.CreateMilestoneReviewRequestBadRequestError
        - root.CreateMilestoneReviewRequestUnauthorizedError
        - root.CreateMilestoneReviewRequestForbiddenError
        - root.CreateMilestoneReviewRequestNotFoundError
        - root.CreateMilestoneReviewRequestMethodNotAllowedError
        - root.CreateMilestoneReviewRequestTooManyRequestsError
        - root.CreateMilestoneReviewRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
            milestone_id: milestone_id
          request:
            data:
              status: approved
          response:
            body:
              data:
                created: true
      audiences:
        - external
    createMilestoneReviews:
      path: /contracts/{contract_id}/milestones/many/reviews
      method: POST
      auth: true
      docs: Review a batch of milestones to approve or reject submitted work.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
      display-name: Review multiple milestones
      request:
        name: MilestoneReviewsToCreateContainer
        body:
          properties:
            data: root.MilestoneReviewsToCreate
        content-type: application/json
      response:
        docs: Successful operation.
        type: root.GenericResultCreated
        status-code: 201
      errors:
        - root.CreateMilestoneReviewsRequestBadRequestError
        - root.CreateMilestoneReviewsRequestUnauthorizedError
        - root.CreateMilestoneReviewsRequestForbiddenError
        - root.CreateMilestoneReviewsRequestNotFoundError
        - root.CreateMilestoneReviewsRequestMethodNotAllowedError
        - root.CreateMilestoneReviewsRequestTooManyRequestsError
        - root.CreateMilestoneReviewsRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
          request:
            data:
              status: approved
              ids:
                - 1.1
          response:
            body:
              data:
                created: true
      audiences:
        - external
  source:
    openapi: ../openapi.yml
  display-name: Milestones
docs: Helper end-points for managing milestones of Deel contracts
",
    },
    "offCyclePayments.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "End-points to manage off-cycle payments for a given contract",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Off-cycle Payments",
          "endpoints": {
            "createOffCyclePayment": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Add off-cycle payment",
              "docs": "Add a new invoice line-item for the purpose of off-cycle payment for a given contract.",
              "errors": [
                "root.CreateOffCyclePaymentRequestBadRequestError",
                "root.CreateOffCyclePaymentRequestUnauthorizedError",
                "root.CreateOffCyclePaymentRequestForbiddenError",
                "root.CreateOffCyclePaymentRequestNotFoundError",
                "root.CreateOffCyclePaymentRequestMethodNotAllowedError",
                "root.CreateOffCyclePaymentRequestTooManyRequestsError",
                "root.CreateOffCyclePaymentRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                  },
                  "request": {
                    "data": {
                      "amount": 2500,
                      "date_submitted": "1999-12-31",
                    },
                  },
                  "response": {
                    "body": {
                      "data": {
                        "created": true,
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/contracts/{contract_id}/off-cycle-payments",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "data": "root.OffCyclePaymentToCreate",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "OffCyclePaymentToCreateContainer",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.GenericResultCreated",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getOffCyclePaymentByContractAndId": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Retrieve a single off-cycle payment",
              "docs": "Retrieve a single off-cycle payment.",
              "errors": [
                "root.GetOffCyclePaymentByContractAndIdRequestBadRequestError",
                "root.GetOffCyclePaymentByContractAndIdRequestUnauthorizedError",
                "root.GetOffCyclePaymentByContractAndIdRequestForbiddenError",
                "root.GetOffCyclePaymentByContractAndIdRequestNotFoundError",
                "root.GetOffCyclePaymentByContractAndIdRequestMethodNotAllowedError",
                "root.GetOffCyclePaymentByContractAndIdRequestTooManyRequestsError",
                "root.GetOffCyclePaymentByContractAndIdRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                    "offcycle_payment_id": "offcycle_payment_id",
                  },
                  "response": {
                    "body": {
                      "data": {
                        "amount": "200.00",
                        "created_at": "2022-05-24T09:38:46Z",
                        "currency_code": "USD",
                        "date_submitted": "2022-05-24T09:38:46Z",
                        "description": "Yearly bonus.",
                        "id": "id",
                        "public_id": "00000000-0000-0000-0000-000000000000",
                        "reported_by": {
                          "full_name": "John Smith",
                          "id": 123456,
                        },
                        "reviewed_by": {
                          "full_name": "Jane Smith",
                          "id": 123456,
                          "remarks": "SAP Reference id: 123",
                          "reviewed_at": "2022-05-04T03:45:27.899Z",
                        },
                        "status": "status",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/contracts/{contract_id}/off-cycle-payments/{offcycle_payment_id}",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
                "offcycle_payment_id": {
                  "docs": "ID of off-cycle payment to return",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.OffCyclePaymentContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getOffCyclePaymentsByContract": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "List of off-cycle payments",
              "docs": "Retrieve a list of off-cycle payments for the given contract id.",
              "errors": [
                "root.GetOffCyclePaymentsByContractRequestBadRequestError",
                "root.GetOffCyclePaymentsByContractRequestUnauthorizedError",
                "root.GetOffCyclePaymentsByContractRequestForbiddenError",
                "root.GetOffCyclePaymentsByContractRequestNotFoundError",
                "root.GetOffCyclePaymentsByContractRequestMethodNotAllowedError",
                "root.GetOffCyclePaymentsByContractRequestTooManyRequestsError",
                "root.GetOffCyclePaymentsByContractRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                  },
                  "response": {
                    "body": {
                      "data": [
                        {
                          "amount": "200.00",
                          "created_at": "2022-05-24T09:38:46Z",
                          "currency_code": "USD",
                          "date_submitted": "2022-05-24T09:38:46Z",
                          "description": "Yearly bonus.",
                          "id": "id",
                          "public_id": "00000000-0000-0000-0000-000000000000",
                          "reported_by": {
                            "full_name": "John Smith",
                            "id": 123456,
                          },
                          "reviewed_by": {
                            "full_name": "Jane Smith",
                            "id": 123456,
                            "remarks": "SAP Reference id: 123",
                            "reviewed_at": "2022-05-04T03:45:27.899Z",
                          },
                          "status": "status",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/contracts/{contract_id}/off-cycle-payments",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.OffCyclePaymentListContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    getOffCyclePaymentsByContract:
      path: /contracts/{contract_id}/off-cycle-payments
      method: GET
      auth: true
      docs: Retrieve a list of off-cycle payments for the given contract id.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
      display-name: List of off-cycle payments
      response:
        docs: Successful operation.
        type: root.OffCyclePaymentListContainer
        status-code: 200
      errors:
        - root.GetOffCyclePaymentsByContractRequestBadRequestError
        - root.GetOffCyclePaymentsByContractRequestUnauthorizedError
        - root.GetOffCyclePaymentsByContractRequestForbiddenError
        - root.GetOffCyclePaymentsByContractRequestNotFoundError
        - root.GetOffCyclePaymentsByContractRequestMethodNotAllowedError
        - root.GetOffCyclePaymentsByContractRequestTooManyRequestsError
        - root.GetOffCyclePaymentsByContractRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
          response:
            body:
              data:
                - id: id
                  public_id: 00000000-0000-0000-0000-000000000000
                  status: status
                  description: Yearly bonus.
                  date_submitted: '2022-05-24T09:38:46Z'
                  currency_code: USD
                  amount: '200.00'
                  created_at: '2022-05-24T09:38:46Z'
                  reviewed_by:
                    id: 123456
                    full_name: Jane Smith
                    reviewed_at: '2022-05-04T03:45:27.899Z'
                    remarks: 'SAP Reference id: 123'
                  reported_by:
                    id: 123456
                    full_name: John Smith
      audiences:
        - external
    createOffCyclePayment:
      path: /contracts/{contract_id}/off-cycle-payments
      method: POST
      auth: true
      docs: >-
        Add a new invoice line-item for the purpose of off-cycle payment for a
        given contract.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
      display-name: Add off-cycle payment
      request:
        name: OffCyclePaymentToCreateContainer
        body:
          properties:
            data: root.OffCyclePaymentToCreate
        content-type: application/json
      response:
        docs: Successful operation.
        type: root.GenericResultCreated
        status-code: 200
      errors:
        - root.CreateOffCyclePaymentRequestBadRequestError
        - root.CreateOffCyclePaymentRequestUnauthorizedError
        - root.CreateOffCyclePaymentRequestForbiddenError
        - root.CreateOffCyclePaymentRequestNotFoundError
        - root.CreateOffCyclePaymentRequestMethodNotAllowedError
        - root.CreateOffCyclePaymentRequestTooManyRequestsError
        - root.CreateOffCyclePaymentRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
          request:
            data:
              date_submitted: '1999-12-31'
              amount: 2500
          response:
            body:
              data:
                created: true
      audiences:
        - external
    getOffCyclePaymentByContractAndId:
      path: /contracts/{contract_id}/off-cycle-payments/{offcycle_payment_id}
      method: GET
      auth: true
      docs: Retrieve a single off-cycle payment.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
        offcycle_payment_id:
          type: string
          docs: ID of off-cycle payment to return
      display-name: Retrieve a single off-cycle payment
      response:
        docs: Successful operation.
        type: root.OffCyclePaymentContainer
        status-code: 200
      errors:
        - root.GetOffCyclePaymentByContractAndIdRequestBadRequestError
        - root.GetOffCyclePaymentByContractAndIdRequestUnauthorizedError
        - root.GetOffCyclePaymentByContractAndIdRequestForbiddenError
        - root.GetOffCyclePaymentByContractAndIdRequestNotFoundError
        - root.GetOffCyclePaymentByContractAndIdRequestMethodNotAllowedError
        - root.GetOffCyclePaymentByContractAndIdRequestTooManyRequestsError
        - root.GetOffCyclePaymentByContractAndIdRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
            offcycle_payment_id: offcycle_payment_id
          response:
            body:
              data:
                id: id
                public_id: 00000000-0000-0000-0000-000000000000
                status: status
                description: Yearly bonus.
                date_submitted: '2022-05-24T09:38:46Z'
                currency_code: USD
                amount: '200.00'
                created_at: '2022-05-24T09:38:46Z'
                reviewed_by:
                  id: 123456
                  full_name: Jane Smith
                  reviewed_at: '2022-05-04T03:45:27.899Z'
                  remarks: 'SAP Reference id: 123'
                reported_by:
                  id: 123456
                  full_name: John Smith
      audiences:
        - external
  source:
    openapi: ../openapi.yml
  display-name: Off-cycle Payments
docs: End-points to manage off-cycle payments for a given contract
",
    },
    "organizations.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Helper end-points for additional information about your organizations",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Organizations",
          "endpoints": {
            "getAgreements": {
              "auth": true,
              "display-name": "Get agreements with Deel.",
              "docs": "This end-point returns a list of your agreements with Deel.",
              "errors": [
                "root.GetAgreementsRequestUnauthorizedError",
                "root.GetAgreementsRequestForbiddenError",
                "root.GetAgreementsRequestNotFoundError",
                "root.GetAgreementsRequestMethodNotAllowedError",
                "root.GetAgreementsRequestTooManyRequestsError",
                "root.GetAgreementsRequestInternalServerError",
              ],
              "examples": [
                {
                  "query-parameters": {
                    "contract_id": "37nex2x",
                  },
                  "response": {
                    "body": {
                      "data": [
                        {
                          "agreement_title": "agreement_title",
                          "agreement_type": "shield",
                          "client_legal_entity": {
                            "id": 1.1,
                            "name": "name",
                          },
                          "id": 1.1,
                          "msa": {
                            "id": "id",
                            "title": "title",
                          },
                          "provider_legal_entity": {
                            "id": 1.1,
                            "name": "Deel Inc.",
                          },
                        },
                      ],
                      "page": {
                        "total_rows": 1.1,
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/agreements",
              "request": {
                "name": "GetAgreementsRequest",
                "query-parameters": {
                  "contract_id": {
                    "docs": "Deel contract id.",
                    "type": "optional<string>",
                  },
                  "limit": {
                    "docs": "Maximum number of records to return.",
                    "type": "optional<root.AgreementsParamLimit>",
                  },
                  "offset": {
                    "docs": "Offset/index of record for the next page of records to return.",
                    "type": "optional<root.AgreementsParamOffset>",
                  },
                },
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.AgreementListContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getLegalEntityList": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "List of legal entities",
              "docs": "Retrieve a list of legal entities in your account.",
              "errors": [
                "root.GetLegalEntityListRequestBadRequestError",
                "root.GetLegalEntityListRequestUnauthorizedError",
                "root.GetLegalEntityListRequestForbiddenError",
                "root.GetLegalEntityListRequestNotFoundError",
                "root.GetLegalEntityListRequestMethodNotAllowedError",
                "root.GetLegalEntityListRequestTooManyRequestsError",
                "root.GetLegalEntityListRequestInternalServerError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "data": [
                        {
                          "entity_subtype": "entity_subtype",
                          "entity_type": "individual",
                          "id": 1.1,
                          "name": "name",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/legal-entities",
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.LegalEntityListContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getOrganizations": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Get current organization",
              "docs": "Retrieve the current organization details. Organization is automatically detected from the auth token.",
              "errors": [
                "root.GetOrganizationsRequestBadRequestError",
                "root.GetOrganizationsRequestUnauthorizedError",
                "root.GetOrganizationsRequestForbiddenError",
                "root.GetOrganizationsRequestNotFoundError",
                "root.GetOrganizationsRequestMethodNotAllowedError",
                "root.GetOrganizationsRequestTooManyRequestsError",
                "root.GetOrganizationsRequestInternalServerError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "data": [
                        {
                          "id": 1.1,
                          "name": "name",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/organizations",
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.OrganizationListContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getTeams": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Get team list",
              "docs": "Retrieve a list of teams in your organization.",
              "errors": [
                "root.GetTeamsRequestBadRequestError",
                "root.GetTeamsRequestUnauthorizedError",
                "root.GetTeamsRequestForbiddenError",
                "root.GetTeamsRequestNotFoundError",
                "root.GetTeamsRequestMethodNotAllowedError",
                "root.GetTeamsRequestTooManyRequestsError",
                "root.GetTeamsRequestInternalServerError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "data": [
                        {
                          "id": 1.1,
                          "name": "name",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/teams",
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.TeamListContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    getLegalEntityList:
      path: /legal-entities
      method: GET
      auth: true
      docs: Retrieve a list of legal entities in your account.
      source:
        openapi: ../openapi.yml
      display-name: List of legal entities
      response:
        docs: Successful operation.
        type: root.LegalEntityListContainer
        status-code: 200
      errors:
        - root.GetLegalEntityListRequestBadRequestError
        - root.GetLegalEntityListRequestUnauthorizedError
        - root.GetLegalEntityListRequestForbiddenError
        - root.GetLegalEntityListRequestNotFoundError
        - root.GetLegalEntityListRequestMethodNotAllowedError
        - root.GetLegalEntityListRequestTooManyRequestsError
        - root.GetLegalEntityListRequestInternalServerError
      examples:
        - response:
            body:
              data:
                - id: 1.1
                  name: name
                  entity_type: individual
                  entity_subtype: entity_subtype
      audiences:
        - external
    getOrganizations:
      path: /organizations
      method: GET
      auth: true
      docs: >-
        Retrieve the current organization details. Organization is automatically
        detected from the auth token.
      source:
        openapi: ../openapi.yml
      display-name: Get current organization
      response:
        docs: Successful operation.
        type: root.OrganizationListContainer
        status-code: 200
      errors:
        - root.GetOrganizationsRequestBadRequestError
        - root.GetOrganizationsRequestUnauthorizedError
        - root.GetOrganizationsRequestForbiddenError
        - root.GetOrganizationsRequestNotFoundError
        - root.GetOrganizationsRequestMethodNotAllowedError
        - root.GetOrganizationsRequestTooManyRequestsError
        - root.GetOrganizationsRequestInternalServerError
      examples:
        - response:
            body:
              data:
                - id: 1.1
                  name: name
      audiences:
        - external
    getTeams:
      path: /teams
      method: GET
      auth: true
      docs: Retrieve a list of teams in your organization.
      source:
        openapi: ../openapi.yml
      display-name: Get team list
      response:
        docs: Successful operation.
        type: root.TeamListContainer
        status-code: 200
      errors:
        - root.GetTeamsRequestBadRequestError
        - root.GetTeamsRequestUnauthorizedError
        - root.GetTeamsRequestForbiddenError
        - root.GetTeamsRequestNotFoundError
        - root.GetTeamsRequestMethodNotAllowedError
        - root.GetTeamsRequestTooManyRequestsError
        - root.GetTeamsRequestInternalServerError
      examples:
        - response:
            body:
              data:
                - id: 1.1
                  name: name
      audiences:
        - external
    getAgreements:
      path: /agreements
      method: GET
      auth: true
      docs: This end-point returns a list of your agreements with Deel.
      source:
        openapi: ../openapi.yml
      display-name: Get agreements with Deel.
      request:
        name: GetAgreementsRequest
        query-parameters:
          contract_id:
            type: optional<string>
            docs: Deel contract id.
          limit:
            type: optional<root.AgreementsParamLimit>
            docs: Maximum number of records to return.
          offset:
            type: optional<root.AgreementsParamOffset>
            docs: Offset/index of record for the next page of records to return.
      response:
        docs: Successful operation.
        type: root.AgreementListContainer
        status-code: 200
      errors:
        - root.GetAgreementsRequestUnauthorizedError
        - root.GetAgreementsRequestForbiddenError
        - root.GetAgreementsRequestNotFoundError
        - root.GetAgreementsRequestMethodNotAllowedError
        - root.GetAgreementsRequestTooManyRequestsError
        - root.GetAgreementsRequestInternalServerError
      examples:
        - query-parameters:
            contract_id: 37nex2x
          response:
            body:
              data:
                - id: 1.1
                  agreement_title: agreement_title
                  agreement_type: shield
                  msa:
                    id: id
                    title: title
                  client_legal_entity:
                    id: 1.1
                    name: name
                  provider_legal_entity:
                    id: 1.1
                    name: Deel Inc.
              page:
                total_rows: 1.1
  source:
    openapi: ../openapi.yml
  display-name: Organizations
docs: Helper end-points for additional information about your organizations
",
    },
    "tasks.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "End-points to manage tasks for a given contract",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Tasks",
          "endpoints": {
            "createContractPgoTak": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Create new task",
              "docs": "Create a new task for the contractor.",
              "errors": [
                "root.CreateContractPgoTakRequestBadRequestError",
                "root.CreateContractPgoTakRequestUnauthorizedError",
                "root.CreateContractPgoTakRequestForbiddenError",
                "root.CreateContractPgoTakRequestNotFoundError",
                "root.CreateContractPgoTakRequestMethodNotAllowedError",
                "root.CreateContractPgoTakRequestTooManyRequestsError",
                "root.CreateContractPgoTakRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                  },
                  "request": {
                    "data": {
                      "amount": "123.45",
                      "date_submitted": "1999-12-31",
                    },
                  },
                  "response": {
                    "body": {
                      "data": {
                        "created": true,
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/contracts/{contract_id}/tasks",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "data": "root.PgoTaskToCreate",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "InputToCreatePgoTask",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 201,
                "type": "root.GenericResultCreated",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "createTaskManyReview": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Review multiple tasks",
              "docs": "Review multiple tasks to approve or decline the submitted work.",
              "errors": [
                "root.CreateTaskManyReviewRequestBadRequestError",
                "root.CreateTaskManyReviewRequestUnauthorizedError",
                "root.CreateTaskManyReviewRequestForbiddenError",
                "root.CreateTaskManyReviewRequestNotFoundError",
                "root.CreateTaskManyReviewRequestMethodNotAllowedError",
                "root.CreateTaskManyReviewRequestTooManyRequestsError",
                "root.CreateTaskManyReviewRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                  },
                  "request": {
                    "data": {
                      "ids": [
                        1234,
                        1235,
                      ],
                      "status": "approved",
                    },
                  },
                  "response": {
                    "body": {
                      "data": [
                        {
                          "amount": "200",
                          "attachment": {
                            "filename": "filename",
                            "key": "key",
                          },
                          "date_submitted": "1999-12-31",
                          "description": "Make the button pop.",
                          "id": 12345,
                          "status": "approved",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/contracts/{contract_id}/tasks/many/reviews",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "data": "root.PgoTaskReviewsToCreate",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "RequestBodyToCreatePgoTaskReviewsReviewsContainer",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 201,
                "type": "root.TaskListContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "createTaskReviewById": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Review a single task",
              "docs": "Review a single task to approve or decline the submitted work.",
              "errors": [
                "root.CreateTaskReviewByIdRequestBadRequestError",
                "root.CreateTaskReviewByIdRequestUnauthorizedError",
                "root.CreateTaskReviewByIdRequestForbiddenError",
                "root.CreateTaskReviewByIdRequestNotFoundError",
                "root.CreateTaskReviewByIdRequestMethodNotAllowedError",
                "root.CreateTaskReviewByIdRequestTooManyRequestsError",
                "root.CreateTaskReviewByIdRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                    "task_id": "task_id",
                  },
                  "request": {
                    "data": {
                      "status": "approved",
                    },
                  },
                  "response": {
                    "body": {
                      "data": [
                        {
                          "amount": "200",
                          "attachment": {
                            "filename": "filename",
                            "key": "key",
                          },
                          "date_submitted": "1999-12-31",
                          "description": "Make the button pop.",
                          "id": 12345,
                          "status": "approved",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/contracts/{contract_id}/tasks/{task_id}/reviews",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
                "task_id": {
                  "docs": "ID of task entity.",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "data": "root.PgoTaskReviewsByIdToCreate",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "RequestBodyToCreatePgoTaskReviewsByIdReviewsContainer",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 201,
                "type": "root.TaskListContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "deleteContractPgoTak": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Delete task",
              "docs": "Delete task from the contract.",
              "errors": [
                "root.DeleteContractPgoTakRequestBadRequestError",
                "root.DeleteContractPgoTakRequestUnauthorizedError",
                "root.DeleteContractPgoTakRequestForbiddenError",
                "root.DeleteContractPgoTakRequestNotFoundError",
                "root.DeleteContractPgoTakRequestMethodNotAllowedError",
                "root.DeleteContractPgoTakRequestTooManyRequestsError",
                "root.DeleteContractPgoTakRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                    "task_id": "task_id",
                  },
                  "response": {
                    "body": {
                      "data": {
                        "deleted": true,
                      },
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/contracts/{contract_id}/tasks/{task_id}",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
                "task_id": {
                  "docs": "ID of task entity.",
                  "type": "string",
                },
              },
              "request": {
                "name": "DeleteContractPgoTakRequest",
                "query-parameters": {
                  "reason": {
                    "docs": "Reason for deleting an existing task",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.GenericResultDeleted",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getTasksByContract": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "List of tasks",
              "docs": "Retrieve a list of tasks for a given contract.",
              "errors": [
                "root.GetTasksByContractRequestBadRequestError",
                "root.GetTasksByContractRequestUnauthorizedError",
                "root.GetTasksByContractRequestForbiddenError",
                "root.GetTasksByContractRequestNotFoundError",
                "root.GetTasksByContractRequestMethodNotAllowedError",
                "root.GetTasksByContractRequestTooManyRequestsError",
                "root.GetTasksByContractRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                  },
                  "response": {
                    "body": {
                      "data": [
                        {
                          "amount": "200",
                          "attachment": {
                            "filename": "filename",
                            "key": "key",
                          },
                          "date_submitted": "1999-12-31",
                          "description": "Make the button pop.",
                          "id": 12345,
                          "status": "approved",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/contracts/{contract_id}/tasks",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.TaskListContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    getTasksByContract:
      path: /contracts/{contract_id}/tasks
      method: GET
      auth: true
      docs: Retrieve a list of tasks for a given contract.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
      display-name: List of tasks
      response:
        docs: Successful operation.
        type: root.TaskListContainer
        status-code: 200
      errors:
        - root.GetTasksByContractRequestBadRequestError
        - root.GetTasksByContractRequestUnauthorizedError
        - root.GetTasksByContractRequestForbiddenError
        - root.GetTasksByContractRequestNotFoundError
        - root.GetTasksByContractRequestMethodNotAllowedError
        - root.GetTasksByContractRequestTooManyRequestsError
        - root.GetTasksByContractRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
          response:
            body:
              data:
                - id: 12345
                  amount: '200'
                  date_submitted: '1999-12-31'
                  description: Make the button pop.
                  status: approved
                  attachment:
                    filename: filename
                    key: key
      audiences:
        - external
    createContractPgoTak:
      path: /contracts/{contract_id}/tasks
      method: POST
      auth: true
      docs: Create a new task for the contractor.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
      display-name: Create new task
      request:
        name: InputToCreatePgoTask
        body:
          properties:
            data: root.PgoTaskToCreate
        content-type: application/json
      response:
        docs: Successful operation.
        type: root.GenericResultCreated
        status-code: 201
      errors:
        - root.CreateContractPgoTakRequestBadRequestError
        - root.CreateContractPgoTakRequestUnauthorizedError
        - root.CreateContractPgoTakRequestForbiddenError
        - root.CreateContractPgoTakRequestNotFoundError
        - root.CreateContractPgoTakRequestMethodNotAllowedError
        - root.CreateContractPgoTakRequestTooManyRequestsError
        - root.CreateContractPgoTakRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
          request:
            data:
              amount: '123.45'
              date_submitted: '1999-12-31'
          response:
            body:
              data:
                created: true
      audiences:
        - external
    createTaskManyReview:
      path: /contracts/{contract_id}/tasks/many/reviews
      method: POST
      auth: true
      docs: Review multiple tasks to approve or decline the submitted work.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
      display-name: Review multiple tasks
      request:
        name: RequestBodyToCreatePgoTaskReviewsReviewsContainer
        body:
          properties:
            data: root.PgoTaskReviewsToCreate
        content-type: application/json
      response:
        docs: Successful operation.
        type: root.TaskListContainer
        status-code: 201
      errors:
        - root.CreateTaskManyReviewRequestBadRequestError
        - root.CreateTaskManyReviewRequestUnauthorizedError
        - root.CreateTaskManyReviewRequestForbiddenError
        - root.CreateTaskManyReviewRequestNotFoundError
        - root.CreateTaskManyReviewRequestMethodNotAllowedError
        - root.CreateTaskManyReviewRequestTooManyRequestsError
        - root.CreateTaskManyReviewRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
          request:
            data:
              status: approved
              ids:
                - 1234
                - 1235
          response:
            body:
              data:
                - id: 12345
                  amount: '200'
                  date_submitted: '1999-12-31'
                  description: Make the button pop.
                  status: approved
                  attachment:
                    filename: filename
                    key: key
      audiences:
        - external
    createTaskReviewById:
      path: /contracts/{contract_id}/tasks/{task_id}/reviews
      method: POST
      auth: true
      docs: Review a single task to approve or decline the submitted work.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
        task_id:
          type: string
          docs: ID of task entity.
      display-name: Review a single task
      request:
        name: RequestBodyToCreatePgoTaskReviewsByIdReviewsContainer
        body:
          properties:
            data: root.PgoTaskReviewsByIdToCreate
        content-type: application/json
      response:
        docs: Successful operation.
        type: root.TaskListContainer
        status-code: 201
      errors:
        - root.CreateTaskReviewByIdRequestBadRequestError
        - root.CreateTaskReviewByIdRequestUnauthorizedError
        - root.CreateTaskReviewByIdRequestForbiddenError
        - root.CreateTaskReviewByIdRequestNotFoundError
        - root.CreateTaskReviewByIdRequestMethodNotAllowedError
        - root.CreateTaskReviewByIdRequestTooManyRequestsError
        - root.CreateTaskReviewByIdRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
            task_id: task_id
          request:
            data:
              status: approved
          response:
            body:
              data:
                - id: 12345
                  amount: '200'
                  date_submitted: '1999-12-31'
                  description: Make the button pop.
                  status: approved
                  attachment:
                    filename: filename
                    key: key
      audiences:
        - external
    deleteContractPgoTak:
      path: /contracts/{contract_id}/tasks/{task_id}
      method: DELETE
      auth: true
      docs: Delete task from the contract.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
        task_id:
          type: string
          docs: ID of task entity.
      display-name: Delete task
      request:
        name: DeleteContractPgoTakRequest
        query-parameters:
          reason:
            type: optional<string>
            docs: Reason for deleting an existing task
      response:
        docs: Successful operation.
        type: root.GenericResultDeleted
        status-code: 200
      errors:
        - root.DeleteContractPgoTakRequestBadRequestError
        - root.DeleteContractPgoTakRequestUnauthorizedError
        - root.DeleteContractPgoTakRequestForbiddenError
        - root.DeleteContractPgoTakRequestNotFoundError
        - root.DeleteContractPgoTakRequestMethodNotAllowedError
        - root.DeleteContractPgoTakRequestTooManyRequestsError
        - root.DeleteContractPgoTakRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
            task_id: task_id
          response:
            body:
              data:
                deleted: true
      audiences:
        - external
  source:
    openapi: ../openapi.yml
  display-name: Tasks
docs: End-points to manage tasks for a given contract
",
    },
    "timeOff.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Manage time off requests.",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Time Off",
          "endpoints": {
            "createEorTimeOffs": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Add a time off request",
              "docs": "Add a time off request for a full-time employee.",
              "errors": [
                "root.CreateEorTimeOffsRequestUnauthorizedError",
                "root.CreateEorTimeOffsRequestForbiddenError",
                "root.CreateEorTimeOffsRequestNotFoundError",
                "root.CreateEorTimeOffsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                  },
                  "request": {
                    "data": {
                      "type": "VACATION",
                      "with_multiple_dates": true,
                    },
                  },
                  "response": {
                    "body": {
                      "data": {
                        "applied_changes": [
                          {
                            "days_used_end_year": "2.00",
                            "days_used_start_year": "2.00",
                            "requested_at": "2022-05-24T09:38:46Z",
                            "status": "REQUESTED",
                            "total_days_used": "4.00",
                            "type": "VACATION",
                          },
                        ],
                        "attachments": [
                          {},
                        ],
                        "can_request_changes": true,
                        "change_request": {
                          "attachments": [
                            {},
                          ],
                          "date_is_half_day": true,
                          "days_used_end_year": "2.00",
                          "days_used_start_year": "2.00",
                          "denial_reason": "No time off available",
                          "end_date_is_half_day": true,
                          "has_multiple_dates": true,
                          "other_timeoff_name": "This is time off for a doctor's appointment",
                          "reason": "I have a doctors appointment",
                          "requested_at": "2022-05-24T09:38:46Z",
                          "requester": {
                            "id": 409222,
                            "name": "Mr. Rogers",
                            "profile_type": "client",
                          },
                          "reviewed_at": "2022-05-24T09:38:46Z",
                          "reviewer": {
                            "id": 409222,
                            "name": "Mr. Rogers",
                            "profile_type": "client",
                          },
                          "single_date": "2022-05-24T09:38:46Z",
                          "start_date_is_half_day": true,
                          "status": "REQUESTED",
                          "total_days_used": "4.00",
                          "type": "VACATION",
                        },
                        "contract_id": "abc123",
                        "created_at": "2022-05-24T09:38:46Z",
                        "date_is_half_day": true,
                        "days_used_end_year": "2.00",
                        "days_used_start_year": "2.00",
                        "denial_reason": "No time off available",
                        "end_date": "2022-05-24T09:38:46Z",
                        "end_date_is_half_day": true,
                        "has_multiple_dates": true,
                        "id": 6938,
                        "is_updated": true,
                        "other_timeoff_name": "This is time off for a doctor's appointment",
                        "reason": "I have a doctors appointment",
                        "requested_at": "2022-05-24T09:38:46Z",
                        "requester": {
                          "id": 409222,
                          "is_employee": true,
                          "name": "Mr. Rogers",
                          "pic_url": "pic_url",
                          "profile_type": "client",
                        },
                        "reviewed_at": "2022-05-24T09:38:46Z",
                        "reviewer": {
                          "id": 409222,
                          "is_employee": true,
                          "name": "Mr. Rogers",
                          "pic_url": "pic_url",
                          "profile_type": "client",
                        },
                        "single_date": "2022-05-24T09:38:46Z",
                        "start_date": "2022-05-24T09:38:46Z",
                        "start_date_is_half_day": true,
                        "status": "REQUESTED",
                        "total_days_used": "4.00",
                        "type": "VACATION",
                        "updated_at": "2022-05-24T09:38:46Z",
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/contracts/{contract_id}/time-offs",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
              },
              "request": {
                "body": "root.CreateTimeoffContainer",
                "content-type": "application/json",
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 201,
                "type": "root.EorTimeoffsItemContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "deleteEorTimeOffs": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Cancel a time off request",
              "docs": "Cancel a time off request for an employee.",
              "errors": [
                "root.DeleteEorTimeOffsRequestUnauthorizedError",
                "root.DeleteEorTimeOffsRequestForbiddenError",
                "root.DeleteEorTimeOffsRequestNotFoundError",
                "root.DeleteEorTimeOffsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                    "timeoff_id": "12345",
                  },
                  "response": {
                    "body": {
                      "data": {
                        "deleted": true,
                      },
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/contracts/{contract_id}/time-offs/{timeoff_id}",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
                "timeoff_id": {
                  "docs": "Time off Id",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.GenericResultDeleted",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "editEorTimeOffs": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Edit a time off request",
              "docs": "Edit a time off request for a full-time employee.",
              "errors": [
                "root.EditEorTimeOffsRequestUnauthorizedError",
                "root.EditEorTimeOffsRequestForbiddenError",
                "root.EditEorTimeOffsRequestNotFoundError",
                "root.EditEorTimeOffsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                    "timeoff_id": "12345",
                  },
                  "request": {
                    "data": {
                      "type": "VACATION",
                      "with_multiple_dates": true,
                    },
                  },
                  "response": {
                    "body": {
                      "data": {
                        "applied_changes": [
                          {
                            "days_used_end_year": "2.00",
                            "days_used_start_year": "2.00",
                            "requested_at": "2022-05-24T09:38:46Z",
                            "status": "REQUESTED",
                            "total_days_used": "4.00",
                            "type": "VACATION",
                          },
                        ],
                        "attachments": [
                          {},
                        ],
                        "can_request_changes": true,
                        "change_request": {
                          "attachments": [
                            {},
                          ],
                          "date_is_half_day": true,
                          "days_used_end_year": "2.00",
                          "days_used_start_year": "2.00",
                          "denial_reason": "No time off available",
                          "end_date_is_half_day": true,
                          "has_multiple_dates": true,
                          "other_timeoff_name": "This is time off for a doctor's appointment",
                          "reason": "I have a doctors appointment",
                          "requested_at": "2022-05-24T09:38:46Z",
                          "requester": {
                            "id": 409222,
                            "name": "Mr. Rogers",
                            "profile_type": "client",
                          },
                          "reviewed_at": "2022-05-24T09:38:46Z",
                          "reviewer": {
                            "id": 409222,
                            "name": "Mr. Rogers",
                            "profile_type": "client",
                          },
                          "single_date": "2022-05-24T09:38:46Z",
                          "start_date_is_half_day": true,
                          "status": "REQUESTED",
                          "total_days_used": "4.00",
                          "type": "VACATION",
                        },
                        "contract_id": "abc123",
                        "created_at": "2022-05-24T09:38:46Z",
                        "date_is_half_day": true,
                        "days_used_end_year": "2.00",
                        "days_used_start_year": "2.00",
                        "denial_reason": "No time off available",
                        "end_date": "2022-05-24T09:38:46Z",
                        "end_date_is_half_day": true,
                        "has_multiple_dates": true,
                        "id": 6938,
                        "is_updated": true,
                        "other_timeoff_name": "This is time off for a doctor's appointment",
                        "reason": "I have a doctors appointment",
                        "requested_at": "2022-05-24T09:38:46Z",
                        "requester": {
                          "id": 409222,
                          "is_employee": true,
                          "name": "Mr. Rogers",
                          "pic_url": "pic_url",
                          "profile_type": "client",
                        },
                        "reviewed_at": "2022-05-24T09:38:46Z",
                        "reviewer": {
                          "id": 409222,
                          "is_employee": true,
                          "name": "Mr. Rogers",
                          "pic_url": "pic_url",
                          "profile_type": "client",
                        },
                        "single_date": "2022-05-24T09:38:46Z",
                        "start_date": "2022-05-24T09:38:46Z",
                        "start_date_is_half_day": true,
                        "status": "REQUESTED",
                        "total_days_used": "4.00",
                        "type": "VACATION",
                        "updated_at": "2022-05-24T09:38:46Z",
                      },
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/contracts/{contract_id}/time-offs/{timeoff_id}",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
                "timeoff_id": {
                  "docs": "Time off Id",
                  "type": "string",
                },
              },
              "request": {
                "body": "root.CreateTimeoffContainer",
                "content-type": "application/json",
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 201,
                "type": "root.EorTimeoffsItemContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getEorClientTimeOffs": {
              "audiences": [
                "external",
              ],
              "auth": false,
              "display-name": "List of time offs",
              "docs": "List of time offs for all employees in your organization.",
              "errors": [
                "root.GetEorClientTimeOffsRequestUnauthorizedError",
                "root.GetEorClientTimeOffsRequestForbiddenError",
                "root.GetEorClientTimeOffsRequestNotFoundError",
                "root.GetEorClientTimeOffsRequestInternalServerError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "data": {
                        "employees": [
                          {
                            "contract_id": "7WjJWdsJ113vocUN6Buwn",
                            "eor_contract_id": 110143,
                            "id": 568508,
                            "name": "Steve Timeoff",
                            "others": [
                              {
                                "requests": [
                                  {
                                    "contract_id": "abc123",
                                    "created_at": "2022-05-24T09:38:46Z",
                                    "days_used_end_year": "2.00",
                                    "days_used_start_year": "2.00",
                                    "id": 6938,
                                    "requested_at": "2022-05-24T09:38:46Z",
                                    "status": "REQUESTED",
                                    "total_days_used": "4.00",
                                    "type": "VACATION",
                                  },
                                ],
                                "year": 2022,
                              },
                            ],
                            "sick_leaves": [
                              {
                                "requests": [
                                  {
                                    "contract_id": "abc123",
                                    "created_at": "2022-05-24T09:38:46Z",
                                    "days_used_end_year": "2.00",
                                    "days_used_start_year": "2.00",
                                    "id": 6938,
                                    "requested_at": "2022-05-24T09:38:46Z",
                                    "status": "REQUESTED",
                                    "total_days_used": "4.00",
                                    "type": "VACATION",
                                  },
                                ],
                                "year": 2022,
                              },
                            ],
                            "time_zones": "time_zones",
                            "vacations": [
                              {
                                "requests": [
                                  {
                                    "contract_id": "abc123",
                                    "created_at": "2022-05-24T09:38:46Z",
                                    "days_used_end_year": "2.00",
                                    "days_used_start_year": "2.00",
                                    "id": 6938,
                                    "requested_at": "2022-05-24T09:38:46Z",
                                    "status": "REQUESTED",
                                    "total_days_used": "4.00",
                                    "type": "VACATION",
                                  },
                                ],
                                "year": 2022,
                              },
                            ],
                          },
                        ],
                        "total_requests": 1.1,
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/time-offs/",
              "response": {
                "docs": "successful operation",
                "status-code": 200,
                "type": "root.EorClientTimeoffsContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getEorEntitlements": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "List time off entitlements",
              "docs": "Retrieve a list of time off entitlements for a full-time employee.",
              "errors": [
                "root.GetEorEntitlementsRequestUnauthorizedError",
                "root.GetEorEntitlementsRequestForbiddenError",
                "root.GetEorEntitlementsRequestNotFoundError",
                "root.GetEorEntitlementsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                  },
                  "response": {
                    "body": {
                      "data": {
                        "entitlements": [
                          {
                            "max_rollover_yearly": "3",
                            "other_leave_approved": "5",
                            "other_leave_requested": "5",
                            "other_leave_total": "5",
                            "other_leave_used": "5",
                            "sick_leave_allowed": "16",
                            "sick_leave_approved": "5",
                            "sick_leave_requested": "5",
                            "sick_leave_total": "5",
                            "sick_leave_used": "5",
                            "vacation_allowed": "16",
                            "vacation_approved": "5",
                            "vacation_requested": "5",
                            "vacation_total": "5",
                            "vacation_used": "5",
                            "year": 2022,
                          },
                        ],
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/contracts/{contract_id}/entitlements",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.EorEntitlementsContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getEorTimeOffs": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "List time off by contract",
              "docs": "Retrieve the list of time off requests by an employee.",
              "errors": [
                "root.GetEorTimeOffsRequestUnauthorizedError",
                "root.GetEorTimeOffsRequestForbiddenError",
                "root.GetEorTimeOffsRequestNotFoundError",
                "root.GetEorTimeOffsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                  },
                  "response": {
                    "body": {
                      "data": [
                        {
                          "applied_changes": [
                            {
                              "days_used_end_year": "2.00",
                              "days_used_start_year": "2.00",
                              "requested_at": "2022-05-24T09:38:46Z",
                              "status": "REQUESTED",
                              "total_days_used": "4.00",
                              "type": "VACATION",
                            },
                          ],
                          "attachments": [
                            {},
                          ],
                          "can_request_changes": true,
                          "change_request": {
                            "days_used_end_year": "2.00",
                            "days_used_start_year": "2.00",
                            "requested_at": "2022-05-24T09:38:46Z",
                            "status": "REQUESTED",
                            "total_days_used": "4.00",
                            "type": "VACATION",
                          },
                          "contract_id": "abc123",
                          "created_at": "2022-05-24T09:38:46Z",
                          "date_is_half_day": true,
                          "days_used_end_year": "2.00",
                          "days_used_start_year": "2.00",
                          "denial_reason": "No time off available",
                          "end_date": "2022-05-24T09:38:46Z",
                          "end_date_is_half_day": true,
                          "has_multiple_dates": true,
                          "id": 6938,
                          "is_updated": true,
                          "other_timeoff_name": "This is time off for a doctor's appointment",
                          "reason": "I have a doctors appointment",
                          "requested_at": "2022-05-24T09:38:46Z",
                          "requester": {
                            "id": 409222,
                            "name": "Mr. Rogers",
                            "profile_type": "client",
                          },
                          "reviewed_at": "2022-05-24T09:38:46Z",
                          "reviewer": {
                            "id": 409222,
                            "name": "Mr. Rogers",
                            "profile_type": "client",
                          },
                          "single_date": "2022-05-24T09:38:46Z",
                          "start_date": "2022-05-24T09:38:46Z",
                          "start_date_is_half_day": true,
                          "status": "REQUESTED",
                          "total_days_used": "4.00",
                          "type": "VACATION",
                          "updated_at": "2022-05-24T09:38:46Z",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/contracts/{contract_id}/time-offs",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.EorTimeoffsContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "reviewTimeoff": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Review a time off request",
              "docs": "Approve or decline an employee's time off request.",
              "errors": [
                "root.ReviewTimeoffRequestBadRequestError",
                "root.ReviewTimeoffRequestUnauthorizedError",
                "root.ReviewTimeoffRequestForbiddenError",
                "root.ReviewTimeoffRequestNotFoundError",
                "root.ReviewTimeoffRequestMethodNotAllowedError",
                "root.ReviewTimeoffRequestTooManyRequestsError",
                "root.ReviewTimeoffRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "timeoff_id": "12345",
                  },
                  "request": {
                    "data": {
                      "is_approved": true,
                    },
                  },
                  "response": {
                    "body": {
                      "data": {
                        "updated": true,
                      },
                    },
                  },
                },
              ],
              "method": "PATCH",
              "pagination": undefined,
              "path": "/time-offs/{timeoff_id}/review",
              "path-parameters": {
                "timeoff_id": {
                  "docs": "Time off Id",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "data": "root.TimeoffReview",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "TimeoffToReviewContainer",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.GenericResultUpdated",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    getEorTimeOffs:
      path: /contracts/{contract_id}/time-offs
      method: GET
      auth: true
      docs: Retrieve the list of time off requests by an employee.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
      display-name: List time off by contract
      response:
        docs: Successful operation.
        type: root.EorTimeoffsContainer
        status-code: 200
      errors:
        - root.GetEorTimeOffsRequestUnauthorizedError
        - root.GetEorTimeOffsRequestForbiddenError
        - root.GetEorTimeOffsRequestNotFoundError
        - root.GetEorTimeOffsRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
          response:
            body:
              data:
                - reason: I have a doctors appointment
                  type: VACATION
                  requested_at: '2022-05-24T09:38:46Z'
                  reviewed_at: '2022-05-24T09:38:46Z'
                  denial_reason: No time off available
                  has_multiple_dates: true
                  status: REQUESTED
                  other_timeoff_name: This is time off for a doctor's appointment
                  requester:
                    id: 409222
                    name: Mr. Rogers
                    profile_type: client
                  reviewer:
                    id: 409222
                    name: Mr. Rogers
                    profile_type: client
                  days_used_start_year: '2.00'
                  days_used_end_year: '2.00'
                  total_days_used: '4.00'
                  start_date_is_half_day: true
                  end_date_is_half_day: true
                  single_date: '2022-05-24T09:38:46Z'
                  date_is_half_day: true
                  attachments:
                    - {}
                  id: 6938
                  contract_id: abc123
                  created_at: '2022-05-24T09:38:46Z'
                  updated_at: '2022-05-24T09:38:46Z'
                  start_date: '2022-05-24T09:38:46Z'
                  end_date: '2022-05-24T09:38:46Z'
                  can_request_changes: true
                  is_updated: true
                  change_request:
                    type: VACATION
                    requested_at: '2022-05-24T09:38:46Z'
                    status: REQUESTED
                    days_used_start_year: '2.00'
                    days_used_end_year: '2.00'
                    total_days_used: '4.00'
                  applied_changes:
                    - type: VACATION
                      requested_at: '2022-05-24T09:38:46Z'
                      status: REQUESTED
                      days_used_start_year: '2.00'
                      days_used_end_year: '2.00'
                      total_days_used: '4.00'
      audiences:
        - external
    createEorTimeOffs:
      path: /contracts/{contract_id}/time-offs
      method: POST
      auth: true
      docs: Add a time off request for a full-time employee.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
      display-name: Add a time off request
      request:
        body: root.CreateTimeoffContainer
        content-type: application/json
      response:
        docs: Successful operation.
        type: root.EorTimeoffsItemContainer
        status-code: 201
      errors:
        - root.CreateEorTimeOffsRequestUnauthorizedError
        - root.CreateEorTimeOffsRequestForbiddenError
        - root.CreateEorTimeOffsRequestNotFoundError
        - root.CreateEorTimeOffsRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
          request:
            data:
              type: VACATION
              with_multiple_dates: true
          response:
            body:
              data:
                reason: I have a doctors appointment
                type: VACATION
                requested_at: '2022-05-24T09:38:46Z'
                reviewed_at: '2022-05-24T09:38:46Z'
                denial_reason: No time off available
                has_multiple_dates: true
                status: REQUESTED
                other_timeoff_name: This is time off for a doctor's appointment
                requester:
                  id: 409222
                  name: Mr. Rogers
                  pic_url: pic_url
                  profile_type: client
                  is_employee: true
                reviewer:
                  id: 409222
                  name: Mr. Rogers
                  pic_url: pic_url
                  profile_type: client
                  is_employee: true
                days_used_start_year: '2.00'
                days_used_end_year: '2.00'
                total_days_used: '4.00'
                start_date_is_half_day: true
                end_date_is_half_day: true
                single_date: '2022-05-24T09:38:46Z'
                date_is_half_day: true
                attachments:
                  - {}
                id: 6938
                contract_id: abc123
                created_at: '2022-05-24T09:38:46Z'
                updated_at: '2022-05-24T09:38:46Z'
                start_date: '2022-05-24T09:38:46Z'
                end_date: '2022-05-24T09:38:46Z'
                can_request_changes: true
                is_updated: true
                change_request:
                  reason: I have a doctors appointment
                  type: VACATION
                  requested_at: '2022-05-24T09:38:46Z'
                  reviewed_at: '2022-05-24T09:38:46Z'
                  denial_reason: No time off available
                  has_multiple_dates: true
                  status: REQUESTED
                  other_timeoff_name: This is time off for a doctor's appointment
                  requester:
                    id: 409222
                    name: Mr. Rogers
                    profile_type: client
                  reviewer:
                    id: 409222
                    name: Mr. Rogers
                    profile_type: client
                  days_used_start_year: '2.00'
                  days_used_end_year: '2.00'
                  total_days_used: '4.00'
                  start_date_is_half_day: true
                  end_date_is_half_day: true
                  single_date: '2022-05-24T09:38:46Z'
                  date_is_half_day: true
                  attachments:
                    - {}
                applied_changes:
                  - type: VACATION
                    requested_at: '2022-05-24T09:38:46Z'
                    status: REQUESTED
                    days_used_start_year: '2.00'
                    days_used_end_year: '2.00'
                    total_days_used: '4.00'
      audiences:
        - external
    editEorTimeOffs:
      path: /contracts/{contract_id}/time-offs/{timeoff_id}
      method: PUT
      auth: true
      docs: Edit a time off request for a full-time employee.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
        timeoff_id:
          type: string
          docs: Time off Id
      display-name: Edit a time off request
      request:
        body: root.CreateTimeoffContainer
        content-type: application/json
      response:
        docs: Successful operation.
        type: root.EorTimeoffsItemContainer
        status-code: 201
      errors:
        - root.EditEorTimeOffsRequestUnauthorizedError
        - root.EditEorTimeOffsRequestForbiddenError
        - root.EditEorTimeOffsRequestNotFoundError
        - root.EditEorTimeOffsRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
            timeoff_id: '12345'
          request:
            data:
              type: VACATION
              with_multiple_dates: true
          response:
            body:
              data:
                reason: I have a doctors appointment
                type: VACATION
                requested_at: '2022-05-24T09:38:46Z'
                reviewed_at: '2022-05-24T09:38:46Z'
                denial_reason: No time off available
                has_multiple_dates: true
                status: REQUESTED
                other_timeoff_name: This is time off for a doctor's appointment
                requester:
                  id: 409222
                  name: Mr. Rogers
                  pic_url: pic_url
                  profile_type: client
                  is_employee: true
                reviewer:
                  id: 409222
                  name: Mr. Rogers
                  pic_url: pic_url
                  profile_type: client
                  is_employee: true
                days_used_start_year: '2.00'
                days_used_end_year: '2.00'
                total_days_used: '4.00'
                start_date_is_half_day: true
                end_date_is_half_day: true
                single_date: '2022-05-24T09:38:46Z'
                date_is_half_day: true
                attachments:
                  - {}
                id: 6938
                contract_id: abc123
                created_at: '2022-05-24T09:38:46Z'
                updated_at: '2022-05-24T09:38:46Z'
                start_date: '2022-05-24T09:38:46Z'
                end_date: '2022-05-24T09:38:46Z'
                can_request_changes: true
                is_updated: true
                change_request:
                  reason: I have a doctors appointment
                  type: VACATION
                  requested_at: '2022-05-24T09:38:46Z'
                  reviewed_at: '2022-05-24T09:38:46Z'
                  denial_reason: No time off available
                  has_multiple_dates: true
                  status: REQUESTED
                  other_timeoff_name: This is time off for a doctor's appointment
                  requester:
                    id: 409222
                    name: Mr. Rogers
                    profile_type: client
                  reviewer:
                    id: 409222
                    name: Mr. Rogers
                    profile_type: client
                  days_used_start_year: '2.00'
                  days_used_end_year: '2.00'
                  total_days_used: '4.00'
                  start_date_is_half_day: true
                  end_date_is_half_day: true
                  single_date: '2022-05-24T09:38:46Z'
                  date_is_half_day: true
                  attachments:
                    - {}
                applied_changes:
                  - type: VACATION
                    requested_at: '2022-05-24T09:38:46Z'
                    status: REQUESTED
                    days_used_start_year: '2.00'
                    days_used_end_year: '2.00'
                    total_days_used: '4.00'
      audiences:
        - external
    deleteEorTimeOffs:
      path: /contracts/{contract_id}/time-offs/{timeoff_id}
      method: DELETE
      auth: true
      docs: Cancel a time off request for an employee.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
        timeoff_id:
          type: string
          docs: Time off Id
      display-name: Cancel a time off request
      response:
        docs: Successful operation.
        type: root.GenericResultDeleted
        status-code: 200
      errors:
        - root.DeleteEorTimeOffsRequestUnauthorizedError
        - root.DeleteEorTimeOffsRequestForbiddenError
        - root.DeleteEorTimeOffsRequestNotFoundError
        - root.DeleteEorTimeOffsRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
            timeoff_id: '12345'
          response:
            body:
              data:
                deleted: true
      audiences:
        - external
    getEorEntitlements:
      path: /contracts/{contract_id}/entitlements
      method: GET
      auth: true
      docs: Retrieve a list of time off entitlements for a full-time employee.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
      display-name: List time off entitlements
      response:
        docs: Successful operation.
        type: root.EorEntitlementsContainer
        status-code: 200
      errors:
        - root.GetEorEntitlementsRequestUnauthorizedError
        - root.GetEorEntitlementsRequestForbiddenError
        - root.GetEorEntitlementsRequestNotFoundError
        - root.GetEorEntitlementsRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
          response:
            body:
              data:
                entitlements:
                  - year: 2022
                    vacation_allowed: '16'
                    sick_leave_allowed: '16'
                    vacation_requested: '5'
                    vacation_approved: '5'
                    vacation_used: '5'
                    vacation_total: '5'
                    sick_leave_requested: '5'
                    sick_leave_approved: '5'
                    sick_leave_used: '5'
                    sick_leave_total: '5'
                    other_leave_requested: '5'
                    other_leave_approved: '5'
                    other_leave_used: '5'
                    other_leave_total: '5'
                    max_rollover_yearly: '3'
      audiences:
        - external
    getEorClientTimeOffs:
      path: /time-offs/
      method: GET
      auth: false
      docs: List of time offs for all employees in your organization.
      source:
        openapi: ../openapi.yml
      display-name: List of time offs
      response:
        docs: successful operation
        type: root.EorClientTimeoffsContainer
        status-code: 200
      errors:
        - root.GetEorClientTimeOffsRequestUnauthorizedError
        - root.GetEorClientTimeOffsRequestForbiddenError
        - root.GetEorClientTimeOffsRequestNotFoundError
        - root.GetEorClientTimeOffsRequestInternalServerError
      examples:
        - response:
            body:
              data:
                employees:
                  - id: 568508
                    name: Steve Timeoff
                    eor_contract_id: 110143
                    contract_id: 7WjJWdsJ113vocUN6Buwn
                    vacations:
                      - year: 2022
                        requests:
                          - type: VACATION
                            requested_at: '2022-05-24T09:38:46Z'
                            status: REQUESTED
                            days_used_start_year: '2.00'
                            days_used_end_year: '2.00'
                            total_days_used: '4.00'
                            id: 6938
                            contract_id: abc123
                            created_at: '2022-05-24T09:38:46Z'
                    sick_leaves:
                      - year: 2022
                        requests:
                          - type: VACATION
                            requested_at: '2022-05-24T09:38:46Z'
                            status: REQUESTED
                            days_used_start_year: '2.00'
                            days_used_end_year: '2.00'
                            total_days_used: '4.00'
                            id: 6938
                            contract_id: abc123
                            created_at: '2022-05-24T09:38:46Z'
                    others:
                      - year: 2022
                        requests:
                          - type: VACATION
                            requested_at: '2022-05-24T09:38:46Z'
                            status: REQUESTED
                            days_used_start_year: '2.00'
                            days_used_end_year: '2.00'
                            total_days_used: '4.00'
                            id: 6938
                            contract_id: abc123
                            created_at: '2022-05-24T09:38:46Z'
                    time_zones: time_zones
                total_requests: 1.1
      audiences:
        - external
    reviewTimeoff:
      path: /time-offs/{timeoff_id}/review
      method: PATCH
      auth: true
      docs: Approve or decline an employee's time off request.
      source:
        openapi: ../openapi.yml
      path-parameters:
        timeoff_id:
          type: string
          docs: Time off Id
      display-name: Review a time off request
      request:
        name: TimeoffToReviewContainer
        body:
          properties:
            data: root.TimeoffReview
        content-type: application/json
      response:
        docs: Successful operation.
        type: root.GenericResultUpdated
        status-code: 200
      errors:
        - root.ReviewTimeoffRequestBadRequestError
        - root.ReviewTimeoffRequestUnauthorizedError
        - root.ReviewTimeoffRequestForbiddenError
        - root.ReviewTimeoffRequestNotFoundError
        - root.ReviewTimeoffRequestMethodNotAllowedError
        - root.ReviewTimeoffRequestTooManyRequestsError
        - root.ReviewTimeoffRequestInternalServerError
      examples:
        - path-parameters:
            timeoff_id: '12345'
          request:
            data:
              is_approved: true
          response:
            body:
              data:
                updated: true
      audiences:
        - external
  source:
    openapi: ../openapi.yml
  display-name: Time Off
docs: Manage time off requests.
",
    },
    "timesheets.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "The Invoices resource lets you create, amend and retrieve timesheets of Deel contracts.",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Timesheets",
          "endpoints": {
            "createTimesheet": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Create a timesheet entry",
              "docs": "Submit work for a contractor.",
              "errors": [
                "root.CreateTimesheetRequestBadRequestError",
                "root.CreateTimesheetRequestUnauthorizedError",
                "root.CreateTimesheetRequestForbiddenError",
                "root.CreateTimesheetRequestNotFoundError",
                "root.CreateTimesheetRequestMethodNotAllowedError",
                "root.CreateTimesheetRequestTooManyRequestsError",
                "root.CreateTimesheetRequestInternalServerError",
              ],
              "examples": [
                {
                  "request": {
                    "data": {
                      "contract_id": "contract_id",
                      "date_submitted": "1999-12-31",
                      "description": "description",
                      "quantity": 1.1,
                    },
                  },
                  "response": {
                    "body": {
                      "data": {
                        "created": true,
                        "created_at": "2022-05-24T09:38:46Z",
                        "id": "id",
                        "public_id": "00000000-0000-0000-0000-000000000000",
                        "status": "status",
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/timesheets",
              "request": {
                "body": {
                  "properties": {
                    "data": "root.TimesheetToCreate",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "TimesheetToCreateContainer",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 201,
                "type": "root.InvoiceAdjustmentCreatedContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "createTimesheetReview": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Review a single timesheet",
              "docs": "Review a timesheet to approve or decline submitted work.",
              "errors": [
                "root.CreateTimesheetReviewRequestBadRequestError",
                "root.CreateTimesheetReviewRequestUnauthorizedError",
                "root.CreateTimesheetReviewRequestForbiddenError",
                "root.CreateTimesheetReviewRequestNotFoundError",
                "root.CreateTimesheetReviewRequestMethodNotAllowedError",
                "root.CreateTimesheetReviewRequestTooManyRequestsError",
                "root.CreateTimesheetReviewRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "timesheet_id": 1000000,
                  },
                  "request": {
                    "data": {
                      "status": "approved",
                    },
                  },
                  "response": {
                    "body": {
                      "data": {
                        "created": true,
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/timesheets/{timesheet_id}/reviews",
              "path-parameters": {
                "timesheet_id": {
                  "docs": "ID of an existing timesheet",
                  "type": "long",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "data": "root.TimesheetReviewToCreate",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "TimesheetReviewToCreateContainer",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 201,
                "type": "root.GenericResultCreated",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "createTimesheetReviews": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Review multiple timesheets",
              "docs": "Review a batch of timesheets to approve or reject submitted work.",
              "errors": [
                "root.CreateTimesheetReviewsRequestBadRequestError",
                "root.CreateTimesheetReviewsRequestUnauthorizedError",
                "root.CreateTimesheetReviewsRequestForbiddenError",
                "root.CreateTimesheetReviewsRequestNotFoundError",
                "root.CreateTimesheetReviewsRequestMethodNotAllowedError",
                "root.CreateTimesheetReviewsRequestTooManyRequestsError",
                "root.CreateTimesheetReviewsRequestInternalServerError",
              ],
              "examples": [
                {
                  "request": {
                    "data": {
                      "ids": [
                        1.1,
                      ],
                      "status": "approved",
                    },
                  },
                  "response": {
                    "body": {
                      "data": {
                        "created": true,
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/timesheets/many/reviews",
              "request": {
                "body": {
                  "properties": {
                    "data": "root.TimesheetReviewsToCreate",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "TimesheetReviewsToCreateContainer",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 201,
                "type": "root.GenericResultCreated",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "deleteTimesheetById": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Delete a timesheet entry",
              "docs": "Delete a single timesheet entry.",
              "errors": [
                "root.DeleteTimesheetByIdRequestBadRequestError",
                "root.DeleteTimesheetByIdRequestUnauthorizedError",
                "root.DeleteTimesheetByIdRequestForbiddenError",
                "root.DeleteTimesheetByIdRequestNotFoundError",
                "root.DeleteTimesheetByIdRequestMethodNotAllowedError",
                "root.DeleteTimesheetByIdRequestTooManyRequestsError",
                "root.DeleteTimesheetByIdRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "timesheet_id": 1000000,
                  },
                  "response": {
                    "body": {
                      "data": {
                        "deleted": true,
                      },
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/timesheets/{timesheet_id}",
              "path-parameters": {
                "timesheet_id": {
                  "docs": "ID of an existing timesheet",
                  "type": "long",
                },
              },
              "request": {
                "name": "DeleteTimesheetByIdRequest",
                "query-parameters": {
                  "reason": {
                    "docs": "Reason for deleting an existing timesheet",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.GenericResultDeleted",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getTimesheetById": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Retrieve a single timesheet entry",
              "docs": "Retrieve a single timesheet entry by Id.",
              "errors": [
                "root.GetTimesheetByIdRequestBadRequestError",
                "root.GetTimesheetByIdRequestUnauthorizedError",
                "root.GetTimesheetByIdRequestForbiddenError",
                "root.GetTimesheetByIdRequestNotFoundError",
                "root.GetTimesheetByIdRequestMethodNotAllowedError",
                "root.GetTimesheetByIdRequestTooManyRequestsError",
                "root.GetTimesheetByIdRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "timesheet_id": 1000000,
                  },
                  "response": {
                    "body": {
                      "data": {
                        "approvers": [
                          {
                            "approved": true,
                            "email": "email",
                            "full_name": "full_name",
                          },
                        ],
                        "attachment": {
                          "filename": "filename",
                          "key": "key",
                        },
                        "contract": {
                          "id": "id",
                          "title": "title",
                          "type": "ongoing_time_based",
                        },
                        "created_at": "2022-05-04T03:45:27.108Z",
                        "currency_code": "USD",
                        "custom_scale": "custom_scale",
                        "date_submitted": "2022-05-24T09:38:46Z",
                        "description": "description",
                        "id": "id",
                        "payment_cycle": {
                          "end_date": "2022-05-24T09:38:46Z",
                          "start_date": "2022-05-24T09:38:46Z",
                        },
                        "public_id": "00000000-0000-0000-0000-000000000000",
                        "quantity": 1,
                        "reported_by": {
                          "full_name": "John Smith",
                          "id": 123456,
                        },
                        "reviewed_by": {
                          "full_name": "Jane Smith",
                          "id": 123456,
                          "remarks": "remarks",
                          "reviewed_at": "2022-05-04T03:45:27.899Z",
                        },
                        "scale": "custom",
                        "status": "approved",
                        "total_amount": "200.0000",
                        "type": "type",
                        "worksheet": {
                          "days": 0,
                          "hours": 1,
                          "minutes": 0,
                          "weeks": 0,
                        },
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/timesheets/{timesheet_id}",
              "path-parameters": {
                "timesheet_id": {
                  "docs": "ID of an existing timesheet",
                  "type": "long",
                },
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.TimesheetContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getTimesheets": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "List of timesheets",
              "docs": "Retrieve a list of timesheets in your Deel account. You can filter the list by providing additional paramters e.g. contract_id, contract_type etc.",
              "errors": [
                "root.GetTimesheetsRequestBadRequestError",
                "root.GetTimesheetsRequestUnauthorizedError",
                "root.GetTimesheetsRequestForbiddenError",
                "root.GetTimesheetsRequestNotFoundError",
                "root.GetTimesheetsRequestMethodNotAllowedError",
                "root.GetTimesheetsRequestTooManyRequestsError",
                "root.GetTimesheetsRequestInternalServerError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "data": [
                        {
                          "attachment": {
                            "filename": "filename",
                            "key": "key",
                          },
                          "contract": {
                            "id": "id",
                            "title": "title",
                            "type": "ongoing_time_based",
                          },
                          "created_at": "2022-05-04T03:45:27.108Z",
                          "currency_code": "USD",
                          "custom_scale": "custom_scale",
                          "date_submitted": "2022-05-24T09:38:46Z",
                          "description": "description",
                          "id": "id",
                          "public_id": "00000000-0000-0000-0000-000000000000",
                          "quantity": 1,
                          "reported_by": {
                            "full_name": "John Smith",
                            "id": 123456,
                          },
                          "reviewed_by": {
                            "full_name": "Jane Smith",
                            "id": 123456,
                            "remarks": "remarks",
                            "reviewed_at": "2022-05-04T03:45:27.899Z",
                          },
                          "scale": "custom",
                          "status": "approved",
                          "total_amount": "200.0000",
                          "type": "type",
                          "worksheet": {
                            "days": 0,
                            "hours": 1,
                            "minutes": 0,
                            "weeks": 0,
                          },
                        },
                      ],
                      "page": {
                        "total_rows": 1.1,
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/timesheets",
              "request": {
                "name": "GetTimesheetsRequest",
                "query-parameters": {
                  "contract_id": {
                    "docs": "Id of a Deel contract.",
                    "type": "optional<string>",
                  },
                  "contract_types": {
                    "allow-multiple": true,
                    "docs": "Types of contracts to filter.",
                    "type": "optional<root.ContractTypeEnum>",
                  },
                  "date_from": {
                    "docs": "Filtered results will include records created on or after the provided date.",
                    "type": "optional<root.DateString>",
                  },
                  "date_to": {
                    "docs": "Filtered results will include records created before the provided date.",
                    "type": "optional<root.DateString>",
                  },
                  "limit": {
                    "default": 99,
                    "docs": "Return a page of results with given number of records; NOTE: technically ALL query parameters are strings or array of strings",
                    "type": "optional<long>",
                  },
                  "offset": {
                    "default": 0,
                    "docs": "Return a page of results after given index of row",
                    "type": "optional<long>",
                  },
                  "reporter_id": {
                    "docs": "ID of an existing profile; NOTE: technically ALL query parameters are strings or array of strings",
                    "type": "optional<double>",
                  },
                  "statuses": {
                    "allow-multiple": true,
                    "docs": "Statuses of timesheets to filter.",
                    "type": "optional<root.TimesheetStatusEnum>",
                  },
                },
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.TimesheetListContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getTimesheetsByContract": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "List of timesheets by contract",
              "docs": "Retrieve a list of timesheets found for a contract.",
              "errors": [
                "root.GetTimesheetsByContractRequestBadRequestError",
                "root.GetTimesheetsByContractRequestUnauthorizedError",
                "root.GetTimesheetsByContractRequestForbiddenError",
                "root.GetTimesheetsByContractRequestNotFoundError",
                "root.GetTimesheetsByContractRequestMethodNotAllowedError",
                "root.GetTimesheetsByContractRequestTooManyRequestsError",
                "root.GetTimesheetsByContractRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "contract_id": "37nex2x",
                  },
                  "response": {
                    "body": {
                      "data": [
                        {
                          "attachment": {
                            "filename": "filename",
                            "key": "key",
                          },
                          "contract": {
                            "id": "id",
                            "title": "title",
                            "type": "ongoing_time_based",
                          },
                          "created_at": "2022-05-04T03:45:27.108Z",
                          "currency_code": "USD",
                          "custom_scale": "custom_scale",
                          "date_submitted": "2022-05-24T09:38:46Z",
                          "description": "description",
                          "id": "id",
                          "public_id": "00000000-0000-0000-0000-000000000000",
                          "quantity": 1,
                          "reported_by": {
                            "full_name": "John Smith",
                            "id": 123456,
                          },
                          "reviewed_by": {
                            "full_name": "Jane Smith",
                            "id": 123456,
                            "remarks": "remarks",
                            "reviewed_at": "2022-05-04T03:45:27.899Z",
                          },
                          "scale": "custom",
                          "status": "approved",
                          "total_amount": "200.0000",
                          "type": "type",
                          "worksheet": {
                            "days": 0,
                            "hours": 1,
                            "minutes": 0,
                            "weeks": 0,
                          },
                        },
                      ],
                      "page": {
                        "total_rows": 1.1,
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/contracts/{contract_id}/timesheets",
              "path-parameters": {
                "contract_id": {
                  "docs": "Deel contract id.",
                  "type": "string",
                },
              },
              "request": {
                "name": "GetTimesheetsByContractRequest",
                "query-parameters": {
                  "contract_types": {
                    "allow-multiple": true,
                    "docs": "Types of contracts to filter.",
                    "type": "optional<root.ContractTypeEnum>",
                  },
                  "date_from": {
                    "docs": "Filtered results will include records created on or after the provided date.",
                    "type": "optional<root.DateString>",
                  },
                  "date_to": {
                    "docs": "Filtered results will include records created before the provided date.",
                    "type": "optional<root.DateString>",
                  },
                  "limit": {
                    "default": 99,
                    "docs": "Return a page of results with given number of records; NOTE: technically ALL query parameters are strings or array of strings",
                    "type": "optional<long>",
                  },
                  "offset": {
                    "default": 0,
                    "docs": "Return a page of results after given index of row",
                    "type": "optional<long>",
                  },
                  "reporter_id": {
                    "docs": "ID of an existing profile; NOTE: technically ALL query parameters are strings or array of strings",
                    "type": "optional<double>",
                  },
                  "statuses": {
                    "allow-multiple": true,
                    "docs": "Statuses of timesheets to filter.",
                    "type": "optional<root.TimesheetStatusEnum>",
                  },
                },
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.TimesheetListContainer",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "updateTimesheetById": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Update a timesheet entry",
              "docs": "Update a single timesheet entry.",
              "errors": [
                "root.UpdateTimesheetByIdRequestBadRequestError",
                "root.UpdateTimesheetByIdRequestUnauthorizedError",
                "root.UpdateTimesheetByIdRequestForbiddenError",
                "root.UpdateTimesheetByIdRequestNotFoundError",
                "root.UpdateTimesheetByIdRequestMethodNotAllowedError",
                "root.UpdateTimesheetByIdRequestTooManyRequestsError",
                "root.UpdateTimesheetByIdRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "timesheet_id": 1000000,
                  },
                  "request": {
                    "data": {
                      "description": "description",
                      "quantity": 1.1,
                    },
                  },
                  "response": {
                    "body": {
                      "data": {
                        "updated": true,
                      },
                    },
                  },
                },
              ],
              "method": "PATCH",
              "pagination": undefined,
              "path": "/timesheets/{timesheet_id}",
              "path-parameters": {
                "timesheet_id": {
                  "docs": "ID of an existing timesheet",
                  "type": "long",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "data": "root.TimesheetToUpdate",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "TimesheetToUpdateContainer",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful operation.",
                "status-code": 200,
                "type": "root.GenericResultUpdated",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    getTimesheetsByContract:
      path: /contracts/{contract_id}/timesheets
      method: GET
      auth: true
      docs: Retrieve a list of timesheets found for a contract.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contract_id:
          type: string
          docs: Deel contract id.
      display-name: List of timesheets by contract
      request:
        name: GetTimesheetsByContractRequest
        query-parameters:
          contract_types:
            type: optional<root.ContractTypeEnum>
            allow-multiple: true
            docs: Types of contracts to filter.
          statuses:
            type: optional<root.TimesheetStatusEnum>
            allow-multiple: true
            docs: Statuses of timesheets to filter.
          reporter_id:
            type: optional<double>
            docs: >-
              ID of an existing profile; NOTE: technically ALL query parameters
              are strings or array of strings
          date_from:
            type: optional<root.DateString>
            docs: >-
              Filtered results will include records created on or after the
              provided date.
          date_to:
            type: optional<root.DateString>
            docs: >-
              Filtered results will include records created before the provided
              date.
          limit:
            type: optional<long>
            default: 99
            docs: >-
              Return a page of results with given number of records; NOTE:
              technically ALL query parameters are strings or array of strings
          offset:
            type: optional<long>
            default: 0
            docs: Return a page of results after given index of row
      response:
        docs: Successful operation.
        type: root.TimesheetListContainer
        status-code: 200
      errors:
        - root.GetTimesheetsByContractRequestBadRequestError
        - root.GetTimesheetsByContractRequestUnauthorizedError
        - root.GetTimesheetsByContractRequestForbiddenError
        - root.GetTimesheetsByContractRequestNotFoundError
        - root.GetTimesheetsByContractRequestMethodNotAllowedError
        - root.GetTimesheetsByContractRequestTooManyRequestsError
        - root.GetTimesheetsByContractRequestInternalServerError
      examples:
        - path-parameters:
            contract_id: 37nex2x
          response:
            body:
              data:
                - id: id
                  public_id: 00000000-0000-0000-0000-000000000000
                  type: type
                  status: approved
                  description: description
                  date_submitted: '2022-05-24T09:38:46Z'
                  currency_code: USD
                  total_amount: '200.0000'
                  quantity: 1
                  created_at: '2022-05-04T03:45:27.108Z'
                  scale: custom
                  custom_scale: custom_scale
                  attachment:
                    filename: filename
                    key: key
                  worksheet:
                    weeks: 0
                    days: 0
                    hours: 1
                    minutes: 0
                  reviewed_by:
                    id: 123456
                    full_name: Jane Smith
                    reviewed_at: '2022-05-04T03:45:27.899Z'
                    remarks: remarks
                  contract:
                    id: id
                    title: title
                    type: ongoing_time_based
                  reported_by:
                    id: 123456
                    full_name: John Smith
              page:
                total_rows: 1.1
      audiences:
        - external
    getTimesheets:
      path: /timesheets
      method: GET
      auth: true
      docs: >-
        Retrieve a list of timesheets in your Deel account. You can filter the
        list by providing additional paramters e.g. contract_id, contract_type
        etc.
      source:
        openapi: ../openapi.yml
      display-name: List of timesheets
      request:
        name: GetTimesheetsRequest
        query-parameters:
          contract_id:
            type: optional<string>
            docs: Id of a Deel contract.
          contract_types:
            type: optional<root.ContractTypeEnum>
            allow-multiple: true
            docs: Types of contracts to filter.
          statuses:
            type: optional<root.TimesheetStatusEnum>
            allow-multiple: true
            docs: Statuses of timesheets to filter.
          reporter_id:
            type: optional<double>
            docs: >-
              ID of an existing profile; NOTE: technically ALL query parameters
              are strings or array of strings
          date_from:
            type: optional<root.DateString>
            docs: >-
              Filtered results will include records created on or after the
              provided date.
          date_to:
            type: optional<root.DateString>
            docs: >-
              Filtered results will include records created before the provided
              date.
          limit:
            type: optional<long>
            default: 99
            docs: >-
              Return a page of results with given number of records; NOTE:
              technically ALL query parameters are strings or array of strings
          offset:
            type: optional<long>
            default: 0
            docs: Return a page of results after given index of row
      response:
        docs: Successful operation.
        type: root.TimesheetListContainer
        status-code: 200
      errors:
        - root.GetTimesheetsRequestBadRequestError
        - root.GetTimesheetsRequestUnauthorizedError
        - root.GetTimesheetsRequestForbiddenError
        - root.GetTimesheetsRequestNotFoundError
        - root.GetTimesheetsRequestMethodNotAllowedError
        - root.GetTimesheetsRequestTooManyRequestsError
        - root.GetTimesheetsRequestInternalServerError
      examples:
        - response:
            body:
              data:
                - id: id
                  public_id: 00000000-0000-0000-0000-000000000000
                  type: type
                  status: approved
                  description: description
                  date_submitted: '2022-05-24T09:38:46Z'
                  currency_code: USD
                  total_amount: '200.0000'
                  quantity: 1
                  created_at: '2022-05-04T03:45:27.108Z'
                  scale: custom
                  custom_scale: custom_scale
                  attachment:
                    filename: filename
                    key: key
                  worksheet:
                    weeks: 0
                    days: 0
                    hours: 1
                    minutes: 0
                  reviewed_by:
                    id: 123456
                    full_name: Jane Smith
                    reviewed_at: '2022-05-04T03:45:27.899Z'
                    remarks: remarks
                  contract:
                    id: id
                    title: title
                    type: ongoing_time_based
                  reported_by:
                    id: 123456
                    full_name: John Smith
              page:
                total_rows: 1.1
      audiences:
        - external
    createTimesheet:
      path: /timesheets
      method: POST
      auth: true
      docs: Submit work for a contractor.
      source:
        openapi: ../openapi.yml
      display-name: Create a timesheet entry
      request:
        name: TimesheetToCreateContainer
        body:
          properties:
            data: root.TimesheetToCreate
        content-type: application/json
      response:
        docs: Successful operation.
        type: root.InvoiceAdjustmentCreatedContainer
        status-code: 201
      errors:
        - root.CreateTimesheetRequestBadRequestError
        - root.CreateTimesheetRequestUnauthorizedError
        - root.CreateTimesheetRequestForbiddenError
        - root.CreateTimesheetRequestNotFoundError
        - root.CreateTimesheetRequestMethodNotAllowedError
        - root.CreateTimesheetRequestTooManyRequestsError
        - root.CreateTimesheetRequestInternalServerError
      examples:
        - request:
            data:
              contract_id: contract_id
              description: description
              date_submitted: '1999-12-31'
              quantity: 1.1
          response:
            body:
              data:
                created: true
                id: id
                public_id: 00000000-0000-0000-0000-000000000000
                status: status
                created_at: '2022-05-24T09:38:46Z'
      audiences:
        - external
    getTimesheetById:
      path: /timesheets/{timesheet_id}
      method: GET
      auth: true
      docs: Retrieve a single timesheet entry by Id.
      source:
        openapi: ../openapi.yml
      path-parameters:
        timesheet_id:
          type: long
          docs: ID of an existing timesheet
      display-name: Retrieve a single timesheet entry
      response:
        docs: Successful operation.
        type: root.TimesheetContainer
        status-code: 200
      errors:
        - root.GetTimesheetByIdRequestBadRequestError
        - root.GetTimesheetByIdRequestUnauthorizedError
        - root.GetTimesheetByIdRequestForbiddenError
        - root.GetTimesheetByIdRequestNotFoundError
        - root.GetTimesheetByIdRequestMethodNotAllowedError
        - root.GetTimesheetByIdRequestTooManyRequestsError
        - root.GetTimesheetByIdRequestInternalServerError
      examples:
        - path-parameters:
            timesheet_id: 1000000
          response:
            body:
              data:
                approvers:
                  - full_name: full_name
                    email: email
                    approved: true
                id: id
                public_id: 00000000-0000-0000-0000-000000000000
                type: type
                status: approved
                description: description
                date_submitted: '2022-05-24T09:38:46Z'
                currency_code: USD
                total_amount: '200.0000'
                quantity: 1
                created_at: '2022-05-04T03:45:27.108Z'
                scale: custom
                custom_scale: custom_scale
                attachment:
                  filename: filename
                  key: key
                worksheet:
                  weeks: 0
                  days: 0
                  hours: 1
                  minutes: 0
                reviewed_by:
                  id: 123456
                  full_name: Jane Smith
                  reviewed_at: '2022-05-04T03:45:27.899Z'
                  remarks: remarks
                contract:
                  id: id
                  title: title
                  type: ongoing_time_based
                payment_cycle:
                  start_date: '2022-05-24T09:38:46Z'
                  end_date: '2022-05-24T09:38:46Z'
                reported_by:
                  id: 123456
                  full_name: John Smith
      audiences:
        - external
    deleteTimesheetById:
      path: /timesheets/{timesheet_id}
      method: DELETE
      auth: true
      docs: Delete a single timesheet entry.
      source:
        openapi: ../openapi.yml
      path-parameters:
        timesheet_id:
          type: long
          docs: ID of an existing timesheet
      display-name: Delete a timesheet entry
      request:
        name: DeleteTimesheetByIdRequest
        query-parameters:
          reason:
            type: optional<string>
            docs: Reason for deleting an existing timesheet
      response:
        docs: Successful operation.
        type: root.GenericResultDeleted
        status-code: 200
      errors:
        - root.DeleteTimesheetByIdRequestBadRequestError
        - root.DeleteTimesheetByIdRequestUnauthorizedError
        - root.DeleteTimesheetByIdRequestForbiddenError
        - root.DeleteTimesheetByIdRequestNotFoundError
        - root.DeleteTimesheetByIdRequestMethodNotAllowedError
        - root.DeleteTimesheetByIdRequestTooManyRequestsError
        - root.DeleteTimesheetByIdRequestInternalServerError
      examples:
        - path-parameters:
            timesheet_id: 1000000
          response:
            body:
              data:
                deleted: true
      audiences:
        - external
    updateTimesheetById:
      path: /timesheets/{timesheet_id}
      method: PATCH
      auth: true
      docs: Update a single timesheet entry.
      source:
        openapi: ../openapi.yml
      path-parameters:
        timesheet_id:
          type: long
          docs: ID of an existing timesheet
      display-name: Update a timesheet entry
      request:
        name: TimesheetToUpdateContainer
        body:
          properties:
            data: root.TimesheetToUpdate
        content-type: application/json
      response:
        docs: Successful operation.
        type: root.GenericResultUpdated
        status-code: 200
      errors:
        - root.UpdateTimesheetByIdRequestBadRequestError
        - root.UpdateTimesheetByIdRequestUnauthorizedError
        - root.UpdateTimesheetByIdRequestForbiddenError
        - root.UpdateTimesheetByIdRequestNotFoundError
        - root.UpdateTimesheetByIdRequestMethodNotAllowedError
        - root.UpdateTimesheetByIdRequestTooManyRequestsError
        - root.UpdateTimesheetByIdRequestInternalServerError
      examples:
        - path-parameters:
            timesheet_id: 1000000
          request:
            data:
              description: description
              quantity: 1.1
          response:
            body:
              data:
                updated: true
      audiences:
        - external
    createTimesheetReview:
      path: /timesheets/{timesheet_id}/reviews
      method: POST
      auth: true
      docs: Review a timesheet to approve or decline submitted work.
      source:
        openapi: ../openapi.yml
      path-parameters:
        timesheet_id:
          type: long
          docs: ID of an existing timesheet
      display-name: Review a single timesheet
      request:
        name: TimesheetReviewToCreateContainer
        body:
          properties:
            data: root.TimesheetReviewToCreate
        content-type: application/json
      response:
        docs: Successful operation.
        type: root.GenericResultCreated
        status-code: 201
      errors:
        - root.CreateTimesheetReviewRequestBadRequestError
        - root.CreateTimesheetReviewRequestUnauthorizedError
        - root.CreateTimesheetReviewRequestForbiddenError
        - root.CreateTimesheetReviewRequestNotFoundError
        - root.CreateTimesheetReviewRequestMethodNotAllowedError
        - root.CreateTimesheetReviewRequestTooManyRequestsError
        - root.CreateTimesheetReviewRequestInternalServerError
      examples:
        - path-parameters:
            timesheet_id: 1000000
          request:
            data:
              status: approved
          response:
            body:
              data:
                created: true
      audiences:
        - external
    createTimesheetReviews:
      path: /timesheets/many/reviews
      method: POST
      auth: true
      docs: Review a batch of timesheets to approve or reject submitted work.
      source:
        openapi: ../openapi.yml
      display-name: Review multiple timesheets
      request:
        name: TimesheetReviewsToCreateContainer
        body:
          properties:
            data: root.TimesheetReviewsToCreate
        content-type: application/json
      response:
        docs: Successful operation.
        type: root.GenericResultCreated
        status-code: 201
      errors:
        - root.CreateTimesheetReviewsRequestBadRequestError
        - root.CreateTimesheetReviewsRequestUnauthorizedError
        - root.CreateTimesheetReviewsRequestForbiddenError
        - root.CreateTimesheetReviewsRequestNotFoundError
        - root.CreateTimesheetReviewsRequestMethodNotAllowedError
        - root.CreateTimesheetReviewsRequestTooManyRequestsError
        - root.CreateTimesheetReviewsRequestInternalServerError
      examples:
        - request:
            data:
              status: approved
              ids:
                - 1.1
          response:
            body:
              data:
                created: true
      audiences:
        - external
  source:
    openapi: ../openapi.yml
  display-name: Timesheets
docs: >-
  The Invoices resource lets you create, amend and retrieve timesheets of Deel
  contracts.
",
    },
    "webhooks.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "WebhookController_deleteById": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Delete a webhook",
              "docs": "Delete a webhook subscription.",
              "errors": [
                "root.WebhookControllerDeleteByIdRequestBadRequestError",
                "root.WebhookControllerDeleteByIdRequestUnauthorizedError",
                "root.WebhookControllerDeleteByIdRequestForbiddenError",
                "root.WebhookControllerDeleteByIdRequestNotFoundError",
                "root.WebhookControllerDeleteByIdRequestMethodNotAllowedError",
                "root.WebhookControllerDeleteByIdRequestTooManyRequestsError",
                "root.WebhookControllerDeleteByIdRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/webhooks/{id}",
              "path-parameters": {
                "id": "string",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "WebhookController_editById": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Edit a webhook",
              "docs": "Edit a webhook subscription.",
              "errors": [
                "root.WebhookControllerEditByIdRequestBadRequestError",
                "root.WebhookControllerEditByIdRequestUnauthorizedError",
                "root.WebhookControllerEditByIdRequestForbiddenError",
                "root.WebhookControllerEditByIdRequestNotFoundError",
                "root.WebhookControllerEditByIdRequestMethodNotAllowedError",
                "root.WebhookControllerEditByIdRequestTooManyRequestsError",
                "root.WebhookControllerEditByIdRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "request": {
                    "events": [
                      "contract.created",
                    ],
                    "status": "enabled",
                    "url": "https://mywebhook.com/listening",
                  },
                  "response": {
                    "body": {
                      "data": {
                        "api_version": "v1",
                        "created_at": "created_at",
                        "description": "My first webhook",
                        "events": [
                          "contract.created",
                        ],
                        "hidden": false,
                        "id": 1.1,
                        "name": "My webhooks",
                        "signing_key": "signing_key",
                        "status": "enabled",
                        "updated_at": "updated_at",
                        "url": "https://mywebhook.com/listening",
                      },
                    },
                  },
                },
              ],
              "method": "PATCH",
              "pagination": undefined,
              "path": "/webhooks/{id}",
              "path-parameters": {
                "id": "string",
              },
              "request": {
                "body": {
                  "properties": {
                    "description": {
                      "docs": "Webhook subscription description.",
                      "type": "optional<string>",
                    },
                    "events": {
                      "docs": "The list of events to enable for this subscription.",
                      "type": "list<string>",
                    },
                    "name": {
                      "docs": "Webhook subscription name.",
                      "type": "optional<string>",
                    },
                    "signing_key": {
                      "docs": "The webhook's signing key, used to generate webhook signatures.",
                      "type": "optional<string>",
                    },
                    "status": {
                      "docs": "Status of webhook.",
                      "type": "PatchWebhookRequestStatus",
                    },
                    "url": {
                      "docs": "Endpoint to receive webhook.",
                      "type": "string",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "PatchWebhookRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "successful operation",
                "status-code": 200,
                "type": "root.WebhookItemResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "WebhookController_getById": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Retrieve a single webhook",
              "docs": "Retrieve a single webhook subscription.",
              "errors": [
                "root.WebhookControllerGetByIdRequestBadRequestError",
                "root.WebhookControllerGetByIdRequestUnauthorizedError",
                "root.WebhookControllerGetByIdRequestForbiddenError",
                "root.WebhookControllerGetByIdRequestNotFoundError",
                "root.WebhookControllerGetByIdRequestMethodNotAllowedError",
                "root.WebhookControllerGetByIdRequestTooManyRequestsError",
                "root.WebhookControllerGetByIdRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "data": {
                        "api_version": "v1",
                        "created_at": "created_at",
                        "description": "My first webhook",
                        "events": [
                          "contract.created",
                        ],
                        "hidden": false,
                        "id": 1.1,
                        "name": "My webhooks",
                        "signing_key": "signing_key",
                        "status": "enabled",
                        "updated_at": "updated_at",
                        "url": "https://mywebhook.com/listening",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/webhooks/{id}",
              "path-parameters": {
                "id": "string",
              },
              "response": {
                "docs": "successful operation",
                "status-code": 200,
                "type": "root.WebhookItemResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "createWebhook": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "Create a webhook",
              "docs": "Create a new webhooks subscription.",
              "errors": [
                "root.CreateWebhookRequestBadRequestError",
                "root.CreateWebhookRequestUnauthorizedError",
                "root.CreateWebhookRequestForbiddenError",
                "root.CreateWebhookRequestNotFoundError",
                "root.CreateWebhookRequestMethodNotAllowedError",
                "root.CreateWebhookRequestTooManyRequestsError",
                "root.CreateWebhookRequestInternalServerError",
              ],
              "examples": [
                {
                  "request": {
                    "api_version": "v1",
                    "events": [
                      "contract.created",
                    ],
                    "status": "enabled",
                    "url": "https://mywebhook.com",
                  },
                  "response": {
                    "body": {
                      "data": {
                        "api_version": "v1",
                        "created_at": "created_at",
                        "description": "My first webhook",
                        "events": [
                          "contract.created",
                        ],
                        "hidden": false,
                        "id": 1.1,
                        "name": "My webhooks",
                        "signing_key": "signing_key",
                        "status": "enabled",
                        "updated_at": "updated_at",
                        "url": "https://mywebhook.com/listening",
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/webhooks",
              "request": {
                "body": {
                  "properties": {
                    "api_version": {
                      "docs": "Deel API version. Currently Deel only has one version: v1.",
                      "type": "string",
                    },
                    "description": {
                      "docs": "Webhook subscription description.",
                      "type": "optional<string>",
                    },
                    "events": {
                      "docs": "The list of events to enable for this subscription.",
                      "type": "list<string>",
                    },
                    "name": {
                      "docs": "Webhook subscription name.",
                      "type": "optional<string>",
                    },
                    "signing_key": {
                      "docs": "The webhook's signing key, used to generate webhook signatures.",
                      "type": "optional<string>",
                    },
                    "status": {
                      "docs": "Status of webhook.",
                      "type": "CreateWebhookRequestStatus",
                    },
                    "url": {
                      "docs": "Endpoint to receive webhook.",
                      "type": "string",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateWebhookRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "successful operation",
                "status-code": 201,
                "type": "root.WebhookItemResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getAllWebhooks": {
              "audiences": [
                "external",
              ],
              "auth": true,
              "display-name": "List of webhooks",
              "docs": "Retrieve a list of webhook subscriptions.",
              "errors": [
                "root.GetAllWebhooksRequestBadRequestError",
                "root.GetAllWebhooksRequestUnauthorizedError",
                "root.GetAllWebhooksRequestForbiddenError",
                "root.GetAllWebhooksRequestNotFoundError",
                "root.GetAllWebhooksRequestMethodNotAllowedError",
                "root.GetAllWebhooksRequestTooManyRequestsError",
                "root.GetAllWebhooksRequestInternalServerError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "data": [
                        {
                          "api_version": "v1",
                          "created_at": "created_at",
                          "description": "My first webhook",
                          "events": [
                            "contract.created",
                          ],
                          "hidden": false,
                          "id": 1.1,
                          "name": "My webhooks",
                          "signing_key": "signing_key",
                          "status": "enabled",
                          "updated_at": "updated_at",
                          "url": "https://mywebhook.com/listening",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/webhooks",
              "response": {
                "docs": "successful operation",
                "status-code": 200,
                "type": "root.WebhookListResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "CreateWebhookRequestStatus": {
            "docs": "Status of webhook.",
            "enum": [
              "enabled",
              "disabled",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PatchWebhookRequestStatus": {
            "docs": "Status of webhook.",
            "enum": [
              "enabled",
              "disabled",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    getAllWebhooks:
      path: /webhooks
      method: GET
      auth: true
      docs: Retrieve a list of webhook subscriptions.
      source:
        openapi: ../openapi.yml
      display-name: List of webhooks
      response:
        docs: successful operation
        type: root.WebhookListResponse
        status-code: 200
      errors:
        - root.GetAllWebhooksRequestBadRequestError
        - root.GetAllWebhooksRequestUnauthorizedError
        - root.GetAllWebhooksRequestForbiddenError
        - root.GetAllWebhooksRequestNotFoundError
        - root.GetAllWebhooksRequestMethodNotAllowedError
        - root.GetAllWebhooksRequestTooManyRequestsError
        - root.GetAllWebhooksRequestInternalServerError
      examples:
        - response:
            body:
              data:
                - id: 1.1
                  name: My webhooks
                  description: My first webhook
                  status: enabled
                  url: https://mywebhook.com/listening
                  signing_key: signing_key
                  api_version: v1
                  events:
                    - contract.created
                  created_at: created_at
                  updated_at: updated_at
                  hidden: false
      audiences:
        - external
    createWebhook:
      path: /webhooks
      method: POST
      auth: true
      docs: Create a new webhooks subscription.
      source:
        openapi: ../openapi.yml
      display-name: Create a webhook
      request:
        name: CreateWebhookRequest
        body:
          properties:
            name:
              type: optional<string>
              docs: Webhook subscription name.
            description:
              type: optional<string>
              docs: Webhook subscription description.
            status:
              type: CreateWebhookRequestStatus
              docs: Status of webhook.
            url:
              type: string
              docs: Endpoint to receive webhook.
            signing_key:
              type: optional<string>
              docs: The webhook's signing key, used to generate webhook signatures.
            api_version:
              type: string
              docs: 'Deel API version. Currently Deel only has one version: v1.'
            events:
              docs: The list of events to enable for this subscription.
              type: list<string>
        content-type: application/json
      response:
        docs: successful operation
        type: root.WebhookItemResponse
        status-code: 201
      errors:
        - root.CreateWebhookRequestBadRequestError
        - root.CreateWebhookRequestUnauthorizedError
        - root.CreateWebhookRequestForbiddenError
        - root.CreateWebhookRequestNotFoundError
        - root.CreateWebhookRequestMethodNotAllowedError
        - root.CreateWebhookRequestTooManyRequestsError
        - root.CreateWebhookRequestInternalServerError
      examples:
        - request:
            status: enabled
            url: https://mywebhook.com
            api_version: v1
            events:
              - contract.created
          response:
            body:
              data:
                id: 1.1
                name: My webhooks
                description: My first webhook
                status: enabled
                url: https://mywebhook.com/listening
                signing_key: signing_key
                api_version: v1
                events:
                  - contract.created
                created_at: created_at
                updated_at: updated_at
                hidden: false
      audiences:
        - external
    WebhookController_getById:
      path: /webhooks/{id}
      method: GET
      auth: true
      docs: Retrieve a single webhook subscription.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id: string
      display-name: Retrieve a single webhook
      response:
        docs: successful operation
        type: root.WebhookItemResponse
        status-code: 200
      errors:
        - root.WebhookControllerGetByIdRequestBadRequestError
        - root.WebhookControllerGetByIdRequestUnauthorizedError
        - root.WebhookControllerGetByIdRequestForbiddenError
        - root.WebhookControllerGetByIdRequestNotFoundError
        - root.WebhookControllerGetByIdRequestMethodNotAllowedError
        - root.WebhookControllerGetByIdRequestTooManyRequestsError
        - root.WebhookControllerGetByIdRequestInternalServerError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              data:
                id: 1.1
                name: My webhooks
                description: My first webhook
                status: enabled
                url: https://mywebhook.com/listening
                signing_key: signing_key
                api_version: v1
                events:
                  - contract.created
                created_at: created_at
                updated_at: updated_at
                hidden: false
      audiences:
        - external
    WebhookController_deleteById:
      path: /webhooks/{id}
      method: DELETE
      auth: true
      docs: Delete a webhook subscription.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id: string
      display-name: Delete a webhook
      errors:
        - root.WebhookControllerDeleteByIdRequestBadRequestError
        - root.WebhookControllerDeleteByIdRequestUnauthorizedError
        - root.WebhookControllerDeleteByIdRequestForbiddenError
        - root.WebhookControllerDeleteByIdRequestNotFoundError
        - root.WebhookControllerDeleteByIdRequestMethodNotAllowedError
        - root.WebhookControllerDeleteByIdRequestTooManyRequestsError
        - root.WebhookControllerDeleteByIdRequestInternalServerError
      examples:
        - path-parameters:
            id: id
      audiences:
        - external
    WebhookController_editById:
      path: /webhooks/{id}
      method: PATCH
      auth: true
      docs: Edit a webhook subscription.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id: string
      display-name: Edit a webhook
      request:
        name: PatchWebhookRequest
        body:
          properties:
            name:
              type: optional<string>
              docs: Webhook subscription name.
            description:
              type: optional<string>
              docs: Webhook subscription description.
            status:
              type: PatchWebhookRequestStatus
              docs: Status of webhook.
            url:
              type: string
              docs: Endpoint to receive webhook.
            signing_key:
              type: optional<string>
              docs: The webhook's signing key, used to generate webhook signatures.
            events:
              docs: The list of events to enable for this subscription.
              type: list<string>
        content-type: application/json
      response:
        docs: successful operation
        type: root.WebhookItemResponse
        status-code: 200
      errors:
        - root.WebhookControllerEditByIdRequestBadRequestError
        - root.WebhookControllerEditByIdRequestUnauthorizedError
        - root.WebhookControllerEditByIdRequestForbiddenError
        - root.WebhookControllerEditByIdRequestNotFoundError
        - root.WebhookControllerEditByIdRequestMethodNotAllowedError
        - root.WebhookControllerEditByIdRequestTooManyRequestsError
        - root.WebhookControllerEditByIdRequestInternalServerError
      examples:
        - path-parameters:
            id: id
          request:
            status: enabled
            url: https://mywebhook.com/listening
            events:
              - contract.created
          response:
            body:
              data:
                id: 1.1
                name: My webhooks
                description: My first webhook
                status: enabled
                url: https://mywebhook.com/listening
                signing_key: signing_key
                api_version: v1
                events:
                  - contract.created
                created_at: created_at
                updated_at: updated_at
                hidden: false
      audiences:
        - external
  source:
    openapi: ../openapi.yml
types:
  CreateWebhookRequestStatus:
    enum:
      - enabled
      - disabled
    docs: Status of webhook.
    inline: true
    source:
      openapi: ../openapi.yml
  PatchWebhookRequestStatus:
    enum:
      - enabled
      - disabled
    docs: Status of webhook.
    inline: true
    source:
      openapi: ../openapi.yml
",
    },
  },
  "packageMarkers": {},
  "rootApiFile": {
    "contents": {
      "audiences": [
        "external",
      ],
      "auth": "BearerAuthScheme",
      "auth-schemes": {
        "BearerAuthScheme": {
          "scheme": "bearer",
        },
      },
      "default-environment": "Default",
      "display-name": "Deel REST API",
      "environments": {
        "Default": "https://api.letsdeel.com/rest/v1",
      },
      "error-discrimination": {
        "strategy": "status-code",
      },
      "name": "api",
    },
    "defaultUrl": undefined,
    "rawContents": "name: api
error-discrimination:
  strategy: status-code
display-name: Deel REST API
environments:
  Default: https://api.letsdeel.com/rest/v1
default-environment: Default
auth-schemes:
  BearerAuthScheme:
    scheme: bearer
auth: BearerAuthScheme
audiences:
  - external
",
  },
}